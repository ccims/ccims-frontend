var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessTokenDialogComponent.html",[0,0.078,1,0.945]],["body/components/AccessTokenDialogComponent.html",[0,0.133,1,1.61,2,0.847,3,0.104,4,0.096,5,0.781,6,1.088,7,1.066,8,1.023,9,0.087,10,7.407,11,1.881,12,6.312,13,1.926,14,1.3,15,2.005,16,0.943,17,1.433,18,1.367,19,1.831,20,1.464,21,0.968,22,3.104,23,0.968,24,2.741,25,0.113,26,0.566,27,1.464,28,3.416,29,3.958,30,0.866,31,6.882,32,7.766,33,0.701,34,2.683,35,3.382,36,3.416,37,0.737,38,6.403,39,0.531,40,0.008,41,0.56,42,0.16,43,0.419,44,4.2,45,0.735,46,1.097,47,3.367,48,4.2,49,0.361,50,0.886,51,0.733,52,6.403,53,0.189,54,0.35,55,1.457,56,0.122,57,0.012,58,1.666,59,0.717,60,1.31,61,2.143,62,1.534,63,2.499,64,1.926,65,5.674,66,7.766,67,6.403,68,6.299,69,5.674,70,3.495,71,6.403,72,4.548,73,7.702,74,4.548,75,3.927,76,4.835,77,2.816,78,2.36,79,4.835,80,2.98,81,2.418,82,2.789,83,4.74,84,1.878,85,2.303,86,3.579,87,0.557,88,1.078,89,1.878,90,2.907,91,1.705,92,1.066,93,1.274,94,1.248,95,0.815,96,1.712,97,1.066,98,2.003,99,0.962,100,0.832,101,1.022,102,1.327,103,0.982,104,1.066,105,0.982,106,0.962,107,1.066,108,0.982,109,1.066,110,0.924,111,0.943,112,0.977,113,0.962,114,0.924,115,1.056,116,1.631,117,0.943,118,0.087,119,0.962,120,0.984,121,0.982,122,0.982,123,0.886,124,1.066,125,0.943,126,1.066,127,0.982,128,1.066,129,0.982,130,1.066,131,0.962,132,1.066,133,0.962,134,1.066,135,0.686,136,1.066,137,0.962,138,0.467,139,1.066,140,0.982,141,1.066,142,0.982,143,1.631,144,0.982,145,1.066,146,0.982,147,1.631,148,0.982,149,1.066,150,1.003,151,1.066,152,0.943,153,1.066,154,0.982,155,1.066,156,0.943,157,0.905,158,1.066,159,0.982,160,1.383,161,1.44,162,0.982,163,1.066,164,0.943,165,0.557,166,1.066,167,0.962,168,0.982,169,1.045,170,0.982,171,1.066,172,0.962,173,0.962,174,0.943,175,1.066,176,0.962,177,1.066,178,0.905,179,0.765,180,0.943,181,1.066,182,0.943,183,1.248,184,0.962,185,0.982,186,0.631,187,0.924,188,0.749,189,0.982,190,0.982,191,0.982,192,1.066,193,0.982,194,0.905,195,1.066,196,0.982,197,1.066,198,0.924,199,0.962,200,0.982,201,0.905,202,1.066,203,0.982,204,0.656,205,0.924,206,0.962,207,1.066,208,0.943,209,1.066,210,0.943,211,1.066,212,0.924,213,1.066,214,0.924,215,1.066,216,0.924,217,1.003,218,1.066,219,0.005,220,0.005]],["title/components/AddProjectMemberDialogComponent.html",[0,0.078,99,0.926]],["body/components/AddProjectMemberDialogComponent.html",[0,0.14,1,0.926,2,0.813,3,0.098,4,0.09,5,0.736,6,1.026,7,1.005,8,0.965,9,0.082,11,0.889,13,1.815,14,1.249,15,1.944,16,0.889,17,1.43,18,1.363,19,0.889,20,1.276,21,0.93,22,3.011,23,0.93,24,2.633,25,0.107,26,0.543,27,1.338,28,3.333,30,0.832,33,0.661,34,2.529,35,3.159,37,0.79,39,0.5,40,0.008,41,0.55,42,0.155,43,0.395,44,3.959,45,0.706,46,1.064,50,1.417,51,1.171,53,0.208,54,0.33,55,1.373,56,0.115,57,0.011,58,1.57,60,1.235,62,1.301,63,2.355,77,3.093,78,1.985,82,3.619,84,1.77,85,1.607,87,0.891,88,0.752,89,2.437,92,1.005,93,1.223,94,1.199,95,0.768,96,1.67,97,1.005,98,1.98,99,1.539,100,1.604,101,1.125,102,1.975,103,0.926,104,1.005,105,0.926,106,0.907,107,1.005,108,0.926,109,1.005,110,0.871,111,0.889,112,0.957,113,0.907,114,0.871,115,1.014,116,1.582,117,0.889,118,0.082,119,0.907,120,0.977,121,0.926,122,0.926,123,0.835,124,1.005,125,0.889,126,1.005,127,0.926,128,1.005,129,0.926,130,1.005,131,0.907,132,1.005,133,0.907,134,1.005,135,0.647,136,1.005,137,0.907,138,0.44,139,1.005,140,0.926,141,1.005,142,0.926,143,1.582,144,0.926,145,1.005,146,0.926,147,1.582,148,0.926,149,1.005,150,0.945,151,1.005,152,0.889,153,1.005,154,0.926,155,1.005,156,0.889,157,0.853,158,1.005,159,0.926,160,1.328,161,1.383,162,0.926,163,1.005,164,0.889,165,0.525,166,1.005,167,0.907,168,0.926,169,0.985,170,0.926,171,1.005,172,0.907,173,0.907,174,0.889,175,1.005,176,0.907,177,1.005,178,0.853,179,0.721,180,0.889,181,1.005,182,0.889,183,1.199,184,0.907,185,0.926,186,0.606,187,0.871,188,0.706,189,0.926,190,0.926,191,0.926,192,1.005,193,0.926,194,0.853,195,1.005,196,0.926,197,1.005,198,0.871,199,0.907,200,0.926,201,0.853,202,1.005,203,0.926,204,0.618,205,0.871,206,0.907,207,1.005,208,0.889,209,1.005,210,0.889,211,1.005,212,0.871,213,1.005,214,0.871,215,1.005,216,0.871,217,0.945,218,1.005,219,0.005,220,0.005,221,7.8,222,6.253,223,0.384,224,2.633,225,3.995,226,4.644,227,6.15,228,1.975,229,4.369,230,4.139,231,1.188,232,2.786,233,6.232,234,6.232,235,7.033,236,4.29,237,5.721,238,5.45,239,3.173,240,3.959,241,1.965,242,2.079,243,5.45,244,1.355,245,4.468,246,3.402,247,3.744,248,3.624,249,1.815,250,2.079,251,1.685,252,2.02,253,4.468,254,4.468,255,0.551,256,4.468,257,3.959,258,3.959,259,4.988,260,4.988,261,5.45,262,1.645,263,1.645,264,4.988,265,2.864,266,3.373,267,3.959,268,3.959,269,2.079,270,2.864,271,1.913,272,2.377,273,3.173,274,3.173]],["title/components/AppComponent.html",[0,0.078,103,0.945]],["body/components/AppComponent.html",[0,0.135,1,1.027,2,0.872,3,0.109,4,0.1,5,0.816,6,1.137,7,1.114,8,1.069,9,0.091,11,0.985,16,0.985,17,1.436,18,1.369,19,0.985,20,0.834,21,0.997,23,0.997,25,0.118,26,0.582,33,0.733,37,0.599,39,0.554,40,0.008,41,0.567,42,0.181,43,0.437,49,0.377,50,0.926,51,1.222,53,0.219,54,0.366,56,0.127,57,0.013,59,0.749,62,1.395,88,0.834,92,1.114,93,1.312,94,1.285,95,0.852,96,1.742,97,1.114,98,2.019,99,1.006,100,1.158,101,1.032,102,1.367,103,1.639,104,1.114,105,1.027,106,1.006,107,1.114,108,1.027,109,1.114,110,0.965,111,0.985,112,0.991,113,1.006,114,0.965,115,1.087,116,1.668,117,0.985,118,0.091,119,1.006,120,0.996,121,1.027,122,1.027,123,0.926,124,1.114,125,0.985,126,1.114,127,1.027,128,1.114,129,1.027,130,1.114,131,1.006,132,1.114,133,1.006,134,1.114,135,0.717,136,1.114,137,1.006,138,0.488,139,1.114,140,1.027,141,1.114,142,1.027,143,1.668,144,1.027,145,1.114,146,1.027,147,1.668,148,1.027,149,1.114,150,1.048,151,1.114,152,0.985,153,1.114,154,1.027,155,1.114,156,0.985,157,0.945,158,1.114,159,1.027,160,1.424,161,1.483,162,1.027,163,1.114,164,0.985,165,0.582,166,1.114,167,1.006,168,1.027,169,1.092,170,1.027,171,1.114,172,1.006,173,1.006,174,0.985,175,1.114,176,1.006,177,1.114,178,0.945,179,0.799,180,0.985,181,1.114,182,0.985,183,1.285,184,1.006,185,1.027,186,0.65,187,0.965,188,0.782,189,1.027,190,1.027,191,1.027,192,1.114,193,1.027,194,0.945,195,1.114,196,1.027,197,1.114,198,0.965,199,1.006,200,1.027,201,0.945,202,1.114,203,1.027,204,0.685,205,0.965,206,1.006,207,1.114,208,0.985,209,1.114,210,0.985,211,1.114,212,0.965,213,1.114,214,0.965,215,1.114,216,0.965,217,1.048,218,1.114,219,0.006,220,0.006,244,1.092,255,1.082,275,4.389,276,1.984,277,7.415,278,6.595,279,2.33,280,4.953,281,8.467,282,8.642,283,6.595,284,4.439,285,4.017,286,3.74,287,3.518,288,0.965,289,4.953,290,4.98,291,2.447,292,4.953,293,4.98,294,3.518,295,4.953,296,3.259,297,4.953,298,4.953,299,4.953,300,4.953,301,4.953,302,3.74,303,4.017,304,5.598,305,3.353,306,2.611,307,2.374,308,3.74,309,7.415,310,0.799,311,4.652,312,2.279,313,2.447,314,4.953,315,4.953,316,4.953,317,4.228,318,4.017,319,6.595,320,5.844,321,4.953,322,4.953,323,4.953]],["title/modules/AppModule.html",[324,3.069,325,3.443]],["body/modules/AppModule.html",[0,0.102,1,1.681,3,0.094,4,0.087,9,0.079,11,1.19,12,3.242,18,0.608,40,0.008,49,0.327,53,0.286,54,0.317,55,1.32,56,0.111,57,0.011,62,1.266,101,0.954,102,1.24,103,1.845,108,1.681,110,1.581,111,1.614,113,1.647,114,0.837,115,0.986,117,1.614,118,0.11,119,1.647,120,0.864,121,1.681,125,1.614,129,1.681,131,1.647,154,1.681,157,1.548,159,1.681,160,0.927,162,1.681,164,1.614,167,1.647,168,1.681,173,1.647,176,1.647,180,1.614,182,1.614,184,1.647,188,0.678,189,1.681,190,1.681,191,0.89,193,1.681,196,1.681,198,1.581,200,1.681,201,0.82,212,1.581,214,1.581,216,1.581,219,0.005,220,0.005,251,1.619,255,0.849,272,1.659,285,3.482,286,4.518,287,3.05,296,2.122,302,4.518,310,0.693,313,2.122,325,7.326,326,2.633,327,4.027,328,3.804,329,3.804,330,3.804,331,3.804,332,5.762,333,5.46,334,5.46,335,4.518,336,3.05,337,3.482,338,4.853,339,4.518,340,5.983,341,5.302,342,6.102,343,5.302,344,4.518,345,4.293,346,4.293,347,5.302,348,3.804,349,5.983,350,3.05,351,5.302,352,3.804,353,5.302,354,4.25,355,5.302,356,3.804,357,5.302,358,5.302,359,3.804,360,5.302,361,3.804,362,4.027,363,5.302,364,5.302,365,3.804,366,0.966,367,3.242,368,3.482,369,3.242,370,3.804,371,3.482,372,4.293,373,3.482,374,4.293,375,4.293,376,5.302,377,3.05,378,3.521,379,3.804,380,4.293,381,5.302,382,5.302,383,5.983,384,3.542,385,6.102,386,4.293,387,5.983,388,5.983,389,4.293,390,5.983,391,3.804,392,5.302,393,5.983,394,5.983,395,4.293,396,6.102,397,2.633,398,5.302,399,4.293,400,3.482,401,4.293,402,4.293,403,3.804,404,3.804,405,3.804,406,2.264,407,3.871,408,4.133,409,5.302,410,3.804,411,5.302,412,3.804,413,2.431,414,5.302,415,3.804,416,5.983,417,4.293,418,4.293,419,3.804,420,5.291,421,3.242,422,5.983,423,2.526,424,6.102,425,5.302,426,4.853,427,2.343,428,5.302,429,2.633,430,3.482,431,5.983,432,3.482,433,3.482,434,3.05,435,3.482,436,5.983,437,3.242,438,3.804,439,3.266,440,2.753,441,3.804,442,3.836,443,2.431,444,2.89,445,4.293,446,3.482,447,5.983,448,3.482,449,3.804,450,4.293,451,3.482,452,4.293,453,3.05,454,4.293,455,2.495,456,3.242,457,3.804,458,4.293,459,3.242,460,4.293,461,5.302,462,3.759,463,3.804,464,3.482,465,4.853,466,3.804,467,3.242,468,4.293,469,3.242,470,4.293,471,2.89,472,4.293,473,3.482,474,3.804,475,3.804,476,3.804,477,4.293,478,3.482,479,4.293,480,4.293,481,3.482,482,2.753,483,3.804,484,2.89,485,3.804,486,4.293,487,4.293,488,4.293,489,3.482,490,4.027,491,5.302]],["title/modules/AppRoutingModule.html",[324,3.069,332,3.239]],["body/modules/AppRoutingModule.html",[0,0.161,3,0.13,4,0.119,9,0.108,40,0.008,53,0.277,54,0.436,56,0.152,57,0.015,86,6.875,101,0.994,120,0.9,125,1.47,131,1.716,137,1.501,138,0.795,157,1.411,167,1.716,172,1.501,173,1.501,174,1.47,176,1.501,180,1.47,219,0.006,220,0.006,255,0.729,326,3.624,332,5.251,339,4.462,344,5.581,366,1.329,367,4.462,368,5.996,369,4.462,370,5.237,378,3.478,379,5.237,403,5.237,404,5.237,405,5.237,442,3.789,455,3.082,456,4.462,457,5.237,492,5.91,493,5.91,494,6.091,495,7.392,496,2.177,497,5.91,498,4.462,499,5.237,500,5.251,501,5.91,502,4.462,503,4.198,504,5.237,505,9.562,506,5.237,507,8.876,508,7.392,509,3.343,510,9.105,511,4.794,512,1.778,513,3.624,514,3.789,515,5.91,516,7.392,517,5.91,518,3.978,519,4.198,520,3.346,521,4.794,522,5.237,523,5.91,524,4.794]],["title/interfaces/AppState.html",[118,0.084,525,3.443]],["body/interfaces/AppState.html",[3,0.133,4,0.122,8,1.302,9,0.111,25,0.144,26,0.661,40,0.008,41,0.404,42,0.133,43,0.661,45,0.692,49,0.459,53,0.263,54,0.445,56,0.193,57,0.015,59,1.132,81,3.076,87,0.88,101,1.102,118,0.111,186,0.594,219,0.006,220,0.006,228,1.936,244,1.329,255,1.004,276,1.814,288,1.175,310,0.973,312,2.158,496,2.221,509,2.727,511,4.89,525,6.146,526,1.599,527,4.89,528,6.904,529,1.827,530,7.543,531,5.343,532,3.958,533,4.283,534,1.566,535,2.823,536,4.058,537,2.514,538,1.738,539,4.608,540,4.89,541,2.727,542,2.727,543,5.343,544,2.513,545,0.932,546,2.301,547,4.058,548,5.343,549,4.55,550,2.581,551,5.343,552,2.652,553,3.179,554,3.58,555,4.553,556,6.904,557,5.343,558,2.806,559,3.698,560,3.179,561,5.343,562,5.343,563,4.058,564,3.291,565,4.553,566,2.652,567,5.343,568,4.89,569,2.514,570,3.291,571,2.89,572,2.028,573,3.179,574,5.343,575,5.652,576,4.553,577,5.343,578,6.632,579,6.632,580,3.946,581,6.632,582,6.632,583,5.343,584,5.343,585,5.343,586,6.632,587,6.632,588,4.058,589,5.343,590,5.343,591,4.404,592,1.667,593,4.553,594,5.343,595,4.89,596,3.291,597,5.343,598,5.343,599,1.442,600,5.343,601,6.071,602,5.343,603,5.343,604,5.343,605,0.737,606,5.343,607,5.343,608,2.389]],["title/guards/AuthGuard.html",[500,3.239,609,3.443]],["body/guards/AuthGuard.html",[3,0.135,4,0.124,9,0.113,14,1.249,25,0.147,30,1.025,33,1.121,37,0.688,39,0.848,40,0.008,41,0.507,42,0.167,43,0.669,45,0.869,53,0.243,54,0.454,56,0.158,57,0.016,59,1.146,204,1.269,219,0.006,220,0.006,223,0.65,244,1.355,255,0.758,276,1.85,310,1.383,397,4.646,496,2.264,500,6.088,506,8.129,518,6.113,521,6.66,529,1.85,532,4.148,549,3.136,552,2.704,554,3.942,572,1.888,575,5.72,576,5.72,595,6.145,596,4.135,599,1.471,605,0.844,609,5.72,610,6.149,611,5.448,612,4.135,613,5.72,614,3.994,615,6.367,616,8.571,617,7.576,618,4.646,619,2.663,620,4.857,621,8.571,622,4.367,623,4.716,624,6.149,625,7.576,626,8.571,627,8.571,628,6.149,629,7.576,630,7.576,631,7.576,632,3.332,633,7.576,634,2.139,635,6.149,636,5.381,637,6.149,638,2.065,639,6.149,640,6.149,641,5.448,642,6.149]],["title/injectables/AuthenticationService.html",[529,1.113,623,2.326]],["body/injectables/AuthenticationService.html",[3,0.119,4,0.109,9,0.099,11,1.683,25,0.129,26,0.616,27,1.376,30,0.944,33,0.798,37,0.821,39,0.865,40,0.008,41,0.621,42,0.191,43,0.683,45,0.971,46,1.169,49,0.688,50,1.008,51,0.834,53,0.256,54,0.398,56,0.139,57,0.014,59,1.236,87,0.634,118,0.099,157,1.56,183,1.359,186,0.687,204,1.323,219,0.006,220,0.006,223,0.599,230,5.5,255,0.86,276,1.623,288,1.051,312,2.011,377,3.831,455,2.249,496,1.986,518,6.017,529,1.317,532,3.989,534,1.401,537,2.249,544,2.962,545,1.408,546,2.144,572,1.738,605,0.805,612,3.807,615,5.49,623,3.558,636,6.011,638,1.811,643,2.249,644,4.374,645,5.266,646,7.499,647,5.657,648,6.18,649,4.809,650,7.817,651,4.075,652,6.849,653,7.241,654,6.628,655,6.974,656,5.266,657,6.849,658,5.393,659,7.241,660,6.974,661,6.18,662,5.393,663,6.18,664,5.696,665,5.393,666,6.18,667,3.807,668,5.19,669,4.791,670,6.18,671,5.657,672,3.948,673,6.17,674,4.219,675,4.277,676,5.393,677,4.694,678,6.18,679,6.18,680,5.393,681,4.548,682,5.393,683,5.393,684,5.393,685,5.393,686,3.63,687,4.072,688,1.588,689,3.63,690,4.779,691,4.779,692,4.374,693,4.779,694,4.779,695,4.779,696,4.779,697,4.779,698,4.779,699,4.779,700,4.072,701,4.779,702,2.137,703,4.779,704,4.779,705,4.779,706,4.779,707,4.779,708,4.779,709,4.779,710,4.779,711,4.779,712,4.779,713,4.779,714,4.374,715,4.779]],["title/classes/CCIMSValidators.html",[57,0.012,716,2.326]],["body/classes/CCIMSValidators.html",[3,0.136,4,0.125,9,0.113,25,0.148,26,0.671,37,0.78,40,0.008,41,0.601,50,1.605,51,1.327,53,0.183,56,0.159,57,0.021,64,2.511,69,5.477,194,1.777,219,0.006,220,0.006,223,0.531,224,3.254,230,5.115,250,3.83,251,2.331,262,2.799,313,3.054,549,4.198,634,2.424,651,4.956,716,3.877,717,2.276,718,5.477,719,7.6,720,6.164,721,6.483,722,2.867,723,1.781,724,4.472,725,4.024,726,8.23,727,8.23,728,7.811,729,8.23,730,8.586,731,6.181,732,9.182,733,6.099,734,7.952,735,7.6,736,6.164,737,7.6,738,6.181,739,4.661,740,7.6,741,6.164,742,4.661,743,7.6,744,5.739,745,7.6,746,6.181,747,6.181,748,6.483,749,4.007,750,1.362,751,5.477,752,6.181,753,6.181,754,4.39,755,6.181]],["title/components/CacheNodeComponent.html",[0,0.078,105,0.945]],["body/components/CacheNodeComponent.html",[0,0.144,1,1.006,2,0.86,3,0.107,4,0.098,5,1.072,7,1.091,8,1.048,9,0.089,11,0.965,14,1.321,15,2.029,16,0.965,17,1.435,18,1.367,19,0.965,20,0.817,25,0.116,26,0.575,33,0.718,37,0.764,39,0.543,40,0.008,41,0.564,42,0.18,43,0.429,50,0.907,51,0.75,53,0.249,54,0.358,56,0.125,57,0.012,60,1.341,62,1.376,87,0.765,88,0.817,92,1.091,93,1.294,94,1.268,95,0.834,96,1.728,97,1.091,98,2.011,99,0.985,100,0.852,101,1.027,102,1.348,103,1.006,104,1.091,105,1.625,106,1.66,107,1.091,108,1.006,109,1.091,110,0.946,111,0.965,112,0.985,113,0.985,114,0.946,115,1.072,116,1.651,117,0.965,118,0.089,119,0.985,120,0.987,121,1.006,122,1.006,123,0.907,124,1.091,125,0.965,126,1.091,127,1.006,128,1.091,129,1.006,130,1.091,131,0.985,132,1.091,133,0.985,134,1.091,135,0.702,136,1.091,137,0.985,138,0.478,139,1.091,140,1.006,141,1.091,142,1.006,143,1.651,144,1.006,145,1.091,146,1.006,147,1.651,148,1.006,149,1.091,150,1.026,151,1.091,152,0.965,153,1.091,154,1.006,155,1.091,156,0.965,157,0.926,158,1.091,159,1.006,160,1.405,161,1.463,162,1.006,163,1.091,164,0.965,165,1.085,166,1.091,167,0.985,168,1.006,169,1.069,170,1.006,171,1.091,172,0.985,173,0.985,174,0.965,175,1.091,176,0.985,177,1.091,178,0.926,179,0.783,180,0.965,181,1.091,182,0.965,183,1.268,184,0.985,185,1.006,186,0.641,187,0.946,188,0.766,189,1.006,190,1.006,191,1.006,192,1.091,193,1.006,194,0.926,195,1.091,196,1.006,197,1.091,198,0.946,199,0.985,200,1.006,201,0.926,202,1.091,203,1.006,204,0.671,205,0.946,206,1.321,207,1.091,208,0.965,209,1.091,210,0.965,211,1.091,212,0.946,213,1.091,214,0.946,215,1.091,216,0.946,217,1.026,218,1.091,219,0.005,220,0.005,223,0.417,231,1.218,241,2.134,288,0.946,310,1.265,534,1.26,599,1.16,723,1.72,756,7.618,757,4.3,758,3.43,759,2.942,760,2.907,761,4.939,762,7.339,763,2.396,764,5.541,765,2.976,766,3.175,767,6.505,768,4.852,769,3.683,770,5.764,771,4.912,772,6.505,773,4.621,774,3.683,775,2.521,776,4.852,777,3.027,778,5.764,779,5.276,780,3.743,781,4.852,782,3.626,783,4.852,784,3.06,785,2.855,786,3.936,787,2.703,788,1.558,789,2.023,790,2.326,791,4.852,792,3.111,793,4.852,794,4.852,795,4.852,796,4.852,797,4.852,798,4.852,799,4.852,800,1.922,801,4.852]],["title/interfaces/CoalescedTimelineItem.html",[118,0.084,802,2.923]],["body/interfaces/CoalescedTimelineItem.html",[0,0.119,3,0.082,4,0.075,9,0.068,14,0.755,17,0.55,18,0.526,21,0.562,23,0.562,25,0.089,26,0.477,27,0.909,40,0.008,41,0.426,42,0.2,45,0.916,46,0.962,49,0.645,51,0.983,53,0.241,54,0.274,56,0.139,57,0.009,59,1.055,61,2.441,75,2.279,80,1.729,86,2.806,87,0.748,88,1.582,101,0.437,115,1.15,118,0.117,120,0.871,165,0.635,178,1.031,179,0.871,194,0.709,196,0.77,199,1.902,204,1.211,219,0.005,220,0.005,223,0.319,224,1.591,244,1.538,255,1.008,288,0.724,303,4.379,304,4.076,310,0.871,312,2.012,366,2.022,462,2.028,465,3.014,496,1.368,513,2.279,526,0.985,532,1.68,535,3.084,542,1.68,544,1.248,545,1.079,546,1.955,547,3.634,566,2.797,572,2.161,576,5.839,580,2.846,599,1.909,605,0.886,608,2.139,632,1.634,634,1.049,651,1.959,688,2.055,723,1.49,725,1.591,748,2.806,750,1.19,759,2.441,766,2.796,774,3.056,775,2.184,784,1.549,787,2.342,788,1.734,789,1.549,790,1.781,802,5.116,803,1.781,804,3.014,805,3.056,806,4.784,807,5.399,808,4.207,809,2.992,810,6.589,811,5.399,812,5.399,813,2.1,814,2.988,815,2.947,816,4.463,817,2.587,818,3.634,819,4.784,820,5.399,821,4.379,822,7.98,823,3.497,824,6.312,825,2.512,826,1.634,827,3.6,828,2.187,829,2.382,830,1.549,831,2.668,832,1.895,833,1.22,834,2.382,835,2.382,836,4.784,837,2.104,838,3.523,839,3.716,840,2.639,841,2.104,842,3.716,843,3.716,844,3.716,845,3.716,846,3.716,847,3.716,848,3.716,849,3.716,850,3.716,851,3.716,852,3.716,853,3.716,854,3.716,855,3.716,856,3.716,857,3.716,858,2.639,859,3.014,860,3.471,861,4.516,862,2.104,863,1.51,864,3.716,865,1.22,866,6.358,867,3.014,868,2.279,869,4.076,870,2.512,871,3.716,872,3.716,873,5.157,874,1.549,875,3.293,876,3.716,877,3.716,878,2.639,879,3.716,880,5.399,881,3.293,882,3.014,883,3.293,884,1.781,885,3.716,886,1.68,887,3.716,888,3.716,889,3.716,890,3.716,891,3.293,892,3.716,893,3.716,894,7.98,895,8.175,896,4.753,897,8.334,898,5.807,899,5.428,900,3.6,901,6.358,902,6.358,903,0.755,904,3.716,905,5.92,906,3.716,907,7.733,908,4.784,909,3.716,910,8.175,911,3.014,912,5.66,913,8.175,914,3.716,915,3.716,916,5.399,917,6.358,918,5.399,919,5.399,920,2.947,921,2.382,922,2.754,923,2.501,924,2.806,925,3.716,926,3.716,927,3.716,928,3.716,929,3.014,930,3.716,931,3.716,932,3.716,933,5.399,934,6.358,935,3.716,936,6.358,937,3.716,938,1.729,939,6.358,940,5.399,941,2.104,942,3.716,943,3.716,944,2.104,945,3.716,946,3.716,947,3.716,948,3.014,949,2.279,950,2.501,951,3.716,952,2.028,953,3.68,954,3.716,955,3.716,956,3.716,957,3.716,958,3.716,959,3.716,960,3.014,961,2.279,962,3.716,963,3.716,964,3.716,965,3.716,966,2.806,967,3.716,968,3.716,969,2.382]],["title/components/CommentComponent.html",[0,0.078,108,0.945]],["body/components/CommentComponent.html",[0,0.143,1,0.844,2,0.763,3,0.09,4,0.082,5,0.671,6,0.935,7,0.916,8,0.88,9,0.075,11,0.81,14,1.171,15,1.85,16,0.81,17,1.425,18,1.358,19,0.81,20,1.226,21,0.872,23,0.872,25,0.097,26,0.509,27,1.518,30,0.78,33,0.603,36,3.201,37,0.774,39,0.646,40,0.008,41,0.549,42,0.169,43,0.509,45,0.662,46,1.101,49,0.51,50,1.252,51,1.034,53,0.258,54,0.301,55,1.252,56,0.105,57,0.01,59,0.872,60,1.126,62,1.22,77,2.536,87,0.856,88,0.686,92,0.916,93,1.147,94,1.124,95,0.701,96,1.604,97,0.916,98,1.943,99,0.827,100,0.715,101,1.002,102,1.195,103,0.844,104,0.916,105,0.844,106,0.827,107,0.916,108,1.509,109,0.916,110,0.794,111,0.81,112,0.925,113,0.827,114,1.304,115,0.951,116,1.506,117,0.81,118,0.075,119,0.827,120,0.998,121,0.844,122,0.844,123,0.762,124,0.916,125,0.81,126,0.916,127,0.844,128,0.916,129,0.844,130,0.916,131,0.827,132,0.916,133,0.827,134,0.916,135,0.589,136,0.916,137,0.827,138,0.401,139,0.916,140,0.844,141,0.916,142,0.844,143,1.506,144,0.844,145,0.916,146,0.844,147,1.506,148,0.844,149,0.916,150,0.862,151,0.916,152,0.81,153,0.916,154,0.844,155,0.916,156,0.81,157,0.778,158,0.916,159,0.844,160,1.245,161,1.297,162,0.844,163,0.916,164,0.81,165,0.479,166,0.916,167,0.827,168,0.844,169,0.898,170,0.844,171,0.916,172,0.827,173,0.827,174,0.81,175,0.916,176,0.827,177,0.916,178,0.778,179,0.657,180,0.81,181,0.916,182,1.147,183,1.124,184,0.827,185,0.844,186,0.717,187,0.794,188,0.643,189,0.844,190,0.844,191,0.844,192,0.916,193,0.844,194,0.778,195,0.916,196,0.844,197,0.916,198,0.794,199,0.827,200,0.844,201,0.778,202,0.916,203,0.844,204,0.798,205,0.794,206,0.827,207,0.916,208,0.81,209,0.916,210,0.81,211,0.916,212,0.794,213,0.916,214,0.794,215,0.916,216,0.794,217,0.862,218,0.916,219,0.005,220,0.005,223,0.685,231,0.589,244,1.758,255,0.502,279,1.28,288,0.794,310,1.375,408,1.952,423,2.397,462,2.223,463,3.609,513,4.105,534,1.058,545,1.125,546,2.452,572,1.015,599,1.379,634,1.628,667,3.147,675,2.498,723,1.706,749,3.04,750,1.271,760,2.652,763,2.124,765,2.498,766,3.009,770,5.109,775,2.638,782,3.308,784,2.404,787,2.465,788,1.852,789,1.698,790,1.952,800,1.614,803,4.14,816,3.04,827,4.515,828,2.397,829,2.612,830,1.698,882,3.304,922,2.078,970,3.609,971,2.608,972,7.588,973,5.766,974,2.683,975,6.693,976,5.766,977,6.693,978,6.693,979,6.45,980,5.766,981,6.693,982,7.279,983,3.027,984,2.813,985,4.073,986,4.073,987,4.073,988,3.264,989,3.393,990,4.096,991,4.824,992,4.073,993,4.354,994,4.073,995,3.881,996,5.766,997,4.073,998,4.096,999,4.073,1000,4.283,1001,5.17,1002,4.073,1003,3.697,1004,4.073,1005,2.893,1006,2.612,1007,1.698,1008,1.614,1009,1.698,1010,4.073,1011,1.893,1012,4.073,1013,4.073,1014,4.073,1015,4.073,1016,4.073,1017,4.073,1018,5.766,1019,4.073,1020,4.096,1021,5.766,1022,4.073,1023,4.073,1024,2.498,1025,3.304,1026,2.612,1027,2.742,1028,3.203,1029,2.612,1030,2.498,1031,2.306,1032,3.076,1033,3.609,1034,3.609,1035,2.742,1036,4.073,1037,3.304,1038,4.073,1039,3.304,1040,1.893,1041,2.223,1042,5.109,1043,5.766,1044,4.073,1045,5.766]],["title/components/ComponentContextMenuComponent.html",[0,0.078,110,0.889]],["body/components/ComponentContextMenuComponent.html",[0,0.153,1,0.716,2,0.677,3,0.076,4,0.07,5,0.569,6,0.793,7,0.777,8,0.746,9,0.063,11,0.687,14,1.039,16,0.687,17,1.414,18,1.344,19,0.687,20,1.212,21,0.774,23,0.774,25,0.082,26,0.452,27,1.026,30,0.692,33,0.511,37,0.708,39,0.573,40,0.008,41,0.522,42,0.176,43,0.452,45,0.587,46,1.14,49,0.574,50,0.957,51,0.791,53,0.223,54,0.255,56,0.132,57,0.013,59,1.237,61,3.408,62,1.082,64,1.403,70,1.885,78,2.127,85,1.242,87,0.792,88,0.582,92,0.777,93,1.018,94,1.188,95,0.594,96,1.485,97,0.777,98,1.872,99,0.701,100,0.607,101,0.978,102,1.061,103,0.716,104,0.777,105,0.716,106,0.701,107,0.777,108,0.716,109,0.777,110,1.468,111,0.687,112,0.907,113,0.701,114,0.673,115,0.843,116,1.371,117,0.687,118,0.124,119,0.701,120,0.952,121,0.716,122,0.716,123,0.646,124,0.777,125,0.687,126,0.777,127,0.716,128,0.777,129,0.716,130,0.777,131,0.701,132,0.777,133,0.701,134,0.777,135,0.975,136,0.777,137,0.701,138,0.709,139,0.777,140,0.716,141,0.777,142,0.716,143,1.371,144,0.716,145,0.777,146,0.716,147,1.371,148,0.716,149,0.777,150,0.731,151,0.777,152,0.687,153,0.777,154,0.716,155,0.777,156,0.687,157,0.659,158,0.777,159,0.716,160,1.105,161,1.151,162,0.716,163,0.777,164,1.212,165,0.962,166,0.777,167,0.701,168,0.716,169,0.761,170,0.716,171,0.777,172,0.701,173,0.701,174,0.687,175,0.777,176,0.701,177,0.777,178,0.659,179,0.557,180,0.687,181,0.777,182,0.687,183,0.997,184,0.701,185,0.716,186,0.6,187,0.673,188,0.546,189,0.716,190,0.716,191,0.716,192,0.777,193,0.716,194,0.977,195,0.777,196,0.716,197,0.777,198,0.673,199,0.701,200,0.716,201,1.648,202,0.777,203,0.716,204,0.478,205,0.673,206,0.701,207,0.777,208,0.687,209,0.777,210,0.687,211,0.777,212,0.673,213,0.777,214,0.673,215,0.777,216,0.673,217,0.731,218,0.777,219,0.004,220,0.004,223,0.439,231,1.041,241,1.519,244,1.128,249,1.403,255,0.929,262,2.482,263,2.775,271,2.191,272,1.335,276,1.039,279,1.085,288,0.673,293,2.608,294,5.911,310,1.087,312,0.996,437,2.608,439,5.107,440,5.134,442,2.215,443,1.955,444,2.325,455,2.133,529,0.843,542,1.562,545,1.042,546,2.072,572,2.038,580,1.821,599,1.458,605,0.6,632,1.519,634,1.721,667,1.885,668,2.118,669,1.955,688,1.507,689,2.325,725,2.885,750,0.761,760,2.415,775,2.471,777,2.381,800,1.368,817,1.655,825,2.836,826,1.519,833,2.001,863,1.403,865,2.363,870,1.607,874,1.44,903,1.714,993,2.608,1011,2.772,1046,5.688,1047,2.453,1048,3.138,1049,5.455,1050,2.897,1051,4.943,1052,4.15,1053,4.943,1054,5.117,1055,3.454,1056,5.111,1057,3.214,1058,3.553,1059,3.454,1060,3.454,1061,4.15,1062,2.309,1063,3.52,1064,3.454,1065,2.381,1066,3.323,1067,3.502,1068,4.787,1069,3.381,1070,4.434,1071,4.712,1072,3.454,1073,3.454,1074,4.943,1075,3.454,1076,3.454,1077,4.943,1078,3.454,1079,4.329,1080,2.802,1081,2.802,1082,5.466,1083,4.943,1084,5.111,1085,5.466,1086,2.802,1087,2.802,1088,2.802,1089,2.453,1090,1.303,1091,2.453,1092,3.908,1093,3.635,1094,2.608,1095,1.955,1096,3.444,1097,3.011,1098,4.321,1099,1.134,1100,3.138,1101,2.453,1102,2.608,1103,4.602,1104,2.802,1105,2.802,1106,4.15,1107,2.802,1108,2.793,1109,2.802,1110,2.802,1111,2.802,1112,2.802,1113,2.802,1114,2.802,1115,4.15,1116,2.802,1117,2.802,1118,4.15,1119,2.802,1120,2.215,1121,2.802,1122,2.802,1123,2.802,1124,2.802,1125,2.802,1126,2.802,1127,2.802,1128,2.802,1129,2.802,1130,2.802,1131,2.802,1132,4.943,1133,2.802,1134,4.943,1135,2.802,1136,3.863,1137,2.802,1138,2.802,1139,2.802,1140,4.943,1141,2.802,1142,2.802,1143,2.802,1144,2.802,1145,4.15,1146,2.802,1147,2.802,1148,1.885,1149,4.15,1150,4.15,1151,2.802,1152,3.863,1153,2.802,1154,2.802,1155,2.802,1156,2.802,1157,2.802,1158,2.802,1159,2.802,1160,2.802,1161,2.802,1162,2.802,1163,2.608,1164,2.802,1165,2.802,1166,2.802,1167,2.802,1168,5.117,1169,5.117,1170,3.061,1171,1.272,1172,4.534,1173,1.562,1174,1.707,1175,1.762,1176,1.655,1177,2.453,1178,3.454,1179,2.453,1180,2.802,1181,5.401,1182,2.608,1183,3.454,1184,2.033,1185,2.802,1186,3.454,1187,3.454,1188,1.821,1189,2.802,1190,1.519,1191,1.44,1192,1.134,1193,2.453,1194,1.479,1195,3.454,1196,2.802,1197,2.215,1198,1.821]],["title/interfaces/ComponentContextMenuData.html",[118,0.084,1056,3.239]],["body/interfaces/ComponentContextMenuData.html",[0,0.153,3,0.098,4,0.09,9,0.082,14,0.904,20,1.033,21,0.673,23,0.673,25,0.106,26,0.542,27,0.75,40,0.008,42,0.2,46,1.144,49,0.683,53,0.234,54,0.329,56,0.158,57,0.016,59,1.315,61,2.775,64,1.81,70,3.35,78,1.732,87,0.89,94,0.868,101,0.826,110,1.368,112,0.536,118,0.146,120,0.748,135,1.149,138,0.844,164,1.221,165,1.007,186,0.439,201,1.635,219,0.005,220,0.005,223,0.382,231,1.016,244,1.352,249,1.81,255,1.012,262,2.787,263,2.26,276,1.34,288,0.868,293,3.363,294,5.828,310,1.133,312,1.284,437,3.363,439,5.045,440,2.855,442,2.855,443,2.521,444,2.998,455,1.857,526,1.181,529,1.087,542,2.014,545,1.268,546,1.887,572,2.166,580,2.348,599,1.468,605,0.692,632,2.699,634,2.316,667,2.431,668,2.731,669,2.521,688,1.807,689,2.998,725,3.24,750,0.981,760,2.431,775,2.942,777,2.072,800,1.764,817,2.941,825,2.856,826,1.959,833,2.306,863,2.494,865,2.812,870,2.072,874,1.857,993,3.363,1011,2.917,1046,3.163,1047,3.163,1048,2.731,1049,5.623,1050,2.521,1051,3.612,1052,3.612,1053,3.612,1056,4.988,1057,2.348,1058,3.236,1061,3.612,1062,2.182,1063,3.571,1065,2.072,1066,3.64,1067,3.599,1068,4.359,1069,3.334,1070,4.453,1071,4.828,1074,4.978,1077,4.978,1079,4.988,1080,3.612,1081,3.612,1082,6.138,1083,6.438,1084,5.971,1085,7.051,1086,3.612,1087,3.612,1088,3.612,1089,3.163,1090,1.68,1091,3.163,1092,5.089,1093,4.359,1094,4.634,1095,3.474,1096,4.726,1097,4.132,1098,5.26,1099,2.015,1100,3.763,1101,3.163,1102,3.363,1103,5.302,1104,3.612,1105,3.612,1106,4.978,1107,3.612,1108,3.35,1109,3.612,1110,3.612,1111,3.612,1112,3.612,1113,3.612,1114,3.612,1115,4.978,1116,3.612,1117,3.612,1118,4.978,1119,3.612,1120,2.855,1121,3.612,1122,3.612,1123,3.612,1124,3.612,1125,3.612,1126,3.612,1127,3.612,1128,3.612,1129,3.612,1130,3.612,1131,3.612,1132,5.695,1133,3.612,1134,5.695,1135,3.612,1136,3.363,1137,3.612,1138,3.612,1139,3.612,1140,5.695,1141,3.612,1142,3.612,1143,3.612,1144,3.612,1145,4.978,1146,3.612,1147,3.612,1148,2.431,1149,4.978,1150,4.978,1151,3.612,1152,4.634,1153,3.612,1154,3.612,1155,3.612,1156,3.612,1157,3.612,1158,3.612,1159,3.612,1160,3.612,1161,3.612,1162,3.612,1163,3.363,1164,3.612,1165,3.612,1166,3.612,1167,3.612]],["title/injectables/ComponentContextMenuService.html",[529,1.113,1096,3.069]],["body/injectables/ComponentContextMenuService.html",[0,0.151,3,0.097,4,0.089,9,0.081,14,0.893,20,1.024,21,0.665,23,0.665,25,0.105,27,0.74,30,0.823,33,0.65,37,0.552,39,0.681,40,0.008,41,0.407,42,0.184,43,0.537,45,0.504,46,1.138,49,0.669,53,0.233,54,0.325,56,0.157,57,0.015,59,1.311,61,2.751,64,1.786,70,2.4,78,1.717,87,0.929,94,1.359,101,0.82,110,1.54,112,0.732,118,0.128,120,0.743,135,1.143,138,0.778,164,1.21,165,1.019,186,0.433,201,1.675,219,0.005,220,0.005,223,0.522,231,0.88,244,1.34,249,1.786,255,1.008,262,2.568,263,2.24,276,1.323,288,0.857,293,3.319,294,6.065,310,1.125,312,1.267,437,3.319,439,5.084,440,4.471,442,2.819,443,2.489,444,2.959,455,1.833,529,1.073,542,2.751,545,1.263,546,1.87,572,2.16,580,2.318,599,1.455,605,0.687,632,1.934,634,1.969,643,1.833,667,2.4,668,2.696,669,2.489,688,1.791,689,2.959,725,3.222,750,0.969,760,2.41,775,2.877,777,2.046,800,1.742,817,2.107,825,2.83,826,1.934,833,2.594,863,1.786,865,2.751,870,2.046,874,2.536,993,4.592,1011,2.911,1046,4.954,1047,3.123,1048,2.696,1049,5.587,1050,2.489,1051,3.566,1052,3.566,1053,3.566,1056,4.32,1057,2.318,1058,3.207,1061,3.566,1062,2.462,1063,3.696,1065,2.046,1066,3.565,1067,3.756,1068,4.32,1069,3.469,1070,4.809,1071,5.163,1074,4.933,1077,4.933,1079,4.954,1080,3.566,1081,3.566,1082,6.925,1083,5.656,1084,6.065,1085,6.104,1086,3.566,1087,3.566,1088,3.566,1089,3.123,1090,1.658,1091,3.123,1092,5.065,1093,4.32,1094,3.319,1095,2.489,1096,4.694,1097,4.649,1098,5.239,1099,1.443,1100,2.696,1101,3.123,1102,3.319,1103,5.965,1104,4.933,1105,3.566,1106,4.933,1107,3.566,1108,3.32,1109,3.566,1110,3.566,1111,3.566,1112,3.566,1113,3.566,1114,3.566,1115,4.933,1116,3.566,1117,3.566,1118,4.933,1119,3.566,1120,2.819,1121,3.566,1122,3.566,1123,3.566,1124,3.566,1125,3.566,1126,3.566,1127,3.566,1128,3.566,1129,3.566,1130,3.566,1131,3.566,1132,5.656,1133,3.566,1134,5.656,1135,3.566,1136,3.319,1137,3.566,1138,3.566,1139,3.566,1140,5.656,1141,3.566,1142,3.566,1143,3.566,1144,3.566,1145,4.933,1146,3.566,1147,3.566,1148,2.4,1149,4.933,1150,4.933,1151,3.566,1152,4.592,1153,3.566,1154,3.566,1155,3.566,1156,3.566,1157,3.566,1158,3.566,1159,3.566,1160,3.566,1161,3.566,1162,3.566,1163,3.319,1164,3.566,1165,3.566,1166,3.566,1167,3.566,1199,4.396,1200,4.396,1201,4.396]],["title/interfaces/ComponentNode.html",[118,0.084,1202,2.683]],["body/interfaces/ComponentNode.html",[0,0.139,3,0.117,4,0.164,5,1.138,9,0.127,25,0.127,26,0.61,40,0.008,42,0.201,49,0.708,53,0.24,56,0.178,57,0.017,87,0.902,101,0.624,112,0.639,118,0.169,120,0.735,135,0.768,138,0.68,165,1.015,186,0.83,188,0.839,219,0.006,220,0.006,231,1.272,255,0.655,279,2.41,291,4.161,311,3.124,512,1.597,526,1.408,538,1.531,545,1.334,592,2.463,605,0.878,619,1.866,717,1.955,722,2.003,814,2.273,833,1.743,903,1.809,949,3.256,1062,1.99,1063,3.387,1066,3.692,1067,3.478,1090,2.003,1194,3.284,1202,4.78,1203,2.401,1204,3.006,1205,4.797,1206,5.172,1207,4.036,1208,3.309,1209,2.898,1210,2.545,1211,3.282,1212,3.309,1213,2.708,1214,2.799,1215,4.187,1216,4.283,1217,4.514,1218,3.256,1219,3.256,1220,3.256,1221,3.256,1222,3.256,1223,3.256,1224,3.256,1225,3.256,1226,3.213,1227,3.256,1228,3.256,1229,4.234,1230,3.677,1231,3.124,1232,3.124,1233,2.273,1234,3.768,1235,3.404,1236,3.404,1237,1.824,1238,2.471,1239,2.545,1240,3.256,1241,2.898,1242,2.545,1243,2.898,1244,3.256,1245,3.404,1246,2.052,1247,3.404,1248,2.708,1249,3.404,1250,2.335,1251,3.404,1252,2.898,1253,3.404,1254,3.256,1255,3.404,1256,4.343,1257,2.799,1258,3.006,1259,2.545,1260,3.908,1261,3.404,1262,3.404,1263,3.404,1264,4.062,1265,3.404,1266,4.426,1267,3.404,1268,3.404,1269,3.404,1270,3.256,1271,1.955,1272,3.908,1273,4.919,1274,3.404,1275,3.404,1276,4.426,1277,3.404,1278,4.426,1279,4.426,1280,3.404,1281,3.404,1282,4.187,1283,4.426,1284,3.256,1285,4.234,1286,4.426,1287,3.404,1288,4.599,1289,3.64,1290,3.404,1291,3.256,1292,3.404,1293,3.404,1294,3.404,1295,3.256,1296,4.062,1297,3.256,1298,2.898,1299,3.256,1300,2.799]],["title/injectables/ComponentStoreService.html",[529,1.113,1301,2.923]],["body/injectables/ComponentStoreService.html",[0,0.095,2,0.942,3,0.123,4,0.112,9,0.144,25,0.133,30,0.964,33,0.825,37,0.817,39,1.008,40,0.008,41,0.603,42,0.198,43,0.795,45,1.02,49,0.715,53,0.244,54,0.412,56,0.143,57,0.014,59,1.322,179,1.149,219,0.006,220,0.006,223,0.478,224,3.05,228,2.288,231,1.197,255,0.687,276,1.677,288,1.086,529,1.739,534,1.447,537,2.324,538,1.607,544,3.052,545,1.351,552,2.452,605,0.876,643,2.324,688,1.642,723,1.84,815,3.888,921,4.567,1242,3.414,1301,4.567,1302,8.054,1303,3.574,1304,6.312,1305,5.06,1306,6.312,1307,4.516,1308,8.274,1309,5.778,1310,6.312,1311,5.074,1312,7.331,1313,7.124,1314,4.567,1315,7.124,1316,7.124,1317,7.124,1318,7.124,1319,7.124,1320,7.124,1321,7.124,1322,5.574,1323,8.274,1324,7.851,1325,8.274,1326,7.851,1327,7.331,1328,7.851,1329,8.274,1330,7.851,1331,8.274,1332,7.331,1333,8.274,1334,8.274,1335,8.274,1336,5.574,1337,7.124,1338,6.711,1339,4.939,1340,7.124,1341,4.939,1342,7.124,1343,5.574,1344,7.124,1345,4.939,1346,7.124,1347,5.574,1348,7.124,1349,4.939,1350,7.124,1351,7.331,1352,4.939,1353,7.124,1354,5.574,1355,4.939,1356,5.574,1357,5.574,1358,5.574,1359,5.574,1360,5.574,1361,5.574,1362,5.574]],["title/injectables/ComponentsService.html",[529,1.113,1363,3.443]],["body/injectables/ComponentsService.html",[3,0.138,4,0.126,9,0.115,25,0.15,30,1.038,33,1.135,37,0.804,39,0.991,40,0.008,41,0.593,42,0.195,43,0.782,45,0.99,49,0.718,53,0.245,54,0.463,56,0.161,57,0.016,59,1.305,101,1.015,219,0.006,220,0.006,276,1.887,366,2.071,529,1.872,538,1.808,545,1.334,552,2.759,605,0.85,643,2.615,787,2.31,788,2.015,1327,7.647,1363,5.791,1364,4.191,1365,5.558,1366,7.67,1367,6.796,1368,7.67,1369,7.67,1370,6.273,1371,8.63,1372,8.284,1373,8.63,1374,8.284,1375,8.284,1376,7.647,1377,6.273,1378,7.67,1379,7.67,1380,6.273,1381,6.796,1382,6.273,1383,7.67,1384,6.138,1385,6.273,1386,7.67,1387,6.273,1388,5.088,1389,6.273,1390,4.736,1391,5.088,1392,6.273,1393,6.273,1394,6.273,1395,6.273]],["title/interfaces/CreateComponentData.html",[118,0.084,1396,3.443]],["body/interfaces/CreateComponentData.html",[0,0.158,3,0.136,4,0.125,9,0.114,13,2.516,17,0.916,18,0.876,20,1.281,21,0.936,22,2.65,23,0.936,24,2.65,25,0.148,26,0.672,27,1.043,28,2.723,35,3.172,40,0.008,41,0.415,42,0.136,46,1.151,49,0.71,53,0.271,54,0.457,55,1.903,56,0.159,57,0.016,58,2.176,59,1.246,61,2.8,63,4.011,64,2.516,77,2.723,87,1.037,100,1.087,111,1.232,112,0.992,118,0.114,138,0.61,178,1.572,219,0.006,220,0.006,223,0.653,229,4.398,231,0.896,236,3.505,242,2.881,246,3.844,247,4.246,249,2.516,250,2.881,251,2.335,252,2.8,255,0.763,406,3.264,407,3.059,509,2.8,526,1.641,538,1.785,541,2.8,549,3.881,605,0.61,619,2.176,632,2.723,716,3.158,723,2.013,724,3.643,826,2.723,834,3.969,835,3.969,865,2.896,868,3.797,903,1.257,1090,2.335,1209,3.379,1233,2.65,1301,4.878,1311,3.797,1338,6.171,1396,6.219,1397,4.878,1398,6.742,1399,4.477,1400,3.643,1401,4.675,1402,3.505,1403,3.969,1404,4.167,1405,5.486,1406,5.404,1407,5.486,1408,4.398,1409,4.167,1410,5.022,1411,6.171,1412,5.022,1413,5.022,1414,4.398,1415,3.797,1416,3.643,1417,4.398,1418,5.404,1419,4.167,1420,2.881,1421,3.059,1422,3.969,1423,4.675,1424,5.486,1425,5.486,1426,5.486,1427,5.486,1428,5.486]],["title/components/CreateComponentDialogComponent.html",[0,0.078,111,0.907]],["body/components/CreateComponentDialogComponent.html",[0,0.163,1,0.84,2,0.76,3,0.089,4,0.082,5,0.668,6,0.93,7,0.912,8,0.875,9,0.074,11,0.806,13,1.647,16,0.806,17,1.425,18,1.357,19,0.806,20,1.291,21,0.869,22,2.857,23,0.869,24,2.46,25,0.097,26,0.507,27,1.291,28,3.194,30,0.777,33,0.6,34,2.294,35,3.197,37,0.807,39,0.747,40,0.008,41,0.599,42,0.187,43,0.59,45,0.766,46,1.098,49,0.704,50,1.434,51,1.185,53,0.251,54,0.299,55,1.246,56,0.104,57,0.01,58,1.424,59,1.009,61,1.833,62,1.215,63,3.029,64,1.647,77,2.936,78,1.144,84,1.606,87,1.014,88,0.682,92,0.912,93,1.143,94,1.12,95,0.697,96,1.6,97,0.912,98,1.941,99,0.823,100,1.009,101,0.984,102,1.191,103,0.84,104,0.912,105,0.84,106,0.823,107,0.912,108,0.84,109,0.912,110,0.79,111,1.445,112,1.09,113,0.823,114,0.79,115,0.947,116,1.501,117,0.806,118,0.105,119,0.823,120,0.964,121,0.84,122,0.84,123,0.758,124,0.912,125,0.806,126,0.912,127,0.84,128,0.912,129,0.84,130,0.912,131,0.823,132,0.912,133,0.823,134,0.912,135,0.586,136,0.912,137,0.823,138,0.566,139,0.912,140,0.84,141,0.912,142,0.84,143,1.501,144,0.84,145,0.912,146,0.84,147,1.501,148,0.84,149,0.912,150,0.857,151,0.912,152,0.806,153,0.912,154,0.84,155,0.912,156,0.806,157,0.774,158,0.912,159,0.84,160,1.241,161,1.292,162,0.84,163,0.912,164,0.806,165,0.476,166,0.912,167,0.823,168,0.84,169,0.893,170,0.84,171,0.912,172,0.823,173,0.823,174,0.806,175,0.912,176,0.823,177,0.912,178,1.563,179,0.654,180,0.806,181,0.912,182,0.806,183,1.12,184,0.823,185,0.84,186,0.566,187,0.79,188,0.64,189,0.84,190,0.84,191,0.84,192,0.912,193,0.84,194,0.774,195,0.912,196,0.84,197,0.912,198,0.79,199,0.823,200,0.84,201,0.774,202,0.912,203,0.84,204,0.561,205,0.79,206,0.823,207,0.912,208,0.806,209,0.912,210,0.806,211,0.912,212,0.79,213,0.912,214,0.79,215,0.912,216,0.79,217,0.857,218,0.912,219,0.005,220,0.005,223,0.684,229,2.879,231,1.11,236,4.111,237,4.338,240,3.591,241,2.527,242,2.674,243,3.591,246,3.737,247,4.134,248,4.66,249,1.647,250,1.886,251,1.529,252,1.833,255,0.5,265,2.598,406,4.719,407,4.422,427,3.136,509,1.833,538,1.168,541,1.833,549,4.495,605,0.399,619,1.424,632,1.782,716,2.067,723,1.702,724,2.385,763,2.116,826,1.782,834,2.598,835,2.598,865,2.385,868,3.523,903,0.823,1090,1.529,1209,2.212,1233,1.735,1301,4.656,1311,2.485,1338,4.66,1396,5.789,1397,4.656,1398,5.915,1399,4.273,1400,2.385,1401,3.06,1402,2.294,1403,4.279,1404,4.492,1405,5.915,1406,4.081,1407,3.591,1408,4.741,1409,3.867,1410,5.414,1411,5.89,1412,5.414,1413,5.414,1414,4.741,1415,3.523,1416,2.385,1417,4.081,1418,5.943,1419,5.511,1420,1.886,1421,2.003,1422,2.598,1423,3.06,1424,3.591,1425,3.591,1426,5.091,1427,3.591,1428,3.591,1429,5.745,1430,3.591,1431,4.053,1432,3.06,1433,3.591,1434,3.287,1435,3.287,1436,3.287,1437,3.591,1438,3.287,1439,4.053,1440,3.684,1441,4.66,1442,5.158,1443,4.656,1444,5.091,1445,3.06,1446,2.879]],["title/components/CreateEditLabelDialogComponent.html",[0,0.078,113,0.926]],["body/components/CreateEditLabelDialogComponent.html",[0,0.145,1,0.699,2,1.023,3,0.074,4,0.134,5,0.556,6,0.775,7,0.759,8,0.729,9,0.062,11,0.671,13,1.371,14,1.021,15,1.662,16,0.671,17,1.414,18,1.345,19,0.671,20,1.339,21,0.76,22,2.573,23,0.76,24,2.153,25,0.081,26,0.444,27,1.012,30,0.68,33,0.499,35,2.778,37,0.763,39,0.798,40,0.008,41,0.597,42,0.175,43,0.444,45,0.69,46,1.077,49,0.59,50,1.332,51,1.101,53,0.235,54,0.249,55,1.037,56,0.129,57,0.009,59,0.76,60,0.933,61,2.274,62,1.064,77,2.212,78,0.953,85,1.214,87,0.987,88,1.303,89,1.337,90,2.069,91,1.214,92,0.759,93,1,94,0.98,95,0.58,96,1.468,97,0.759,98,1.861,99,0.685,100,0.593,101,0.956,102,1.042,103,0.699,104,0.759,105,0.699,106,0.685,107,0.759,108,0.699,109,0.759,110,0.658,111,0.671,112,1.073,113,1.353,114,1.761,115,1.58,116,1.352,117,0.671,118,0.092,119,0.685,120,0.944,121,0.699,122,0.699,123,0.631,124,0.759,125,0.671,126,0.759,127,0.699,128,0.759,129,0.699,130,0.759,131,0.685,132,0.759,133,0.685,134,0.759,135,0.488,136,0.759,137,0.685,138,0.332,139,0.759,140,0.699,141,0.759,142,0.699,143,1.352,144,0.699,145,0.759,146,0.699,147,1.352,148,0.699,149,0.759,150,0.714,151,0.759,152,0.671,153,0.759,154,0.699,155,0.759,156,0.671,157,0.644,158,0.759,159,0.699,160,1.086,161,1.131,162,0.699,163,0.759,164,0.671,165,0.878,166,0.759,167,0.685,168,0.699,169,0.744,170,0.699,171,0.759,172,0.685,173,0.685,174,0.671,175,0.759,176,0.685,177,0.759,178,0.644,179,0.544,180,0.671,181,0.759,182,0.671,183,0.98,184,0.685,185,0.699,186,0.736,187,0.658,188,0.949,189,0.699,190,0.699,191,0.699,192,0.759,193,0.699,194,0.644,195,0.759,196,0.699,197,0.759,198,0.658,199,0.685,200,0.699,201,0.96,202,0.759,203,0.699,204,0.986,205,0.658,206,0.685,207,0.759,208,0.671,209,0.759,210,0.671,211,0.759,212,0.658,213,0.759,214,0.658,215,0.759,216,0.658,217,0.714,218,0.759,219,0.004,220,0.004,223,0.721,231,1.176,232,2.823,241,1.484,242,2.34,244,1.57,246,3.05,247,2.485,249,1.371,250,1.57,251,1.273,252,1.526,255,1.002,266,2.548,269,1.57,270,2.163,271,2.153,272,3.38,273,2.397,274,2.397,288,0.658,310,1.075,312,1.45,366,1.68,406,4.483,407,4.202,427,1.842,513,2.069,545,0.777,550,2.153,554,2.212,605,0.702,608,2.382,634,1.42,716,1.721,723,0.791,742,2.069,750,0.744,766,2.919,775,2.792,787,1.852,788,1.615,789,1.407,808,1.779,813,1.015,817,1.617,830,1.407,832,1.721,865,1.108,950,3.385,974,2.34,983,2.718,984,2.575,989,3.537,998,3.572,1001,4.732,1007,1.407,1008,1.337,1009,1.407,1011,1.651,1020,3.572,1024,3.686,1040,1.974,1041,2.745,1065,2.797,1069,1.371,1171,1.243,1175,1.721,1192,1.974,1233,2.153,1271,1.243,1388,4.079,1402,1.91,1415,3.084,1423,2.548,1432,2.548,1440,3.224,1447,2.651,1448,5.844,1449,5.327,1450,5.327,1451,5.327,1452,5.327,1453,5.029,1454,5.903,1455,5.903,1456,2.737,1457,4.079,1458,4.456,1459,3.374,1460,4.456,1461,4.456,1462,3.797,1463,1.986,1464,3.374,1465,4.079,1466,3.374,1467,4.456,1468,3.066,1469,4.456,1470,2.548,1471,3.374,1472,2.575,1473,2.274,1474,3.854,1475,2.99,1476,2.737,1477,3.385,1478,5.903,1479,4.456,1480,2.99,1481,1.721,1482,2.99,1483,2.163,1484,2.271,1485,2.99,1486,6.62,1487,5.327,1488,3.797,1489,3.889,1490,2.99,1491,1.986,1492,2.99,1493,2.99,1494,2.397,1495,2.99,1496,6.313,1497,2.99,1498,2.99,1499,1.986,1500,2.99,1501,1.484,1502,4.456,1503,2.99,1504,4.456,1505,2.99,1506,2.99,1507,1.526,1508,2.99,1509,2.548,1510,3.854,1511,3.854,1512,2.99,1513,2.99,1514,2.99,1515,1.986,1516,4.456,1517,2.99,1518,2.99,1519,2.99,1520,2.99,1521,3.572,1522,2.99,1523,2.99,1524,2.99,1525,2.99,1526,2.99,1527,4.456,1528,2.99,1529,2.99,1530,2.99,1531,3.385,1532,5.327,1533,4.539,1534,5.327,1535,3.572,1536,5.029,1537,3.572,1538,5.029,1539,3.224,1540,1.842,1541,2.548,1542,3.374,1543,4.456,1544,1.91,1545,3.374]],["title/interfaces/CreateEditLabelDialogData.html",[118,0.084,1448,3.443]],["body/interfaces/CreateEditLabelDialogData.html",[0,0.143,2,0.964,3,0.105,4,0.147,9,0.088,13,1.944,14,0.971,15,1.781,17,0.708,18,0.677,20,1.37,21,0.723,22,2.048,23,0.723,24,2.048,25,0.114,26,0.569,27,0.806,35,2.687,39,0.816,40,0.008,41,0.545,42,0.179,43,0.689,46,0.974,49,0.491,53,0.257,54,0.353,55,1.471,56,0.166,57,0.012,59,0.974,60,1.322,61,2.163,87,0.985,88,1.411,101,0.758,112,0.939,113,0.971,114,1.633,115,1.552,118,0.088,120,0.686,165,0.917,186,0.826,188,1.018,204,0.892,219,0.005,220,0.005,223,0.72,231,1.128,232,2.553,242,2.226,244,1.718,246,3.119,247,2.364,249,1.944,250,2.226,251,1.805,252,2.163,255,1.088,272,3.013,288,0.932,310,1.176,312,1.379,366,1.639,406,2.522,407,2.364,427,3.517,513,4.781,526,1.268,545,1.126,550,2.048,554,2.104,605,0.718,608,2.887,634,1.819,716,2.44,750,1.054,766,2.748,775,3.15,787,2.373,788,2.069,789,1.995,808,3.397,813,1.439,817,3.088,830,1.995,832,2.44,865,2.56,950,4.337,974,2.226,983,2.163,984,2.49,989,3.792,998,3.398,1001,4.577,1007,1.995,1008,1.895,1009,1.995,1011,2.116,1020,4.577,1024,4.468,1040,2.116,1041,3.517,1065,2.226,1233,2.048,1388,5.226,1402,2.708,1415,2.934,1423,3.612,1447,2.522,1448,5.886,1449,4.239,1450,4.239,1451,4.239,1452,4.239,1454,4.239,1455,4.239,1458,4.239,1460,4.239,1461,4.239,1462,3.612,1465,3.88,1467,4.239,1468,3.089,1469,4.239,1472,2.49,1473,2.163,1474,4.672,1477,3.22,1478,5.71,1479,4.239,1481,2.44,1482,5.71,1483,4.131,1484,4.337,1485,6.908,1486,7.428,1487,6.456,1488,4.865,1489,4.442,1490,4.239,1491,2.815,1492,4.239,1493,4.239,1494,3.398,1495,4.239,1496,7.211,1497,4.239,1498,4.239,1499,2.815,1500,4.239,1501,2.104,1502,5.71,1503,4.239,1504,5.71,1505,4.239,1506,4.239,1507,2.163,1508,4.239,1509,3.612,1510,4.672,1511,4.672,1512,4.239,1513,4.239,1514,4.239,1515,2.815,1516,5.71,1517,4.239,1518,4.239,1519,4.239,1520,4.239,1521,4.577,1522,4.239,1523,4.239,1524,4.239,1525,4.239,1526,4.239,1527,5.71,1528,4.239,1529,4.239,1530,4.239,1531,4.337,1532,6.456,1533,5.502,1534,6.456,1535,4.577]],["title/interfaces/CreateInterfaceData.html",[118,0.084,1546,3.239]],["body/interfaces/CreateInterfaceData.html",[0,0.13,3,0.136,4,0.125,9,0.114,13,2.518,17,0.917,18,0.877,20,1.387,21,0.937,22,2.653,23,0.937,24,2.653,25,0.148,26,0.672,27,1.387,28,2.725,35,3.174,40,0.008,42,0.194,46,1.246,49,0.693,53,0.271,54,0.458,55,1.905,56,0.196,57,0.016,58,2.178,59,1.334,61,2.802,63,3.267,87,0.895,112,1.062,117,1.233,118,0.17,138,0.61,219,0.006,220,0.006,223,0.532,231,0.897,232,2.455,236,3.508,242,2.884,244,1.894,246,3.527,247,3.062,249,2.518,250,2.884,251,2.337,252,2.802,310,1.228,406,3.267,407,3.062,526,1.643,541,2.802,545,0.958,599,1.821,605,0.61,623,3.883,716,3.161,723,1.784,865,2.035,921,3.973,983,2.802,984,2.942,1007,2.584,1008,2.455,1009,2.584,1040,2.5,1041,3.382,1062,2.195,1063,2.584,1066,3.492,1067,2.653,1090,2.337,1209,3.382,1260,4.865,1311,3.8,1397,4.881,1399,4.479,1400,3.646,1402,3.508,1403,3.973,1404,4.171,1408,4.401,1409,4.171,1414,4.401,1415,3.8,1417,4.401,1489,4.691,1546,5.853,1547,4.668,1548,4.401,1549,4.881,1550,4.679,1551,4.401,1552,4.171,1553,5.491,1554,5.491,1555,5.491,1556,5.491,1557,5.026,1558,5.491,1559,5.407,1560,4.401]],["title/components/CreateInterfaceDialogComponent.html",[0,0.078,117,0.907]],["body/components/CreateInterfaceDialogComponent.html",[0,0.126,1,0.879,2,0.784,3,0.093,4,0.085,5,0.699,6,0.973,7,0.954,8,0.915,9,0.078,11,0.843,13,1.723,16,0.843,17,1.428,18,1.36,19,0.843,20,1.36,21,0.897,22,2.928,23,0.897,24,2.539,25,0.101,26,0.524,27,1.483,28,3.259,30,0.802,33,0.627,34,2.4,35,3.251,37,0.8,39,0.664,40,0.008,41,0.595,42,0.196,43,0.524,45,0.785,46,1.222,47,4.213,49,0.677,50,1.109,51,0.917,53,0.254,54,0.313,55,1.303,56,0.153,57,0.011,58,1.49,59,1.179,61,1.917,62,1.255,63,2.235,77,2.609,78,1.197,84,1.68,87,0.871,88,0.714,92,0.954,93,1.18,94,1.156,95,0.729,96,1.633,97,0.954,98,1.959,99,0.861,100,0.745,101,0.995,102,1.229,103,0.879,104,0.954,105,0.879,106,0.861,107,0.954,108,0.879,109,0.954,110,0.826,111,0.843,112,1.107,113,0.861,114,0.826,115,0.978,116,1.539,117,1.474,118,0.175,119,0.861,120,0.97,121,0.879,122,0.879,123,0.793,124,0.954,125,0.843,126,0.954,127,0.879,128,0.954,129,0.879,130,0.954,131,0.861,132,0.954,133,0.861,134,0.954,135,0.614,136,0.954,137,0.861,138,0.584,139,0.954,140,0.879,141,0.954,142,0.879,143,1.539,144,0.879,145,0.954,146,0.879,147,1.539,148,0.879,149,0.954,150,0.897,151,0.954,152,0.843,153,0.954,154,0.879,155,0.954,156,0.843,157,0.809,158,0.954,159,0.879,160,1.281,161,1.334,162,0.879,163,0.954,164,0.843,165,0.498,166,0.954,167,0.861,168,0.879,169,0.934,170,0.879,171,0.954,172,0.861,173,0.861,174,0.843,175,0.954,176,0.861,177,0.954,178,0.809,179,0.684,180,0.843,181,0.954,182,0.843,183,1.156,184,0.861,185,0.879,186,0.584,187,0.826,188,0.67,189,0.879,190,0.879,191,0.879,192,0.954,193,0.879,194,0.809,195,0.954,196,0.879,197,0.954,198,0.826,199,0.861,200,0.879,201,0.809,202,0.954,203,0.879,204,0.587,205,0.826,206,0.861,207,0.954,208,0.843,209,0.954,210,0.843,211,0.954,212,0.826,213,0.954,214,0.826,215,0.954,216,0.826,217,0.897,218,0.954,219,0.005,220,0.005,223,0.669,231,1.128,232,2.71,236,4.194,237,4.478,239,3.012,241,1.865,242,2.76,244,1.633,246,3.338,247,2.931,248,3.439,249,1.723,250,1.973,251,1.599,252,1.917,265,2.718,310,0.957,406,4.684,407,4.39,541,1.917,545,0.655,599,1.772,605,0.418,623,3.779,716,2.163,723,1.39,763,2.184,865,2.246,921,2.718,983,3.093,984,2.863,1007,1.768,1008,1.68,1009,1.768,1040,1.947,1041,2.314,1062,1.71,1063,1.768,1066,1.723,1067,1.815,1090,1.599,1209,2.314,1260,2.4,1311,2.6,1397,4.75,1399,4.36,1400,2.495,1402,2.4,1403,4.386,1404,4.604,1408,4.859,1409,3.992,1414,4.859,1415,3.637,1417,4.213,1432,3.201,1434,3.439,1435,3.439,1440,3.803,1445,3.201,1446,3.012,1476,3.439,1489,4.044,1546,5.538,1548,3.012,1549,4.75,1550,3.201,1551,4.859,1552,4.604,1553,6.062,1554,3.757,1555,3.757,1556,3.757,1557,3.439,1558,3.757,1559,4.213,1560,5.262,1561,3.757,1562,3.757,1563,3.201]],["title/components/CreateIssueDialogComponent.html",[0,0.078,119,0.926]],["body/components/CreateIssueDialogComponent.html",[0,0.131,1,0.75,2,1.095,3,0.08,4,0.073,5,0.597,6,0.831,7,0.814,8,0.782,9,0.066,11,0.72,13,1.471,14,1.076,15,1.731,16,0.72,17,1.419,18,1.35,19,0.72,20,1.367,21,0.801,22,2.682,23,0.801,24,2.268,25,0.086,26,0.468,27,1.479,28,3.032,29,3.419,30,0.717,33,0.536,34,2.049,35,3.058,36,3.032,37,0.791,39,0.593,40,0.008,41,0.53,42,0.169,43,0.468,45,0.791,46,1.197,47,2.571,49,0.276,50,1.372,51,1.134,53,0.255,54,0.267,55,1.113,56,0.136,57,0.009,58,1.272,59,1.159,60,1.001,61,1.637,62,1.121,63,2.793,77,2.33,78,1.495,81,2.702,85,1.905,87,0.81,88,0.61,89,2.099,92,0.814,93,1.054,94,1.032,95,0.623,96,1.519,97,0.814,98,1.893,99,0.735,100,0.636,101,0.954,102,1.098,103,0.75,104,0.814,105,0.75,106,0.735,107,0.814,108,0.75,109,0.814,110,0.705,111,0.72,112,1.089,113,0.735,114,0.705,115,0.873,116,1.409,117,0.72,118,0.115,119,1.4,120,1.023,121,0.75,122,0.75,123,0.677,124,0.814,125,0.72,126,0.814,127,0.75,128,0.814,129,0.75,130,0.814,131,0.735,132,0.814,133,0.735,134,0.814,135,0.524,136,0.814,137,0.735,138,0.357,139,0.814,140,0.75,141,0.814,142,0.75,143,1.409,144,0.75,145,0.814,146,0.75,147,1.409,148,0.75,149,0.814,150,0.766,151,0.814,152,0.72,153,0.814,154,0.75,155,0.814,156,1.054,157,0.691,158,0.814,159,0.75,160,1.144,161,1.191,162,0.75,163,0.814,164,0.72,165,0.426,166,0.814,167,0.735,168,0.75,169,0.798,170,0.75,171,0.814,172,0.735,173,0.735,174,0.72,175,0.814,176,0.735,177,0.814,178,0.691,179,0.584,180,0.72,181,0.814,182,1.054,183,1.032,184,0.735,185,0.75,186,0.522,187,0.705,188,0.572,189,0.75,190,0.75,191,0.75,192,0.814,193,0.75,194,0.691,195,0.814,196,0.75,197,0.814,198,0.705,199,0.735,200,0.75,201,0.691,202,0.814,203,0.75,204,0.501,205,0.705,206,0.735,207,0.814,208,0.72,209,0.814,210,0.72,211,0.814,212,0.705,213,0.814,214,0.705,215,0.814,216,0.705,217,0.766,218,0.814,219,0.004,220,0.004,231,1.145,232,2.482,236,2.999,239,2.571,241,2.33,242,2.465,244,1.744,246,3.14,247,3.406,249,1.471,250,1.685,251,1.365,252,1.637,255,0.945,269,2.465,279,2.601,305,3.465,306,2.793,307,2.539,310,1.011,362,3.565,366,1.191,378,2.13,384,1.637,406,4.631,407,4.341,408,1.735,423,2.13,462,1.976,513,3.248,545,0.559,554,2.755,558,1.685,559,2.22,599,1.498,608,2.099,638,1.779,716,1.847,724,2.13,736,4.296,750,0.798,766,2.986,775,2.151,787,1.951,788,1.701,789,1.509,809,2.057,813,1.594,826,1.592,830,2.208,833,1.189,865,1.189,903,1.4,969,4.419,983,2.833,984,2.664,990,3.762,991,3.902,1006,2.321,1007,1.509,1008,1.434,1009,1.509,1024,2.22,1026,2.321,1027,2.437,1029,2.321,1030,2.22,1031,2.049,1040,1.189,1041,2.891,1100,2.22,1188,1.909,1192,1.189,1211,1.333,1233,1.55,1271,1.333,1289,2.793,1309,2.936,1402,2.049,1433,3.208,1437,3.208,1438,2.936,1440,3.396,1445,2.733,1470,2.733,1472,2.421,1489,2.891,1521,2.571,1551,4.449,1559,4.449,1560,4.896,1562,4.694,1564,6.108,1565,6.108,1566,6.108,1567,4.703,1568,3.62,1569,3.62,1570,4.694,1571,3.62,1572,4.694,1573,3.62,1574,4.004,1575,4.296,1576,4.321,1577,4.694,1578,3.62,1579,5.08,1580,3.841,1581,3.396,1582,4.296,1583,2.936,1584,2.437,1585,3.095,1586,3.208,1587,3.208,1588,3.208,1589,3.208,1590,3.208,1591,4.694,1592,4.694,1593,4.296,1594,2.733,1595,2.571,1596,3.208,1597,3.208,1598,3.208,1599,2.936,1600,3.208,1601,3.208,1602,3.208,1603,3.208,1604,3.208,1605,3.208,1606,3.208,1607,1.976,1608,2.22,1609,3.208,1610,3.208,1611,3.208,1612,3.208,1613,3.208,1614,3.762,1615,3.208,1616,2.437,1617,3.208,1618,2.13,1619,3.208,1620,3.208,1621,3.208,1622,3.208,1623,2.733,1624,3.208,1625,2.733,1626,3.565,1627,1.976,1628,2.793,1629,5.297,1630,2.13,1631,3.208,1632,1.509,1633,1.847,1634,3.208,1635,3.62,1636,2.936,1637,3.208,1638,3.62]],["title/components/CreateProjectDialogComponent.html",[0,0.078,121,0.945]],["body/components/CreateProjectDialogComponent.html",[0,0.139,1,0.901,2,0.798,3,0.096,4,0.088,5,0.716,6,0.998,7,0.977,8,0.938,9,0.08,11,0.864,13,1.766,16,0.864,17,1.429,18,1.362,19,0.864,20,1.325,21,0.912,22,2.967,23,0.912,24,2.583,25,0.104,26,0.533,27,1.434,28,3.294,30,0.816,33,0.643,34,2.46,35,3.28,37,0.803,39,0.675,40,0.008,41,0.615,42,0.184,43,0.533,45,0.795,46,1.231,47,4.286,49,0.667,50,1.128,51,0.933,53,0.247,54,0.321,55,1.336,56,0.112,57,0.011,58,1.527,59,1.048,62,1.276,63,2.291,77,2.654,87,0.88,88,0.732,89,1.722,92,0.977,93,1.2,94,1.176,95,0.747,96,1.65,97,0.977,98,1.969,99,0.882,100,0.763,101,1.131,102,1.251,103,0.901,104,0.977,105,0.901,106,0.882,107,0.977,108,0.901,109,0.977,110,0.847,111,0.864,112,1.11,113,0.882,114,0.847,115,0.995,116,1.559,117,0.864,118,0.08,119,0.882,120,0.973,121,1.552,122,0.901,123,0.812,124,0.977,125,0.864,126,0.977,127,0.901,128,0.977,129,0.901,130,0.977,131,0.882,132,0.977,133,0.882,134,0.977,135,0.629,136,0.977,137,0.882,138,0.428,139,0.977,140,0.901,141,0.977,142,0.901,143,1.559,144,0.901,145,0.977,146,0.901,147,1.559,148,0.901,149,0.977,150,0.919,151,0.977,152,0.864,153,0.977,154,0.901,155,0.977,156,0.864,157,0.829,158,0.977,159,0.901,160,1.303,161,1.357,162,0.901,163,0.977,164,0.864,165,0.511,166,0.977,167,0.882,168,0.901,169,0.958,170,0.901,171,0.977,172,0.882,173,0.882,174,0.864,175,0.977,176,0.882,177,0.977,178,0.829,179,0.701,180,0.864,181,0.977,182,0.864,183,1.176,184,0.882,185,0.901,186,0.738,187,0.847,188,0.686,189,0.901,190,0.901,191,0.901,192,0.977,193,0.901,194,0.829,195,0.977,196,0.901,197,0.977,198,0.847,199,0.882,200,0.901,201,0.829,202,0.977,203,0.901,204,1.036,205,0.847,206,0.882,207,0.977,208,0.864,209,0.977,210,0.864,211,0.977,212,0.847,213,0.977,214,0.847,215,0.977,216,0.847,217,0.919,218,0.977,219,0.005,220,0.005,223,0.772,224,2.583,232,2.746,236,4.239,237,4.556,239,3.087,244,1.65,246,3.368,247,2.982,250,2.022,251,1.639,310,0.974,406,4.704,407,4.409,539,4.239,541,1.965,556,5.622,599,1.791,716,2.217,723,1.624,728,6.142,763,2.222,983,3.134,984,2.894,1007,1.812,1008,1.722,1009,1.812,1040,1.981,1041,2.372,1233,2.967,1311,2.665,1397,4.801,1402,2.46,1403,4.444,1409,4.061,1415,3.7,1417,4.286,1432,3.281,1434,3.525,1435,3.525,1436,3.525,1440,4.801,1445,3.281,1457,3.525,1476,3.525,1480,3.851,1489,4.087,1551,4.923,1557,3.525,1559,4.286,1560,5.319,1563,3.281,1639,6.931,1640,3.281,1641,2.665,1642,4.345,1643,4.345,1644,4.345,1645,4.345]],["title/components/CursorPaginatorComponent.html",[0,0.078,122,0.945]],["body/components/CursorPaginatorComponent.html",[0,0.145,1,1.03,2,0.874,3,0.109,4,0.1,5,0.819,6,1.141,7,1.118,8,1.073,9,0.091,11,0.989,16,0.989,17,1.437,18,1.369,19,0.989,20,0.837,21,1,23,1,25,0.119,37,0.6,40,0.008,41,0.552,42,0.145,53,0.195,54,0.367,56,0.128,57,0.013,62,1.398,78,1.403,85,2.378,88,0.837,91,2.378,92,1.118,93,1.315,94,1.288,95,0.855,96,1.745,97,1.118,98,2.02,99,1.009,100,0.873,101,1.033,102,1.37,103,1.03,104,1.118,105,1.03,106,1.009,107,1.118,108,1.03,109,1.118,110,0.969,111,0.989,112,0.993,113,1.009,114,0.969,115,1.224,116,1.671,117,0.989,118,0.091,119,1.009,120,0.99,121,1.03,122,1.641,123,1.693,124,1.118,125,0.989,126,1.118,127,1.03,128,1.118,129,1.03,130,1.118,131,1.009,132,1.118,133,1.009,134,1.118,135,0.719,136,1.118,137,1.009,138,0.49,139,1.118,140,1.03,141,1.118,142,1.03,143,1.671,144,1.03,145,1.118,146,1.03,147,1.671,148,1.03,149,1.118,150,1.051,151,1.118,152,0.989,153,1.118,154,1.03,155,1.118,156,0.989,157,0.949,158,1.118,159,1.03,160,1.427,161,1.487,162,1.03,163,1.118,164,0.989,165,0.584,166,1.118,167,1.009,168,1.03,169,1.095,170,1.03,171,1.118,172,1.009,173,1.009,174,0.989,175,1.118,176,1.009,177,1.118,178,0.949,179,0.802,180,0.989,181,1.118,182,0.989,183,1.288,184,1.009,185,1.03,186,0.651,187,0.969,188,0.785,189,1.03,190,1.03,191,1.03,192,1.118,193,1.03,194,0.949,195,1.118,196,1.03,197,1.118,198,0.969,199,1.009,200,1.03,201,0.949,202,1.118,203,1.03,204,0.688,205,0.969,206,1.009,207,1.118,208,0.989,209,1.118,210,0.989,211,1.118,212,0.969,213,1.118,214,0.969,215,1.118,216,0.969,217,1.051,218,1.118,219,0.006,220,0.006,223,0.427,262,1.83,272,1.921,366,1.671,427,2.713,571,3.168,638,2.986,722,2.493,723,1.74,750,1.095,763,2.434,787,1.83,790,2.382,809,2.171,813,1.989,831,4.274,1062,1.906,1099,1.632,1100,4.054,1171,1.83,1188,3.485,1192,2.171,1540,3.608,1632,2.072,1646,6.582,1647,6.024,1648,4.404,1649,3.485,1650,6.61,1651,4.21,1652,5.608,1653,7.428,1654,6.61,1655,7.428,1656,4.97,1657,6.61,1658,4.97,1659,6.61,1660,3.372,1661,4.695,1662,5.858,1663,6.61,1664,6.61,1665,5.858,1666,3.267,1667,3.753,1668,3.753,1669,4.97,1670,4.97,1671,4.404,1672,3.753,1673,3.187,1674,4.404]],["title/classes/DataNode.html",[57,0.012,782,2.253]],["body/classes/DataNode.html",[3,0.049,4,0.045,9,0.041,14,0.935,15,1.273,19,0.916,25,0.053,26,0.469,27,0.895,30,0.492,37,0.697,39,0.8,40,0.008,41,0.356,42,0.174,43,0.517,45,0.966,46,0.95,50,0.861,51,0.905,53,0.173,56,0.151,57,0.017,59,1.111,60,1.273,64,1.477,70,1.984,80,2.724,84,0.883,87,0.864,88,0.775,91,1.308,93,0.723,100,0.391,106,0.935,112,0.438,118,0.041,123,1.291,165,0.918,179,0.945,186,0.704,219,0.003,220,0.003,223,0.312,224,0.954,225,3.311,228,0.716,231,1.357,232,2.624,244,1.869,255,1.031,288,1.035,310,1.311,312,2.213,366,1.726,455,0.929,482,1.429,520,2.607,534,0.579,535,2.498,542,2.082,544,1.784,545,1.319,546,2.437,554,0.98,560,1.175,564,1.216,566,0.98,569,1.92,570,2.513,571,3.174,572,1.459,592,1.005,599,1.4,605,0.89,613,1.682,614,2.428,618,2.229,619,0.783,620,2.952,638,2.108,656,2.745,669,1.261,672,2.607,688,2.215,702,0.883,717,0.821,721,1.682,723,1.079,749,1.175,750,1.912,754,2.582,758,2.801,759,3.531,760,1.824,764,2.745,766,2.695,769,3.555,771,1.682,773,4.704,774,1.261,775,2.82,777,3.571,782,3.969,784,3.064,788,0.716,792,1.429,800,1.824,808,1.175,809,2.52,813,1.094,814,0.954,815,1.984,816,2.428,817,1.068,823,1.008,830,0.929,831,2.625,838,1.477,841,3.314,874,3.305,884,1.068,886,2.082,903,0.738,920,1.216,938,2.143,944,3.314,952,2.513,969,1.429,974,2.922,988,1.261,995,2.447,1000,1.311,1011,2.886,1028,0.929,1031,3.314,1040,0.732,1050,1.261,1062,2.06,1070,1.311,1095,2.607,1120,1.429,1205,2.9,1237,2.722,1239,1.068,1241,1.216,1246,0.861,1250,0.98,1307,1.216,1364,1.692,1422,2.331,1447,1.917,1463,3.126,1468,2.105,1473,1.008,1477,1.5,1481,1.137,1489,3.195,1491,2.71,1494,2.582,1499,2.71,1501,3.705,1515,2.139,1531,4.458,1574,1.216,1607,1.984,1616,2.447,1626,1.5,1628,3.642,1630,1.311,1649,1.917,1660,1.137,1675,1.5,1676,2.949,1677,5.811,1678,5.093,1679,3.735,1680,2.949,1681,5.795,1682,2.949,1683,3.735,1684,3.735,1685,2.949,1686,2.949,1687,2.949,1688,2.949,1689,3.099,1690,2.949,1691,2.949,1692,3.735,1693,3.406,1694,2.949,1695,4.42,1696,4.748,1697,4.748,1698,3.221,1699,5.093,1700,3.221,1701,3.735,1702,4.158,1703,7.348,1704,2.228,1705,2.228,1706,2.949,1707,5.001,1708,2.745,1709,2.228,1710,2.228,1711,2.228,1712,4.42,1713,3.406,1714,2.745,1715,3.735,1716,2.949,1717,2.949,1718,2.949,1719,2.949,1720,2.228,1721,2.949,1722,1.974,1723,2.228,1724,2.228,1725,2.949,1726,2.228,1727,2.745,1728,3.735,1729,2.949,1730,2.949,1731,2.228,1732,2.949,1733,2.949,1734,2.513,1735,2.949,1736,1.974,1737,2.228,1738,5.219,1739,4.42,1740,1.366,1741,2.139,1742,1.216,1743,1.366,1744,3.258,1745,1.682,1746,2.582,1747,1.583,1748,1.583,1749,5.001,1750,2.229,1751,2.745,1752,1.917,1753,1.682,1754,1.583,1755,3.477,1756,2.582,1757,1.807,1758,1.682,1759,2.582,1760,1.429,1761,1.682,1762,1.682,1763,2.745,1764,1.682,1765,3.271,1766,1.583,1767,1.807,1768,1.807,1769,1.807,1770,2.105,1771,2.447,1772,1.583,1773,1.682,1774,1.583,1775,1.137,1776,1.807,1777,1.807,1778,2.949,1779,2.745,1780,1.682,1781,3.735,1782,3.735,1783,1.807,1784,1.807,1785,2.058,1786,2.949,1787,1.5,1788,1.807,1789,1.807,1790,1.682,1791,2.949,1792,1.807,1793,2.745,1794,1.807,1795,1.807,1796,2.331,1797,1.807,1798,1.807,1799,1.807,1800,1.807,1801,1.807,1802,1.5,1803,0.929,1804,5.093,1805,3.717,1806,1.682,1807,3.735,1808,3.735,1809,1.682,1810,1.366,1811,6.224,1812,1.807,1813,1.807,1814,1.807,1815,4.309,1816,1.807,1817,2.949,1818,1.807,1819,3.735,1820,2.949,1821,3.735,1822,1.807,1823,3.735,1824,1.807,1825,4.309,1826,1.807,1827,1.807,1828,1.807,1829,1.807,1830,1.682,1831,1.5,1832,1.311,1833,1.583,1834,1.807,1835,1.807,1836,3.735,1837,1.583,1838,1.807,1839,1.807,1840,2.025,1841,4.748,1842,1.807,1843,1.682,1844,1.682,1845,2.607,1846,1.807,1847,1.682,1848,2.331,1849,1.682,1850,1.807,1851,1.807,1852,4.309,1853,3.735,1854,3.735,1855,1.216,1856,1.682,1857,1.682,1858,1.583,1859,2.949,1860,3.735,1861,1.807,1862,1.807,1863,4.748,1864,1.807,1865,1.807,1866,3.258,1867,2.745,1868,1.807,1869,1.807,1870,3.735,1871,1.682,1872,2.949,1873,1.807,1874,1.807,1875,3.735,1876,1.366,1877,1.807,1878,1.807,1879,1.807,1880,1.807,1881,1.807,1882,2.949,1883,1.807,1884,1.807,1885,2.949,1886,1.807,1887,1.807,1888,1.807,1889,1.807,1890,1.807,1891,2.447,1892,2.745,1893,2.949,1894,1.807,1895,1.311,1896,1.807,1897,1.175,1898,2.949,1899,1.807,1900,1.682,1901,1.429,1902,2.952,1903,2.139,1904,3.273,1905,1.807,1906,1.807,1907,1.807,1908,1.807,1909,1.583,1910,1.807,1911,1.807,1912,1.807,1913,1.807,1914,1.807,1915,1.807,1916,1.807,1917,1.807,1918,1.807,1919,1.807,1920,1.807,1921,1.807,1922,1.807,1923,2.952,1924,1.807,1925,4.748,1926,1.807,1927,2.949,1928,1.807,1929,1.807,1930,1.682,1931,2.745,1932,1.682,1933,1.311,1934,1.807,1935,1.807,1936,1.807,1937,1.807,1938,4.309,1939,3.735,1940,4.309,1941,3.735,1942,1.807,1943,1.807,1944,1.807,1945,4.748,1946,1.807,1947,1.807,1948,3.735,1949,3.735,1950,3.735,1951,3.735,1952,1.583,1953,3.477,1954,1.807,1955,1.807,1956,1.807,1957,3.477,1958,1.807,1959,2.447,1960,1.807,1961,1.807,1962,1.807,1963,1.807,1964,2.949,1965,1.807,1966,1.807,1967,1.429,1968,1.807,1969,1.429,1970,1.807,1971,1.807,1972,1.807,1973,1.405,1974,1.807,1975,1.807,1976,1.807,1977,3.477,1978,1.807,1979,3.735,1980,3.735,1981,1.583,1982,1.807,1983,1.807,1984,1.807,1985,1.807,1986,1.807,1987,1.807,1988,1.807,1989,1.807,1990,1.807,1991,1.807,1992,1.807,1993,1.807,1994,1.807,1995,1.807,1996,1.807,1997,1.807,1998,1.682,1999,1.682,2000,1.429,2001,1.682,2002,1.366,2003,3.099,2004,1.583,2005,1.807,2006,2.058,2007,1.583,2008,1.583,2009,1.807,2010,1.366,2011,1.682,2012,1.807,2013,1.807,2014,1.682,2015,1.917,2016,1.807,2017,2.745,2018,1.807,2019,1.807,2020,1.682,2021,1.807,2022,1.807,2023,1.807,2024,1.807,2025,1.682,2026,1.807,2027,1.807,2028,1.807,2029,1.807,2030,1.807,2031,1.807,2032,2.139,2033,1.807,2034,1.583,2035,1.807,2036,1.261,2037,1.261,2038,1.807,2039,1.807,2040,1.807,2041,1.807,2042,1.807,2043,1.807]],["title/classes/DataQuery.html",[57,0.012,1677,3.069]],["body/classes/DataQuery.html",[3,0.047,4,0.043,9,0.039,14,0.717,15,0.977,19,1.143,25,0.051,26,0.46,27,0.595,30,0.478,37,0.732,39,0.813,40,0.008,41,0.348,42,0.175,43,0.508,45,0.995,46,0.934,50,0.84,51,0.888,53,0.17,56,0.148,57,0.016,59,1.098,60,0.977,64,1.436,70,1.928,80,2.421,84,0.853,87,0.875,88,0.757,91,1.617,93,0.703,100,0.621,106,1.056,112,0.425,118,0.065,123,1.274,165,0.893,179,0.927,186,0.695,219,0.003,220,0.003,223,0.303,224,0.921,225,3.256,228,0.691,231,1.368,232,2.699,244,1.857,255,1.024,288,0.876,310,1.315,312,2.19,366,1.709,455,0.897,482,1.38,520,2.946,534,0.559,535,2.461,542,1.598,544,2.074,545,1.319,546,2.505,554,0.946,560,1.863,564,1.928,566,0.946,569,1.473,570,3.137,571,3.265,572,1.432,592,1.242,599,1.477,605,0.888,613,1.625,614,3.03,618,2.756,619,0.756,620,3.96,638,2.074,656,2.668,669,1.218,672,2.946,688,2.191,702,0.853,717,0.792,721,1.625,723,0.828,749,1.135,750,1.902,754,3.193,758,2.743,759,3.721,760,1.4,764,2.668,766,2.33,769,3.694,771,2.668,773,5.286,774,1.218,775,2.735,777,3.655,782,3.754,784,3.103,788,0.691,792,1.38,800,1.4,808,1.135,809,2.494,813,1.063,814,0.921,815,1.928,816,2.743,817,1.693,823,0.973,830,0.897,831,2.84,838,1.436,841,3.496,874,3.514,884,1.031,886,2.033,903,0.717,920,1.175,938,1.644,944,3.496,952,2.453,969,1.38,974,3.036,988,1.218,995,2.378,1000,1.266,1011,2.872,1028,1.473,1031,3.496,1040,0.707,1050,1.218,1062,2.145,1070,1.266,1095,2.545,1120,1.38,1205,2.84,1237,2.656,1239,1.031,1241,1.928,1246,0.832,1250,0.946,1307,1.175,1364,3.751,1422,2.265,1447,1.863,1463,2.079,1468,2.061,1473,0.973,1477,2.378,1481,1.098,1489,3.137,1491,2.645,1494,2.51,1499,2.645,1501,3.814,1515,2.079,1531,4.391,1574,1.175,1607,1.928,1616,2.378,1626,1.448,1628,4.005,1630,1.266,1649,2.37,1660,1.098,1675,1.448,1676,1.745,1677,5.484,1678,4.22,1679,2.866,1680,1.745,1681,4.661,1682,1.745,1683,2.866,1684,2.866,1685,1.745,1686,1.745,1687,1.745,1688,1.745,1689,2.378,1690,1.745,1691,1.745,1692,2.866,1693,2.882,1694,1.745,1695,4.339,1696,4.661,1697,5.009,1698,3.131,1699,5.526,1700,3.131,1701,4.22,1702,4.387,1706,2.866,1707,5.144,1708,2.668,1712,4.447,1713,3.684,1714,2.668,1715,4.22,1716,2.866,1717,2.866,1718,2.866,1719,2.866,1721,2.866,1722,1.907,1725,2.866,1727,2.668,1728,4.22,1729,2.866,1730,2.866,1732,2.866,1733,2.866,1734,2.84,1735,2.866,1736,1.907,1738,5.493,1739,4.926,1740,1.32,1741,2.079,1742,1.175,1743,1.32,1744,3.191,1745,1.625,1746,2.51,1747,1.528,1748,1.528,1749,4.926,1750,2.167,1751,2.668,1752,1.863,1753,1.625,1754,1.528,1755,3.394,1756,2.51,1757,1.745,1758,1.625,1759,2.51,1760,1.38,1761,1.625,1762,1.625,1763,3.394,1764,1.625,1765,3.193,1766,1.528,1767,2.866,1768,2.866,1769,2.866,1770,2.347,1771,3.502,1772,2.51,1773,2.668,1774,2.51,1775,1.802,1776,2.866,1777,2.866,1778,4.22,1779,3.929,1780,2.668,1781,3.646,1782,3.646,1783,2.866,1784,2.866,1785,2.946,1786,4.661,1787,2.378,1788,2.866,1789,2.866,1790,2.668,1791,3.646,1792,2.866,1793,3.394,1794,2.866,1795,2.866,1796,2.882,1797,2.866,1798,1.745,1799,1.745,1800,2.866,1801,2.866,1802,2.378,1803,1.473,1804,5.009,1805,3.754,1806,1.625,1807,3.646,1808,3.646,1809,1.625,1810,1.32,1811,6.162,1812,1.745,1813,1.745,1814,1.745,1815,4.22,1816,1.745,1817,3.646,1818,2.866,1819,3.646,1820,2.866,1821,3.646,1822,1.745,1823,4.22,1824,1.745,1825,4.22,1826,1.745,1827,1.745,1828,1.745,1829,1.745,1830,1.625,1831,1.448,1832,1.266,1833,1.528,1834,1.745,1835,1.745,1836,3.646,1837,1.528,1838,1.745,1839,1.745,1840,1.977,1841,4.661,1842,1.745,1843,1.625,1844,1.625,1845,2.545,1846,1.745,1847,1.625,1848,2.882,1849,1.625,1850,1.745,1851,1.745,1852,4.22,1853,3.646,1854,3.646,1855,1.175,1856,1.625,1857,1.625,1858,1.528,1859,2.866,1860,3.646,1861,1.745,1862,1.745,1863,4.661,1864,1.745,1865,1.745,1866,3.191,1867,2.668,1868,1.745,1869,2.866,1870,3.646,1871,1.625,1872,2.866,1873,1.745,1874,1.745,1875,3.646,1876,1.32,1877,1.745,1878,1.745,1879,1.745,1880,1.745,1881,1.745,1882,2.866,1883,1.745,1884,1.745,1885,2.866,1886,1.745,1887,1.745,1888,1.745,1889,3.646,1890,1.745,1891,2.378,1892,2.668,1893,2.866,1894,1.745,1895,1.266,1896,1.745,1897,1.135,1898,2.866,1899,1.745,1900,1.625,1901,1.38,1902,2.882,1903,2.079,1904,3.224,1905,1.745,1906,1.745,1907,1.745,1908,1.745,1909,1.528,1910,1.745,1911,1.745,1912,1.745,1913,1.745,1914,1.745,1915,1.745,1916,1.745,1917,1.745,1918,1.745,1919,1.745,1920,1.745,1921,1.745,1922,1.745,1923,2.882,1924,1.745,1925,4.661,1926,1.745,1927,2.866,1928,1.745,1929,1.745,1930,1.625,1931,2.668,1932,1.625,1933,1.266,1934,1.745,1935,1.745,1936,1.745,1937,1.745,1938,4.22,1939,3.646,1940,4.22,1941,3.646,1942,1.745,1943,1.745,1944,1.745,1945,4.661,1946,1.745,1947,1.745,1948,3.646,1949,3.646,1950,3.646,1951,3.646,1952,1.528,1953,3.394,1954,1.745,1955,1.745,1956,1.745,1957,3.394,1958,1.745,1959,2.378,1960,1.745,1961,1.745,1962,1.745,1963,1.745,1964,2.866,1965,1.745,1966,1.745,1967,1.38,1968,1.745,1969,1.38,1970,1.745,1971,1.745,1972,1.745,1973,1.365,1974,1.745,1975,1.745,1976,1.745,1977,3.394,1978,1.745,1979,3.646,1980,3.646,1981,1.528,1982,1.745,1983,1.745,1984,1.745,1985,1.745,1986,1.745,1987,1.745,1988,1.745,1989,1.745,1990,1.745,1991,1.745,1992,1.745,1993,1.745,1994,1.745,1995,1.745,1996,1.745,1997,1.745,1998,1.625,1999,1.625,2000,1.38,2001,1.625,2002,1.32,2003,3.025,2004,1.528,2005,1.745,2006,2,2007,1.528,2008,1.528,2009,1.745,2010,1.32,2011,1.625,2012,1.745,2013,1.745,2014,1.625,2015,1.863,2016,1.745,2017,2.668,2018,1.745,2019,1.745,2020,1.625,2021,1.745,2022,1.745,2023,1.745,2024,1.745,2025,1.625,2026,1.745,2027,1.745,2028,1.745,2029,1.745,2030,1.745,2031,1.745,2032,2.079,2033,1.745,2034,1.528,2035,1.745,2036,1.218,2037,1.218,2038,1.745,2039,1.745,2040,1.745,2041,1.745,2042,1.745,2043,1.745,2044,2.152,2045,2.152,2046,2.152,2047,2.152,2048,2.152,2049,2.152,2050,2.152,2051,2.152,2052,2.152,2053,2.152,2054,2.152,2055,2.152,2056,2.152,2057,2.152,2058,2.152,2059,2.152,2060,2.152,2061,2.152,2062,2.152]],["title/injectables/DataService.html",[529,1.113,766,1.72]],["body/injectables/DataService.html",[3,0.118,4,0.108,9,0.098,17,1.141,19,1.383,25,0.128,26,0.614,30,0.941,33,1.029,37,0.768,39,0.969,40,0.008,41,0.546,42,0.199,43,0.721,45,1.011,46,0.812,50,1.004,53,0.25,54,0.397,56,0.138,57,0.014,59,0.812,87,1.036,179,0.866,186,0.529,219,0.006,220,0.006,223,0.461,224,3.492,228,2.233,231,1.335,255,1.087,276,1.615,366,1.947,529,1.698,542,3.145,545,1.38,550,2.298,552,2.361,605,0.76,620,4.459,643,2.239,688,2.048,722,2.025,750,1.942,759,3.689,766,2.623,775,2.974,782,4.176,787,1.977,831,4.176,832,4.161,838,3.518,874,3.401,1011,2.283,1031,3.04,1237,1.844,1311,4.264,1364,4.029,1462,5.251,1468,3.576,1574,3.796,1744,5.003,1745,4.054,1752,3.666,1770,1.931,1805,3.436,1892,4.054,1897,4.646,1904,2.653,1923,4.459,2015,3.666,2017,4.054,2020,5.251,2063,4.758,2064,5.64,2065,6.954,2066,6.954,2067,4.68,2068,6.954,2069,6.954,2070,6.162,2071,7.229,2072,8.158,2073,6.874,2074,6.954,2075,6.954,2076,6.954,2077,5.369,2078,5.369,2079,6.954,2080,5.369,2081,6.954,2082,3.614,2083,3.159,2084,3.159,2085,5.369,2086,7.713,2087,5.369,2088,5.369,2089,5.369,2090,5.369,2091,5.369,2092,3.442,2093,5.369,2094,5.369,2095,5.369,2096,6.954,2097,5.369,2098,5.369,2099,4.355,2100,5.369,2101,5.369,2102,6.954,2103,5.369,2104,5.369,2105,5.369,2106,5.369,2107,5.369,2108,5.369,2109,5.369]],["title/interfaces/DialogData.html",[118,0.084,1567,2.923]],["body/interfaces/DialogData.html",[0,0.138,2,1.173,3,0.114,4,0.105,9,0.095,13,2.112,14,1.055,15,1.882,17,0.769,18,0.736,20,1.408,21,0.786,22,2.225,23,0.786,24,2.225,25,0.124,26,0.601,27,1.357,28,2.286,29,3.716,35,2.839,36,2.995,40,0.008,42,0.177,46,1.148,49,0.579,53,0.269,54,0.384,55,1.598,56,0.175,57,0.013,58,1.827,59,1.218,60,1.437,61,2.35,63,3.59,81,3.473,87,0.8,112,1.007,118,0.139,119,1.055,120,0.977,156,1.034,182,1.034,219,0.006,220,0.006,223,0.446,231,1.166,232,2.059,242,2.419,244,1.843,246,3.251,247,3.364,249,2.112,250,2.419,251,1.96,252,2.35,255,1.058,279,2.386,305,3.434,310,1.225,366,1.531,378,3.058,406,2.74,407,2.568,408,2.491,423,3.058,462,2.837,513,4.175,526,1.378,545,0.803,554,3.34,558,2.419,559,3.187,599,1.243,608,2.059,638,1.745,716,2.651,724,3.058,736,4.216,750,1.145,766,2.864,775,3.004,787,2.507,788,2.187,789,2.167,809,2.236,813,1.564,826,2.286,830,2.839,833,1.707,865,2.646,969,5.166,983,2.35,984,2.631,990,4.836,991,3.854,1006,3.332,1007,2.167,1008,2.059,1009,2.167,1024,3.187,1026,3.332,1027,3.498,1029,3.332,1030,3.187,1031,2.942,1040,1.707,1041,3.716,1100,3.187,1211,1.914,1233,2.225,1289,3.59,1309,5.522,1402,2.942,1472,2.631,1489,3.716,1521,3.692,1551,3.692,1559,5.393,1560,3.692,1564,6.033,1565,4.606,1566,4.606,1567,4.868,1570,4.606,1572,4.606,1574,4.398,1575,4.216,1576,4.842,1577,4.606,1579,5.522,1580,4.175,1581,3.332,1582,5.522,1583,4.216,1584,3.498,1585,2.568,1586,4.606,1587,4.606,1588,4.606,1589,4.606,1590,4.606,1591,6.033,1592,6.033,1593,5.522,1594,3.924,1595,3.692,1596,4.606,1597,4.606,1598,4.606,1599,4.216,1600,4.606,1601,4.606,1602,4.606,1603,4.606,1604,4.606,1605,4.606,1606,4.606,1607,2.837,1608,3.187,1609,4.606,1610,4.606,1611,4.606,1612,4.606,1613,4.606,1614,4.836,1615,4.606,1616,3.498,1617,4.606,1618,3.058,1619,4.606,1620,4.606,1621,4.606,1622,4.606,1623,3.924,1624,4.606,1625,5.141,1626,4.582,1627,2.837]],["title/interfaces/DialogData-1.html",[118,0.07,813,1.144,1567,2.437]],["body/interfaces/DialogData-1.html",[0,0.136,3,0.126,4,0.115,9,0.105,13,2.321,14,1.16,15,2,17,0.845,18,0.808,20,1.482,21,0.864,22,2.445,23,0.864,24,2.445,25,0.136,26,0.639,27,0.962,28,3.182,35,3.017,36,2.512,40,0.008,42,0.194,43,0.737,46,1.201,49,0.696,53,0.235,54,0.422,55,1.756,56,0.186,57,0.014,58,2.007,60,1.579,80,2.658,87,0.851,89,3.583,118,0.105,182,1.136,183,1.548,186,0.867,194,1.756,204,1.099,219,0.006,220,0.006,231,1.047,236,3.234,242,2.658,246,3.097,249,2.321,251,2.155,252,2.583,255,0.704,279,2.765,288,1.113,310,0.922,312,1.647,366,1.627,423,3.361,526,1.514,605,0.563,792,3.662,823,3.591,837,4.982,863,2.94,922,2.914,1000,4.257,1026,3.662,1028,3.017,1029,5.523,1176,3.468,1239,2.738,1305,4.057,1420,3.367,1567,5.091,1594,6.504,1595,6.349,1623,4.313,1672,4.313,1840,2.512,1903,4.257,2110,4.313,2111,6.504,2112,7.037,2113,5.396,2114,6.411,2115,5.345,2116,7.037,2117,6.411,2118,5.641,2119,6.411,2120,4.313,2121,5.061,2122,5.061,2123,4.633,2124,5.061,2125,4.057,2126,5.061,2127,5.061,2128,5.061,2129,5.061,2130,4.633,2131,5.061,2132,3.503,2133,5.061,2134,2.914,2135,5.061,2136,5.061,2137,5.061,2138,5.061,2139,3.844]],["title/interfaces/FilterSelection.html",[118,0.084,2140,2.923]],["body/interfaces/FilterSelection.html",[0,0.138,3,0.13,4,0.119,9,0.108,14,1.197,15,2.04,17,0.872,18,0.834,21,0.892,23,0.892,25,0.141,26,0.652,27,0.993,40,0.008,41,0.395,42,0.177,49,0.643,50,1.102,51,0.911,53,0.257,54,0.435,56,0.19,57,0.015,59,1.116,60,1.63,87,0.868,94,1.149,115,1.433,118,0.135,138,0.581,152,1.173,194,1.612,219,0.006,220,0.006,228,2.37,244,1.627,255,0.727,288,1.149,310,0.951,313,2.913,366,1.326,384,2.666,427,3.218,512,1.774,526,1.563,534,1.531,536,3.968,537,2.458,541,2.666,544,2.478,553,3.891,573,3.108,605,0.581,612,3.218,614,3.108,677,4.968,681,3.469,805,3.338,809,1.936,818,3.968,900,3.338,1040,1.936,1099,1.936,1250,2.593,1400,3.469,1472,3.548,1474,3.78,1501,2.593,1507,3.819,1537,4.188,1876,3.615,2125,4.188,2134,3.007,2140,5.414,2141,4.188,2142,3.615,2143,4.188,2144,5.97,2145,6.058,2146,5.986,2147,5.986,2148,5.986,2149,6.535,2150,4.451,2151,4.968,2152,4.782,2153,4.781,2154,3.78,2155,4.451,2156,3.78,2157,5.723,2158,4.782,2159,4.782,2160,4.782,2161,4.782,2162,4.782,2163,4.451,2164,5.573,2165,4.782,2166,3.78,2167,4.782,2168,4.782,2169,3.615,2170,4.782,2171,4.782,2172,4.451,2173,3.968,2174,5.423,2175,4.451,2176,4.782,2177,4.782,2178,4.782,2179,4.782,2180,4.782,2181,4.782,2182,4.451,2183,4.782,2184,4.782,2185,4.782,2186,4.782,2187,5.986,2188,4.782,2189,4.782,2190,4.782,2191,4.188,2192,4.968]],["title/interfaces/FilterState.html",[118,0.084,2193,3.239]],["body/interfaces/FilterState.html",[3,0.157,4,0.143,9,0.13,25,0.17,26,0.73,40,0.008,42,0.198,53,0.244,56,0.213,115,1.173,118,0.13,219,0.007,220,0.007,526,1.886,538,2.051,1211,2.62,1805,3.516,2140,5.768,2142,4.363,2193,5.872,2194,5.77,2195,7.106,2196,7.972,2197,5.77,2198,7.326,2199,7.114,2200,7.114]],["title/components/FrameComponent.html",[0,0.078,125,0.907]],["body/components/FrameComponent.html",[0,0.144,1,0.876,2,0.783,3,0.093,4,0.085,5,1.126,6,0.971,7,0.951,8,0.913,9,0.078,11,0.841,16,0.841,17,1.427,18,1.36,19,0.841,20,0.712,21,0.895,23,0.895,25,0.101,26,0.523,27,1.447,30,0.801,33,0.625,37,0.753,39,0.663,40,0.008,41,0.555,42,0.163,43,0.523,45,0.679,46,0.895,50,1.277,51,1.204,53,0.245,54,0.312,56,0.109,57,0.011,62,1.252,78,1.671,85,2.661,87,0.696,88,0.712,92,0.951,93,1.177,94,1.153,95,0.727,96,1.631,97,0.951,98,1.958,99,0.858,100,0.742,101,1.023,102,1.227,103,0.876,104,0.951,105,0.876,106,0.858,107,0.951,108,0.876,109,0.951,110,0.824,111,0.841,112,0.938,113,0.858,114,0.824,115,0.976,116,1.536,117,0.841,118,0.078,119,0.858,120,0.97,121,0.876,122,0.876,123,0.79,124,0.951,125,1.472,126,0.951,127,0.876,128,0.951,129,0.876,130,0.951,131,0.858,132,0.951,133,0.858,134,0.951,135,0.612,136,0.951,137,0.858,138,0.416,139,0.951,140,0.876,141,0.951,142,0.876,143,1.536,144,0.876,145,0.951,146,0.876,147,1.536,148,0.876,149,0.951,150,0.894,151,0.951,152,0.841,153,0.951,154,0.876,155,0.951,156,0.841,157,0.807,158,0.951,159,0.876,160,1.278,161,1.331,162,0.876,163,0.951,164,0.841,165,0.497,166,0.951,167,0.858,168,0.876,169,0.932,170,0.876,171,0.951,172,0.858,173,0.858,174,0.841,175,0.951,176,0.858,177,0.951,178,0.807,179,0.682,180,0.841,181,0.951,182,0.841,183,1.153,184,0.858,185,0.876,186,0.583,187,0.824,188,0.668,189,0.876,190,0.876,191,1.718,192,0.951,193,0.876,194,0.807,195,0.951,196,0.876,197,0.951,198,0.824,199,0.858,200,0.876,201,1.487,202,0.951,203,0.876,204,1.147,205,0.824,206,0.858,207,0.951,208,0.841,209,0.951,210,0.841,211,0.951,212,0.824,213,0.951,214,0.824,215,0.951,216,0.824,217,0.894,218,0.951,219,0.005,220,0.005,223,0.363,262,1.557,263,2.515,269,1.967,271,1.81,276,1.272,288,0.824,310,0.955,312,1.219,350,3.003,496,1.557,534,1.098,537,1.763,544,2.293,549,3.019,550,2.534,553,4.107,566,2.603,569,2.468,596,2.307,599,1.416,605,0.416,608,2.931,614,3.121,681,2.488,688,1.245,702,2.345,813,2.343,819,5.245,898,4.204,903,1.202,960,6.001,1049,4.95,1063,2.468,1084,4.204,1099,2.43,1136,5.587,1171,1.557,1192,1.388,1194,3.167,1197,3.795,1198,3.601,1242,2.837,1250,2.603,1651,3.546,1666,3.375,1802,3.984,2153,4.57,2166,4.994,2201,3.746,2202,5.919,2203,5.245,2204,5.919,2205,4.469,2206,5.919,2207,7.399,2208,3.019,2209,7.399,2210,5.919,2211,5.245,2212,5.919,2213,8.072,2214,4.801,2215,5.919,2216,5.919,2217,4.469,2218,5.245,2219,5.919,2220,6.83,2221,5.919,2222,5.539,2223,6.83,2224,6.83,2225,5.919,2226,7.399,2227,3.746,2228,6.095,2229,4.227,2230,5.919,2231,7.399,2232,4.227,2233,5.919,2234,4.227,2235,5.245,2236,4.801,2237,5.245,2238,4.801,2239,5.245,2240,5.157,2241,4.227,2242,5.919,2243,4.227,2244,4.227,2245,4.227,2246,3.192,2247,3.192,2248,4.469,2249,5.919,2250,4.227,2251,4.227,2252,4.227,2253,4.227,2254,4.227,2255,4.227,2256,7.399,2257,8.287,2258,5.157,2259,3.351,2260,2.71,2261,4.227,2262,3.746,2263,3.429,2264,4.227,2265,4.227,2266,5.919,2267,4.227,2268,3.429,2269,3.003]],["title/classes/GraphComponent.html",[57,0.012,1207,2.185]],["body/classes/GraphComponent.html",[0,0.146,2,1.114,3,0.092,4,0.084,9,0.076,25,0.099,26,0.518,30,0.793,37,0.704,39,0.656,40,0.008,41,0.564,42,0.191,43,0.518,45,0.844,49,0.56,53,0.173,56,0.189,57,0.019,87,0.97,118,0.142,120,0.934,135,0.981,138,0.792,186,0.411,219,0.005,220,0.005,223,0.358,228,2.867,231,1.24,255,1.121,305,2.65,307,1.998,512,2.735,526,2.397,538,1.202,545,1.356,569,1.738,572,2.207,592,2.033,605,0.873,632,1.833,688,2.647,702,2.685,717,1.535,725,3.792,749,4.443,750,1.292,805,2.36,860,4.6,862,2.36,886,2.65,953,2.198,971,1.885,1011,1.369,1062,2.317,1207,3.714,1208,3.249,1210,3.851,1211,2.853,1237,2.328,1238,1.94,1246,1.611,1257,2.198,1420,1.94,1473,3.325,1576,4.386,1581,2.672,1585,3.349,1618,2.453,1627,3.199,1752,2.198,1770,1.499,1775,3.457,1810,4.928,1840,1.833,1973,1.611,2036,2.36,2037,3.837,2067,2.805,2270,4.729,2271,2.672,2272,4.753,2273,5.193,2274,4.168,2275,4.168,2276,4.168,2277,4.163,2278,5.765,2279,4.168,2280,4.949,2281,5.062,2282,4.163,2283,4.168,2284,4.168,2285,2.126,2286,2.961,2287,4.163,2288,2.961,2289,2.961,2290,5.504,2291,2.672,2292,2.805,2293,5.215,2294,5.708,2295,4.562,2296,2.805,2297,2.672,2298,2.805,2299,4.386,2300,5.223,2301,2.805,2302,5.215,2303,5.504,2304,5.152,2305,2.556,2306,2.672,2307,5.215,2308,4.157,2309,3.594,2310,2.961,2311,2.672,2312,2.961,2313,3.945,2314,2.805,2315,2.672,2316,2.961,2317,2.961,2318,2.961,2319,2.961,2320,2.961,2321,2.672,2322,2.961,2323,2.556,2324,2.961,2325,2.961,2326,2.961,2327,2.961,2328,2.961,2329,2.961,2330,4.163,2331,5.504,2332,4.562,2333,3.758,2334,3.945,2335,2.961,2336,3.594,2337,2.961,2338,2.961,2339,2.961,2340,2.961,2341,2.961,2342,2.961,2343,2.961,2344,2.961,2345,2.961,2346,4.163,2347,4.346,2348,4.814,2349,4.814,2350,2.36,2351,2.961,2352,2.961,2353,2.36,2354,2.36,2355,2.453,2356,4.562,2357,5.432,2358,3.945,2359,4.814,2360,4.163,2361,2.961,2362,2.961,2363,2.961,2364,2.961,2365,4.163,2366,2.961,2367,2.961,2368,2.961,2369,2.961,2370,2.961,2371,2.961,2372,2.961,2373,2.961,2374,2.961,2375,2.961,2376,2.961,2377,2.961,2378,2.961,2379,2.961,2380,2.961,2381,4.562,2382,2.672,2383,4.163,2384,3.945,2385,2.961,2386,2.961,2387,2.961,2388,2.961,2389,2.961,2390,2.961,2391,2.961,2392,2.961,2393,4.163,2394,2.961,2395,2.961,2396,2.805,2397,2.961,2398,2.805,2399,2.36,2400,4.814,2401,2.961,2402,2.961,2403,2.961,2404,2.961,2405,2.672,2406,2.961,2407,2.961,2408,2.961,2409,2.961,2410,2.961,2411,2.961,2412,2.961,2413,2.961]],["title/interfaces/GraphData.html",[118,0.084,2299,2.489]],["body/interfaces/GraphData.html",[0,0.142,2,1.165,3,0.094,4,0.086,9,0.078,25,0.102,26,0.525,40,0.008,41,0.497,42,0.194,45,0.682,49,0.522,53,0.176,56,0.191,57,0.019,87,0.976,118,0.143,120,0.938,135,1.074,138,0.797,186,0.419,219,0.005,220,0.005,223,0.365,228,2.83,231,1.261,255,1.124,305,2.689,307,2.039,512,2.713,526,2.446,538,1.227,545,1.33,569,1.774,572,2.215,592,2.051,605,0.876,632,1.871,688,2.707,702,2.715,725,3.626,749,4.466,750,1.31,805,2.409,860,4.262,862,2.409,886,2.689,953,2.243,971,1.924,1011,1.397,1062,2.332,1207,3.285,1208,3.285,1210,2.039,1211,2.875,1237,2.354,1238,1.98,1246,1.645,1257,2.243,1420,1.98,1473,3.356,1576,4.415,1581,2.728,1585,3.387,1618,2.504,1627,3.245,1752,2.243,1770,1.531,1775,3.785,1810,4.96,1840,1.871,1973,1.645,2036,2.409,2037,3.88,2067,2.864,2270,2.504,2271,2.728,2277,3.022,2278,4.994,2280,4.613,2281,4.96,2282,3.022,2285,2.17,2286,3.022,2287,4.223,2288,3.022,2289,3.022,2290,5.897,2291,2.728,2292,2.864,2293,5.255,2294,5.745,2295,4.613,2296,2.864,2297,3.812,2298,4.002,2299,4.532,2300,5.897,2301,2.864,2302,5.701,2303,6.016,2304,5.431,2305,2.609,2306,2.728,2307,5.255,2308,4.203,2309,3.646,2310,3.022,2311,2.728,2312,3.022,2313,4.002,2314,2.864,2315,2.728,2316,3.022,2317,3.022,2318,3.022,2319,3.022,2320,3.022,2321,2.728,2322,3.022,2323,2.609,2324,3.022,2325,3.022,2326,3.022,2327,3.022,2328,3.022,2329,3.022,2330,4.223,2331,5.546,2332,4.613,2333,3.812,2334,4.002,2335,3.022,2336,3.646,2337,3.022,2338,3.022,2339,3.022,2340,3.022,2341,3.022,2342,3.022,2343,3.022,2344,3.022,2345,3.022,2346,4.223,2347,4.394,2348,4.868,2349,4.868,2350,2.409,2351,3.022,2352,3.022,2353,2.409,2354,2.409,2355,2.504,2356,4.613,2357,5.451,2358,4.002,2359,4.868,2360,4.223,2361,3.022,2362,3.022,2363,3.022,2364,3.022,2365,4.223,2366,3.022,2367,3.022,2368,3.022,2369,3.022,2370,3.022,2371,3.022,2372,3.022,2373,3.022,2374,3.022,2375,3.022,2376,3.022,2377,3.022,2378,3.022,2379,3.022,2380,3.022,2381,4.613,2382,2.728,2383,4.223,2384,4.002,2385,3.022,2386,3.022,2387,3.022,2388,3.022,2389,3.022,2390,3.022,2391,3.022,2392,3.022,2393,4.223,2394,3.022,2395,3.022,2396,2.864,2397,3.022,2398,2.864,2399,2.409,2400,4.868,2401,3.022,2402,3.022,2403,3.022,2404,3.022,2405,2.728,2406,3.022,2407,3.022,2408,3.022,2409,3.022,2410,3.022,2411,3.022,2412,3.022,2413,3.022]],["title/classes/GraphDataFactory.html",[57,0.012,2305,2.796]],["body/classes/GraphDataFactory.html",[0,0.144,2,1.114,3,0.092,4,0.084,9,0.076,25,0.099,30,0.792,37,0.531,39,0.655,40,0.008,41,0.538,42,0.185,43,0.517,45,0.843,49,0.516,53,0.173,56,0.189,57,0.019,87,0.97,118,0.142,120,0.943,135,1.063,138,0.813,186,0.41,219,0.005,220,0.005,223,0.357,228,2.866,231,1.281,255,1.121,305,2.646,307,1.993,512,2.704,526,2.397,538,1.199,545,1.323,569,1.734,572,2.206,592,2.031,605,0.872,632,2.573,688,2.608,702,2.682,717,1.532,725,3.79,749,4.514,750,1.289,805,2.354,860,4.226,862,3.312,886,2.646,953,2.193,971,1.881,1011,1.365,1062,2.315,1207,3.244,1208,3.244,1210,3.244,1211,3.038,1237,2.325,1238,1.935,1246,1.607,1257,2.193,1420,1.935,1473,3.322,1576,4.383,1581,2.666,1585,3.345,1618,3.443,1627,3.194,1752,2.193,1770,2.105,1775,3.949,1810,4.924,1840,1.829,1973,1.607,2036,3.312,2037,3.832,2067,3.938,2270,3.983,2271,2.666,2277,2.954,2278,4.944,2280,4.556,2281,4.924,2282,2.954,2285,2.121,2286,2.954,2287,5.218,2288,2.954,2289,2.954,2290,5.499,2291,2.666,2292,2.799,2293,5.21,2294,5.704,2295,4.556,2296,2.799,2297,2.666,2298,2.799,2299,4.833,2300,5.218,2301,2.799,2302,5.21,2303,5.499,2304,5.148,2305,3.588,2306,3.751,2307,5.668,2308,4.924,2309,4.505,2310,4.156,2311,3.751,2312,4.156,2313,4.944,2314,3.938,2315,3.751,2316,4.156,2317,2.954,2318,2.954,2319,2.954,2320,2.954,2321,3.751,2322,4.156,2323,3.588,2324,4.156,2325,2.954,2326,2.954,2327,2.954,2328,2.954,2329,2.954,2330,4.156,2331,5.499,2332,4.556,2333,3.751,2334,3.938,2335,2.954,2336,3.588,2337,2.954,2338,2.954,2339,2.954,2340,2.954,2341,2.954,2342,2.954,2343,2.954,2344,2.954,2345,2.954,2346,4.156,2347,4.34,2348,4.808,2349,4.808,2350,2.354,2351,2.954,2352,2.954,2353,2.354,2354,2.354,2355,2.447,2356,4.556,2357,5.43,2358,3.938,2359,4.808,2360,4.156,2361,2.954,2362,2.954,2363,2.954,2364,2.954,2365,4.156,2366,2.954,2367,2.954,2368,2.954,2369,2.954,2370,2.954,2371,2.954,2372,2.954,2373,2.954,2374,2.954,2375,2.954,2376,2.954,2377,2.954,2378,2.954,2379,2.954,2380,2.954,2381,4.556,2382,2.666,2383,4.156,2384,3.938,2385,2.954,2386,2.954,2387,2.954,2388,2.954,2389,2.954,2390,2.954,2391,2.954,2392,2.954,2393,4.156,2394,2.954,2395,2.954,2396,2.799,2397,2.954,2398,2.799,2399,2.354,2400,4.808,2401,2.954,2402,2.954,2403,2.954,2404,2.954,2405,2.666,2406,2.954,2407,2.954,2408,2.954,2409,2.954,2410,2.954,2411,2.954,2412,2.954,2413,2.954,2414,5.851,2415,5.851,2416,4.159,2417,4.159]],["title/classes/GraphInterface.html",[57,0.012,1208,2.185]],["body/classes/GraphInterface.html",[0,0.141,2,1.114,3,0.092,4,0.084,9,0.076,25,0.099,26,0.517,30,0.792,37,0.749,39,0.655,40,0.008,41,0.564,42,0.193,43,0.517,45,0.843,49,0.56,53,0.173,56,0.189,57,0.019,87,0.97,118,0.142,120,0.934,135,0.98,138,0.763,186,0.41,219,0.005,220,0.005,228,2.817,231,1.239,255,1.121,305,2.646,307,1.993,512,2.734,526,2.397,538,1.199,545,1.356,569,1.734,572,2.206,592,2.031,605,0.872,632,1.829,688,2.646,702,2.682,717,1.532,725,3.79,749,4.44,750,1.289,805,2.354,860,4.226,862,2.354,886,2.646,953,2.193,971,1.881,1011,1.365,1062,2.315,1207,3.244,1208,3.71,1210,4.036,1211,2.851,1237,2.325,1238,1.935,1246,1.607,1257,2.193,1420,1.935,1473,3.322,1576,4.383,1581,2.666,1585,3.345,1618,2.447,1627,3.194,1752,2.193,1770,1.496,1775,3.453,1810,4.924,1840,1.829,1973,1.607,2036,2.354,2037,3.832,2067,2.799,2270,4.956,2271,2.666,2272,4.746,2273,5.185,2277,2.954,2278,4.944,2280,4.556,2281,4.924,2282,2.954,2285,2.121,2286,2.954,2287,4.156,2288,2.954,2289,2.954,2290,5.499,2291,2.666,2292,2.799,2293,5.21,2294,5.704,2295,4.556,2296,2.799,2297,2.666,2298,2.799,2299,4.383,2300,5.218,2301,2.799,2302,5.21,2303,5.499,2304,5.148,2305,2.55,2306,2.666,2307,5.21,2308,4.151,2309,3.588,2310,2.954,2311,2.666,2312,2.954,2313,3.938,2314,2.799,2315,2.666,2316,2.954,2317,2.954,2318,2.954,2319,2.954,2320,2.954,2321,2.666,2322,2.954,2323,2.55,2324,2.954,2325,2.954,2326,2.954,2327,2.954,2328,2.954,2329,2.954,2330,4.156,2331,5.499,2332,4.556,2333,3.751,2334,3.938,2335,2.954,2336,3.588,2337,2.954,2338,2.954,2339,2.954,2340,2.954,2341,2.954,2342,2.954,2343,2.954,2344,2.954,2345,2.954,2346,4.156,2347,4.34,2348,4.808,2349,4.808,2350,2.354,2351,2.954,2352,2.954,2353,2.354,2354,2.354,2355,2.447,2356,5.668,2357,5.43,2358,3.938,2359,5.499,2360,5.218,2361,4.156,2362,2.954,2363,2.954,2364,2.954,2365,4.156,2366,2.954,2367,2.954,2368,2.954,2369,4.156,2370,2.954,2371,2.954,2372,2.954,2373,2.954,2374,2.954,2375,2.954,2376,2.954,2377,2.954,2378,2.954,2379,2.954,2380,2.954,2381,4.556,2382,2.666,2383,4.156,2384,3.938,2385,2.954,2386,2.954,2387,2.954,2388,2.954,2389,2.954,2390,2.954,2391,2.954,2392,2.954,2393,4.156,2394,2.954,2395,2.954,2396,2.799,2397,2.954,2398,2.799,2399,2.354,2400,4.808,2401,2.954,2402,2.954,2403,2.954,2404,2.954,2405,2.666,2406,2.954,2407,2.954,2408,2.954,2409,2.954,2410,2.954,2411,2.954,2412,2.954,2413,2.954,2418,4.159,2419,4.159,2420,4.159,2421,4.159,2422,4.159,2423,4.159,2424,4.159,2425,4.159]],["title/classes/GraphIssue.html",[57,0.012,2304,2.923]],["body/classes/GraphIssue.html",[0,0.14,2,1.109,3,0.09,4,0.083,9,0.075,25,0.098,26,0.511,30,0.783,37,0.726,39,0.648,40,0.008,41,0.535,42,0.192,43,0.645,45,0.837,49,0.512,53,0.171,56,0.188,57,0.018,87,0.966,118,0.141,120,0.955,135,0.972,138,0.758,186,0.404,219,0.005,220,0.005,223,0.497,228,2.897,231,1.235,255,1.118,305,3.481,307,1.963,512,2.742,526,2.391,538,1.181,545,1.365,569,1.708,572,2.2,592,2.017,605,0.87,632,1.802,688,2.601,702,3.05,717,1.509,725,3.78,749,4.56,750,1.276,805,2.319,860,4.483,862,2.319,886,2.618,953,2.16,971,1.853,1011,1.345,1062,2.304,1207,3.218,1208,3.218,1210,3.937,1211,2.943,1237,2.306,1238,1.906,1246,1.583,1257,2.16,1420,1.906,1473,3.3,1576,4.657,1581,2.627,1585,3.318,1618,2.411,1627,3.16,1752,2.16,1770,1.474,1775,3.425,1810,4.9,1840,1.802,1973,1.583,2036,2.319,2037,3.801,2067,2.757,2270,4.833,2271,2.627,2272,4.696,2277,2.91,2278,4.911,2280,5.181,2281,5.145,2282,2.91,2285,2.09,2286,2.91,2287,4.112,2288,2.91,2289,2.91,2290,5.468,2291,2.627,2292,2.757,2293,5.378,2294,5.676,2295,4.519,2296,2.757,2297,2.627,2298,2.757,2299,4.362,2300,5.183,2301,2.757,2302,5.181,2303,5.468,2304,5.47,2305,2.512,2306,2.627,2307,5.181,2308,4.118,2309,3.55,2310,2.91,2311,2.627,2312,2.91,2313,3.897,2314,2.757,2315,2.627,2316,2.91,2317,2.91,2318,2.91,2319,2.91,2320,2.91,2321,2.627,2322,2.91,2323,2.512,2324,2.91,2325,2.91,2326,2.91,2327,2.91,2328,2.91,2329,2.91,2330,4.112,2331,5.468,2332,4.519,2333,3.712,2334,3.897,2335,2.91,2336,3.55,2337,2.91,2338,2.91,2339,2.91,2340,2.91,2341,2.91,2342,2.91,2343,2.91,2344,2.91,2345,2.91,2346,4.112,2347,4.305,2348,4.769,2349,4.769,2350,2.319,2351,2.91,2352,2.91,2353,2.319,2354,2.319,2355,2.411,2356,4.519,2357,5.498,2358,3.897,2359,4.769,2360,4.112,2361,2.91,2362,2.91,2363,2.91,2364,2.91,2365,4.112,2366,2.91,2367,2.91,2368,2.91,2369,2.91,2370,2.91,2371,2.91,2372,2.91,2373,2.91,2374,2.91,2375,2.91,2376,2.91,2377,2.91,2378,2.91,2379,2.91,2380,2.91,2381,5.378,2382,4.305,2383,5.183,2384,4.911,2385,4.112,2386,4.112,2387,2.91,2388,2.91,2389,2.91,2390,2.91,2391,4.112,2392,2.91,2393,4.112,2394,2.91,2395,2.91,2396,2.757,2397,2.91,2398,2.757,2399,2.319,2400,4.769,2401,2.91,2402,2.91,2403,2.91,2404,2.91,2405,2.627,2406,2.91,2407,2.91,2408,2.91,2409,2.91,2410,2.91,2411,2.91,2412,2.91,2413,2.91,2426,5.79,2427,4.097,2428,4.097,2429,4.097,2430,4.097,2431,4.097,2432,4.097]],["title/modules/GraphQLModule.html",[324,3.069,333,3.069]],["body/modules/GraphQLModule.html",[3,0.119,4,0.109,9,0.099,11,1.537,27,0.907,40,0.008,53,0.271,54,0.398,56,0.21,57,0.014,87,0.819,106,1.718,112,0.648,179,0.869,201,1.028,204,0.745,219,0.006,220,0.006,228,1.73,255,1.144,296,2.661,310,1.124,326,4.273,333,4.69,339,4.066,344,5.261,376,6.174,377,3.825,397,3.302,419,6.174,420,3.825,421,6.748,439,4.216,478,7.028,482,3.453,489,4.368,490,5.199,519,3.825,524,4.368,572,2.159,592,2.135,605,0.833,623,4.42,634,1.967,638,1.808,668,4.273,669,3.945,673,4.066,686,3.625,687,4.066,750,1.8,779,4.368,806,4.772,924,4.066,1011,1.768,1040,2.682,1191,2.245,1233,2.305,1234,3.803,1406,3.825,1421,3.443,1447,2.839,1552,5.497,1752,2.839,1766,3.825,1774,3.825,1840,2.369,1902,3.453,2064,4.368,2399,3.945,2433,4.368,2434,6.968,2435,6.968,2436,6.968,2437,5.693,2438,6.968,2439,6.968,2440,7.724,2441,5.385,2442,8.937,2443,5.385,2444,5.385,2445,4.772,2446,5.385,2447,5.385,2448,4.772,2449,4.772,2450,6.861,2451,5.385,2452,4.368,2453,4.772,2454,4.772,2455,4.772,2456,4.772,2457,6.265,2458,6.265,2459,4.69,2460,4.772,2461,4.368,2462,4.772,2463,4.772,2464,4.772,2465,4.772,2466,5.651,2467,6.265,2468,4.368,2469,4.368,2470,4.368,2471,4.368,2472,4.368,2473,4.772,2474,7.495,2475,4.772,2476,4.772,2477,3.453,2478,7.724,2479,8.665,2480,5.385,2481,6.968,2482,4.368,2483,5.385,2484,4.467,2485,5.385,2486,5.385,2487,5.385,2488,5.385,2489,5.385,2490,5.385,2491,5.385,2492,4.772,2493,5.385,2494,5.385,2495,5.385,2496,5.385,2497,5.385,2498,7.724,2499,6.174,2500,5.385,2501,4.772,2502,5.385,2503,5.385,2504,6.968,2505,6.968,2506,5.385,2507,4.772,2508,5.385,2509,5.385,2510,5.385,2511,5.385,2512,4.772,2513,6.968,2514,6.968]],["title/modules/GraphsModule.html",[324,3.069,334,3.069]],["body/modules/GraphsModule.html",[3,0.092,4,0.085,9,0.077,18,0.833,40,0.008,53,0.284,54,0.31,55,1.289,56,0.151,57,0.015,81,3.002,99,1.635,101,0.692,102,1.22,105,1.669,115,0.691,120,0.785,122,1.838,127,1.838,133,1.635,135,1.302,137,1.827,138,0.58,140,1.838,142,1.838,144,1.838,146,1.838,148,1.838,150,1.876,152,1.602,170,1.838,172,1.635,174,1.602,178,1.693,185,1.838,187,1.569,188,0.662,203,1.838,206,1.8,208,1.764,210,1.764,219,0.005,220,0.005,222,2.978,223,0.36,251,1.581,285,3.401,286,4.443,287,2.978,313,2.072,324,3.961,326,2.571,327,3.961,334,6.515,335,4.443,336,2.978,338,4.773,339,3.166,341,5.215,342,6.025,343,5.215,344,4.443,347,5.215,348,3.715,351,6.025,352,3.715,353,6.025,354,4.18,355,6.025,356,3.715,357,6.025,358,6.025,359,3.715,360,6.025,361,3.715,362,3.961,363,5.215,364,5.215,365,3.715,368,4.773,378,2.467,381,5.215,382,5.215,384,2.661,398,5.215,400,3.401,408,2.82,409,6.025,410,3.715,411,6.025,412,5.215,413,3.331,414,6.025,415,3.715,425,5.215,426,4.773,427,2.289,428,5.215,429,2.571,430,3.401,449,3.715,461,5.215,462,3.711,465,4.773,489,3.401,490,2.822,491,3.715,498,3.166,499,3.715,502,3.166,503,2.978,504,3.715,524,4.773,786,3.401,834,2.688,835,2.688,1090,1.581,1091,2.978,1212,2.009,1583,3.401,1636,3.401,1647,3.401,1802,3.961,1909,4.18,2142,2.571,2197,3.401,2515,3.715,2516,3.715,2517,3.715,2518,4.193,2519,5.885,2520,5.885,2521,5.885,2522,3.166,2523,4.193,2524,5.885,2525,4.773,2526,3.166,2527,4.18,2528,5.885,2529,4.193,2530,5.885,2531,4.193,2532,5.885,2533,3.166,2534,6.799,2535,4.193,2536,4.193,2537,4.193,2538,5.885,2539,3.609,2540,7.765,2541,3.401,2542,4.193,2543,5.885,2544,4.193,2545,3.401,2546,4.193,2547,3.401,2548,3.401,2549,4.193,2550,5.885,2551,4.193,2552,4.193,2553,4.193,2554,3.401,2555,4.193,2556,4.193,2557,5.885,2558,4.193,2559,5.885,2560,4.193,2561,4.193,2562,3.401,2563,4.193,2564,3.401,2565,4.193,2566,4.193,2567,3.715]],["title/interfaces/InterfaceNode.html",[118,0.084,1215,2.489]],["body/interfaces/InterfaceNode.html",[0,0.139,3,0.117,4,0.164,5,1.138,9,0.127,25,0.127,26,0.61,40,0.008,42,0.201,49,0.714,53,0.24,56,0.178,57,0.017,87,0.902,101,0.624,112,0.639,118,0.169,120,0.735,135,0.768,138,0.68,165,1.015,186,0.83,188,0.839,219,0.006,220,0.006,231,1.176,255,0.655,279,2.41,291,4.161,311,3.124,512,1.597,526,1.408,538,1.531,545,1.334,592,2.463,605,0.878,619,1.866,717,1.955,722,2.003,814,2.273,833,1.743,903,1.809,949,3.256,1062,1.99,1063,3.387,1066,3.692,1067,3.478,1090,2.003,1194,3.284,1202,4.514,1203,2.401,1204,3.006,1205,4.797,1206,5.172,1207,3.677,1208,3.309,1209,2.898,1210,2.545,1211,3.282,1212,3.309,1213,2.708,1214,2.799,1215,4.434,1216,4.283,1217,4.514,1218,3.256,1219,3.256,1220,3.256,1221,3.256,1222,3.256,1223,3.256,1224,3.256,1225,3.256,1226,3.213,1227,3.256,1228,3.256,1229,4.234,1230,3.677,1231,3.124,1232,3.124,1233,2.273,1234,3.768,1235,3.404,1236,3.404,1237,1.824,1238,2.471,1239,2.545,1240,3.256,1241,2.898,1242,2.545,1243,2.898,1244,3.256,1245,3.404,1246,2.052,1247,3.404,1248,2.708,1249,3.404,1250,2.335,1251,3.404,1252,2.898,1253,3.404,1254,3.256,1255,3.404,1256,4.343,1257,2.799,1258,3.006,1259,2.545,1260,4.767,1261,3.404,1262,3.404,1263,3.404,1264,4.062,1265,3.404,1266,4.426,1267,3.404,1268,3.404,1269,3.404,1270,3.256,1271,1.955,1272,3.908,1273,4.919,1274,3.404,1275,3.404,1276,4.426,1277,3.404,1278,4.426,1279,4.426,1280,3.404,1281,3.404,1282,4.187,1283,4.426,1284,3.256,1285,4.234,1286,4.426,1287,3.404,1288,4.599,1289,3.64,1290,3.404,1291,3.256,1292,3.404,1293,3.404,1294,3.404,1295,3.256,1296,4.062,1297,3.256,1298,2.898,1299,3.256,1300,2.799]],["title/injectables/InterfaceStoreService.html",[529,1.113,1549,2.923]],["body/injectables/InterfaceStoreService.html",[0,0.098,2,0.96,3,0.126,4,0.116,9,0.146,25,0.137,27,1.585,30,0.982,33,0.849,37,0.8,39,0.986,40,0.008,41,0.606,42,0.194,43,0.778,45,0.99,49,0.723,53,0.247,54,0.424,56,0.148,57,0.015,59,1.265,112,0.874,219,0.006,220,0.006,223,0.74,224,3.107,231,1.05,255,0.895,276,1.727,288,1.118,526,1.924,529,1.772,534,1.49,537,2.393,542,3.282,544,2.897,545,1.293,552,2.524,605,0.85,643,2.393,688,1.69,723,1.865,815,3.961,830,2.393,1028,3.026,1037,5.886,1065,3.892,1233,3.107,1242,3.478,1303,3.68,1341,5.086,1345,5.086,1349,5.086,1367,6.431,1376,7.411,1381,6.431,1463,3.377,1549,4.653,1770,2.61,2003,4.885,2285,2.928,2568,7.928,2569,7.257,2570,7.257,2571,5.886,2572,4.45,2573,5.48,2574,7.257,2575,7.257,2576,7.257,2577,5.739,2578,8.363,2579,7.959,2580,8.363,2581,7.959,2582,8.363,2583,7.411,2584,8.363,2585,8.363,2586,5.739,2587,7.257,2588,6.431,2589,8.363,2590,5.739,2591,6.431,2592,7.257,2593,5.739,2594,7.257,2595,7.411,2596,7.257,2597,7.257,2598,5.739,2599,5.739,2600,4.334,2601,5.739,2602,5.739,2603,5.739]],["title/components/IssueCategoryComponent.html",[0,0.078,127,0.945]],["body/components/IssueCategoryComponent.html",[0,0.138,1,1.095,2,0.91,3,0.116,4,0.107,5,0.871,6,1.213,7,1.188,8,1.14,9,0.097,11,1.051,16,1.051,17,1.439,18,1.373,19,1.051,20,0.889,21,1.041,23,1.041,25,0.126,37,0.48,40,0.008,41,0.563,42,0.116,53,0.203,54,0.39,56,0.136,57,0.013,62,1.456,88,0.889,92,1.188,93,1.369,94,1.341,95,0.908,96,1.787,97,1.188,98,2.042,99,1.073,100,0.928,101,1.046,102,1.426,103,1.095,104,1.188,105,1.095,106,1.073,107,1.188,108,1.095,109,1.188,110,1.029,111,1.051,112,1.012,113,1.073,114,1.029,115,1.134,116,1.721,117,1.051,118,0.097,119,1.073,120,1.012,121,1.095,122,1.095,123,0.988,124,1.188,125,1.051,126,1.188,127,1.68,128,1.188,129,1.095,130,1.188,131,1.073,132,1.188,133,1.073,134,1.188,135,0.764,136,1.188,137,1.073,138,0.52,139,1.188,140,1.095,141,1.188,142,1.095,143,1.721,144,1.095,145,1.188,146,1.095,147,1.721,148,1.095,149,1.188,150,1.117,151,1.188,152,1.051,153,1.188,154,1.095,155,1.188,156,1.051,157,1.008,158,1.188,159,1.095,160,1.486,161,1.548,162,1.095,163,1.188,164,1.051,165,0.621,166,1.188,167,1.073,168,1.095,169,1.164,170,1.095,171,1.188,172,1.073,173,1.073,174,1.051,175,1.188,176,1.073,177,1.188,178,1.008,179,0.852,180,1.051,181,1.188,182,1.051,183,1.341,184,1.073,185,1.095,186,0.678,187,1.029,188,0.834,189,1.095,190,1.095,191,1.095,192,1.188,193,1.095,194,1.008,195,1.188,196,1.095,197,1.188,198,1.029,199,1.073,200,1.095,201,1.008,202,1.188,203,1.095,204,0.731,205,1.029,206,1.073,207,1.188,208,1.051,209,1.188,210,1.051,211,1.188,212,1.029,213,1.188,214,1.029,215,1.188,216,1.029,217,1.117,218,1.188,219,0.006,220,0.006,271,2.261,305,3.97,306,3.628,307,3.298,308,5.195,723,1.612,763,2.534,788,1.696,809,1.734,830,2.202,903,1.397,1171,1.945,1173,2.389,1174,2.61,1176,2.532,1184,3.108,1188,2.785,1190,3.026,1191,2.202,1192,1.734,1211,2.818,1271,1.945,1544,2.99,1628,3.628,2208,2.694,2564,5.581,2604,4.631,2605,4.68,2606,7.653,2607,6.881,2608,5.282,2609,3.386,2610,3.988,2611,2.883,2612,4.68]],["title/components/IssueContentsComponent.html",[0,0.078,129,0.945]],["body/components/IssueContentsComponent.html",[0,0.134,1,0.804,2,0.737,3,0.085,4,0.078,5,0.64,6,0.891,7,0.873,8,0.838,9,0.071,11,0.772,14,1.131,15,1.801,16,0.772,17,1.423,18,1.356,19,0.772,20,0.654,21,0.842,23,0.842,25,0.093,26,0.492,27,1.515,30,0.754,33,0.574,37,0.751,39,0.435,40,0.008,41,0.526,42,0.157,43,0.343,45,0.748,46,1.187,49,0.425,50,0.726,51,0.6,53,0.244,54,0.287,56,0.1,57,0.01,60,1.073,61,2.519,62,1.179,78,1.096,81,1.98,88,1.418,91,2.344,92,0.873,93,1.108,94,1.086,95,0.667,96,1.569,97,0.873,98,1.923,99,0.788,100,0.682,101,1.005,102,1.155,103,0.804,104,0.873,105,0.804,106,0.788,107,0.873,108,0.804,109,0.873,110,0.756,111,0.772,112,0.908,113,0.788,114,1.086,115,0.918,116,1.466,117,0.772,118,0.071,119,0.788,120,1.017,121,0.804,122,0.804,123,0.726,124,0.873,125,0.772,126,0.873,127,0.804,128,0.873,129,1.476,130,0.873,131,0.788,132,0.873,133,0.788,134,0.873,135,0.562,136,0.873,137,0.788,138,0.382,139,0.873,140,0.804,141,0.873,142,0.804,143,1.466,144,0.804,145,0.873,146,0.804,147,1.466,148,0.804,149,0.873,150,0.821,151,0.873,152,0.772,153,0.873,154,0.804,155,0.873,156,1.296,157,0.741,158,0.873,159,0.804,160,1.538,161,1.253,162,0.804,163,0.873,164,0.772,165,0.655,166,0.873,167,0.788,168,0.804,169,0.855,170,0.804,171,0.873,172,0.788,173,0.788,174,0.772,175,0.873,176,0.788,177,0.873,178,0.741,179,0.626,180,0.772,181,0.873,182,0.772,183,1.086,184,0.788,185,0.804,186,0.549,187,0.756,188,1.191,189,0.804,190,0.804,191,0.804,192,0.873,193,0.804,194,1.244,195,0.873,196,0.804,197,0.873,198,0.756,199,1.446,200,0.804,201,1.359,202,0.873,203,0.804,204,0.771,205,0.756,206,0.788,207,0.873,208,0.772,209,0.873,210,0.772,211,0.873,212,0.756,213,0.873,214,0.756,215,0.873,216,0.756,217,0.821,218,0.873,219,0.005,220,0.005,223,0.333,230,3.75,231,0.806,241,1.707,244,1.436,262,1.429,269,1.806,271,2.79,279,1.219,288,0.756,310,1.052,317,3.572,378,4.957,512,1.676,534,1.008,545,0.861,546,2.189,614,3.755,636,2.757,675,2.38,692,3.148,723,1.527,742,2.38,750,1.228,760,2.582,763,2.052,765,2.38,766,2.961,782,3.519,784,2.717,787,2.4,788,1.789,789,1.618,790,1.86,800,1.538,803,4.037,809,1.274,813,1.168,826,1.707,830,2.323,831,2.753,832,1.98,833,1.274,865,2.14,881,3.439,896,3.572,903,1.86,952,2.118,972,7.299,989,2.284,991,4.031,1000,3.278,1001,2.757,1003,3.572,1011,2.338,1020,2.757,1024,2.38,1066,2.648,1069,2.893,1070,3.278,1099,1.274,1171,2.891,1173,3.22,1174,2.753,1175,3.324,1176,3.614,1184,2.284,1188,3.755,1190,2.866,1191,1.618,1192,2.655,1197,2.488,1271,2.623,1483,3.572,1540,3.557,1544,2.197,1632,2.323,1633,1.98,1651,1.86,1660,2.842,1666,2.753,1673,2.488,1903,2.284,2205,4.206,2208,1.98,2263,4.519,2268,3.148,2269,2.757,2611,3.887,2612,3.439,2613,3.439,2614,4.206,2615,5.058,2616,6.517,2617,5.571,2618,6.517,2619,6.517,2620,7.121,2621,6.31,2622,7.121,2623,5.571,2624,3.881,2625,3.881,2626,3.881,2627,4.936,2628,3.881,2629,3.881,2630,5.571,2631,5.571,2632,3.881,2633,2.612,2634,2.488,2635,3.881,2636,3.881,2637,3.881,2638,6.31,2639,2.757,2640,3.881,2641,3.881,2642,3.881,2643,3.881,2644,3.881,2645,3.881,2646,3.881,2647,3.881,2648,3.881,2649,5.571,2650,3.881,2651,5.571,2652,3.881,2653,5.571,2654,5.571,2655,5.571,2656,4.936,2657,3.148,2658,4.206,2659,2.757,2660,3.439,2661,3.041,2662,2.284,2663,3.439,2664,1.918,2665,3.957,2666,2.757,2667,2.93,2668,4.936]],["title/components/IssueDetailComponent.html",[0,0.078,131,0.926]],["body/components/IssueDetailComponent.html",[0,0.12,1,0.677,2,0.649,3,0.072,4,0.066,5,0.538,6,0.75,7,0.735,8,0.705,9,0.06,11,0.65,14,0.997,15,1.63,16,0.65,17,1.412,18,1.342,19,0.65,20,0.55,21,0.742,23,0.742,25,0.078,26,0.521,27,1.557,30,0.664,33,0.483,37,0.796,39,0.549,40,0.008,41,0.513,42,0.177,43,0.433,45,0.752,46,1.063,49,0.562,50,1.314,51,1.086,53,0.246,54,0.241,56,0.084,57,0.008,59,0.892,60,0.903,62,1.038,77,2.159,78,1.984,81,2.504,84,1.945,85,1.765,87,0.993,88,0.55,89,2.336,91,2.358,92,0.735,93,1.173,94,0.956,95,0.562,96,1.445,97,0.735,98,1.846,99,0.663,100,0.574,101,0.947,102,1.017,103,0.677,104,0.735,105,0.677,106,0.663,107,0.735,108,0.677,109,0.735,110,0.637,111,0.65,112,0.846,113,0.663,114,1.277,115,0.972,116,1.326,117,0.65,118,0.06,119,0.663,120,1.018,121,0.677,122,0.677,123,0.611,124,0.735,125,0.65,126,0.735,127,0.677,128,0.735,129,0.677,130,0.735,131,1.331,132,0.735,133,0.663,134,0.735,135,0.473,136,0.735,137,0.663,138,0.322,139,0.735,140,0.677,141,0.735,142,0.677,143,1.326,144,0.677,145,0.735,146,0.677,147,1.326,148,0.677,149,0.735,150,0.691,151,0.735,152,0.65,153,0.735,154,0.677,155,1.326,156,0.65,157,0.624,158,0.735,159,0.677,160,1.06,161,1.104,162,0.677,163,0.735,164,0.65,165,0.384,166,0.735,167,0.663,168,0.677,169,0.72,170,0.677,171,0.735,172,0.663,173,0.663,174,0.65,175,0.735,176,0.663,177,0.735,178,0.624,179,0.527,180,0.65,181,0.735,182,0.65,183,0.956,184,0.663,185,0.677,186,0.484,187,0.637,188,0.516,189,0.677,190,0.677,191,0.677,192,0.735,193,0.677,194,0.937,195,0.735,196,0.677,197,0.735,198,0.637,199,0.663,200,0.677,201,0.937,202,0.735,203,0.677,204,0.679,205,0.637,206,0.663,207,0.735,208,0.65,209,0.735,210,0.65,211,0.735,212,0.637,213,0.735,214,0.637,215,0.735,216,0.637,217,0.691,218,0.735,219,0.004,220,0.004,223,0.28,224,2.101,232,1.294,241,1.437,244,1.687,246,2.524,247,2.425,250,1.52,251,1.232,255,0.403,265,2.094,269,3.05,271,2.101,272,1.897,279,2.619,288,0.637,304,2.466,305,3.819,306,2.588,307,2.352,310,1.058,313,1.614,317,3.78,318,2.649,362,3.303,378,5.189,384,2.666,413,2.779,455,2.046,462,1.783,496,1.203,513,3.615,534,0.848,538,0.942,545,0.911,546,2.422,550,3.16,558,1.52,559,2.003,566,2.883,569,1.362,572,0.814,599,1.681,605,0.322,608,2.597,634,0.922,638,1.648,645,3.706,667,4.3,723,0.765,742,4.02,760,2.336,765,2.003,766,2.784,782,2.913,784,2.458,787,2.171,788,1.576,789,1.362,790,1.566,800,1.294,803,4.227,809,2.152,813,2.37,816,1.722,826,1.437,827,4.179,828,1.922,829,2.094,833,1.073,859,2.649,865,1.936,882,3.981,884,1.566,899,3.147,903,1.499,948,5.987,971,1.477,972,3.981,989,3.857,1000,1.922,1003,3.78,1020,3.486,1024,2.003,1069,1.327,1079,4.188,1097,3.469,1099,2.586,1171,2.414,1173,2.964,1174,1.614,1175,1.666,1188,3.705,1190,2.883,1191,2.733,1192,2.695,1234,1.783,1271,2.82,1284,3.01,1446,2.32,1463,1.922,1540,4.029,1585,2.425,1599,2.649,1608,2.003,1628,2.588,1630,3.469,1631,2.894,1632,2.046,1633,2.504,1634,2.894,1636,2.649,1666,3.982,1760,2.094,1772,2.32,2208,2.504,2217,3.706,2269,3.486,2567,4.349,2611,2.679,2615,2.32,2638,4.349,2657,2.649,2661,2.679,2662,3.469,2664,2.425,2665,2.32,2669,2.894,2670,5.896,2671,4.908,2672,4.647,2673,5.896,2674,5.896,2675,5.896,2676,5.896,2677,5.896,2678,5.809,2679,4.349,2680,6.555,2681,6.555,2682,4.908,2683,3.267,2684,4.908,2685,4.412,2686,4.908,2687,3.267,2688,3.706,2689,4.349,2690,3.267,2691,3.267,2692,6.227,2693,3.267,2694,4.908,2695,3.267,2696,3.267,2697,3.267,2698,3.267,2699,3.267,2700,3.267,2701,3.267,2702,3.267,2703,3.267,2704,3.267,2705,4.349,2706,4.349,2707,3.267,2708,3.267,2709,2.003,2710,2.894,2711,1.722,2712,3.267,2713,3.267,2714,2.894,2715,3.267,2716,3.267,2717,3.267,2718,3.267,2719,3.267,2720,3.267,2721,3.267,2722,5.809,2723,5.896,2724,3.267,2725,3.267,2726,2.649,2727,4.908,2728,3.267,2729,3.267,2730,3.267,2731,3.267,2732,3.267,2733,2.466,2734,4.349,2735,3.267,2736,4.782,2737,4.908,2738,3.267,2739,4.908,2740,3.267,2741,3.267,2742,2.466,2743,2.894,2744,2.894,2745,2.894,2746,2.894,2747,2.826,2748,3.267,2749,2.894,2750,3.267,2751,5.317,2752,2.679,2753,2.894,2754,3.267,2755,3.267,2756,3.267,2757,3.267,2758,2.649,2759,4.349,2760,2.466,2761,2.894,2762,2.894,2763,3.267]],["title/components/IssueFilterComponent.html",[0,0.078,133,0.926]],["body/components/IssueFilterComponent.html",[0,0.104,1,0.587,2,0.582,3,0.062,4,0.109,5,0.467,6,0.65,7,0.637,8,0.611,9,0.052,11,0.563,16,0.563,17,1.402,18,1.333,19,0.563,20,0.477,21,0.665,23,0.665,25,0.213,26,0.477,29,3.975,30,0.595,37,0.776,39,0.781,40,0.008,41,0.576,42,0.207,43,0.616,45,0.961,46,0.997,49,0.661,50,1.408,51,1.32,53,0.159,54,0.209,56,0.073,57,0.011,62,0.931,78,1.969,79,2.138,81,2.244,82,1.666,84,1.122,85,1.941,87,0.82,88,1.226,89,1.122,91,1.941,92,0.637,93,0.875,94,0.857,95,0.487,96,1.341,97,0.637,98,1.778,99,0.575,100,1.225,101,0.946,102,0.912,103,0.587,104,0.637,105,0.587,106,0.575,107,0.637,108,0.587,109,0.637,110,0.552,111,0.563,112,0.794,113,0.575,114,0.552,115,1.408,116,1.214,117,0.563,118,0.052,119,0.575,120,0.959,121,0.587,122,0.587,123,0.529,124,0.637,125,0.563,126,0.637,127,0.587,128,0.637,129,0.587,130,0.637,131,0.575,132,0.637,133,1.479,134,0.637,135,0.41,136,0.637,137,0.575,138,0.279,139,0.637,140,0.587,141,0.637,142,0.587,143,1.214,144,0.587,145,0.637,146,0.587,147,1.214,148,0.587,149,0.637,150,0.599,151,0.637,152,0.563,153,0.637,154,0.587,155,0.637,156,1.311,157,0.54,158,0.637,159,0.587,160,0.95,161,0.99,162,0.587,163,0.637,164,0.563,165,0.775,166,0.637,167,0.575,168,0.587,169,0.624,170,0.587,171,0.637,172,0.575,173,0.575,174,0.563,175,0.637,176,0.575,177,0.637,178,0.54,179,1.366,180,0.563,181,0.637,182,0.563,183,1.284,184,0.575,185,0.587,186,0.6,187,0.552,188,0.852,189,0.587,190,0.587,191,0.587,192,0.637,193,0.587,194,1.162,195,0.637,196,0.587,197,0.637,198,0.552,199,0.575,200,0.587,201,1.162,202,0.637,203,0.587,204,0.609,205,0.552,206,0.575,207,0.637,208,0.563,209,0.637,210,0.563,211,0.637,212,0.552,213,0.637,214,0.552,215,0.637,216,0.552,217,0.599,218,0.637,219,0.004,220,0.004,223,0.625,228,0.909,255,0.953,269,2.047,279,2.192,296,1.399,305,1.99,306,1.493,307,1.357,310,0.457,362,1.905,366,1.214,384,1.28,397,1.736,413,2.491,432,3.568,512,2.191,535,3.161,545,1.221,546,1.353,558,2.832,566,1.935,572,1.927,580,2.32,591,2.589,592,1.682,605,0.717,614,3.209,673,2.138,674,2.402,723,1.264,724,1.666,763,1.62,787,1.043,788,0.909,789,1.18,803,4.126,809,1.998,813,1.983,814,2.31,816,2.32,823,3.404,830,1.18,832,1.444,833,0.93,838,2.473,860,1.545,865,1.772,874,1.18,896,2.821,899,3.902,903,1.66,961,3.309,998,3.125,1028,1.18,1031,1.603,1062,2.357,1065,2.832,1069,2.678,1097,1.666,1099,1.772,1108,1.545,1171,2.427,1173,2.752,1174,1.399,1175,2.244,1176,2.109,1188,3.679,1190,2.373,1191,1.18,1192,2.595,1211,1.043,1226,3.247,1246,1.094,1271,1.987,1300,1.493,1446,2.011,1462,3.322,1463,2.589,1468,2.411,1472,2.547,1473,3.293,1483,2.821,1488,2.138,1507,3.404,1509,2.138,1537,4.323,1539,2.821,1540,2.946,1547,1.736,1576,2.946,1585,1.399,1627,1.545,1628,1.493,1630,1.666,1632,1.18,1633,1.444,1666,3.257,1734,2.402,1770,1.583,1790,2.138,1803,1.834,1895,1.666,1981,3.125,2132,2.698,2169,1.736,2306,2.821,2321,1.815,2336,3.309,2350,2.491,2353,1.603,2354,1.603,2355,1.666,2382,1.815,2527,6.114,2611,2.402,2634,1.815,2661,2.402,2664,2.174,2665,3.125,2685,2.961,2743,2.509,2747,1.357,2764,2.296,2765,6.671,2766,5.396,2767,4.4,2768,8.608,2769,5.396,2770,6.796,2771,5.396,2772,3.632,2773,4.4,2774,4.4,2775,6.086,2776,4.4,2777,4.4,2778,4.4,2779,4.4,2780,4.782,2781,3.322,2782,5.396,2783,2.831,2784,2.831,2785,3.833,2786,2.831,2787,3.899,2788,4.4,2789,2.831,2790,7.818,2791,4.4,2792,2.831,2793,3.899,2794,2.831,2795,4.4,2796,2.698,2797,4.4,2798,2.831,2799,3.899,2800,4.4,2801,2.831,2802,4.4,2803,6.977,2804,2.831,2805,4.4,2806,4.4,2807,4.4,2808,4.4,2809,2.831,2810,4.4,2811,2.831,2812,3.568,2813,2.831,2814,4.936,2815,4.4,2816,2.831,2817,2.831,2818,2.831,2819,2.831,2820,2.961,2821,2.961,2822,2.509,2823,4.377,2824,4.074,2825,4.782,2826,1.815,2827,1.815,2828,2.509,2829,2.509,2830,1.815,2831,3.568,2832,2.296,2833,2.509,2834,6.182,2835,2.509,2836,5.84,2837,4.226,2838,4.226,2839,2.509,2840,4.226,2841,5.84,2842,2.509,2843,1.905,2844,2.961,2845,2.011,2846,2.509,2847,1.736,2848,1.905,2849,2.509,2850,2.831,2851,2.698,2852,2.831,2853,2.831,2854,2.831,2855,2.831,2856,2.831,2857,2.831,2858,2.831,2859,2.831,2860,5.396,2861,4.4,2862,4.681,2863,4.4,2864,4.4,2865,2.831,2866,4.4,2867,2.831,2868,2.831,2869,2.831,2870,2.831,2871,4.4,2872,2.831,2873,2.831,2874,2.831,2875,2.831,2876,2.831,2877,2.831,2878,4.4,2879,4.4,2880,4.4,2881,4.4,2882,4.4,2883,4.4,2884,2.831,2885,2.296,2886,2.296,2887,2.831,2888,1.736,2889,2.509,2890,2.831,2891,6.086,2892,4.4,2893,1.815,2894,4.4,2895,1.603]],["title/interfaces/IssueFolderNode.html",[118,0.084,1272,2.581]],["body/interfaces/IssueFolderNode.html",[0,0.138,3,0.116,4,0.163,5,1.134,9,0.126,25,0.126,26,0.608,40,0.008,42,0.205,49,0.713,53,0.239,56,0.177,57,0.017,87,0.9,101,0.621,112,0.636,118,0.169,120,0.733,135,0.764,138,0.678,165,1.032,186,0.828,188,0.834,219,0.006,220,0.006,231,1.173,255,0.651,279,2.404,291,4.154,311,3.108,512,1.589,526,1.4,538,1.523,545,1.332,592,2.46,605,0.877,619,1.856,717,1.945,722,1.992,814,2.261,833,1.734,903,1.807,949,3.239,1062,1.984,1063,3.38,1066,3.689,1067,3.471,1090,1.992,1194,3.276,1202,4.503,1203,2.389,1204,2.99,1205,4.791,1206,5.072,1207,3.668,1208,3.298,1209,2.883,1210,2.532,1211,3.343,1212,3.298,1213,2.694,1214,2.785,1215,4.177,1216,4.275,1217,4.503,1218,3.239,1219,3.239,1220,3.239,1221,3.239,1222,3.239,1223,3.239,1224,3.239,1225,3.239,1226,3.202,1227,3.239,1228,3.239,1229,4.219,1230,3.668,1231,3.108,1232,3.108,1233,2.261,1234,3.756,1235,3.386,1236,3.386,1237,1.814,1238,2.458,1239,2.532,1240,3.239,1241,2.883,1242,2.532,1243,2.883,1244,3.239,1245,3.386,1246,2.041,1247,3.386,1248,2.694,1249,3.386,1250,2.323,1251,3.386,1252,2.883,1253,3.386,1254,3.239,1255,3.386,1256,4.332,1257,2.785,1258,2.99,1259,2.532,1260,3.895,1261,3.386,1262,3.386,1263,3.386,1264,4.049,1265,3.386,1266,4.411,1267,3.386,1268,3.386,1269,3.386,1270,3.239,1271,1.945,1272,4.332,1273,5.526,1274,3.386,1275,3.386,1276,4.411,1277,3.386,1278,4.411,1279,4.411,1280,3.386,1281,3.386,1282,4.177,1283,4.411,1284,3.239,1285,4.219,1286,4.411,1287,3.386,1288,4.59,1289,3.628,1290,3.386,1291,3.239,1292,3.386,1293,3.386,1294,3.386,1295,3.239,1296,4.049,1297,3.239,1298,2.883,1299,3.239,1300,2.785]],["title/injectables/IssueGraphApiService.html",[529,1.113,2896,3.443]],["body/injectables/IssueGraphApiService.html",[0,0.153,3,0.106,4,0.097,9,0.089,25,0.115,30,0.878,33,0.715,37,0.742,39,0.99,40,0.008,41,0.547,42,0.18,43,0.721,45,0.898,49,0.721,53,0.254,54,0.357,56,0.167,57,0.016,59,1.108,80,3.019,118,0.154,120,0.834,138,0.888,179,1.409,183,1.264,194,1.398,204,1.083,219,0.005,220,0.005,223,0.557,228,2.7,231,1.182,255,0.965,276,1.454,288,0.942,296,2.388,306,3.421,313,3.206,366,1.761,512,2.457,526,1.72,529,1.584,534,1.255,537,2.015,538,1.393,541,2.185,544,2.459,545,1.21,552,2.125,569,2.705,570,3.541,572,2.204,605,0.828,612,3.541,619,2.28,643,2.015,688,1.423,722,2.447,749,3.421,838,2.636,865,2.13,903,1.487,944,2.736,1090,3.171,1211,2.697,1288,4.432,1289,4.127,1421,3.206,1447,3.421,1472,3.249,1775,3.993,1857,4.898,2015,3.421,2144,5.876,2145,5.269,2153,4.432,2157,4.608,2163,4.898,2195,5.911,2218,5.749,2238,5.262,2270,4.947,2281,3.978,2285,4.558,2297,4.159,2299,2.638,2301,4.366,2305,2.963,2308,5.156,2313,5.269,2323,3.978,2896,5.53,2897,4.282,2898,6.488,2899,7.828,2900,5.749,2901,5.749,2902,5.749,2903,6.488,2904,4.833,2905,7.828,2906,7.324,2907,7.828,2908,7.324,2909,7.828,2910,7.324,2911,7.828,2912,4.833,2913,6.488,2914,6.488,2915,4.833,2916,6.936,2917,6.488,2918,4.833,2919,5.749,2920,6.488,2921,6.488,2922,6.488,2923,6.488,2924,6.488,2925,6.488,2926,6.488,2927,6.488,2928,6.936,2929,6.488,2930,4.833,2931,6.488,2932,4.833,2933,6.488,2934,6.488,2935,6.488,2936,5.749,2937,6.488,2938,6.488,2939,7.828,2940,4.833,2941,4.833,2942,4.833,2943,4.833,2944,4.833,2945,3.92,2946,4.833,2947,4.833,2948,4.833,2949,4.833,2950,4.833,2951,6.488,2952,4.833,2953,4.833,2954,6.488,2955,4.833,2956,4.833,2957,4.833,2958,4.833,2959,4.833,2960,4.833,2961,4.833,2962,4.833,2963,4.833,2964,4.833]],["title/injectables/IssueGraphClassSettersService.html",[529,1.113,2965,3.443]],["body/injectables/IssueGraphClassSettersService.html",[3,0.125,4,0.115,9,0.104,25,0.136,30,0.977,37,0.518,39,0.638,40,0.008,41,0.531,42,0.125,43,0.503,45,0.654,46,0.862,49,0.55,53,0.246,54,0.421,56,0.147,57,0.024,120,0.607,135,1.045,138,0.866,165,1.093,219,0.006,220,0.006,223,0.62,244,1.592,255,0.891,276,1.714,290,4.302,291,4.572,310,1.419,529,1.764,542,3.267,552,2.506,572,1.8,605,0.891,619,2.539,634,2.039,643,2.376,717,2.661,838,3.389,862,4.722,953,4.398,1048,4.43,1098,5.348,1203,3.267,1212,3.802,1213,2.907,1214,3.004,1237,2.481,1238,3.362,1248,4.825,1296,4.251,1298,3.11,1300,3.004,1855,3.943,2132,5.115,2134,3.685,2459,5.919,2965,5.455,2966,6.402,2967,5.86,2968,5.049,2969,5.86,2970,4.862,2971,7.793,2972,5.455,2973,7.224,2974,7.224,2975,7.133,2976,5.698,2977,6.402,2978,6.402,2979,7.224,2980,3.835,2981,8.341,2982,7.932,2983,8.795,2984,5.049,2985,5.455,2986,5.698,2987,5.698,2988,5.698,2989,7.932,2990,5.049,2991,5.049,2992,7.627,2993,5.698,2994,5.698,2995,5.698]],["title/components/IssueGraphControlsComponent.html",[0,0.078,137,0.926]],["body/components/IssueGraphControlsComponent.html",[0,0.151,1,0.708,2,0.887,3,0.075,4,0.069,5,0.563,6,0.785,7,0.769,8,0.738,9,0.063,11,0.68,14,1.031,16,0.68,17,1.414,18,1.348,19,0.68,20,1.206,21,0.768,23,0.768,25,0.082,26,0.448,27,1.344,29,2.771,30,0.687,33,0.506,36,3.151,37,0.802,39,0.383,40,0.008,41,0.503,42,0.165,43,0.302,45,0.769,46,1.135,49,0.387,50,1.403,51,1.201,53,0.254,54,0.252,55,1.051,56,0.088,57,0.009,58,1.201,59,1.207,62,1.074,77,1.503,78,0.965,85,1.826,87,0.976,88,0.576,89,2.4,91,1.229,92,0.769,93,1.01,94,0.989,95,0.588,96,1.477,97,0.769,98,1.867,99,0.694,100,1.064,101,0.939,102,1.052,103,0.708,104,0.769,105,0.708,106,0.694,107,0.769,108,0.708,109,0.769,110,0.666,111,0.68,112,0.936,113,0.694,114,0.666,115,1.105,116,1.362,117,0.68,118,0.063,119,0.694,120,0.986,121,0.708,122,0.708,123,0.639,124,0.769,125,0.68,126,0.769,127,0.708,128,0.769,129,0.708,130,0.769,131,0.694,132,0.769,133,0.694,134,0.769,135,1.037,136,0.769,137,1.361,138,0.943,139,0.769,140,0.708,141,0.769,142,0.708,143,1.362,144,0.708,145,0.769,146,0.708,147,1.362,148,0.708,149,0.769,150,0.723,151,0.769,152,1.334,153,0.769,154,0.708,155,0.769,156,0.68,157,0.652,158,0.769,159,0.708,160,1.096,161,1.142,162,0.708,163,0.769,164,0.68,165,0.402,166,0.769,167,0.694,168,0.708,169,0.753,170,0.708,171,0.769,172,0.694,173,0.694,174,0.68,175,0.769,176,0.694,177,0.769,178,0.652,179,0.552,180,0.68,181,0.769,182,0.68,183,0.989,184,0.694,185,0.708,186,0.5,187,0.666,188,0.54,189,0.708,190,0.708,191,0.708,192,0.769,193,0.708,194,0.652,195,0.769,196,0.708,197,0.769,198,0.666,199,0.694,200,0.708,201,1.28,202,0.769,203,0.708,204,0.473,205,0.666,206,0.694,207,0.769,208,0.68,209,0.769,210,0.68,211,0.769,212,0.666,213,0.769,214,0.666,215,0.769,216,0.666,217,0.723,218,0.769,219,0.004,220,0.006,223,0.293,231,1.086,241,2.233,263,1.87,271,2.173,272,2.591,290,2.581,291,1.689,305,1.546,306,3.777,307,2.433,310,1.288,362,4.077,496,1.259,498,6.706,533,2.428,534,0.888,535,2.285,537,1.425,538,0.985,544,2.034,554,3.301,555,3.833,558,1.59,559,2.096,564,1.866,566,2.949,596,3.306,605,0.337,672,1.935,681,4.417,688,1.007,760,2.4,769,1.935,784,1.425,800,1.354,813,2.017,818,2.3,825,2.819,826,1.503,841,1.935,865,1.989,870,2.819,878,2.428,903,0.694,929,4.118,974,2.363,1069,2.461,1090,1.915,1091,2.428,1099,1.989,1100,4.603,1103,4.573,1173,2.296,1180,2.772,1192,2.678,1193,4.302,1194,2.173,1198,1.802,1203,4.016,1211,2.231,1250,3.418,1271,1.87,1399,4.417,1400,2.011,1404,4.077,1456,2.772,1472,1.321,1484,3.417,1491,2.011,1507,3.515,1585,3.313,1628,2.677,1666,3.84,1673,2.191,1832,2.987,1876,3.113,1933,2.987,1973,2.591,2140,3.255,2142,2.096,2144,2.3,2153,4.249,2193,2.428,2195,6.028,2196,4.499,2197,2.772,2208,3.964,2258,2.581,2259,1.935,2260,2.191,2299,2.771,2308,3.113,2315,4.983,2350,4.249,2353,1.935,2354,1.935,2355,2.011,2358,4.077,2661,1.866,2664,1.689,2672,3.795,2711,1.802,2747,1.638,2752,1.866,2796,3.113,2812,5.81,2945,2.772,2996,3.029,2997,3.417,2998,6.704,2999,5.077,3000,5.077,3001,5.077,3002,7.506,3003,3.833,3004,4.913,3005,4.913,3006,5.077,3007,6.057,3008,5.077,3009,4.913,3010,6.057,3011,5.367,3012,6.704,3013,5.941,3014,6.704,3015,6.704,3016,5.077,3017,3.418,3018,5.077,3019,6.057,3020,4.499,3021,5.077,3022,5.077,3023,5.077,3024,3.418,3025,3.418,3026,5.077,3027,2.59,3028,4.118,3029,3.418,3030,5.077,3031,5.077,3032,3.418,3033,3.418,3034,3.418,3035,3.418,3036,5.077,3037,3.418,3038,5.077,3039,3.418,3040,3.418,3041,6.704,3042,3.418,3043,3.418,3044,3.418,3045,3.029,3046,3.418,3047,3.029,3048,2.772,3049,3.418,3050,3.418,3051,3.418,3052,2.3,3053,3.418,3054,3.418,3055,3.418,3056,3.418,3057,3.418,3058,5.077,3059,3.418,3060,2.772,3061,3.029,3062,3.029,3063,3.418,3064,3.418,3065,5.077,3066,3.418,3067,3.418,3068,3.418,3069,3.418,3070,3.418,3071,3.418,3072,5.077,3073,3.029,3074,3.029,3075,3.418,3076,3.418,3077,3.418,3078,3.418,3079,2.428,3080,3.418,3081,3.029,3082,5.077,3083,4.499,3084,4.499,3085,5.077,3086,5.077,3087,2.772,3088,2.3,3089,4.499,3090,3.418,3091,3.418,3092,4.298,3093,5.077,3094,2.772,3095,3.418,3096,3.029,3097,3.029]],["title/injectables/IssueGraphDynamicTemplateRegistryService.html",[529,1.113,3098,3.443]],["body/injectables/IssueGraphDynamicTemplateRegistryService.html",[3,0.138,4,0.126,5,1.552,9,0.115,25,0.149,30,1.037,37,0.569,39,0.701,40,0.008,41,0.419,42,0.138,43,0.553,45,0.718,46,1.252,53,0.261,54,0.462,56,0.161,57,0.016,135,1.109,138,0.887,165,0.736,219,0.006,220,0.006,223,0.658,276,1.884,439,4.182,529,1.87,542,3.465,552,2.754,572,1.56,605,0.617,619,2.692,634,2.163,643,2.611,750,1.38,813,1.884,838,3.505,900,4.337,903,1.681,953,4.039,966,4.728,1048,4.698,1098,4.912,1194,2.681,1203,3.465,1212,4.134,1213,3.194,1230,3.001,1248,4.868,1270,3.84,1535,5.442,2459,6.059,2969,6.214,2970,5.156,2972,5.785,2980,4.214,3098,5.785,3099,6.789,3100,6.214,3101,6.798,3102,5.548,3103,7.643,3104,7.661,3105,7.661,3106,6.262,3107,6.262,3108,6.262,3109,6.789,3110,5.548,3111,5.079,3112,6.262,3113,6.262,3114,7.661,3115,6.262,3116,6.262,3117,6.262,3118,6.262,3119,6.262,3120,6.262,3121,6.262,3122,6.262]],["title/injectables/IssueGraphLinkHandlesService.html",[529,1.113,3123,3.443]],["body/injectables/IssueGraphLinkHandlesService.html",[3,0.113,4,0.186,9,0.094,25,0.122,30,0.913,37,0.685,39,0.845,40,0.008,41,0.505,42,0.192,43,0.666,45,0.866,46,1.141,53,0.246,54,0.379,56,0.132,57,0.013,59,1.26,135,0.977,138,0.871,165,1.052,219,0.006,220,0.006,223,0.688,255,0.832,276,1.544,291,4.638,310,1.294,312,1.946,529,1.648,542,3.053,552,2.257,572,2.075,593,5.097,605,0.821,619,2.372,634,1.906,643,2.139,744,5.097,750,2.019,838,3.594,899,5.14,903,1.628,953,4.596,966,7.212,1048,4.14,1063,2.815,1067,2.89,1098,5.14,1203,3.625,1212,3.842,1213,2.617,1214,2.705,1248,4.774,1282,4.828,1547,4.916,2459,5.755,2969,5.475,2970,4.544,2972,5.097,2975,6.936,2977,5.982,2980,3.453,2985,3.874,3109,8.066,3110,4.546,3111,6.12,3123,5.097,3124,7.104,3125,6.502,3126,4.546,3127,6.751,3128,6.751,3129,6.751,3130,6.751,3131,8.846,3132,5.13,3133,6.755,3134,5.13,3135,8.551,3136,5.13,3137,6.751,3138,5.13,3139,6.686,3140,5.982,3141,7.545,3142,5.475,3143,5.13,3144,5.13,3145,5.13,3146,5.13,3147,5.13,3148,5.13,3149,5.13,3150,5.13,3151,5.13,3152,5.13,3153,8.017,3154,6.751,3155,6.751,3156,8.017,3157,5.13,3158,5.13,3159,6.751,3160,5.13,3161,5.13]],["title/injectables/IssueGraphStateService.html",[529,1.113,1399,2.683]],["body/injectables/IssueGraphStateService.html",[0,0.138,2,0.909,3,0.116,4,0.106,9,0.097,25,0.126,26,0.607,30,0.93,33,0.781,37,0.763,39,0.907,40,0.008,41,0.543,42,0.185,43,0.716,45,0.93,49,0.701,51,1.253,53,0.259,54,0.39,56,0.136,57,0.013,59,0.798,87,0.899,118,0.158,120,0.562,138,0.927,183,1.34,219,0.006,220,0.006,223,0.453,228,2.209,231,1.107,276,1.588,288,1.029,312,1.522,526,2.149,529,1.679,533,5.757,534,1.371,535,3.394,536,3.552,537,2.201,544,3.152,545,1.253,552,2.321,553,4.273,554,3.957,570,3.754,572,1.906,605,0.754,632,3.025,634,1.941,643,2.201,672,3.893,681,5.165,722,2.594,898,4.885,923,4.629,929,5.578,1090,3.251,1288,5.208,1289,4.544,1399,4.047,1491,5.342,1507,3.11,1832,4.047,1876,5.154,2015,3.626,2153,4.588,2154,4.409,2166,4.905,2193,4.885,2240,3.985,2247,3.985,2270,5.071,2299,2.881,2315,4.409,2350,4.879,2688,5.193,2796,4.97,2896,6.12,2900,6.094,2901,4.677,2902,6.094,2916,7.182,2945,4.281,3004,4.281,3005,4.281,3009,6.574,3045,4.677,3048,4.281,3061,6.094,3062,6.094,3079,6.321,3162,4.677,3163,5.278,3164,6.877,3165,6.877,3166,6.877,3167,5.278,3168,6.877,3169,5.278,3170,6.877,3171,7.65,3172,8.105,3173,6.877,3174,6.094,3175,8.105,3176,6.877,3177,6.877,3178,6.877,3179,6.877,3180,6.877,3181,5.278,3182,5.278,3183,3.985,3184,6.877,3185,5.278,3186,5.278,3187,5.278,3188,5.278,3189,5.278,3190,5.278,3191,5.278,3192,5.278,3193,5.278,3194,5.278,3195,5.278,3196,5.278,3197,5.278,3198,5.278]],["title/classes/IssueGroupContainerBehaviour.html",[57,0.012,3199,3.443]],["body/classes/IssueGroupContainerBehaviour.html",[3,0.105,4,0.096,9,0.087,14,1.305,25,0.186,26,0.568,30,0.869,37,0.76,39,0.814,40,0.008,41,0.487,42,0.16,43,0.642,45,0.834,46,1.1,49,0.707,50,1.36,51,1.124,53,0.247,56,0.123,57,0.012,74,4.565,75,2.922,78,2.053,85,1.714,87,0.855,91,2.8,120,0.507,138,0.633,165,1.065,186,0.633,191,0.988,201,1.486,219,0.005,220,0.005,255,1.099,263,2.678,288,0.929,310,1.173,312,2.096,366,1.072,538,1.374,560,2.512,592,1.317,605,0.469,608,3.39,688,1.893,717,1.755,744,3.598,750,1.05,813,1.434,833,1.565,903,1.738,911,3.865,974,2.217,1063,3.032,1067,2.751,1069,3.163,1071,2.804,1203,3.87,1211,1.755,1212,3.73,1213,2.431,1214,2.512,1216,4.512,1230,3.485,1237,1.637,1239,3.08,1248,4.789,1264,3.782,1271,2.993,1314,3.055,1660,3.278,1661,4.565,2173,3.207,2323,2.922,2659,4.565,2980,3.207,3142,3.865,3199,3.598,3200,6.941,3201,3.865,3202,6.897,3203,6.426,3204,6.443,3205,6.443,3206,6.426,3207,6.426,3208,6.426,3209,4.765,3210,4.765,3211,4.765,3212,5.694,3213,7.583,3214,8.027,3215,7.813,3216,4.765,3217,5.694,3218,4.765,3219,4.765,3220,4.765,3221,4.222,3222,4.12,3223,4.222,3224,5.694,3225,5.694,3226,3.865,3227,4.222,3228,4.222,3229,4.222,3230,3.385,3231,3.865,3232,4.222,3233,5.694,3234,3.598,3235,4.222,3236,5.694,3237,4.222,3238,4.222,3239,4.222,3240,7.201,3241,4.222,3242,6.897,3243,7.201,3244,7.201,3245,5.694,3246,4.222,3247,4.222,3248,4.222,3249,7.201,3250,7.201,3251,8.195,3252,5.694,3253,5.694,3254,5.694,3255,6.443,3256,4.222,3257,4.222,3258,4.222,3259,5.694,3260,5.694,3261,3.865,3262,4.222,3263,4.222,3264,4.222,3265,4.222,3266,4.222,3267,4.222,3268,5.694,3269,4.222,3270,4.222,3271,5.694,3272,4.222,3273,4.222,3274,4.222,3275,4.222,3276,4.222,3277,4.222,3278,4.222,3279,5.694,3280,4.222,3281,4.222]],["title/interfaces/IssueGroupContainerNode.html",[118,0.084,1216,2.404]],["body/interfaces/IssueGroupContainerNode.html",[0,0.138,3,0.116,4,0.163,5,1.134,9,0.126,25,0.126,26,0.608,40,0.008,42,0.202,49,0.713,53,0.239,56,0.177,57,0.017,87,0.9,101,0.621,112,0.636,118,0.169,120,0.733,135,0.764,138,0.678,165,1.032,186,0.865,188,0.834,219,0.006,220,0.006,231,1.173,255,0.651,279,2.404,291,4.154,311,3.108,512,1.589,526,1.4,538,1.523,545,1.332,592,2.46,605,0.877,619,1.856,717,1.945,722,1.992,814,2.261,833,1.734,903,1.807,949,3.239,1062,1.984,1063,3.38,1066,3.758,1067,3.471,1090,1.992,1194,3.276,1202,4.503,1203,2.389,1204,2.99,1205,4.791,1206,5.072,1207,3.668,1208,3.298,1209,2.883,1210,2.532,1211,3.278,1212,3.298,1213,2.694,1214,2.785,1215,4.177,1216,4.433,1217,4.503,1218,3.239,1219,3.239,1220,3.239,1221,3.239,1222,3.239,1223,3.239,1224,3.239,1225,3.239,1226,3.202,1227,3.239,1228,3.239,1229,4.219,1230,3.668,1231,3.108,1232,3.108,1233,2.261,1234,3.756,1235,3.386,1236,3.386,1237,1.814,1238,2.458,1239,2.532,1240,3.239,1241,2.883,1242,2.532,1243,2.883,1244,3.239,1245,3.386,1246,2.041,1247,3.386,1248,2.694,1249,3.386,1250,2.323,1251,3.386,1252,2.883,1253,3.386,1254,3.239,1255,3.386,1256,4.332,1257,2.785,1258,2.99,1259,2.532,1260,3.895,1261,3.386,1262,3.386,1263,3.386,1264,4.049,1265,3.386,1266,5.39,1267,3.386,1268,3.386,1269,3.386,1270,3.239,1271,1.945,1272,3.895,1273,4.906,1274,3.386,1275,3.386,1276,4.411,1277,3.386,1278,4.411,1279,4.411,1280,3.386,1281,3.386,1282,4.177,1283,4.411,1284,3.239,1285,4.219,1286,4.411,1287,3.386,1288,4.59,1289,3.628,1290,3.386,1291,3.239,1292,3.386,1293,3.386,1294,3.386,1295,3.239,1296,4.049,1297,3.239,1298,2.883,1299,3.239,1300,2.785]],["title/classes/IssueGroupContainerParentBehaviour.html",[57,0.012,3230,3.239]],["body/classes/IssueGroupContainerParentBehaviour.html",[3,0.108,4,0.099,9,0.09,14,1.33,25,0.188,26,0.578,30,0.886,33,0.725,37,0.715,39,0.733,40,0.008,41,0.439,42,0.144,43,0.578,45,0.562,46,0.741,49,0.698,50,1.225,51,1.012,53,0.249,56,0.126,57,0.012,74,4.652,75,3.006,78,2.082,85,1.763,87,0.867,91,2.832,120,0.522,138,0.727,165,1.053,186,0.645,191,1.016,201,1.503,219,0.006,220,0.006,223,0.421,255,1.105,263,2.717,288,0.955,310,1.057,312,2.127,366,1.103,538,1.413,560,3.453,592,1.355,605,0.483,608,3.415,688,1.929,717,1.805,744,3.701,750,1.08,813,1.475,833,1.61,903,1.75,911,3.976,974,3.048,1063,3.076,1067,2.804,1069,3.199,1071,2.885,1203,3.71,1211,1.805,1212,3.773,1213,2.5,1214,2.585,1216,3.889,1230,2.349,1237,1.684,1239,3.139,1248,4.669,1264,3.854,1271,3.022,1314,4.199,1660,3.341,1661,4.652,2173,3.299,2323,3.006,2659,4.652,2980,3.299,3142,3.976,3200,6.655,3201,3.976,3202,7.27,3204,6.536,3205,6.536,3212,4.344,3213,7.27,3214,7.76,3215,7.638,3217,4.344,3221,4.344,3222,5.048,3223,4.344,3224,5.804,3225,5.804,3226,5.313,3227,5.804,3228,5.804,3229,5.804,3230,4.652,3231,5.313,3232,5.804,3233,6.977,3234,3.701,3235,4.344,3236,5.804,3237,4.344,3238,4.344,3239,4.344,3240,7.27,3241,4.344,3242,6.977,3243,7.27,3244,7.27,3245,5.804,3246,4.344,3247,4.344,3248,4.344,3249,7.27,3250,7.27,3251,8.222,3252,5.804,3253,5.804,3254,5.804,3255,6.536,3256,4.344,3257,4.344,3258,4.344,3259,5.804,3260,5.804,3261,3.976,3262,4.344,3263,4.344,3264,4.344,3265,4.344,3266,4.344,3267,4.344,3268,5.804,3269,4.344,3270,4.344,3271,5.804,3272,4.344,3273,4.344,3274,4.344,3275,4.344,3276,4.344,3277,4.344,3278,4.344,3279,5.804,3280,4.344,3281,4.344,3282,6.55,3283,4.902,3284,6.55,3285,4.902,3286,4.902]],["title/components/IssueIconComponent.html",[0,0.078,140,0.945]],["body/components/IssueIconComponent.html",[0,0.144,1,1.007,2,0.861,3,0.107,4,0.098,5,0.801,6,1.115,7,1.093,8,1.049,9,0.089,11,0.967,16,0.967,17,1.435,18,1.368,19,0.967,20,0.818,21,0.985,23,0.985,25,0.116,30,0.881,37,0.667,40,0.008,41,0.548,42,0.107,45,0.747,49,0.37,53,0.192,54,0.359,56,0.125,57,0.012,62,1.377,88,0.818,92,1.093,93,1.295,94,1.269,95,0.836,96,1.729,97,1.093,98,2.012,99,0.987,100,0.853,101,1.028,102,1.35,103,1.007,104,1.093,105,1.007,106,0.987,107,1.093,108,1.007,109,1.093,110,0.947,111,0.967,112,0.985,113,0.987,114,0.947,115,1.073,116,1.652,117,0.967,118,0.089,119,0.987,120,1.019,121,1.007,122,1.007,123,0.908,124,1.093,125,0.967,126,1.093,127,1.007,128,1.093,129,1.007,130,1.093,131,0.987,132,1.093,133,0.987,134,1.093,135,0.703,136,1.093,137,0.987,138,0.479,139,1.093,140,1.626,141,1.093,142,1.007,143,1.652,144,1.007,145,1.093,146,1.007,147,1.652,148,1.007,149,1.093,150,1.028,151,1.093,152,0.967,153,1.093,154,1.007,155,1.093,156,0.967,157,0.927,158,1.093,159,1.007,160,1.406,161,1.465,162,1.007,163,1.093,164,0.967,165,0.571,166,1.093,167,0.987,168,1.007,169,1.071,170,1.007,171,1.093,172,0.987,173,0.987,174,0.967,175,1.093,176,0.987,177,1.093,178,0.927,179,0.784,180,0.967,181,1.093,182,0.967,183,1.269,184,0.987,185,1.007,186,0.641,187,0.947,188,0.767,189,1.007,190,1.007,191,1.007,192,1.093,193,1.007,194,0.927,195,1.093,196,1.007,197,1.093,198,0.947,199,0.987,200,1.007,201,0.927,202,1.093,203,1.007,204,0.672,205,0.947,206,0.987,207,1.093,208,0.967,209,1.093,210,0.967,211,1.093,212,0.947,213,1.093,214,0.947,215,1.093,216,0.947,217,1.028,218,1.093,219,0.005,220,0.005,223,0.417,255,1.038,263,1.789,269,3.03,305,3.699,306,3.433,307,3.121,308,3.669,311,3.831,312,1.401,313,2.401,317,5.03,320,4.305,538,1.401,605,0.641,620,4.175,723,1.526,733,4.625,763,2.398,788,1.56,838,2.646,971,2.944,1097,2.859,1099,2.138,1211,1.789,1271,1.789,2113,2.98,2115,3.27,2208,4.002,2353,3.686,2354,3.686,2548,6.363,2604,5.28,2747,3.121,2752,2.652,3287,4.305,3288,7.344,3289,6.511,3290,7.845,3291,7.845,3292,4.859,3293,4.859,3294,4.859,3295,7.845,3296,6.511,3297,6.511,3298,4.859,3299,6.511,3300,4.859,3301,4.859,3302,3.993,3303,4.305,3304,4.305]],["title/components/IssueItemComponent.html",[0,0.078,142,0.945]],["body/components/IssueItemComponent.html",[0,0.148,1,0.966,2,0.837,3,0.158,4,0.094,5,0.769,6,1.07,7,1.049,8,1.007,9,0.085,11,0.927,16,0.927,17,1.433,18,1.366,19,0.927,20,0.785,21,0.958,23,0.958,25,0.111,30,0.857,33,0.69,37,0.756,39,0.522,40,0.008,41,0.557,42,0.178,43,0.412,45,0.825,49,0.483,50,1.184,51,0.979,53,0.212,54,0.344,56,0.12,57,0.012,62,1.34,88,1.299,91,1.677,92,1.049,93,1.26,94,1.234,95,0.802,96,1.7,97,1.049,98,1.996,99,0.947,100,0.819,101,1.043,102,1.312,103,0.966,104,1.049,105,0.966,106,0.947,107,1.049,108,0.966,109,1.049,110,0.909,111,0.927,112,0.971,113,0.947,114,0.909,115,1.044,116,1.618,117,0.927,118,0.085,119,0.947,120,1.02,121,0.966,122,0.966,123,0.872,124,1.049,125,0.927,126,1.049,127,0.966,128,1.049,129,0.966,130,1.049,131,0.947,132,1.049,133,0.947,134,1.049,135,0.675,136,1.049,137,0.947,138,0.459,139,1.049,140,0.966,141,1.049,142,1.599,143,1.618,144,0.966,145,1.049,146,0.966,147,1.618,148,0.966,149,1.049,150,0.986,151,1.049,152,0.927,153,1.049,154,0.966,155,1.049,156,1.26,157,0.89,158,1.049,159,0.966,160,1.367,161,1.424,162,0.966,163,1.049,164,0.927,165,0.548,166,1.049,167,0.947,168,0.966,169,1.028,170,0.966,171,1.049,172,0.947,173,0.947,174,0.927,175,1.049,176,0.947,177,1.049,178,0.89,179,0.752,180,0.927,181,1.049,182,0.927,183,1.234,184,0.947,185,0.966,186,0.624,187,0.909,188,0.736,189,0.966,190,0.966,191,0.966,192,1.049,193,0.966,194,0.89,195,1.049,196,0.966,197,1.049,198,0.909,199,0.947,200,0.966,201,0.89,202,1.049,203,0.966,204,0.645,205,0.909,206,0.947,207,1.049,208,0.927,209,1.049,210,0.927,211,1.049,212,0.909,213,1.049,214,0.909,215,1.049,216,0.909,217,0.986,218,1.049,219,0.005,220,0.005,223,0.4,244,1.7,263,2.332,271,1.996,288,0.909,303,3.782,310,1.022,366,1.424,496,1.717,509,2.108,512,1.403,532,3.762,538,1.344,545,0.979,549,3.23,566,2.785,599,1.515,605,0.459,622,3.312,722,2.389,723,1.89,750,1.396,763,2.332,788,1.497,865,2.361,874,2.64,903,1.286,971,2.864,990,4.498,1099,2.361,1171,1.717,1173,2.108,1174,2.304,1190,2.051,1192,1.531,1258,3.585,1483,4.06,1576,3.925,1632,2.64,1633,2.378,1651,2.235,1695,5.43,1770,2.278,1831,3.138,2010,3.883,2113,3.883,2208,2.378,2545,6.902,2604,5.728,2609,2.989,2610,3.52,2611,2.545,2661,2.545,2662,4.232,2711,2.458,2734,6.836,2747,2.235,2752,2.545,3027,3.23,3302,2.859,3305,2.859,3306,5.833,3307,4.06,3308,7.714,3309,8.066,3310,6.333,3311,4.663,3312,6.333,3313,4.663,3314,3.585,3315,4.131,3316,3.782,3317,4.131,3318,4.663,3319,4.663,3320,4.663,3321,4.663,3322,4.131]],["title/components/IssueLabelComponent.html",[0,0.078,144,0.945]],["body/components/IssueLabelComponent.html",[0,0.128,1,0.91,2,0.804,3,0.097,4,0.089,5,0.724,6,1.008,7,0.988,8,0.948,9,0.081,11,0.873,16,0.873,17,1.43,18,1.362,19,0.873,20,0.739,21,0.919,23,0.919,25,0.105,26,0.537,27,1.267,30,0.822,37,0.633,39,0.68,40,0.008,41,0.58,42,0.097,43,0.537,45,0.697,49,0.463,51,0.679,53,0.179,54,0.324,56,0.113,57,0.011,62,1.286,88,0.739,92,0.988,93,1.209,94,1.184,95,0.755,96,1.658,97,0.988,98,1.973,99,0.892,100,0.771,101,1.004,102,1.26,103,0.91,104,0.988,105,0.91,106,0.892,107,0.988,108,0.91,109,0.988,110,0.856,111,0.873,112,0.951,113,0.892,114,0.856,115,1.526,116,1.568,117,0.873,118,0.081,119,0.892,120,1.001,121,0.91,122,0.91,123,0.821,124,0.988,125,0.873,126,0.988,127,0.91,128,0.988,129,0.91,130,0.988,131,0.892,132,0.988,133,0.892,134,0.988,135,0.635,136,0.988,137,0.892,138,0.433,139,0.988,140,0.91,141,0.988,142,0.91,143,1.568,144,1.559,145,0.988,146,0.91,147,1.568,148,0.91,149,0.988,150,0.929,151,0.988,152,0.873,153,0.988,154,0.91,155,0.988,156,0.873,157,0.838,158,0.988,159,0.91,160,1.312,161,1.367,162,0.91,163,0.988,164,0.873,165,0.516,166,0.988,167,0.892,168,0.91,169,0.968,170,0.91,171,0.988,172,0.892,173,0.892,174,0.873,175,0.988,176,0.892,177,0.988,178,0.838,179,0.709,180,0.873,181,0.988,182,0.873,183,1.184,184,0.892,185,0.91,186,0.599,187,0.856,188,0.693,189,0.91,190,0.91,191,0.91,192,0.988,193,0.91,194,1.16,195,0.988,196,0.91,197,0.988,198,0.856,199,0.892,200,0.91,201,0.838,202,0.988,203,0.91,204,0.608,205,0.856,206,0.892,207,0.988,208,0.873,209,0.988,210,0.873,211,0.988,212,0.856,213,0.988,214,0.856,215,0.988,216,0.856,217,0.929,218,0.988,219,0.005,220,0.005,223,0.598,244,0.968,271,3.654,272,3.632,273,4.317,538,1.266,547,5.062,566,3.065,572,1.514,599,1.05,605,0.741,700,3.315,723,1.424,725,2.984,742,4.274,749,2.315,763,2.238,788,1.41,838,2.469,903,1.234,950,5.315,1099,2.47,1171,1.617,1173,3.152,1174,2.17,1175,2.24,1192,1.442,1531,5.062,1535,5.609,1649,2.315,1785,2.486,1831,2.955,1957,4.589,2280,2.955,2350,3.44,2477,2.815,2541,6.101,2604,5.062,2611,2.397,2614,4.589,2661,4.106,2662,2.584,2664,3.003,2747,2.913,2752,3.317,2758,3.561,2759,6.998,3088,4.09,3094,4.929,3222,2.815,3302,2.693,3323,3.891,3324,6.969,3325,6.077,3326,6.077,3327,6.077,3328,4.391,3329,6.077,3330,4.391,3331,7.522,3332,7.897,3333,6.101,3334,6.077,3335,4.391,3336,6.176,3337,6.101,3338,6.077,3339,7.897,3340,4.391,3341,3.561,3342,4.391,3343,4.391,3344,4.391,3345,4.391,3346,4.391,3347,4.391,3348,4.391,3349,4.391,3350,3.561,3351,4.391,3352,4.391,3353,4.391,3354,4.391,3355,4.391,3356,4.391,3357,4.391,3358,4.391,3359,4.391,3360,4.391,3361,3.561,3362,4.391,3363,4.391,3364,4.391,3365,4.391,3366,4.391,3367,4.391,3368,4.391,3369,6.077,3370,6.077]],["title/components/IssueListComponent.html",[0,0.078,146,0.945]],["body/components/IssueListComponent.html",[0,0.152,1,0.572,2,0.987,3,0.061,4,0.056,5,0.455,6,0.633,7,0.62,8,0.595,9,0.051,11,0.549,14,0.875,15,1.467,16,0.549,17,1.399,18,1.328,19,0.549,20,1.257,21,0.652,23,0.652,25,0.066,26,0.381,27,1.48,30,0.583,33,0.638,36,2.639,37,0.821,39,0.729,40,0.008,41,0.525,42,0.197,43,0.744,45,0.88,46,0.985,49,0.653,50,1.122,51,0.927,53,0.246,54,0.204,55,0.848,56,0.071,57,0.007,59,1.285,60,0.762,62,0.912,78,1.217,87,0.811,88,0.464,92,0.62,93,0.858,94,0.84,95,0.474,96,1.322,97,0.62,98,1.765,99,0.56,100,0.484,101,0.877,102,0.893,103,0.572,104,0.62,105,0.572,106,0.56,107,0.62,108,0.572,109,0.62,110,0.537,111,0.549,112,1.003,113,0.56,114,0.537,115,0.875,116,1.194,117,0.549,118,0.154,119,0.875,120,1.013,121,0.572,122,0.572,123,0.806,124,0.62,125,0.549,126,0.62,127,0.572,128,0.62,129,0.572,130,0.62,131,0.56,132,0.62,133,0.56,134,0.62,135,0.399,136,0.62,137,0.56,138,0.272,139,0.62,140,0.572,141,0.62,142,0.572,143,1.194,144,0.572,145,0.62,146,1.244,147,1.194,148,0.572,149,0.62,150,0.583,151,0.62,152,0.549,153,0.62,154,0.572,155,0.62,156,0.549,157,0.526,158,0.62,159,0.572,160,0.931,161,0.97,162,0.572,163,0.62,164,0.549,165,0.765,166,0.62,167,0.56,168,0.572,169,0.608,170,0.572,171,0.62,172,0.56,173,0.56,174,0.549,175,0.62,176,0.56,177,0.62,178,1.145,179,1.204,180,0.549,181,0.62,182,0.549,183,1.034,184,0.56,185,0.572,186,0.68,187,0.537,188,0.436,189,0.572,190,0.572,191,0.572,192,0.62,193,0.572,194,0.526,195,0.62,196,0.572,197,0.62,198,0.537,199,0.56,200,0.572,201,0.526,202,0.62,203,0.572,204,0.901,205,0.537,206,0.56,207,0.62,208,0.549,209,0.62,210,0.549,211,0.62,212,0.537,213,0.62,214,0.537,215,0.62,216,0.537,217,0.583,218,0.62,219,0.004,220,0.005,223,0.658,225,2.273,231,0.768,241,2.334,244,0.95,246,2.272,251,1.04,255,0.74,265,2.764,269,1.283,279,1.885,305,3.673,306,2.798,307,2.544,308,3.255,310,0.696,317,3.403,366,1.725,407,1.363,408,1.322,433,2.237,496,1.016,512,2.557,520,2.44,526,0.731,532,3.261,534,0.716,535,3.232,545,0.927,547,4.382,566,1.213,572,1.86,592,1.192,605,0.735,608,1.708,638,2.186,649,2.537,723,1.244,759,1.247,760,2.103,763,1.588,766,2.72,775,1.823,782,3.217,784,2.714,787,1.954,788,1.384,789,1.15,790,1.322,800,1.093,803,4.317,808,1.454,813,1.597,817,1.322,823,1.949,825,2.47,826,1.213,830,1.15,831,2.622,832,1.407,833,0.906,834,1.768,835,1.768,837,3.907,838,3.53,858,1.959,862,2.44,865,2.138,868,2.644,870,1.283,874,2.213,878,4.262,884,3.12,891,3.82,896,3.403,899,5.03,903,0.875,1108,1.505,1176,1.322,1177,1.959,1194,1.181,1197,1.768,1198,1.454,1211,2.21,1215,1.505,1246,1.666,1259,2.876,1419,1.856,1468,2.956,1472,2.884,1507,3.469,1576,3.554,1580,4.422,1584,2.901,1585,1.363,1628,1.454,1641,3.68,1652,4.007,1661,1.959,1702,1.959,1772,3.062,1973,1.666,2134,2.199,2208,3.061,2259,2.44,2260,2.764,2285,3.061,2314,2.901,2353,2.44,2354,2.44,2355,2.537,2405,1.768,2522,2.082,2526,2.082,2527,6.398,2533,2.082,2672,3.907,2711,2.798,2765,5.317,2780,4.703,2832,5.598,2851,2.644,2978,3.82,2985,3.255,3314,2.44,3341,3.496,3371,2.082,3372,4.916,3373,4.007,3374,4.304,3375,3.496,3376,5.307,3377,4.304,3378,5.307,3379,5.307,3380,5.307,3381,4.304,3382,5.307,3383,5.307,3384,4.304,3385,3.82,3386,3.82,3387,4.311,3388,4.311,3389,6,3390,4.867,3391,6,3392,2.758,3393,3.82,3394,2.758,3395,2.444,3396,4.311,3397,2.758,3398,4.311,3399,2.758,3400,3.82,3401,4.311,3402,2.758,3403,4.311,3404,4.311,3405,2.758,3406,2.758,3407,3.82,3408,2.758,3409,4.311,3410,4.311,3411,3.82,3412,6,3413,4.311,3414,6.902,3415,3.82,3416,2.758,3417,6.39,3418,4.311,3419,3.82,3420,4.311,3421,2.758,3422,2.758,3423,2.758,3424,2.758,3425,2.758,3426,2.758,3427,2.758,3428,2.758,3429,4.304,3430,2.758,3431,2.758,3432,4.304,3433,3.496,3434,2.758,3435,2.758,3436,2.758,3437,4.304,3438,3.496,3439,2.758,3440,2.758,3441,3.496,3442,2.758,3443,5.307,3444,2.758,3445,2.444,3446,5.307,3447,4.311,3448,2.758,3449,3.82,3450,6.511,3451,4.311,3452,2.444,3453,5.307,3454,2.758,3455,2.758,3456,4.304,3457,2.758,3458,2.758,3459,2.758,3460,2.758,3461,4.311,3462,4.311,3463,2.758,3464,2.237,3465,2.758,3466,2.758,3467,2.758,3468,2.758,3469,2.758,3470,2.237,3471,2.758,3472,2.758,3473,2.237,3474,2.237,3475,2.237,3476,2.237,3477,2.758,3478,2.758,3479,2.237,3480,2.237,3481,2.237,3482,2.758,3483,2.758,3484,2.758,3485,2.758,3486,2.758,3487,6,3488,2.758,3489,5.307,3490,2.758,3491,2.758,3492,2.444,3493,2.758,3494,2.758,3495,4.311,3496,2.758,3497,6.511,3498,4.311,3499,4.311,3500,2.758,3501,2.758,3502,4.311,3503,2.758,3504,4.311,3505,2.758,3506,2.758,3507,2.082,3508,2.444,3509,4.311,3510,2.758,3511,2.758,3512,4.311,3513,4.311,3514,4.311,3515,4.311,3516,2.444,3517,2.444,3518,2.444,3519,2.082,3520,2.758,3521,2.758,3522,2.758,3523,2.444]],["title/components/IssueLocationComponent.html",[0,0.078,148,0.945]],["body/components/IssueLocationComponent.html",[0,0.151,1,0.964,2,0.836,3,0.102,4,0.094,5,0.767,6,1.068,7,1.046,8,1.004,9,0.085,11,0.925,16,0.925,17,1.432,18,1.366,19,0.925,20,0.783,21,0.956,23,0.956,25,0.111,30,0.855,33,0.688,37,0.732,39,0.521,40,0.008,41,0.557,42,0.158,43,0.411,45,0.884,46,0.956,49,0.482,53,0.212,54,0.343,56,0.12,57,0.012,62,1.337,78,1.784,88,0.783,92,1.046,93,1.257,94,1.232,95,0.8,96,1.698,97,1.046,98,1.995,99,0.944,100,0.817,101,1.043,102,1.31,103,0.964,104,1.046,105,0.964,106,0.944,107,1.046,108,0.964,109,1.046,110,0.906,111,0.925,112,0.97,113,0.944,114,0.906,115,1.042,116,1.615,117,0.925,118,0.132,119,0.944,120,1.005,121,0.964,122,0.964,123,0.87,124,1.046,125,0.925,126,1.046,127,0.964,128,1.046,129,0.964,130,1.046,131,0.944,132,1.046,133,0.944,134,1.046,135,0.673,136,1.046,137,0.944,138,0.458,139,1.046,140,0.964,141,1.046,142,0.964,143,1.615,144,0.964,145,1.046,146,0.964,147,1.615,148,1.597,149,1.046,150,0.984,151,1.046,152,0.925,153,1.046,154,0.964,155,1.615,156,0.925,157,0.888,158,1.046,159,0.964,160,1.365,161,1.422,162,0.964,163,1.046,164,0.925,165,0.547,166,1.046,167,0.944,168,0.964,169,1.025,170,0.964,171,1.046,172,0.944,173,0.944,174,0.925,175,1.046,176,0.944,177,1.046,178,0.888,179,0.75,180,0.925,181,1.046,182,0.925,183,1.232,184,0.944,185,0.964,186,0.623,187,0.906,188,0.734,189,0.964,190,0.964,191,0.964,192,1.046,193,0.964,194,1.471,195,1.046,196,0.964,197,1.046,198,0.906,199,0.944,200,0.964,201,0.888,202,1.046,203,0.964,204,0.644,205,0.906,206,0.944,207,1.046,208,0.925,209,1.046,210,0.925,211,1.046,212,0.906,213,1.046,214,0.906,215,1.046,216,0.906,217,0.984,218,1.046,219,0.005,220,0.005,223,0.399,263,1.713,271,3.074,272,3.115,288,0.906,310,1.02,496,1.713,532,3.759,545,0.977,599,1.512,605,0.458,622,3.303,638,2.123,723,1.683,763,2.328,788,1.494,830,1.939,865,2.358,903,1.284,908,4.121,971,2.859,1099,1.527,1171,1.713,1173,3.759,1174,3.549,1175,3.224,1176,3.03,1181,4.121,1190,2.78,1191,2.636,1192,2.076,1483,4.053,1544,4.562,1627,4.887,1632,2.636,1651,2.229,1770,2.274,2562,6.742,2604,5.595,2662,4.742,2664,2.298,2665,3.303,2667,3.511,2711,3.333,2746,4.121,2747,2.229,2752,2.538,3092,4.053,3314,3.579,3333,5.825,3400,5.601,3524,4.121,3525,7.182,3526,6.321,3527,7.706,3528,7.706,3529,6.321,3530,7.182,3531,4.65,3532,4.65,3533,6.321,3534,4.65,3535,6.321,3536,4.65,3537,4.65,3538,6.321,3539,6.321,3540,7.706,3541,3.772,3542,3.303,3543,4.65,3544,4.65,3545,4.65,3546,3.303,3547,4.65,3548,4.65,3549,6.321,3550,4.65,3551,4.65]],["title/interfaces/IssueNode.html",[118,0.084,1206,2.683]],["body/interfaces/IssueNode.html",[0,0.142,3,0.112,4,0.161,5,1.104,9,0.138,25,0.121,26,0.592,40,0.008,42,0.204,43,0.592,49,0.714,53,0.236,56,0.172,57,0.02,87,0.882,101,0.788,112,0.807,118,0.169,120,0.713,135,0.97,138,0.739,165,1.05,186,0.817,188,1.058,219,0.006,220,0.006,223,0.435,231,1.201,255,0.625,279,2.678,291,4.212,311,2.985,512,1.526,526,1.345,538,1.462,545,1.38,592,2.439,605,0.869,619,2.355,717,2.468,722,2.527,814,2.868,833,1.666,903,1.792,949,4.109,1062,1.932,1063,3.328,1066,3.663,1067,3.417,1090,1.913,1194,3.212,1202,4.415,1203,2.294,1204,2.872,1205,4.745,1206,5.115,1207,3.596,1208,3.211,1209,2.769,1210,2.431,1211,3.25,1212,3.211,1213,2.587,1214,2.674,1215,4.095,1216,4.494,1217,4.415,1218,3.111,1219,3.111,1220,3.111,1221,3.111,1222,3.111,1223,3.111,1224,3.111,1225,3.111,1226,3.118,1227,3.111,1228,3.111,1229,5.089,1230,3.596,1231,3.943,1232,3.943,1233,2.868,1234,4.356,1235,4.296,1236,4.296,1237,2.301,1238,3.118,1239,3.211,1240,4.109,1241,3.657,1242,3.211,1243,3.657,1244,4.109,1245,4.296,1246,2.59,1247,4.296,1248,3.418,1249,4.296,1250,2.947,1251,4.296,1252,3.657,1253,4.296,1254,4.109,1255,3.252,1256,4.247,1257,2.674,1258,2.872,1259,2.431,1260,3.793,1261,3.252,1262,3.252,1263,3.252,1264,3.943,1265,3.252,1266,4.296,1267,3.252,1268,3.252,1269,3.252,1270,3.111,1271,1.868,1272,3.793,1273,4.81,1274,3.252,1275,3.252,1276,4.296,1277,3.252,1278,4.296,1279,4.296,1280,3.252,1281,3.252,1282,4.095,1283,4.296,1284,3.111,1285,4.109,1286,4.296,1287,3.252,1288,4.518,1289,3.533,1290,3.252,1291,3.111,1292,3.252,1293,3.252,1294,3.252,1295,3.111,1296,3.943,1297,3.111,1298,2.769,1299,3.111,1300,2.674]],["title/injectables/IssueStoreService.html",[529,1.113,3552,3.698]],["body/injectables/IssueStoreService.html",[3,0.105,4,0.096,9,0.133,25,0.114,30,0.869,33,0.705,37,0.836,39,1.031,40,0.008,41,0.617,42,0.203,43,0.813,45,1.052,49,0.638,53,0.23,54,0.352,56,0.123,57,0.012,59,1.379,61,2.906,112,0.774,219,0.005,220,0.005,223,0.409,224,2.751,231,0.93,276,1.434,288,0.929,512,1.934,529,1.569,534,1.237,537,1.987,538,1.374,542,2.906,544,2.729,545,0.993,552,2.096,605,0.903,643,1.987,688,1.403,750,1.416,815,3.508,979,5.694,1232,3.782,1242,3.08,1303,3.055,1314,4.12,1339,4.222,1352,4.222,1421,3.176,1422,4.12,1582,6.313,2073,4.852,2571,5.212,2572,4.773,2573,4.852,2600,4.852,2621,5.694,2656,5.694,3552,5.212,3553,8.195,3554,6.426,3555,3.941,3556,6.426,3557,6.426,3558,6.426,3559,6.426,3560,6.426,3561,6.426,3562,6.426,3563,6.426,3564,6.426,3565,6.426,3566,6.426,3567,4.765,3568,7.783,3569,7.272,3570,7.783,3571,7.272,3572,7.783,3573,7.272,3574,7.783,3575,7.272,3576,7.783,3577,7.272,3578,7.783,3579,7.272,3580,7.783,3581,7.272,3582,7.783,3583,7.272,3584,7.783,3585,7.272,3586,7.783,3587,7.272,3588,7.783,3589,7.272,3590,7.783,3591,7.272,3592,7.783,3593,7.783,3594,7.783,3595,4.765,3596,6.426,3597,6.426,3598,7.783,3599,4.765,3600,6.426,3601,6.426,3602,8.373,3603,4.765,3604,6.426,3605,7.783,3606,4.765,3607,6.426,3608,6.426,3609,7.783,3610,6.426,3611,6.426,3612,4.765,3613,6.426,3614,6.426,3615,8.373,3616,4.765,3617,6.426,3618,4.765,3619,6.426,3620,4.765,3621,6.426,3622,8.373,3623,4.765,3624,6.426,3625,7.783,3626,4.765,3627,6.426,3628,6.426,3629,7.783,3630,4.765,3631,6.426,3632,6.426,3633,7.783,3634,4.765,3635,6.426,3636,6.426,3637,8.373,3638,6.426,3639,8.373,3640,4.765,3641,4.765,3642,4.765,3643,4.765,3644,4.765,3645,4.765,3646,4.765,3647,4.765,3648,4.765,3649,4.765,3650,4.765,3651,4.765,3652,4.765,3653,4.765,3654,4.765,3655,4.765,3656,4.765]],["title/directives/ItemDirective.html",[95,0.784,206,0.926]],["body/directives/ItemDirective.html",[2,1.102,3,0.159,4,0.145,9,0.132,16,1.435,17,1.233,40,0.008,53,0.213,54,0.533,56,0.186,57,0.018,88,1.403,95,1.554,205,1.406,206,1.692,219,0.007,220,0.007,223,0.619,397,5.111,634,2.353,1406,5.92,3657,6.393,3658,7.386,3659,8.335,3660,8.335,3661,8.335]],["title/components/LabelSearchComponent.html",[0,0.078,152,0.907]],["body/components/LabelSearchComponent.html",[0,0.138,1,0.871,2,0.779,3,0.092,4,0.085,5,0.692,6,0.964,7,0.945,8,0.907,9,0.077,11,0.835,14,1.196,15,1.881,16,0.835,17,1.427,18,1.36,19,0.835,20,0.707,21,0.891,23,0.891,25,0.1,26,0.52,27,1.146,30,0.797,33,0.621,37,0.779,39,0.66,40,0.008,41,0.565,42,0.171,43,0.52,45,0.781,46,0.891,49,0.449,50,1.453,51,1.279,53,0.229,54,0.31,56,0.152,57,0.011,59,1.116,60,1.161,62,1.246,82,2.471,87,0.867,88,0.992,92,0.945,93,1.172,94,1.438,95,0.722,96,1.626,97,0.945,98,1.955,99,0.853,100,0.738,101,0.993,102,1.221,103,0.871,104,0.945,105,0.871,106,0.853,107,0.945,108,0.871,109,0.945,110,0.818,111,0.835,112,0.936,113,0.853,114,0.818,115,1.462,116,1.531,117,0.835,118,0.125,119,0.853,120,0.969,121,0.871,122,0.871,123,0.785,124,0.945,125,0.835,126,0.945,127,0.871,128,0.945,129,0.871,130,0.945,131,0.853,132,0.945,133,0.853,134,0.945,135,0.608,136,0.945,137,0.853,138,0.67,139,0.945,140,0.871,141,0.945,142,0.871,143,1.531,144,0.871,145,0.945,146,0.871,147,1.531,148,0.871,149,0.945,150,0.889,151,0.945,152,1.468,153,0.945,154,0.871,155,0.945,156,0.835,157,0.802,158,0.945,159,0.871,160,1.272,161,1.325,162,0.871,163,0.945,164,0.835,165,0.494,166,0.945,167,0.853,168,0.871,169,0.926,170,0.871,171,0.945,172,0.853,173,0.853,174,0.835,175,0.945,176,0.853,177,0.945,178,0.802,179,0.678,180,0.835,181,0.945,182,0.835,183,1.148,184,0.853,185,0.871,186,0.58,187,0.818,188,0.663,189,0.871,190,0.871,191,0.871,192,0.945,193,0.871,194,1.579,195,0.945,196,0.871,197,0.945,198,0.818,199,0.853,200,0.871,201,1.125,202,0.945,203,0.871,204,0.581,205,0.818,206,0.853,207,0.945,208,0.835,209,0.945,210,0.835,211,0.945,212,0.818,213,0.945,214,0.818,215,0.945,216,0.818,217,0.889,218,0.945,219,0.005,220,0.005,223,0.361,228,2.186,244,1.5,255,0.518,263,1.547,288,0.818,310,0.678,313,2.075,366,0.945,384,3.818,427,4.241,512,1.773,534,1.091,536,2.827,537,1.751,541,1.899,544,2.285,553,3.89,573,3.107,605,0.414,612,3.216,614,3.107,677,4.581,681,2.471,805,2.378,809,1.379,818,3.966,900,2.378,903,0.853,1040,1.379,1099,1.935,1173,1.899,1180,3.407,1194,2.522,1250,2.591,1400,2.471,1472,3.36,1474,2.693,1501,2.591,1507,3.741,1537,2.983,1630,3.467,1876,3.613,2125,4.185,2134,3.005,2140,4.982,2141,6.175,2142,5.331,2143,2.983,2144,4.966,2145,5.568,2146,4.779,2147,4.779,2148,4.779,2149,5.52,2150,3.171,2151,4.966,2152,3.407,2153,4.56,2154,3.778,2155,4.449,2156,3.778,2157,5.519,2158,4.779,2159,5.52,2160,4.779,2161,5.52,2162,5.52,2163,5.139,2164,5.139,2165,4.779,2166,4.364,2167,3.407,2168,4.779,2169,2.576,2170,4.779,2171,5.984,2172,3.171,2173,2.827,2174,4.581,2175,3.171,2176,3.407,2177,3.407,2178,3.407,2179,3.407,2180,3.407,2181,3.407,2182,3.171,2183,3.407,2184,5.984,2185,3.407,2186,3.407,2187,4.779,2188,3.407,2189,3.407,2190,3.407,2191,2.983,2192,3.966,2664,2.075,3662,5.892,3663,4.2,3664,5.892,3665,4.2,3666,4.2,3667,4.2,3668,4.2,3669,4.2,3670,4.2,3671,4.2,3672,5.892,3673,3.722]],["title/injectables/LabelStoreService.html",[529,1.113,2151,3.069]],["body/injectables/LabelStoreService.html",[3,0.133,4,0.122,9,0.111,25,0.145,30,1.016,33,0.897,37,0.741,39,0.914,40,0.008,41,0.606,42,0.188,43,0.721,45,0.936,49,0.703,50,1.134,51,0.937,53,0.252,54,0.448,56,0.21,57,0.015,59,1.234,101,1.003,115,1.406,138,0.74,219,0.006,220,0.007,223,0.645,228,2.74,272,2.344,276,1.825,288,1.182,312,2.166,529,1.834,534,1.575,537,2.529,544,3.041,545,1.355,546,2.622,552,2.668,568,6.919,572,2.034,592,1.677,605,0.84,643,2.529,688,1.786,813,1.825,830,2.529,865,2.801,1303,3.889,1307,4.101,1472,3.453,1507,3.397,1973,3.154,2007,5.336,2145,4.082,2151,5.056,2153,4.253,2154,4.817,2182,4.58,2191,5.336,2334,5.493,2357,3.719,2600,4.58,3079,5.336,3674,6.919,3675,7.513,3676,7.513,3677,6.065,3678,8.934,3679,6.065,3680,7.513,3681,5.374,3682,7.513,3683,9.285,3684,6.065,3685,7.513,3686,6.065,3687,6.065,3688,6.065,3689,6.065,3690,6.065,3691,6.065,3692,6.065]],["title/classes/LayoutNode.html",[57,0.012,3693,3.239]],["body/classes/LayoutNode.html",[0,0.119,3,0.097,4,0.169,9,0.081,25,0.105,26,0.539,27,1.507,30,0.826,33,0.903,37,0.824,39,0.783,40,0.008,41,0.468,42,0.198,43,0.618,45,0.866,46,1.058,49,0.575,50,1.642,51,1.341,53,0.131,57,0.018,59,0.923,75,2.711,76,3.338,87,1.005,100,0.776,112,0.908,118,0.081,138,0.689,165,1.113,186,0.78,219,0.005,220,0.005,223,0.6,244,0.974,255,1.035,291,4.045,310,0.985,545,1.223,550,1.892,560,3.688,565,3.338,570,2.413,572,2.091,605,0.689,651,4.851,702,3.324,717,1.628,725,3.831,739,2.711,774,2.503,814,2.614,823,3.163,833,2.807,860,2.413,869,5.281,884,2.119,903,1.704,912,3.585,920,2.413,924,3.338,938,2.841,1030,2.711,1050,3.457,1062,2.694,1063,3.301,1066,3.217,1067,3.229,1068,3.14,1089,3.14,1090,1.667,1171,3.09,1182,3.338,1237,3.115,1238,2.841,1242,2.926,1259,2.119,1282,3.818,1533,4.61,1607,2.413,1618,2.601,1785,3.457,1809,3.338,1833,4.337,1837,4.337,1933,4.439,1952,3.14,2008,3.14,2034,3.14,2482,3.585,2885,6.421,2886,6.118,3003,4.61,3222,5.248,3234,4.61,3464,3.585,3507,5.696,3542,3.14,3693,5.358,3694,7.395,3695,3.585,3696,6.106,3697,6.106,3698,6.106,3699,6.106,3700,6.106,3701,6.106,3702,6.106,3703,6.106,3704,6.106,3705,6.106,3706,6.198,3707,6.684,3708,6.106,3709,4.421,3710,6.639,3711,4.421,3712,4.421,3713,4.421,3714,4.421,3715,6.106,3716,4.421,3717,4.421,3718,4.421,3719,6.684,3720,4.421,3721,4.421,3722,4.421,3723,4.708,3724,4.421,3725,6.884,3726,4.421,3727,5.41,3728,4.421,3729,5.41,3730,6.198,3731,4.952,3732,5.41,3733,5.41,3734,4.421,3735,3.917,3736,3.917,3737,3.917,3738,3.917,3739,3.917,3740,3.917,3741,6.198,3742,5.673,3743,3.917,3744,3.917,3745,5.41,3746,3.917,3747,3.917,3748,3.917,3749,3.917,3750,3.917,3751,3.917,3752,3.917,3753,3.917,3754,3.917,3755,3.917,3756,3.917,3757,3.585,3758,3.14,3759,3.917,3760,3.917,3761,3.917,3762,3.917,3763,6.198,3764,5.41,3765,3.917,3766,3.917,3767,3.917,3768,5.41,3769,3.917,3770,5.673,3771,3.917,3772,3.917,3773,3.917,3774,3.917,3775,3.917,3776,3.585,3777,3.917,3778,3.917,3779,3.917,3780,3.917,3781,3.917,3782,3.338,3783,3.917,3784,3.917,3785,3.917,3786,3.917,3787,3.917,3788,3.917,3789,3.917,3790,3.917,3791,3.917,3792,5.41]],["title/components/LinkedIssueItemComponent.html",[0,0.078,154,0.945]],["body/components/LinkedIssueItemComponent.html",[0,0.134,1,0.903,2,0.918,3,0.096,4,0.088,5,0.718,6,1,7,0.98,8,0.941,9,0.08,11,0.867,14,1.227,15,1.918,16,0.867,17,1.429,18,1.362,19,0.867,20,0.733,21,0.914,23,0.914,25,0.104,26,0.534,27,1.262,30,0.818,33,0.644,37,0.715,39,0.488,40,0.008,41,0.546,42,0.173,43,0.385,45,0.5,46,0.659,49,0.571,50,1.13,53,0.247,54,0.322,56,0.112,57,0.011,59,0.914,60,1.204,62,1.279,82,2.563,86,5.66,88,1.169,91,2.174,92,0.98,93,1.202,94,1.178,95,0.749,96,1.652,97,0.98,98,1.97,99,0.885,100,0.765,101,1.03,102,1.253,103,0.903,104,0.98,105,0.903,106,0.885,107,0.98,108,0.903,109,0.98,110,0.849,111,0.867,112,0.948,113,0.885,114,0.849,115,0.996,116,1.561,117,0.867,118,0.08,119,0.885,120,1.023,121,0.903,122,0.903,123,0.814,124,0.98,125,0.867,126,0.98,127,0.903,128,0.98,129,0.903,130,0.98,131,0.885,132,0.98,133,0.885,134,0.98,135,0.63,136,0.98,137,0.885,138,0.429,139,0.98,140,0.903,141,0.98,142,0.903,143,1.561,144,0.903,145,0.98,146,0.903,147,1.561,148,0.903,149,0.98,150,0.922,151,0.98,152,0.867,153,0.98,154,1.554,155,1.561,156,1.8,157,0.832,158,0.98,159,0.903,160,1.305,161,1.359,162,0.903,163,0.98,164,0.867,165,0.512,166,0.98,167,0.885,168,0.903,169,0.96,170,0.903,171,0.98,172,0.885,173,0.885,174,0.867,175,0.98,176,0.885,177,0.98,178,0.832,179,0.703,180,0.867,181,0.98,182,0.867,183,1.178,184,0.885,185,0.903,186,0.595,187,0.849,188,0.688,189,0.903,190,0.903,191,0.903,192,0.98,193,0.903,194,1.431,195,0.98,196,0.903,197,0.98,198,0.849,199,0.885,200,0.903,201,1.154,202,0.98,203,0.903,204,0.96,205,0.849,206,0.885,207,0.98,208,0.867,209,0.98,210,0.867,211,0.98,212,0.849,213,0.98,214,0.849,215,0.98,216,0.849,217,0.922,218,0.98,219,0.005,220,0.005,223,0.374,225,3.187,232,2.75,262,2.226,263,2.226,288,0.849,313,2.153,366,1.359,464,6.609,496,1.604,509,1.97,512,1.311,532,3.779,534,1.131,545,1.073,569,3.125,580,3.187,638,2.029,723,1.626,750,1.529,758,3.187,760,2.75,763,2.226,765,2.671,766,3.074,777,3.488,782,2.987,784,2.52,787,2.556,788,1.941,789,1.816,790,2.088,800,1.726,803,3.905,830,1.816,833,1.43,865,2.279,971,2.733,990,4.293,991,4.244,1011,1.985,1188,2.297,1190,2.658,1191,1.816,1192,1.985,1197,3.875,1258,3.422,1483,3.875,1608,2.671,1665,5.355,1967,2.793,2036,2.466,2268,3.533,2666,3.094,2668,3.86,2711,2.297,2736,4.902,2760,3.289,2895,2.466,3305,2.671,3306,5.629,3307,3.875,3314,3.422,3316,3.533,3317,3.86,3372,3.289,3793,7.874,3794,6.044,3795,7.496,3796,6.044,3797,4.293,3798,6.94,3799,7.496,3800,4.356,3801,6.044,3802,4.356,3803,4.356,3804,6.044,3805,6.044,3806,4.356,3807,4.356,3808,4.356,3809,4.356,3810,6.044,3811,6.044,3812,4.356,3813,4.356,3814,4.356,3815,4.356,3816,6.044,3817,4.356,3818,4.356,3819,4.356,3820,4.356,3821,3.86,3822,4.356,3823,4.356]],["title/interfaces/ListId.html",[118,0.084,1468,1.806]],["body/interfaces/ListId.html",[0,0.139,2,0.628,3,0.105,4,0.096,9,0.087,25,0.113,26,0.567,40,0.008,42,0.208,45,0.545,49,0.652,51,1.122,56,0.236,80,2.985,84,1.883,87,0.754,101,0.854,115,0.783,118,0.133,120,0.773,123,1.454,156,1.276,165,1.117,204,0.888,219,0.005,220,0.005,223,0.408,228,2.687,231,0.928,255,0.959,276,1.93,312,1.37,366,2.087,455,1.981,509,2.149,512,2.573,526,1.26,535,2.739,545,1.468,546,1.461,563,3.199,566,2.09,572,2.023,573,2.506,588,5.233,592,2.244,599,1.137,605,0.8,634,1.811,688,1.4,750,1.917,759,3.783,775,2.987,809,2.384,815,2.594,824,3.376,832,3.966,833,2.384,838,3.159,861,3.376,886,2.149,938,2.211,961,2.914,974,3.379,1005,3.376,1062,1.849,1071,4.575,1226,2.985,1243,2.594,1246,1.837,1259,3.075,1307,2.594,1364,2.211,1421,3.17,1468,3.08,1472,1.837,1473,2.149,1481,3.272,1501,2.09,1580,2.914,1608,3.934,1741,2.796,1742,3.964,1770,1.709,1803,2.675,1840,2.821,1891,3.199,1895,3.775,1897,4.099,1902,4.113,1904,2.348,1969,3.047,2006,3.632,2015,2.506,2083,2.796,2084,4.273,2132,2.914,2134,2.424,2285,2.424,2399,4.736,2633,3.199,2634,3.047,2639,4.556,2821,4.888,2826,4.113,2843,3.199,2844,3.199,3824,3.047,3825,5.89,3826,5.89,3827,5.203,3828,4.844,3829,5.87,3830,3.588,3831,3.588,3832,3.376,3833,3.855,3834,3.855,3835,3.855,3836,3.855,3837,3.588,3838,5.203,3839,3.047,3840,5.203,3841,5.203,3842,4.844,3843,5.203,3844,3.855,3845,3.855,3846,5.203,3847,3.855,3848,3.855,3849,3.855,3850,3.855,3851,3.855,3852,3.855,3853,3.855,3854,3.855,3855,3.855,3856,3.855,3857,3.855,3858,3.588,3859,3.588,3860,3.588,3861,3.588,3862,3.588,3863,3.588,3864,3.588,3865,3.376,3866,3.855,3867,3.855,3868,3.855,3869,3.855,3870,3.855,3871,3.855,3872,3.855,3873,3.855]],["title/interfaces/ListParams.html",[118,0.084,1741,2.683]],["body/interfaces/ListParams.html",[0,0.125,2,0.638,3,0.106,4,0.097,9,0.088,25,0.115,26,0.572,40,0.008,42,0.206,43,0.691,45,0.554,49,0.654,51,1.131,56,0.236,80,2.246,84,2.568,87,0.762,101,0.762,115,0.796,118,0.134,120,0.69,123,1.67,156,0.96,165,1.105,204,0.897,219,0.005,220,0.005,223,0.414,228,2.621,231,0.938,255,0.965,276,1.95,312,1.391,366,2.054,455,2.012,509,2.182,512,2.354,526,1.279,535,3.292,545,1.466,546,1.484,563,4.363,566,2.851,572,2.034,573,2.544,588,4.363,592,2.256,599,1.75,605,0.804,634,1.83,688,1.421,750,1.923,759,3.691,775,2.998,809,2.403,815,2.634,824,3.428,832,3.306,833,2.403,838,3.179,861,3.428,886,3.538,938,2.246,961,2.959,974,3.406,1005,3.428,1062,2.353,1071,3.814,1226,3.016,1243,2.634,1246,1.865,1259,2.313,1307,2.634,1364,2.246,1421,3.203,1468,2.9,1472,1.865,1473,2.182,1481,3.306,1501,2.851,1580,2.959,1608,2.959,1741,3.814,1742,3.995,1770,1.736,1803,2.702,1840,2.851,1891,3.248,1895,3.814,1897,3.417,1902,5.388,1904,3.617,1969,3.094,2006,2.732,2015,2.544,2083,2.84,2084,4.307,2132,2.959,2134,2.462,2285,2.462,2399,4.143,2633,3.248,2634,3.094,2639,3.428,2821,4.363,2826,3.094,2843,3.248,2844,3.248,3824,3.094,3825,5.257,3826,5.257,3827,3.914,3828,4.894,3829,5.907,3830,3.644,3831,3.644,3832,3.428,3833,3.914,3834,3.914,3835,3.914,3836,3.914,3837,3.644,3838,5.257,3839,3.094,3840,5.257,3841,5.257,3842,4.894,3843,5.257,3844,3.914,3845,3.914,3846,5.257,3847,3.914,3848,3.914,3849,3.914,3850,3.914,3851,3.914,3852,3.914,3853,3.914,3854,3.914,3855,3.914,3856,3.914,3857,3.914,3858,3.644,3859,3.644,3860,3.644,3861,3.644,3862,3.644,3863,3.644,3864,3.644,3865,3.428,3866,5.257,3867,3.914,3868,3.914,3869,3.914,3870,3.914,3871,3.914,3872,3.914,3873,3.914]],["title/components/LoginComponent.html",[0,0.078,157,0.87]],["body/components/LoginComponent.html",[0,0.14,1,0.92,2,0.809,3,0.098,4,0.089,5,0.731,6,1.019,7,0.998,8,0.958,9,0.081,11,0.883,14,1.243,15,1.937,16,0.883,17,1.43,18,1.363,19,1.394,20,0.747,21,0.926,23,0.926,25,0.106,26,0.541,30,0.828,33,0.656,37,0.763,39,0.497,40,0.008,41,0.549,42,0.154,43,0.392,45,0.509,46,1.06,49,0.466,50,1.31,51,1.083,53,0.242,54,0.328,56,0.114,57,0.011,59,1.06,60,1.226,62,1.295,78,1.728,81,4.18,84,1.758,85,1.596,88,0.747,89,1.758,90,2.721,91,1.596,92,0.998,93,1.218,94,1.193,95,0.763,96,1.665,97,0.998,98,1.977,99,0.901,100,0.779,101,1.006,102,1.269,103,0.92,104,0.998,105,0.92,106,0.901,107,0.998,108,0.92,109,0.998,110,0.865,111,0.883,112,0.955,113,0.901,114,0.865,115,1.009,116,1.576,117,0.883,118,0.081,119,0.901,120,0.976,121,0.92,122,0.92,123,0.83,124,0.998,125,0.883,126,0.998,127,0.92,128,0.998,129,0.92,130,0.998,131,0.901,132,0.998,133,0.901,134,0.998,135,0.642,136,0.998,137,0.901,138,0.437,139,0.998,140,0.92,141,0.998,142,0.92,143,1.576,144,0.92,145,0.998,146,0.92,147,1.576,148,0.92,149,0.998,150,0.939,151,0.998,152,0.883,153,0.998,154,0.92,155,0.998,156,0.883,157,1.442,158,0.998,159,0.92,160,1.322,161,1.377,162,0.92,163,0.998,164,0.883,165,0.522,166,0.998,167,0.901,168,0.92,169,0.978,170,0.92,171,0.998,172,0.901,173,0.901,174,0.883,175,0.998,176,0.901,177,0.998,178,0.847,179,0.716,180,0.883,181,0.998,182,0.883,183,1.193,184,0.901,185,0.92,186,0.744,187,0.865,188,0.701,189,0.92,190,0.92,191,0.92,192,0.998,193,0.92,194,0.847,195,0.998,196,0.92,197,0.998,198,0.865,199,0.901,200,0.92,201,0.847,202,0.998,203,0.92,204,1.097,205,0.865,206,0.901,207,0.998,208,0.883,209,0.998,210,0.883,211,0.998,212,0.865,213,0.998,214,0.865,215,0.998,216,0.865,217,0.939,218,0.998,219,0.005,220,0.005,223,0.381,231,0.642,244,1.886,247,3.025,250,2.065,251,1.674,276,1.842,288,0.865,310,0.716,312,1.765,377,3.152,496,1.634,518,6.169,519,4.978,521,4.965,532,3.798,537,1.85,549,3.122,596,3.341,612,3.341,623,4.365,641,6.21,664,5.335,671,4.965,674,4.327,750,0.978,769,2.512,837,3.465,903,0.901,952,2.422,1040,2.481,1172,3.932,1192,2.481,1198,2.339,1250,3.323,1271,2.254,1397,4.844,1403,4.493,1540,2.422,1552,4.717,1632,1.85,1651,2.127,2448,3.932,2484,2.845,2492,3.932,2672,4.277,2742,3.35,3874,3.932,3875,5.424,3876,7.555,3877,6.121,3878,7.008,3879,6.121,3880,7.008,3881,4.717,3882,7.008,3883,6.21,3884,6.695,3885,3.599,3886,4.437,3887,4.437,3888,6.121,3889,5.424,3890,6.121,3891,6.121,3892,6.121,3893,7.008,3894,6.121,3895,4.437,3896,4.437,3897,4.437,3898,4.437,3899,6.21,3900,4.437,3901,6.121,3902,4.437,3903,4.437,3904,4.437,3905,7.008,3906,4.437,3907,3.932,3908,4.437,3909,6.121,3910,4.437,3911,6.121,3912,4.437,3913,3.932,3914,3.932,3915,4.437,3916,4.437,3917,4.965,3918,4.437,3919,4.437]],["title/components/MarkdownEditorComponent.html",[0,0.078,159,0.945]],["body/components/MarkdownEditorComponent.html",[0,0.149,1,1.003,2,0.859,3,0.106,4,0.098,5,0.798,6,1.111,7,1.088,8,1.045,9,0.089,11,0.963,16,0.963,17,1.434,18,1.368,19,0.963,20,0.815,21,0.982,23,0.982,25,0.115,26,0.574,30,0.879,37,0.711,40,0.008,41,0.547,42,0.161,45,0.555,46,0.732,49,0.495,50,0.905,51,0.748,53,0.143,54,0.357,56,0.125,57,0.012,62,1.374,78,1.366,87,0.569,88,0.815,92,1.088,93,1.292,94,1.265,95,0.832,96,1.726,97,1.088,98,2.01,99,0.983,100,0.85,101,1.027,102,1.346,103,1.003,104,1.088,105,1.003,106,0.983,107,1.088,108,1.003,109,1.088,110,0.943,111,0.963,112,0.984,113,0.983,114,0.943,115,1.07,116,1.648,117,0.963,118,0.089,119,0.983,120,0.987,121,1.003,122,1.003,123,0.905,124,1.088,125,0.963,126,1.088,127,1.003,128,1.088,129,1.003,130,1.088,131,0.983,132,1.088,133,0.983,134,1.088,135,0.7,136,1.088,137,0.983,138,0.477,139,1.088,140,1.003,141,1.088,142,1.003,143,1.648,144,1.003,145,1.088,146,1.003,147,1.648,148,1.003,149,1.088,150,1.024,151,1.088,152,0.963,153,1.088,154,1.003,155,1.088,156,0.963,157,0.924,158,1.088,159,1.623,160,1.973,161,1.461,162,1.003,163,1.088,164,0.963,165,0.569,166,1.088,167,0.983,168,1.003,169,1.066,170,1.003,171,1.088,172,0.983,173,0.983,174,0.963,175,1.088,176,0.983,177,1.088,178,0.924,179,0.781,180,0.963,181,1.088,182,0.963,183,1.265,184,0.983,185,1.003,186,0.64,187,0.943,188,1.443,189,1.003,190,1.003,191,1.003,192,1.088,193,1.003,194,0.924,195,1.088,196,1.003,197,1.088,198,0.943,199,0.983,200,1.003,201,0.924,202,1.088,203,1.003,204,0.67,205,0.943,206,0.983,207,1.088,208,0.963,209,1.088,210,0.963,211,1.088,212,0.943,213,1.088,214,0.943,215,1.088,216,0.943,217,1.024,218,1.088,219,0.005,220,0.005,223,0.415,272,1.87,420,4.612,446,6.353,448,6.626,550,3.6,723,1.522,742,2.967,763,2.391,1071,4.609,1173,3.542,1174,2.391,1192,1.589,1193,3.437,1244,3.982,1271,1.782,1541,3.654,1770,1.741,1973,2.51,2000,5.022,2115,3.257,2572,5.269,2661,2.641,2664,2.391,2781,4.903,2785,5.803,2820,4.37,2831,5.267,2936,5.754,3261,3.925,3314,3.676,3546,3.437,3758,4.612,3920,6.626,3921,3.654,3922,6.493,3923,6.493,3924,6.494,3925,5.754,3926,7.329,3927,7.832,3928,7.329,3929,4.839,3930,6.493,3931,4.839,3932,6.493,3933,3.676,3934,4.839,3935,6.493,3936,6.493,3937,4.839,3938,6.493,3939,4.839,3940,4.839,3941,4.839,3942,3.257,3943,4.839]],["title/components/MarkdownPreviewComponent.html",[0,0.078,162,0.945]],["body/components/MarkdownPreviewComponent.html",[0,0.147,1,1.085,2,0.905,3,0.115,4,0.106,5,0.863,6,1.202,7,1.178,8,1.13,9,0.096,11,1.041,14,1.389,15,2.106,16,1.041,17,1.438,18,1.372,19,1.041,20,0.882,21,1.035,23,1.035,25,0.125,33,0.775,37,0.476,40,0.008,41,0.561,42,0.115,46,0.792,49,0.616,53,0.155,54,0.387,56,0.135,57,0.013,60,1.447,62,1.447,88,0.882,92,1.178,93,1.361,94,1.333,95,0.9,96,1.781,97,1.178,98,2.039,99,1.063,100,0.92,101,1.044,102,1.418,103,1.085,104,1.178,105,1.085,106,1.063,107,1.178,108,1.085,109,1.178,110,1.02,111,1.041,112,1.01,113,1.063,114,1.02,115,1.128,116,1.714,117,1.041,118,0.096,119,1.063,120,0.996,121,1.085,122,1.085,123,0.979,124,1.178,125,1.041,126,1.178,127,1.085,128,1.178,129,1.085,130,1.178,131,1.063,132,1.178,133,1.063,134,1.178,135,0.758,136,1.178,137,1.063,138,0.516,139,1.178,140,1.085,141,1.178,142,1.085,143,1.714,144,1.085,145,1.178,146,1.085,147,1.714,148,1.085,149,1.178,150,1.108,151,1.178,152,1.041,153,1.178,154,1.085,155,1.178,156,1.041,157,0.999,158,1.178,159,1.085,160,1.995,161,1.539,162,1.675,163,1.178,164,1.041,165,0.616,166,1.178,167,1.063,168,1.085,169,1.154,170,1.085,171,1.178,172,1.063,173,1.063,174,1.041,175,1.178,176,1.063,177,1.178,178,0.999,179,0.845,180,1.041,181,1.178,182,1.041,183,1.333,184,1.063,185,1.085,186,0.674,187,1.02,188,0.827,189,1.085,190,1.085,191,1.085,192,1.178,193,1.085,194,0.999,195,1.178,196,1.085,197,1.178,198,1.02,199,1.063,200,1.085,201,0.999,202,1.178,203,1.085,204,0.725,205,1.02,206,1.063,207,1.178,208,1.041,209,1.178,210,1.041,211,1.178,212,1.02,213,1.178,214,1.02,215,1.178,216,1.02,217,1.108,218,1.178,219,0.006,220,0.006,223,0.449,310,1.104,451,5.549,723,1.603,763,2.519,971,3.094,1011,1.719,1099,1.719,1901,3.357,2205,5.165,2572,4.195,2573,3.953,2614,5.165,2747,2.509,3302,3.211,3407,4.639,3920,5.549,3942,4.604,3944,4.639,3945,6.841,3946,7.62,3947,6.841,3948,7.62,3949,5.236,3950,4.246]],["title/classes/MultiSourceList.html",[57,0.012,3951,3.069]],["body/classes/MultiSourceList.html",[0,0.12,2,0.434,3,0.072,4,0.168,9,0.06,13,1.333,14,0.666,15,1.361,17,0.485,18,0.464,20,0.552,21,0.496,22,1.404,23,0.496,24,1.404,25,0.078,26,0.435,27,1.569,28,1.443,30,0.666,33,0.728,35,2.053,37,0.801,39,0.788,40,0.008,41,0.44,42,0.193,43,0.726,45,0.88,46,1.159,49,0.668,50,1.228,51,1.143,53,0.233,54,0.242,55,1.008,56,0.169,57,0.012,58,1.153,59,1.159,60,0.907,64,1.333,84,1.951,87,0.981,88,1.245,100,0.576,112,0.593,114,1.152,118,0.108,123,1.228,165,0.386,179,1.273,186,0.842,187,0.639,188,1.433,219,0.007,220,0.004,223,0.282,231,1.11,232,1.951,242,1.526,244,1.69,249,1.333,252,1.483,255,1.106,279,1.031,296,1.621,310,1.326,366,1.941,534,0.852,535,2.788,545,1.185,546,2.019,550,1.404,558,2.291,564,2.687,571,1.572,599,1.177,605,0.833,618,4.028,634,2.226,649,2.897,688,2.177,717,1.208,722,1.237,725,2.812,739,3.019,750,0.723,758,3.463,760,1.951,761,2.208,766,3.307,775,2.989,777,3.276,780,2.511,784,2.464,787,2.177,788,1.053,789,1.368,790,1.572,800,1.299,809,2.698,823,2.226,831,3.653,841,1.857,874,2.053,886,1.483,903,0.666,920,1.79,923,3.314,938,2.291,941,2.787,974,2.291,984,1.903,988,2.787,1007,1.368,1008,1.299,1009,1.368,1011,1.617,1028,1.368,1035,2.208,1040,1.077,1062,1.704,1065,3.057,1237,2.418,1420,2.291,1430,2.906,1447,2.596,1468,3.306,1472,1.268,1481,1.673,1499,1.93,1501,2.165,1507,2.226,1510,2.103,1511,2.103,1515,1.93,1539,3.157,1561,2.906,1574,3.586,1660,3.015,1693,4.212,1712,2.787,1734,1.79,1740,2.011,1742,3.226,1743,2.011,1770,2.126,1803,1.368,1805,3.897,1832,1.93,1845,1.857,1848,2.103,1866,3.624,1897,4.042,1904,3.479,2006,1.857,2082,2.208,2083,1.93,2084,1.93,2092,2.103,2156,3.789,2169,2.011,2539,5.443,2772,2.208,2796,3.019,2837,5.268,2838,3.789,2840,2.103,2848,4.421,2862,3.497,2895,1.857,3555,2.011,3797,3.497,3839,2.103,3881,4.421,3933,1.857,3942,3.314,3951,4.976,3952,5.691,3953,5.955,3954,3.717,3955,3.717,3956,5.057,3957,4.463,3958,5.315,3959,4.463,3960,4.96,3961,4.463,3962,4.923,3963,4.198,3964,4.96,3965,4.96,3966,3.28,3967,4.923,3968,2.906,3969,3.717,3970,3.717,3971,3.717,3972,3.717,3973,4.363,3974,2.906,3975,5.789,3976,3.28,3977,3.717,3978,3.28,3979,3.717,3980,3.28,3981,3.28,3982,3.157,3983,3.717,3984,3.717,3985,3.28,3986,3.717,3987,3.717,3988,3.717,3989,3.28,3990,3.28,3991,3.717,3992,3.717,3993,3.28,3994,3.28,3995,2.477,3996,2.011,3997,3.019,3998,4.463,3999,3.717,4000,2.477,4001,2.33,4002,2.477,4003,2.477,4004,2.477,4005,3.717,4006,3.717,4007,2.477,4008,2.477,4009,2.477,4010,2.477,4011,3.717,4012,2.477,4013,3.717,4014,2.477,4015,2.477,4016,2.477,4017,2.477,4018,2.477,4019,2.477,4020,2.477,4021,2.477,4022,2.477,4023,2.477,4024,2.477,4025,2.477,4026,2.477,4027,2.477,4028,3.717,4029,4.463,4030,2.477,4031,2.477,4032,2.33,4033,2.477,4034,2.477,4035,2.477,4036,2.33,4037,2.477,4038,2.477,4039,2.477,4040,4.463,4041,2.477,4042,2.477,4043,2.477,4044,2.477,4045,2.477,4046,2.477,4047,2.477,4048,2.477,4049,2.477,4050,2.477,4051,2.477,4052,2.477,4053,2.477,4054,2.477,4055,2.208,4056,3.157,4057,4.198,4058,2.33,4059,2.33,4060,2.33,4061,3.497,4062,2.33,4063,2.33,4064,2.33,4065,2.477,4066,2.33,4067,2.477,4068,2.477,4069,3.497,4070,2.477,4071,2.477,4072,4.198,4073,2.477,4074,2.33,4075,2.477,4076,2.477,4077,3.717,4078,3.717,4079,2.477,4080,2.33,4081,2.477,4082,2.477,4083,2.477,4084,2.477,4085,2.477,4086,2.477,4087,2.477,4088,2.477,4089,3.717,4090,2.477,4091,2.477,4092,2.477,4093,2.477,4094,2.477,4095,2.477,4096,3.717,4097,2.477,4098,2.477,4099,2.477,4100,2.477,4101,2.477,4102,2.477,4103,2.477,4104,2.477,4105,2.477,4106,2.477,4107,2.477,4108,2.477,4109,3.717,4110,2.477,4111,2.477,4112,2.477,4113,2.477,4114,2.477,4115,2.33,4116,2.477]],["title/classes/NodeCache.html",[57,0.012,1923,2.923]],["body/classes/NodeCache.html",[3,0.051,4,0.047,9,0.043,14,0.767,15,1.045,19,0.946,25,0.056,26,0.483,27,0.636,30,0.511,33,0.346,37,0.583,39,0.835,40,0.008,41,0.366,42,0.186,43,0.567,45,0.942,46,0.353,50,0.437,51,0.735,53,0.177,56,0.154,57,0.016,59,1.176,60,1.045,64,1.536,70,2.597,80,2.214,84,0.926,87,0.914,88,0.801,91,1.359,93,0.752,100,0.411,106,1.218,112,0.281,118,0.043,123,1.315,165,0.943,179,0.968,186,0.716,219,0.003,220,0.003,223,0.201,224,1.001,225,3.385,228,0.751,231,1.341,232,2.165,244,1.859,255,1.032,288,0.927,310,1.311,312,2.243,366,1.75,455,0.975,482,1.499,520,2.14,534,0.607,535,2.549,542,1.709,544,1.835,545,1.338,546,2.431,554,1.028,560,1.232,564,1.276,566,1.028,569,1.576,570,2.597,571,2.876,572,1.495,592,1.045,599,1.435,605,0.892,613,1.765,614,2.509,618,2.318,619,0.821,620,3.05,638,2.156,669,2.14,672,2.693,688,2.392,702,0.926,717,0.861,721,1.765,723,0.886,749,1.232,750,1.926,754,2.684,758,1.993,759,3.518,760,1.497,764,2.854,766,2.422,769,2.693,771,1.765,773,4.56,774,1.323,775,2.938,777,3.473,782,3.964,784,2.817,788,0.751,792,1.499,800,1.497,808,1.993,809,2.554,813,1.137,814,1.001,815,2.597,816,1.993,817,1.12,823,1.057,830,0.975,831,2.701,838,1.933,841,3.397,874,3.344,884,1.12,886,2.152,903,0.767,920,1.276,938,1.759,944,3.397,952,2.597,969,1.499,974,2.792,988,1.323,995,1.573,1000,1.375,1011,2.905,1028,0.975,1031,3.094,1040,0.767,1050,1.323,1062,2.095,1070,1.375,1095,3.094,1120,1.499,1205,2.597,1237,2.875,1239,1.811,1241,1.276,1246,1.461,1250,1.028,1307,1.276,1364,2.987,1422,3.05,1447,2.509,1463,2.224,1468,2.165,1473,1.057,1477,1.573,1481,1.192,1489,3.275,1491,2.224,1494,1.66,1499,2.224,1501,3.612,1515,2.224,1531,4.548,1574,1.276,1607,2.063,1616,1.573,1626,1.573,1628,3.563,1630,1.375,1649,1.993,1660,1.192,1675,1.573,1676,1.896,1677,5.235,1678,4.433,1679,3.065,1680,1.896,1681,4.867,1682,1.896,1683,3.065,1684,3.065,1685,1.896,1686,1.896,1687,1.896,1688,1.896,1689,2.544,1690,1.896,1691,1.896,1692,3.065,1693,3.05,1694,1.896,1695,2.854,1696,3.065,1697,3.065,1699,3.859,1701,1.896,1702,3.379,1706,1.896,1707,4.531,1708,1.765,1712,4.113,1713,3.504,1714,1.765,1715,3.065,1716,1.896,1717,1.896,1718,1.896,1719,1.896,1721,1.896,1725,1.896,1727,1.765,1728,3.065,1729,1.896,1730,1.896,1732,1.896,1733,1.896,1734,2.063,1735,1.896,1738,5.161,1739,4.531,1740,1.433,1741,2.224,1742,1.276,1743,1.433,1744,3.937,1745,1.765,1746,2.684,1747,1.66,1748,1.66,1749,5.102,1750,2.318,1751,2.854,1752,1.993,1753,1.765,1754,1.66,1755,3.592,1756,2.684,1757,1.896,1758,1.765,1759,2.684,1760,1.499,1761,1.765,1762,1.765,1763,2.854,1764,1.765,1765,3.379,1766,1.66,1767,1.896,1768,1.896,1769,1.896,1770,2.158,1771,2.544,1772,1.66,1773,1.765,1774,1.66,1775,1.192,1776,1.896,1777,1.896,1778,3.065,1779,2.854,1780,1.765,1781,3.859,1782,3.859,1783,1.896,1784,1.896,1785,2.14,1786,3.065,1787,1.573,1788,1.896,1789,1.896,1790,1.765,1791,3.065,1792,1.896,1793,2.854,1794,1.896,1795,1.896,1796,2.423,1797,1.896,1798,1.896,1799,1.896,1800,1.896,1801,1.896,1802,1.573,1803,0.975,1804,5.207,1805,4.014,1806,1.765,1807,3.859,1808,4.433,1809,1.765,1810,1.433,1811,6.309,1812,1.896,1813,1.896,1814,1.896,1815,4.433,1816,1.896,1817,3.065,1818,1.896,1819,3.859,1820,3.065,1821,3.859,1822,1.896,1823,3.859,1824,1.896,1825,4.433,1826,1.896,1827,1.896,1828,1.896,1829,1.896,1830,1.765,1831,1.573,1832,1.375,1833,1.66,1834,1.896,1835,1.896,1836,3.859,1837,1.66,1838,1.896,1839,1.896,1840,2.093,1841,4.867,1842,1.896,1843,1.765,1844,1.765,1845,2.693,1846,1.896,1847,1.765,1848,2.423,1849,1.765,1850,1.896,1851,1.896,1852,4.433,1853,3.859,1854,3.859,1855,1.276,1856,1.765,1857,1.765,1858,1.66,1859,3.065,1860,3.859,1861,1.896,1862,1.896,1863,4.867,1864,1.896,1865,1.896,1866,3.68,1867,2.854,1868,1.896,1869,1.896,1870,3.859,1871,1.765,1872,3.065,1873,1.896,1874,1.896,1875,3.859,1876,1.433,1877,1.896,1878,1.896,1879,1.896,1880,1.896,1881,1.896,1882,3.065,1883,1.896,1884,1.896,1885,3.065,1886,1.896,1887,1.896,1888,1.896,1889,1.896,1890,1.896,1891,2.544,1892,3.592,1893,3.065,1894,1.896,1895,1.375,1896,1.896,1897,1.232,1898,3.065,1899,1.896,1900,1.765,1901,1.499,1902,3.05,1903,2.224,1904,3.339,1905,1.896,1906,1.896,1907,1.896,1908,1.896,1909,1.66,1910,1.896,1911,1.896,1912,1.896,1913,1.896,1914,1.896,1915,1.896,1916,1.896,1917,1.896,1918,1.896,1919,1.896,1920,1.896,1921,1.896,1922,1.896,1923,3.504,1924,1.896,1925,4.867,1926,1.896,1927,3.065,1928,1.896,1929,1.896,1930,1.765,1931,2.854,1932,1.765,1933,1.375,1934,1.896,1935,1.896,1936,1.896,1937,1.896,1938,4.433,1939,3.859,1940,4.433,1941,3.859,1942,1.896,1943,1.896,1944,1.896,1945,4.867,1946,1.896,1947,1.896,1948,3.859,1949,3.859,1950,3.859,1951,3.859,1952,1.66,1953,3.592,1954,1.896,1955,1.896,1956,1.896,1957,3.592,1958,1.896,1959,2.544,1960,1.896,1961,1.896,1962,1.896,1963,1.896,1964,3.065,1965,1.896,1966,1.896,1967,1.499,1968,1.896,1969,1.499,1970,1.896,1971,1.896,1972,1.896,1973,1.461,1974,1.896,1975,1.896,1976,1.896,1977,3.592,1978,1.896,1979,3.859,1980,3.859,1981,1.66,1982,1.896,1983,1.896,1984,1.896,1985,1.896,1986,1.896,1987,1.896,1988,1.896,1989,1.896,1990,1.896,1991,1.896,1992,1.896,1993,1.896,1994,1.896,1995,1.896,1996,1.896,1997,1.896,1998,1.765,1999,1.765,2000,1.499,2001,1.765,2002,1.433,2003,3.678,2004,1.66,2005,1.896,2006,2.14,2007,1.66,2008,2.684,2009,3.065,2010,2.318,2011,2.854,2012,1.896,2013,1.896,2014,1.765,2015,2.509,2016,3.065,2017,2.854,2018,1.896,2019,1.896,2020,2.854,2021,1.896,2022,1.896,2023,1.896,2024,3.065,2025,2.854,2026,3.065,2027,3.065,2028,1.896,2029,1.896,2030,1.896,2031,1.896,2032,2.224,2033,1.896,2034,1.66,2035,1.896,2036,1.323,2037,1.323,2038,1.896,2039,1.896,2040,1.896,2041,1.896,2042,1.896,2043,1.896,2071,3.349,4117,3.779,4118,3.779,4119,3.779,4120,2.337,4121,2.337,4122,2.337]],["title/components/NodeDetailsComponent.html",[0,0.078,164,0.907]],["body/components/NodeDetailsComponent.html",[0,0.152,1,0.578,2,0.917,3,0.061,4,0.056,5,0.46,6,0.64,7,0.627,8,0.602,9,0.051,11,0.555,14,0.883,15,1.477,16,0.555,17,1.4,18,1.329,19,1.063,20,1.167,21,0.657,23,0.657,25,0.067,26,0.384,27,1.482,30,0.588,33,0.412,36,2.655,37,0.822,39,0.487,40,0.008,41,0.583,42,0.197,43,0.384,45,0.934,46,1.276,49,0.654,50,1.4,51,1.158,53,0.241,54,0.206,55,0.857,56,0.138,57,0.007,59,1.288,60,0.771,62,0.92,64,1.133,77,1.912,78,0.787,82,1.641,85,1.922,87,0.957,88,0.469,91,1.564,92,0.627,93,0.865,94,0.847,95,0.479,96,1.33,97,0.627,98,1.77,99,0.566,100,0.49,101,0.925,102,0.901,103,0.578,104,0.627,105,0.578,106,0.566,107,0.627,108,0.578,109,0.627,110,0.543,111,0.555,112,0.788,113,0.566,114,1.275,115,0.717,116,1.202,117,0.555,118,0.159,119,0.566,120,0.907,121,0.578,122,0.578,123,0.521,124,0.627,125,0.555,126,0.627,127,0.578,128,0.627,129,0.578,130,0.627,131,0.566,132,0.627,133,0.566,134,0.627,135,0.403,136,0.627,137,0.566,138,0.275,139,0.627,140,0.578,141,0.627,142,0.578,143,1.202,144,0.578,145,0.627,146,0.578,147,1.202,148,0.578,149,0.627,150,0.59,151,0.627,152,0.555,153,0.627,154,0.578,155,0.627,156,0.555,157,0.532,158,0.627,159,0.578,160,0.939,161,0.978,162,0.578,163,0.627,164,1.201,165,1.06,166,0.627,167,0.566,168,0.578,169,0.614,170,0.578,171,0.627,172,0.566,173,0.566,174,0.555,175,0.627,176,0.566,177,0.627,178,1.249,179,0.45,180,0.555,181,0.627,182,0.865,183,0.847,184,0.566,185,0.578,186,0.428,187,0.543,188,0.44,189,0.578,190,0.578,191,0.578,192,0.627,193,0.578,194,0.532,195,0.627,196,0.578,197,0.627,198,0.543,199,0.566,200,0.578,201,0.532,202,0.627,203,0.578,204,0.386,205,0.543,206,0.566,207,0.627,208,0.555,209,0.627,210,0.555,211,0.627,212,0.543,213,0.627,214,0.543,215,0.627,216,0.543,217,0.59,218,0.627,219,0.004,220,0.004,223,0.643,231,0.629,244,1.528,246,3.534,247,3.701,250,2.023,251,1.052,255,0.924,263,1.968,269,2.023,279,1.366,288,0.543,310,0.45,384,1.966,408,1.336,413,1.578,423,1.641,427,2.373,443,5.136,455,2.728,496,1.027,526,1.6,532,3.135,541,1.966,545,0.933,549,4.154,550,2.584,592,1.202,599,1.278,605,0.683,622,1.98,667,3.294,675,1.71,716,1.422,723,1.625,763,1.601,775,1.836,787,1.027,789,1.162,813,1.308,825,2.487,826,1.226,830,1.162,832,1.422,833,1.982,834,1.788,835,1.788,837,2.461,863,1.133,865,1.755,870,1.297,884,2.084,900,2.461,903,0.883,922,3.338,983,2.417,984,2.333,991,2.461,1006,1.788,1007,1.162,1008,1.105,1009,1.162,1011,1.982,1025,3.526,1026,2.787,1027,2.926,1028,3.209,1029,2.787,1030,2.666,1031,2.461,1032,3.283,1039,3.526,1092,3.87,1093,3.796,1099,0.915,1152,2.105,1175,1.422,1192,1.428,1196,2.261,1226,1.297,1258,1.578,1259,1.336,1301,4.642,1305,1.98,1312,5.348,1332,4.735,1351,3.852,1355,4.735,1401,2.105,1402,1.578,1408,3.796,1409,2.926,1410,4.334,1411,5.623,1412,4.334,1413,4.334,1414,3.796,1415,2.666,1416,3.145,1418,4.287,1419,4.666,1440,2.787,1441,3.526,1442,5.32,1443,4.802,1444,3.852,1446,1.98,1468,2.117,1549,4.642,1550,2.105,1593,3.526,1630,2.558,1666,2.983,1773,2.105,1855,2.373,1900,3.283,1933,1.641,1959,1.876,1967,1.788,1973,1.68,2070,4.735,2111,3.283,2139,4.062,2259,3.417,2285,1.422,2583,5.798,2595,3.852,2659,1.98,2814,2.261,2826,1.788,3027,1.422,3089,3.852,3302,2.666,3452,3.852,3456,2.261,4123,6.444,4124,2.105,4125,5.344,4126,4.348,4127,4.735,4128,4.735,4129,6.143,4130,5.344,4131,5.344,4132,6.036,4133,6.036,4134,6.036,4135,6.036,4136,6.036,4137,6.036,4138,4.348,4139,6.036,4140,4.348,4141,2.788,4142,4.348,4143,2.788,4144,2.788,4145,2.788,4146,2.788,4147,3.852,4148,2.788,4149,3.088,4150,2.788,4151,2.788,4152,2.788,4153,2.788,4154,2.788,4155,2.788,4156,4.348,4157,2.788,4158,2.788,4159,2.788,4160,2.788,4161,2.788,4162,2.788,4163,2.788,4164,2.788,4165,2.788,4166,2.788,4167,2.788,4168,2.788,4169,2.788,4170,2.788,4171,2.788,4172,2.788,4173,2.788,4174,2.788,4175,2.788,4176,2.788,4177,5.798,4178,7.401,4179,5.873,4180,3.852,4181,3.852,4182,2.47,4183,2.788,4184,2.788,4185,2.788,4186,2.788,4187,2.788,4188,2.788,4189,4.348,4190,5.873,4191,2.788,4192,4.348,4193,2.788,4194,4.348,4195,2.788,4196,2.788,4197,2.788,4198,2.788,4199,2.788,4200,2.788,4201,2.788,4202,4.348,4203,2.788,4204,2.788,4205,4.348,4206,4.348,4207,2.788,4208,2.788,4209,5.344,4210,4.348,4211,2.788,4212,2.788,4213,2.788,4214,2.788,4215,2.788,4216,6.933,4217,4.348,4218,4.348,4219,4.348,4220,2.788,4221,6.036,4222,4.348,4223,6.933,4224,2.788,4225,4.348,4226,2.788,4227,2.788,4228,4.348,4229,4.348,4230,2.788,4231,4.348,4232,2.788,4233,2.788,4234,2.788,4235,2.788,4236,2.788,4237,2.788,4238,2.788,4239,2.788,4240,2.788,4241,2.788,4242,4.348,4243,2.788,4244,2.788,4245,2.788,4246,6.036,4247,5.344,4248,2.788]],["title/components/NodeDetailsPageComponent.html",[0,0.078,167,0.926]],["body/components/NodeDetailsPageComponent.html",[0,0.134,1,1.002,2,0.858,3,0.106,4,0.097,5,0.797,6,1.109,7,1.087,8,1.043,9,0.089,11,0.961,14,1.317,15,2.024,16,0.961,17,1.434,18,1.367,19,0.961,20,0.814,21,0.981,23,0.981,25,0.115,26,0.573,30,0.878,33,0.715,37,0.742,39,0.726,40,0.008,41,0.575,42,0.18,43,0.573,45,0.554,46,0.981,49,0.597,50,1.369,51,1.132,53,0.216,54,0.357,56,0.124,57,0.012,59,0.981,60,1.336,62,1.372,88,0.814,92,1.087,93,1.291,94,1.264,95,0.831,96,1.725,97,1.087,98,2.01,99,0.981,100,0.849,101,1.026,102,1.345,103,1.002,104,1.087,105,1.002,106,0.981,107,1.087,108,1.002,109,1.087,110,0.942,111,0.961,112,0.983,113,0.981,114,0.942,115,1.069,116,1.647,117,0.961,118,0.089,119,0.981,120,0.986,121,1.002,122,1.002,123,0.904,124,1.087,125,0.961,126,1.087,127,1.002,128,1.087,129,1.002,130,1.087,131,0.981,132,1.087,133,0.981,134,1.087,135,0.699,136,1.087,137,0.981,138,0.639,139,1.087,140,1.002,141,1.087,142,1.002,143,1.647,144,1.002,145,1.087,146,1.002,147,1.647,148,1.002,149,1.087,150,1.022,151,1.087,152,0.961,153,1.087,154,1.002,155,1.087,156,0.961,157,0.922,158,1.087,159,1.002,160,1.401,161,1.459,162,1.002,163,1.087,164,0.961,165,0.988,166,1.087,167,1.59,168,1.002,169,1.065,170,1.002,171,1.087,172,0.981,173,0.981,174,0.961,175,1.087,176,0.981,177,1.087,178,0.922,179,0.78,180,0.961,181,1.087,182,0.961,183,1.264,184,0.981,185,1.002,186,0.639,187,0.942,188,0.763,189,1.002,190,1.002,191,1.002,192,1.087,193,1.002,194,0.922,195,1.087,196,1.002,197,1.087,198,0.942,199,0.981,200,1.002,201,0.922,202,1.087,203,1.002,204,0.669,205,0.942,206,0.981,207,1.087,208,0.961,209,1.087,210,0.961,211,1.087,212,0.942,213,1.087,214,0.942,215,1.087,216,0.942,217,1.022,218,1.087,219,0.005,220,0.005,255,0.8,288,0.942,312,2.517,442,3.098,443,2.736,444,3.253,455,3.876,456,6.348,496,1.78,532,3.884,596,3.541,599,1.752,775,2.515,833,2.405,865,2.405,922,3.309,1057,3.861,1058,4.127,1092,4.696,1148,2.638,1288,4.146,1289,3.861,2672,4.432,2711,3.421,3052,3.253,3492,4.282,3885,3.92,4123,5.972,4178,5.749,4179,3.92,4181,5.749,4190,3.92,4249,4.282,4250,7.324,4251,6.488,4252,6.488,4253,6.488,4254,6.488,4255,4.833,4256,4.833,4257,4.833,4258,4.833,4259,4.833]],["title/interfaces/NodeId.html",[118,0.084,775,1.566]],["body/interfaces/NodeId.html",[0,0.125,2,0.643,3,0.107,4,0.098,9,0.089,25,0.116,26,0.575,40,0.008,42,0.207,45,0.557,49,0.675,51,1.135,56,0.237,80,2.261,84,1.925,87,0.765,101,0.765,115,0.801,118,0.135,120,0.693,123,1.467,156,0.967,165,1.114,204,0.901,219,0.005,220,0.005,223,0.417,228,2.762,231,0.942,255,0.967,276,1.959,312,1.401,366,2.044,455,2.026,509,2.197,512,2.36,526,1.288,535,2.77,545,1.48,546,1.494,563,3.27,566,2.137,572,2.038,573,2.562,588,4.382,592,2.261,599,1.162,605,0.806,634,2.073,688,1.431,750,1.926,759,3.889,775,2.954,809,2.138,815,3.554,824,3.451,832,3.321,833,2.686,838,3.188,861,3.451,886,2.197,938,2.261,961,2.98,974,3.417,1005,3.451,1062,1.877,1071,3.831,1226,3.03,1243,2.652,1246,1.878,1259,2.329,1307,2.652,1364,2.261,1421,3.218,1468,2.909,1472,1.878,1473,2.944,1481,3.321,1501,2.137,1580,2.98,1608,2.98,1741,2.859,1742,4.008,1770,1.748,1803,2.715,1840,2.864,1891,3.27,1895,3.831,1897,3.433,1902,4.175,1904,2.401,1969,3.115,2006,2.751,2015,2.562,2083,2.859,2084,4.321,2132,2.98,2134,2.478,2285,2.478,2399,4.157,2633,3.27,2634,3.115,2639,3.451,2821,4.382,2826,3.115,2843,3.27,2844,3.27,3824,3.115,3825,5.956,3826,5.956,3827,3.941,3828,4.916,3829,5.923,3830,3.669,3831,3.669,3832,3.451,3833,3.941,3834,3.941,3835,3.941,3836,5.281,3837,4.916,3838,5.281,3839,3.115,3840,5.281,3841,5.281,3842,4.916,3843,5.281,3844,3.941,3845,3.941,3846,5.281,3847,3.941,3848,3.941,3849,3.941,3850,3.941,3851,3.941,3852,3.941,3853,3.941,3854,3.941,3855,3.941,3856,3.941,3857,3.941,3858,3.669,3859,3.669,3860,3.669,3861,3.669,3862,3.669,3863,3.669,3864,3.669,3865,3.451,3866,3.941,3867,3.941,3868,3.941,3869,3.941,3870,3.941,3871,3.941,3872,3.941,3873,3.941]],["title/interfaces/Position.html",[118,0.084,1066,1.853]],["body/interfaces/Position.html",[0,0.139,3,0.116,4,0.164,5,1.135,9,0.126,25,0.126,26,0.608,40,0.008,42,0.203,49,0.708,53,0.24,56,0.177,57,0.017,87,0.9,101,0.622,112,0.637,118,0.169,120,0.733,135,0.765,138,0.678,165,1.014,186,0.829,188,0.835,219,0.006,220,0.006,231,1.174,255,0.652,279,2.406,291,4.156,311,3.113,512,1.592,526,1.402,538,1.525,545,1.333,592,2.461,605,0.877,619,1.859,717,1.948,722,1.995,814,2.264,833,1.737,903,1.808,949,3.244,1062,2.486,1063,3.661,1066,3.717,1067,3.759,1090,1.995,1194,3.278,1202,4.506,1203,2.392,1204,2.995,1205,4.707,1206,5.074,1207,3.67,1208,3.301,1209,2.887,1210,2.535,1211,3.279,1212,3.301,1213,2.698,1214,2.789,1215,4.18,1216,4.277,1217,4.506,1218,3.244,1219,3.244,1220,3.244,1221,3.244,1222,3.244,1223,3.244,1224,3.244,1225,3.244,1226,3.205,1227,3.244,1228,3.244,1229,4.223,1230,3.67,1231,3.113,1232,3.113,1233,2.264,1234,3.759,1235,3.391,1236,3.391,1237,1.817,1238,2.462,1239,2.535,1240,3.244,1241,2.887,1242,2.535,1243,2.887,1244,3.244,1245,3.391,1246,2.044,1247,3.391,1248,2.698,1249,3.391,1250,2.327,1251,3.391,1252,2.887,1253,3.391,1254,3.244,1255,3.391,1256,4.335,1257,2.789,1258,2.995,1259,2.535,1260,3.899,1261,3.391,1262,3.391,1263,3.391,1264,4.053,1265,3.391,1266,4.416,1267,3.391,1268,3.391,1269,3.391,1270,3.244,1271,1.948,1272,3.899,1273,4.91,1274,3.391,1275,3.391,1276,4.416,1277,3.391,1278,4.416,1279,4.416,1280,3.391,1281,3.391,1282,4.18,1283,4.416,1284,3.244,1285,4.223,1286,4.416,1287,3.391,1288,4.592,1289,3.631,1290,3.391,1291,3.244,1292,3.391,1293,3.391,1294,3.391,1295,3.244,1296,4.053,1297,3.244,1298,2.887,1299,3.244,1300,2.789]],["title/interfaces/Positions.html",[118,0.084,4260,3.698]],["body/interfaces/Positions.html",[0,0.151,2,0.725,3,0.033,4,0.11,5,1.002,9,0.027,14,0.303,15,0.717,17,0.221,18,0.211,20,1.024,21,0.226,23,0.226,25,0.036,26,0.411,27,0.692,30,0.202,36,1.141,40,0.008,42,0.182,45,0.472,46,0.704,49,0.537,50,0.279,51,0.231,53,0.241,54,0.11,55,0.459,56,0.038,57,0.012,59,1.339,60,0.413,61,2.104,64,0.607,72,1.843,74,1.061,75,1.591,77,0.657,78,1.44,85,0.537,87,0.743,93,0.297,94,0.291,100,0.262,101,0.404,110,0.291,111,0.297,112,0.56,117,0.297,118,0.162,120,0.939,135,0.216,138,0.891,165,1.079,183,0.291,186,0.405,188,0.236,194,0.285,204,0.803,219,0.002,220,0.003,223,0.128,225,3.334,231,0.998,244,1.441,255,1.136,262,0.956,263,1.879,266,1.96,276,1.83,288,0.291,290,1.128,291,4.509,296,1.7,305,2.478,306,0.788,310,1.085,312,2.169,317,2.206,335,4.138,336,1.061,350,1.061,366,0.584,407,1.7,408,1.649,424,1.324,433,2.105,438,1.324,439,3.989,440,0.958,441,1.324,442,0.958,443,0.846,444,1.006,455,2.419,484,2.766,490,1.006,496,0.55,509,0.676,512,2.293,520,1.469,526,1.612,532,1.556,533,1.061,534,0.388,537,0.623,538,0.431,541,1.174,545,0.897,546,1.058,547,2.316,550,0.64,553,1.368,554,1.513,555,1.128,558,2.83,559,2.11,560,0.788,564,0.816,566,0.657,569,1.082,570,1.878,571,0.716,572,2.119,573,1.814,580,4.406,591,1.527,599,0.983,605,0.815,608,2.171,612,1.878,614,0.788,619,2.476,634,0.733,638,2.412,645,1.128,647,1.212,651,0.788,668,3.36,669,3.102,677,2.766,681,1.527,688,0.44,700,1.128,702,1.843,717,1.267,720,1.212,723,0.608,725,1.111,739,0.916,748,1.128,750,0.906,758,1.368,759,2.624,760,1.028,769,0.846,774,1.469,784,0.623,800,0.592,808,2.69,813,1.535,814,2.346,815,1.417,818,2.316,821,2.79,825,1.208,826,0.657,838,2.073,858,4.897,860,0.816,862,2.326,865,0.852,870,1.208,873,1.212,878,5.271,884,0.716,886,1.858,896,3.513,899,5.581,900,0.846,903,1.547,920,1.417,921,2.983,938,0.695,941,1.469,952,2.539,953,4.406,966,5.206,969,3.271,988,1.469,1003,3.899,1011,0.491,1028,1.082,1030,0.916,1037,2.105,1048,3.36,1049,4.321,1062,0.992,1063,2.875,1065,0.695,1066,2.733,1067,2.952,1069,0.607,1084,1.061,1090,0.979,1092,2.206,1094,1.96,1096,1.006,1097,2.738,1098,3.513,1099,1.13,1108,0.816,1171,2.137,1176,3.606,1185,2.105,1203,0.676,1205,0.816,1210,0.716,1211,1.713,1212,1.97,1213,0.762,1214,0.788,1215,0.816,1216,2.167,1230,1.649,1233,1.992,1237,2.51,1238,2.7,1239,0.716,1240,0.916,1241,1.417,1242,1.649,1246,1.33,1248,4.111,1250,1.141,1254,2.11,1256,0.846,1260,1.469,1272,1.469,1282,2.991,1285,2.11,1291,2.11,1301,2.206,1304,1.324,1307,0.816,1314,4.312,1399,1.527,1400,0.879,1401,1.128,1404,1.006,1419,3.131,1443,0.958,1447,2.167,1465,3.774,1473,0.676,1474,2.206,1484,1.006,1491,2.738,1539,0.958,1546,1.843,1547,2.52,1549,2.206,1550,1.128,1574,3.319,1584,4.743,1585,0.738,1626,2.766,1637,1.324,1641,4.009,1651,1.97,1668,2.598,1708,1.128,1734,0.816,1770,0.537,1775,1.324,1780,1.96,1785,0.846,1803,0.623,1840,0.657,1855,0.816,1856,1.128,1858,1.061,1903,0.879,1932,1.128,1967,2.206,1973,1.972,1977,1.128,1981,2.444,2000,1.664,2036,0.846,2099,1.212,2118,1.061,2144,1.006,2154,0.958,2166,0.958,2172,1.128,2174,2.316,2205,1.128,2214,1.212,2222,1.212,2228,2.598,2236,1.212,2246,1.128,2247,1.128,2248,1.128,2260,2.206,2298,2.316,2299,1.878,2302,1.747,2306,0.958,2307,1.747,2308,1.591,2311,0.958,2332,1.006,2333,0.958,2336,2.52,2396,4.4,2398,1.006,2399,1.948,2405,0.958,2452,1.212,2459,4.093,2461,1.212,2614,3.513,2627,1.324,2672,1.948,2685,3.131,2689,1.324,2692,3.049,2710,1.324,2711,1.368,2714,1.324,2851,0.916,2895,2.326,2919,1.324,2965,2.598,2967,1.212,2971,2.3,2972,1.128,2975,6.251,2980,1.006,2984,6.667,2985,5.206,2990,4.856,2991,4.521,2992,4.521,2997,1.006,3005,1.212,3009,1.212,3011,2.3,3013,3.049,3027,1.755,3028,4.138,3047,2.3,3048,1.212,3060,1.212,3074,3.641,3079,1.843,3081,1.324,3084,1.324,3098,2.598,3100,1.212,3101,3.103,3103,2.3,3111,2.105,3123,2.598,3125,1.212,3133,3.333,3139,1.324,3140,3.641,3174,2.3,3199,2.598,3222,3.271,3226,2.105,3230,1.843,3231,1.212,3303,1.324,3411,1.324,3419,2.3,3445,2.3,3507,1.128,3658,1.324,3693,1.843,3710,1.212,3723,1.747,3742,1.212,3757,1.212,3758,1.843,3776,4.138,3831,1.128,3837,1.128,3875,1.324,4179,1.212,4190,1.212,4260,6.317,4261,1.324,4262,5.102,4263,2.595,4264,2.595,4265,2.595,4266,2.595,4267,4.652,4268,2.595,4269,6.895,4270,1.494,4271,1.494,4272,1.494,4273,1.494,4274,1.324,4275,1.494,4276,1.494,4277,1.494,4278,1.494,4279,1.494,4280,1.494,4281,2.595,4282,1.494,4283,1.324,4284,1.324,4285,2.595,4286,4.11,4287,1.494,4288,1.494,4289,1.494,4290,3.44,4291,1.494,4292,1.494,4293,2.595,4294,1.494,4295,1.494,4296,1.494,4297,1.494,4298,1.494,4299,1.494,4300,2.595,4301,1.494,4302,1.494,4303,1.494,4304,1.494,4305,1.494,4306,1.494,4307,2.598,4308,1.324,4309,1.494,4310,1.494,4311,1.494,4312,1.494,4313,1.494,4314,1.494,4315,1.494,4316,1.494,4317,7.421,4318,1.494,4319,3.44,4320,1.494,4321,5.102,4322,1.494,4323,2.595,4324,1.494,4325,1.494,4326,2.595,4327,1.494,4328,1.494,4329,2.595,4330,1.494,4331,1.494,4332,1.494,4333,1.494,4334,4.11,4335,2.595,4336,5.102,4337,3.44,4338,1.747,4339,2.595,4340,2.595,4341,1.494,4342,2.598,4343,1.494,4344,1.494,4345,1.494,4346,1.494,4347,1.494,4348,1.494,4349,1.494,4350,1.324,4351,1.494,4352,1.494,4353,1.494,4354,1.494,4355,1.494,4356,1.494,4357,1.494,4358,1.494,4359,2.595,4360,1.494,4361,1.494,4362,1.494,4363,1.494,4364,1.494,4365,3.44,4366,1.494,4367,1.494,4368,2.595,4369,1.494,4370,2.595,4371,1.494,4372,3.44,4373,1.494,4374,1.494,4375,4.138,4376,4.652,4377,1.494,4378,2.595,4379,1.494,4380,2.595,4381,1.494,4382,1.494,4383,2.595,4384,1.494,4385,2.595,4386,2.595,4387,5.802,4388,6.537,4389,3.44,4390,3.44,4391,3.44,4392,4.11,4393,2.595,4394,1.494,4395,1.494,4396,1.494,4397,1.494,4398,1.494,4399,1.494,4400,1.494,4401,4.11,4402,1.494,4403,6.895,4404,3.44,4405,3.44,4406,3.44,4407,1.494,4408,1.494,4409,1.494,4410,2.595,4411,4.652,4412,1.494,4413,1.494,4414,1.494,4415,1.494,4416,1.494,4417,1.494,4418,1.494,4419,1.494,4420,1.494,4421,1.494,4422,1.494,4423,1.494,4424,1.494,4425,3.44,4426,1.494,4427,1.494,4428,1.494,4429,1.494,4430,1.494,4431,1.494,4432,1.494,4433,1.96,4434,1.494,4435,3.44,4436,1.494,4437,1.494,4438,1.494,4439,4.11,4440,4.11,4441,1.494,4442,1.494,4443,1.494,4444,1.494,4445,3.44,4446,4.652,4447,4.11,4448,2.595,4449,1.494,4450,2.595,4451,1.494,4452,1.494,4453,1.494,4454,1.494,4455,1.494,4456,1.494,4457,1.494,4458,1.212,4459,1.494,4460,1.494,4461,1.494,4462,1.494,4463,1.494,4464,4.652,4465,1.494,4466,2.595,4467,1.494,4468,1.494,4469,1.494,4470,1.494,4471,3.44,4472,1.494,4473,1.494,4474,1.212,4475,1.494,4476,2.595,4477,5.102,4478,5.102,4479,2.595,4480,5.102,4481,1.494,4482,1.494,4483,1.494,4484,1.494,4485,1.494,4486,2.595,4487,1.128,4488,2.595,4489,1.128,4490,1.494,4491,1.494,4492,1.494,4493,4.123,4494,1.494,4495,1.494,4496,1.494,4497,1.494,4498,4.11,4499,1.494,4500,1.494,4501,1.324,4502,1.494,4503,1.324,4504,2.595,4505,2.595,4506,2.595,4507,2.595,4508,3.44,4509,2.595,4510,1.494,4511,3.44,4512,1.494,4513,1.494,4514,1.494,4515,1.494,4516,1.494,4517,1.494,4518,2.595,4519,1.494,4520,4.652,4521,1.494,4522,1.494,4523,1.494,4524,3.641,4525,1.494,4526,1.494,4527,4.11,4528,1.494,4529,4.11,4530,1.494,4531,2.105,4532,1.494,4533,1.494,4534,1.494,4535,2.595,4536,1.494,4537,1.494,4538,1.494,4539,2.595,4540,1.494,4541,1.494,4542,1.494,4543,1.494,4544,1.494,4545,1.494,4546,4.11,4547,1.494,4548,1.494,4549,2.595,4550,1.494,4551,1.494,4552,1.96,4553,2.595,4554,1.324,4555,1.494,4556,1.494,4557,4.652,4558,2.595,4559,1.494,4560,1.494,4561,1.494,4562,1.494,4563,1.494,4564,3.44,4565,1.494,4566,1.494,4567,1.494,4568,2.595,4569,1.494,4570,1.494,4571,1.494,4572,1.494,4573,2.595,4574,1.494,4575,4.652,4576,1.494,4577,1.494,4578,1.494,4579,1.494,4580,1.324,4581,1.494,4582,1.494,4583,1.494,4584,1.494,4585,1.494,4586,1.494,4587,1.494,4588,1.494,4589,1.494,4590,1.324,4591,1.494,4592,1.494,4593,1.494,4594,1.494,4595,1.494,4596,1.494,4597,1.494,4598,2.595,4599,3.44,4600,1.494,4601,1.494,4602,1.494,4603,1.494,4604,2.595,4605,1.494,4606,1.494,4607,1.494,4608,1.494,4609,1.494,4610,1.494,4611,1.494,4612,2.595,4613,1.494,4614,1.324,4615,1.494,4616,1.494,4617,1.494,4618,1.494,4619,1.494,4620,1.494,4621,1.494,4622,1.494,4623,1.494,4624,1.494,4625,1.494,4626,1.494,4627,1.494,4628,1.494,4629,1.324,4630,2.595,4631,2.595,4632,2.3,4633,2.595,4634,1.494,4635,1.494,4636,1.494,4637,1.494,4638,1.494,4639,1.494,4640,2.595,4641,1.494,4642,1.494,4643,1.494,4644,1.494,4645,1.494,4646,2.595,4647,1.494,4648,1.494,4649,1.494,4650,1.494,4651,1.324,4652,1.494,4653,1.494,4654,1.494,4655,1.494,4656,1.494,4657,1.494,4658,1.494,4659,1.494,4660,1.494,4661,1.494,4662,1.494,4663,1.494,4664,1.494,4665,1.494,4666,2.595,4667,1.494,4668,1.494,4669,1.494,4670,1.494,4671,1.494,4672,2.595,4673,1.494,4674,1.494,4675,1.494,4676,1.494,4677,4.11,4678,4.11,4679,2.595,4680,1.494,4681,2.595,4682,1.494,4683,1.494,4684,1.494,4685,1.494,4686,1.494,4687,3.44,4688,1.494,4689,1.494,4690,2.595,4691,1.494,4692,2.595,4693,1.494,4694,2.595,4695,1.494,4696,1.494,4697,1.494,4698,1.494,4699,1.494,4700,2.595,4701,2.595,4702,2.595,4703,2.3,4704,2.595,4705,2.595,4706,2.595,4707,2.595,4708,1.494,4709,2.595,4710,2.595,4711,2.595,4712,1.494,4713,2.595,4714,2.595,4715,1.494,4716,1.494,4717,1.494,4718,1.494,4719,2.595,4720,1.494,4721,1.494,4722,2.595,4723,2.595,4724,2.595,4725,1.324,4726,1.494,4727,1.494,4728,3.44,4729,3.44,4730,3.44,4731,3.44,4732,1.494,4733,1.494,4734,1.494,4735,1.494,4736,4.11,4737,1.494,4738,4.11,4739,1.494,4740,3.44,4741,1.494,4742,3.44,4743,1.494,4744,1.494,4745,1.494,4746,1.494,4747,1.494,4748,1.494,4749,1.494,4750,1.494,4751,2.595,4752,1.494,4753,1.494,4754,1.494,4755,1.494,4756,1.494,4757,1.494,4758,1.212,4759,1.061,4760,1.494,4761,1.494,4762,1.494,4763,1.494,4764,1.494,4765,1.494,4766,1.494,4767,1.494,4768,1.494,4769,1.494]],["title/components/ProfileSettingsDialogComponent.html",[0,0.078,168,0.945]],["body/components/ProfileSettingsDialogComponent.html",[0,0.13,1,0.928,2,0.815,3,0.099,4,0.09,5,0.738,6,1.028,7,1.007,8,0.967,9,0.082,11,0.891,13,1.82,14,1.251,15,1.947,16,0.891,17,1.431,18,1.364,19,0.891,20,1.444,21,0.932,22,3.015,23,0.932,24,2.637,25,0.107,26,0.544,27,1.53,28,3.336,30,0.834,31,6.721,33,0.663,34,2.535,35,3.316,36,3.336,37,0.8,39,0.69,40,0.008,41,0.564,42,0.167,43,0.544,45,0.913,46,1.273,48,3.969,49,0.341,50,1.317,51,1.088,53,0.182,54,0.331,55,1.377,56,0.115,57,0.011,58,1.574,59,0.677,60,1.238,61,2.025,62,2.016,63,2.361,64,2.862,65,5.459,77,3.615,78,1.264,79,3.382,87,0.828,88,1.037,89,1.774,90,2.747,91,1.611,92,1.007,93,1.226,94,1.201,95,0.77,96,1.672,97,1.007,98,1.981,99,0.909,100,0.787,101,1.008,102,1.277,103,0.928,104,1.007,105,0.928,106,0.909,107,1.007,108,0.928,109,1.007,110,0.873,111,0.891,112,0.958,113,0.909,114,0.873,115,1.016,116,1.584,117,0.891,118,0.082,119,0.909,120,0.977,121,0.928,122,0.928,123,0.837,124,1.007,125,0.891,126,1.007,127,0.928,128,1.007,129,0.928,130,1.007,131,0.909,132,1.007,133,0.909,134,1.007,135,0.648,136,1.007,137,0.909,138,0.441,139,1.007,140,0.928,141,1.007,142,0.928,143,1.584,144,0.928,145,1.007,146,0.928,147,1.584,148,0.928,149,1.007,150,0.947,151,1.007,152,0.891,153,1.007,154,0.928,155,1.007,156,0.891,157,0.855,158,1.007,159,0.928,160,1.33,161,1.386,162,0.928,163,1.007,164,0.891,165,0.527,166,1.007,167,0.909,168,1.572,169,1.96,170,0.928,171,1.007,172,0.909,173,0.909,174,0.891,175,1.007,176,0.909,177,1.007,178,0.855,179,0.723,180,0.891,181,1.007,182,0.891,183,1.201,184,0.909,185,0.928,186,0.607,187,0.873,188,0.707,189,0.928,190,0.928,191,0.928,192,1.007,193,0.928,194,0.855,195,1.007,196,0.928,197,1.007,198,0.873,199,0.909,200,0.928,201,0.855,202,1.007,203,0.928,204,0.62,205,0.873,206,0.909,207,1.007,208,0.891,209,1.007,210,0.891,211,1.007,212,0.873,213,1.007,214,0.873,215,1.007,216,0.873,217,0.947,218,1.007,219,0.005,220,0.005,223,0.605,238,3.969,244,1.672,310,1.136,469,6.715,591,3.625,599,1.684,605,0.441,664,5.773,667,2.445,1003,3.95,1065,2.867,1436,3.633,1442,5.388,1470,3.382,1563,3.382,3974,3.969,4770,7.881,4771,6.829,4772,7.043,4773,7.585,4774,5.459,4775,7.585,4776,6.161,4777,4.479,4778,5.459,4779,4.479,4780,7.043,4781,3.969,4782,6.161,4783,7.585,4784,7.585]],["title/components/ProjectHeaderComponent.html",[0,0.078,170,0.945]],["body/components/ProjectHeaderComponent.html",[0,0.145,1,1.05,2,0.885,3,0.111,4,0.102,5,0.835,6,1.163,7,1.139,8,1.094,9,0.093,11,1.008,16,1.008,17,1.437,18,1.37,19,1.008,20,0.853,21,1.012,23,1.012,25,0.121,37,0.608,40,0.008,41,0.582,42,0.147,49,0.608,53,0.15,54,0.374,56,0.13,57,0.013,62,1.416,78,1.89,84,2.652,88,0.853,90,4.105,91,1.822,92,1.139,93,1.332,94,1.304,95,0.871,96,1.758,97,1.139,98,2.027,99,1.028,100,0.89,101,1.107,102,1.387,103,1.05,104,1.139,105,1.05,106,1.028,107,1.139,108,1.05,109,1.139,110,0.987,111,1.008,112,0.999,113,1.028,114,0.987,115,1.103,116,1.686,117,1.008,118,0.093,119,1.028,120,0.992,121,1.05,122,1.05,123,0.947,124,1.139,125,1.008,126,1.139,127,1.05,128,1.139,129,1.05,130,1.139,131,1.028,132,1.139,133,1.028,134,1.139,135,0.733,136,1.139,137,1.028,138,0.499,139,1.139,140,1.05,141,1.139,142,1.05,143,1.686,144,1.05,145,1.139,146,1.05,147,1.686,148,1.05,149,1.139,150,1.072,151,1.139,152,1.008,153,1.139,154,1.05,155,1.139,156,1.008,157,0.967,158,1.139,159,1.05,160,1.445,161,1.506,162,1.05,163,1.139,164,1.008,165,0.595,166,1.139,167,1.028,168,1.05,169,1.116,170,1.653,171,1.139,172,1.028,173,1.028,174,1.008,175,1.139,176,1.028,177,1.139,178,0.967,179,0.817,180,1.008,181,1.139,182,1.008,183,1.304,184,1.028,185,1.05,186,0.659,187,0.987,188,0.8,189,1.05,190,1.05,191,1.05,192,1.139,193,1.05,194,0.967,195,1.139,196,1.05,197,1.139,198,0.987,199,1.028,200,1.05,201,1.278,202,1.139,203,1.05,204,0.701,205,0.987,206,1.028,207,1.139,208,1.008,209,1.139,210,1.008,211,1.139,212,0.987,213,1.139,214,0.987,215,1.139,216,0.987,217,1.072,218,1.139,219,0.006,220,0.006,223,0.435,262,2.465,263,1.865,272,1.958,279,2.606,545,1.233,723,1.757,763,2.465,809,1.663,865,2.723,903,1.359,971,3.027,1069,2.72,1171,1.865,1184,3.939,1190,2.944,1191,2.112,1192,2.198,1544,2.867,1632,3.126,1633,3.414,1651,2.428,1674,5.931,1845,3.79,2208,2.584,2259,2.867,2269,4.755,2554,6.081,2609,3.247,2893,4.292,3092,3.247,3519,3.824,4487,3.824,4785,4.807,4786,4.488,4787,7.498,4788,6.694,4789,7.35,4790,5.065,4791,5.065,4792,4.108]],["title/components/ProjectIssueListComponent.html",[0,0.078,172,0.926]],["body/components/ProjectIssueListComponent.html",[0,0.14,1,0.922,2,0.811,3,0.098,4,0.09,5,0.733,6,1.021,7,1.001,8,0.96,9,0.082,11,0.885,14,1.245,15,1.94,16,0.885,17,1.43,18,1.363,19,0.885,20,0.749,21,0.927,23,0.927,25,0.106,26,0.542,27,1.463,33,0.658,37,0.687,39,0.498,40,0.008,41,0.549,42,0.18,43,0.393,46,0.673,49,0.467,53,0.242,54,0.329,56,0.114,57,0.011,59,0.673,60,1.23,62,1.297,78,2.135,85,2.524,88,0.749,90,3.76,91,1.6,92,1.001,93,1.22,94,1.195,95,0.765,96,1.667,97,1.001,98,1.978,99,0.903,100,0.781,101,1.099,102,1.271,103,0.922,104,1.001,105,0.922,106,0.903,107,1.001,108,0.922,109,1.001,110,0.867,111,0.885,112,0.955,113,0.903,114,0.867,115,1.011,116,1.578,117,0.885,118,0.082,119,0.903,120,1.013,121,0.922,122,0.922,123,0.832,124,1.001,125,0.885,126,1.001,127,0.922,128,1.001,129,0.922,130,1.001,131,0.903,132,1.001,133,0.903,134,1.001,135,0.644,136,1.001,137,0.903,138,0.438,139,1.001,140,0.922,141,1.001,142,0.922,143,1.578,144,0.922,145,1.001,146,1.644,147,1.578,148,0.922,149,1.001,150,0.941,151,1.001,152,0.885,153,1.001,154,0.922,155,1.001,156,0.885,157,0.849,158,1.001,159,0.922,160,1.324,161,1.379,162,0.922,163,1.001,164,0.885,165,0.825,166,1.001,167,0.903,168,0.922,169,0.98,170,0.922,171,1.001,172,1.536,173,0.903,174,0.885,175,1.001,176,0.903,177,1.001,178,0.849,179,0.718,180,0.885,181,1.001,182,0.885,183,1.195,184,0.903,185,0.922,186,0.604,187,0.867,188,0.702,189,0.922,190,0.922,191,0.922,192,1.001,193,0.922,194,1.17,195,1.001,196,0.922,197,1.001,198,0.867,199,0.903,200,0.922,201,1.514,202,1.001,203,0.922,204,0.616,205,0.867,206,0.903,207,1.001,208,0.885,209,1.001,210,0.885,211,1.001,212,0.867,213,1.001,214,0.867,215,1.001,216,0.867,217,0.941,218,1.001,219,0.005,220,0.005,223,0.526,255,0.549,262,1.638,263,2.584,272,1.719,279,2.493,288,0.867,366,1.701,496,1.638,502,5.99,512,1.845,545,1.226,549,3.128,572,1.528,596,3.83,649,3.608,759,2.773,766,3.23,782,3.468,787,2.584,788,1.969,789,1.855,790,2.132,809,1.461,830,1.855,832,2.269,833,1.461,863,2.491,865,2.304,869,4.63,903,1.245,1069,3.073,1099,2.013,1171,1.638,1176,2.132,1179,3.159,1184,4.451,1190,3.086,1191,2.926,1192,2.76,1198,2.345,1271,1.638,1306,5.433,1468,2.78,1544,2.518,1632,2.926,1633,3.128,1651,2.132,1673,2.852,1845,3.471,1973,2.37,2217,4.63,2259,2.518,2609,2.852,2672,4.282,2711,3.233,2742,3.358,2747,2.939,2752,3.347,2824,3.358,2826,2.852,2893,3.931,3052,2.994,3092,2.852,3314,3.471,3371,3.358,3374,5.692,3375,4.973,3519,3.358,3885,3.608,4128,6.218,4180,3.941,4458,4.973,4785,5.087,4792,3.608,4793,6.132,4794,6.132,4795,3.941,4796,3.941,4797,3.358,4798,4.448,4799,3.941,4800,5.433,4801,3.941,4802,3.941,4803,3.941]],["title/components/ProjectListComponent.html",[0,0.078,173,0.926]],["body/components/ProjectListComponent.html",[0,0.135,1,0.821,2,0.747,3,0.087,4,0.08,5,0.653,6,0.909,7,0.891,8,0.855,9,0.073,11,0.788,14,1.148,15,1.822,16,0.788,17,1.424,18,1.356,19,1.311,20,1.21,21,0.855,23,0.855,25,0.095,26,0.499,27,1.425,30,0.765,33,0.586,36,3.161,37,0.78,39,0.633,40,0.008,41,0.545,42,0.174,43,0.499,45,0.825,46,1.28,49,0.502,50,1.344,51,1.019,53,0.25,54,0.293,55,1.218,56,0.102,57,0.01,59,1.149,60,1.095,62,1.196,78,2.145,84,3.011,85,2.033,88,0.667,89,2.611,90,3.466,91,2.371,92,0.891,93,1.124,94,1.101,95,0.681,96,1.584,97,0.891,98,1.931,99,0.804,100,0.696,101,1.101,102,1.172,103,0.821,104,0.891,105,0.821,106,0.804,107,0.891,108,0.821,109,0.891,110,0.772,111,0.788,112,1.034,113,0.804,114,0.772,115,0.932,116,1.482,117,0.788,118,0.073,119,0.804,120,0.961,121,1.172,122,0.821,123,0.741,124,0.891,125,0.788,126,0.891,127,0.821,128,0.891,129,0.821,130,0.891,131,0.804,132,0.891,133,0.804,134,0.891,135,0.573,136,0.891,137,0.804,138,0.649,139,0.891,140,0.821,141,0.891,142,0.821,143,1.482,144,0.821,145,0.891,146,0.821,147,1.482,148,0.821,149,0.891,150,0.838,151,0.891,152,0.788,153,0.891,154,0.821,155,0.891,156,0.788,157,0.756,158,0.891,159,0.821,160,1.22,161,1.271,162,0.821,163,0.891,164,0.788,165,0.466,166,0.891,167,0.804,168,0.821,169,0.873,170,0.821,171,0.891,172,0.804,173,1.459,174,0.788,175,0.891,176,0.804,177,0.891,178,0.756,179,0.639,180,0.788,181,0.891,182,0.788,183,1.284,184,0.804,185,0.821,186,0.557,187,0.772,188,0.626,189,0.821,190,0.821,191,0.821,192,0.891,193,0.821,194,0.756,195,0.891,196,0.821,197,0.891,198,0.772,199,0.804,200,0.821,201,1.258,202,0.891,203,0.821,204,1.094,205,0.772,206,0.804,207,0.891,208,0.788,209,0.891,210,0.788,211,0.891,212,0.772,213,0.891,214,0.772,215,0.891,216,0.772,217,0.838,218,0.891,219,0.005,220,0.005,223,0.34,225,2.98,229,2.813,232,2.611,244,1.584,255,0.697,263,1.459,269,1.843,271,1.696,272,2.185,288,0.772,310,0.639,366,2.072,367,6.56,406,2.088,407,1.957,408,1.898,509,3.883,538,1.142,539,4.069,540,3.212,541,1.791,580,4.007,599,1.352,605,0.39,619,1.392,638,1.898,723,1.324,837,3.2,903,1.148,921,2.539,950,2.666,983,2.98,984,2.778,1007,1.651,1008,1.569,1009,1.651,1032,2.99,1040,1.856,1041,2.162,1069,2.92,1171,2.427,1176,3.159,1177,4.681,1179,2.813,1184,3.878,1192,2.819,1198,4.007,1230,2.709,1271,2.082,1489,3.597,1501,1.742,1540,2.162,1541,4.976,1544,3.731,1641,3.466,2208,3.362,2259,2.242,2269,2.813,2336,2.429,2357,3.466,2657,3.212,2658,2.99,2662,3.878,3087,3.212,3088,2.666,3333,3.212,3371,2.99,3374,5.346,3375,4.585,3393,3.51,3395,3.51,3542,4.681,4433,2.99,4785,5.571,4789,5.84,4795,3.51,4796,3.51,4804,5.652,4805,5.652,4806,4.585,4807,6.591,4808,6.591,4809,7.187,4810,5.652,4811,7.187,4812,7.187,4813,3.961,4814,5.652,4815,4.268,4816,5.652,4817,3.961,4818,3.961,4819,3.961,4820,3.961,4821,5.652,4822,6.591,4823,6.591,4824,3.961,4825,3.961,4826,3.961,4827,3.961,4828,3.961,4829,3.961,4830,3.961,4831,3.961,4832,3.961,4833,3.961,4834,3.961,4835,5.652,4836,3.961,4837,3.961,4838,2.539,4839,3.961,4840,3.961,4841,3.961,4842,3.51,4843,3.961,4844,5.652,4845,5.652,4846,5.009,4847,3.961,4848,5.009,4849,3.961,4850,3.51,4851,5.84,4852,6.591,4853,3.961,4854,3.961,4855,3.961,4856,3.51,4857,3.961,4858,3.961,4859,3.51,4860,3.961,4861,3.961]],["title/components/ProjectMembersComponent.html",[0,0.078,174,0.907]],["body/components/ProjectMembersComponent.html",[0,0.126,1,0.681,2,0.652,3,0.072,4,0.066,5,0.542,6,0.755,7,0.739,8,0.71,9,0.06,11,0.654,14,1.001,15,1.636,16,0.654,17,1.412,18,1.343,19,0.654,20,0.997,21,0.746,23,0.746,25,0.078,26,0.436,27,1.359,29,1.794,30,0.667,33,0.486,36,2.892,37,0.802,39,0.736,40,0.008,41,0.578,42,0.188,43,0.581,45,0.808,46,1.119,49,0.615,50,1.23,51,1.016,53,0.25,54,0.243,55,1.011,56,0.127,57,0.008,59,0.746,60,0.909,62,1.043,64,1.336,72,3.503,78,1.856,79,2.482,80,2.295,84,1.302,85,2.129,87,0.773,88,0.554,89,1.954,90,4.033,91,1.183,92,0.739,93,0.981,94,0.961,95,0.565,96,1.553,97,0.739,98,1.849,99,1.001,100,1.155,101,1.087,102,1.533,103,0.681,104,0.739,105,0.681,106,0.668,107,0.739,108,0.681,109,0.739,110,0.641,111,0.654,112,0.849,113,0.668,114,0.641,115,0.813,116,1.331,117,0.654,118,0.121,119,0.668,120,0.934,121,0.681,122,0.681,123,0.922,124,0.739,125,0.654,126,0.739,127,0.681,128,0.739,129,0.681,130,0.739,131,0.668,132,0.739,133,0.668,134,0.739,135,0.476,136,0.739,137,0.668,138,0.324,139,0.739,140,0.681,141,0.739,142,0.681,143,1.331,144,0.681,145,0.739,146,0.681,147,1.331,148,0.681,149,0.739,150,0.695,151,0.739,152,0.654,153,0.739,154,0.681,155,0.739,156,0.654,157,0.628,158,0.739,159,0.681,160,1.065,161,1.109,162,0.681,163,0.739,164,0.654,165,0.386,166,0.739,167,0.668,168,0.681,169,0.725,170,0.681,171,0.739,172,0.668,173,0.668,174,1.308,175,0.739,176,0.668,177,0.739,178,0.628,179,0.53,180,0.654,181,0.739,182,0.654,183,1.442,184,1.001,185,0.681,186,0.486,187,0.641,188,0.519,189,0.681,190,0.681,191,0.681,192,0.739,193,0.681,194,1.255,195,0.739,196,0.681,197,0.739,198,0.641,199,0.668,200,0.681,201,1.345,202,0.739,203,0.681,204,1.117,205,0.641,206,0.668,207,0.739,208,0.654,209,0.739,210,0.654,211,0.739,212,0.641,213,0.739,214,0.641,215,0.739,216,0.641,217,0.695,218,0.739,219,0.004,220,0.004,222,2.335,223,0.282,225,2.6,228,1.584,231,1.071,241,2.603,246,2.534,251,1.24,255,0.811,260,5.334,261,4.37,262,1.211,263,2.422,269,1.53,272,1.271,279,2.214,288,0.641,296,1.625,366,1.849,408,1.576,413,1.861,434,2.335,435,2.666,484,3.319,496,1.211,503,6.307,514,5.06,534,0.854,535,2.232,538,0.948,539,3.723,541,1.487,544,1.987,545,1.38,569,1.371,580,1.733,591,2.902,596,3.231,608,1.954,619,2.08,638,1.104,674,1.794,741,2.666,759,1.487,809,1.079,813,1.484,814,1.407,823,2.974,826,1.446,863,1.336,865,2.314,884,1.576,896,2.108,903,1.431,995,2.213,1006,2.108,1069,3.207,1099,1.619,1108,1.794,1171,1.211,1176,2.364,1177,2.335,1179,3.503,1184,3.87,1190,2.892,1191,2.468,1192,2.65,1194,1.407,1197,2.108,1198,2.6,1271,1.211,1456,2.666,1544,3.351,1625,2.482,1632,2.468,1633,2.516,1640,2.482,1651,1.576,1652,4.965,1668,3.724,1673,2.108,1713,3.162,1845,2.792,2002,2.016,2139,4.426,2259,1.861,2260,3.162,2309,3.024,2477,3.162,2522,2.482,2525,4.8,2526,2.482,2533,2.482,2572,2.016,2609,2.108,2672,3.723,2711,3.121,2742,2.482,2747,2.364,2752,2.692,2845,6.34,2847,4.705,2893,3.162,3052,2.213,3092,4.744,3314,2.792,3372,4.965,3373,4.965,3377,4.8,3381,4.8,3384,4.8,3385,4.37,3386,4.37,3390,5.334,3429,5.334,3432,4.8,3433,4,3437,4.8,3438,4,3441,4,3470,4,3473,2.666,3474,2.666,3475,2.666,3476,2.666,3479,2.666,3480,2.666,3481,2.666,3516,2.913,3517,2.913,3518,2.913,3519,3.724,3523,2.913,3723,3.319,4307,3.724,4338,3.319,4375,2.482,4474,2.666,4785,5.693,4792,2.666,4797,3.724,4799,2.913,4800,4.37,4801,2.913,4802,2.913,4803,2.913,4815,4.469,4862,2.666,4863,3.319,4864,4.37,4865,4.8,4866,3.503,4867,6.244,4868,5.244,4869,4.37,4870,5.244,4871,4.37,4872,5.244,4873,5.244,4874,4.932,4875,3.288,4876,4.37,4877,3.288,4878,5.827,4879,4.37,4880,3.288,4881,3.288,4882,3.288,4883,3.288,4884,4.37,4885,5.827,4886,3.288,4887,4.37,4888,6.853,4889,4.37,4890,4.37,4891,4.37,4892,4,4893,4.37,4894,4.37,4895,3.288,4896,3.288,4897,3.288,4898,4.37,4899,4.37,4900,4.37,4901,4.37,4902,4.37,4903,4.37,4904,4.37,4905,4.37,4906,4.37,4907,4.37,4908,4.37,4909,4.37,4910,3.288,4911,3.288,4912,4.37,4913,3.288,4914,4.8,4915,3.288,4916,3.288,4917,3.288,4918,3.288,4919,3.288,4920,2.913,4921,2.913,4922,2.913,4923,2.335,4924,2.913,4925,2.913,4926,4.37,4927,4.37,4928,4.37,4929,2.913,4930,2.913,4931,2.913,4932,2.913,4933,2.913,4934,2.913,4935,2.913,4936,2.913,4937,2.913,4938,2.913,4939,2.913,4940,2.913,4941,4.37,4942,2.913,4943,2.913,4944,2.913,4945,2.913,4946,2.913,4947,2.913,4948,2.913,4949,2.913,4950,2.666,4951,2.913,4952,2.482,4953,4.932,4954,4.932,4955,3.288]],["title/components/ProjectOverviewComponent.html",[0,0.078,176,0.926]],["body/components/ProjectOverviewComponent.html",[0,0.139,1,0.901,2,0.798,3,0.096,4,0.088,5,0.716,6,0.998,7,0.977,8,0.938,9,0.08,11,0.864,14,1.225,15,1.916,16,0.864,17,1.429,18,1.362,19,0.864,20,1.261,21,0.912,23,0.912,25,0.104,26,0.533,27,1.371,30,0.816,33,0.643,36,3.294,37,0.758,39,0.675,40,0.008,41,0.579,42,0.179,43,0.533,45,0.692,46,1.19,49,0.528,50,0.812,51,0.672,53,0.261,54,0.321,55,1.336,56,0.112,57,0.011,59,1.231,60,1.201,62,1.276,78,1.227,85,1.563,88,0.732,89,2.39,92,0.977,93,1.2,94,1.176,95,0.747,96,1.65,97,0.977,98,1.969,99,0.882,100,0.763,101,1.108,102,1.251,103,0.901,104,0.977,105,0.901,106,0.882,107,0.977,108,0.901,109,0.977,110,0.847,111,0.864,112,0.947,113,0.882,114,0.847,115,0.995,116,1.559,117,0.864,118,0.08,119,0.882,120,0.973,121,0.901,122,0.901,123,0.812,124,0.977,125,0.864,126,0.977,127,0.901,128,0.977,129,0.901,130,0.977,131,0.882,132,0.977,133,0.882,134,0.977,135,0.629,136,0.977,137,0.882,138,0.428,139,0.977,140,0.901,141,0.977,142,0.901,143,1.559,144,0.901,145,0.977,146,0.901,147,1.559,148,0.901,149,0.977,150,0.919,151,0.977,152,0.864,153,0.977,154,0.901,155,0.977,156,0.864,157,0.829,158,0.977,159,0.901,160,1.303,161,1.357,162,0.901,163,0.977,164,0.864,165,0.511,166,0.977,167,0.882,168,0.901,169,0.958,170,0.901,171,0.977,172,0.882,173,0.882,174,0.864,175,0.977,176,1.52,177,0.977,178,1.594,179,0.701,180,0.864,181,0.977,182,1.2,183,1.176,184,0.882,185,0.901,186,0.594,187,0.847,188,0.686,189,0.901,190,0.901,191,0.901,192,0.977,193,0.901,194,0.829,195,0.977,196,0.901,197,0.977,198,0.847,199,0.882,200,0.901,201,0.829,202,0.977,203,0.901,204,0.601,205,0.847,206,0.882,207,0.977,208,0.864,209,0.977,210,0.864,211,0.977,212,0.847,213,0.977,214,0.847,215,0.977,216,0.847,217,0.919,218,0.977,219,0.005,220,0.005,223,0.699,225,3.181,231,0.629,241,1.911,255,0.536,279,1.365,288,0.847,369,6.429,408,2.083,423,2.557,496,1.6,532,3.776,539,4.239,541,1.965,545,1.071,596,3.783,599,1.658,605,0.428,667,2.372,765,2.665,766,3.071,782,3.425,787,2.553,788,1.938,789,1.812,790,2.083,809,1.427,825,3.225,826,1.911,830,1.812,833,1.427,834,2.786,835,2.786,865,2.276,868,3.7,870,2.022,922,2.217,983,3.134,984,2.894,1003,3.868,1006,2.786,1007,1.812,1008,1.722,1009,1.812,1025,3.525,1026,2.786,1027,2.925,1028,3.395,1029,2.786,1030,2.665,1031,2.46,1032,3.281,1033,3.851,1034,3.851,1035,2.925,1039,3.525,1040,1.981,1041,2.372,1057,3.654,1058,3.948,1099,1.427,1175,2.217,1190,1.911,1191,1.812,1192,1.981,1194,2.583,1544,2.46,1640,3.281,1666,2.147,2111,3.281,2672,4.239,2711,3.181,2824,3.281,2888,3.7,3052,2.925,4531,3.525,4774,5.346,4778,5.346,4781,3.851,4785,5.459,4797,3.281,4815,5.233,4838,4.444,4866,4.286,4956,3.851,4957,6.034,4958,6.931,4959,6.034,4960,6.635,4961,6.034,4962,4.345,4963,4.345,4964,4.345,4965,4.345,4966,4.345,4967,4.345,4968,4.345,4969,4.345,4970,4.345,4971,7.488,4972,4.345]],["title/injectables/ProjectStoreService.html",[529,1.113,539,2.581]],["body/injectables/ProjectStoreService.html",[3,0.123,4,0.113,9,0.103,25,0.133,30,0.966,33,0.827,37,0.795,39,0.98,40,0.008,41,0.624,42,0.193,43,0.773,45,0.982,49,0.721,53,0.253,54,0.413,56,0.144,57,0.014,59,1.294,101,1.029,112,0.997,219,0.006,220,0.006,223,0.735,224,3.546,229,5.07,231,1.199,255,0.97,276,1.682,288,1.09,366,1.606,509,3.958,528,6.718,529,1.743,534,1.452,535,2.109,537,2.331,538,1.612,539,4.041,542,3.228,544,2.987,545,1.417,552,2.459,569,2.976,605,0.843,619,3.076,623,4.225,634,2.015,643,2.331,688,1.647,723,1.673,808,3.763,1028,3.454,1303,3.585,1420,3.322,1548,3.972,1552,4.804,2588,6.325,2591,6.325,2600,4.222,2888,4.377,3555,4.377,3681,4.955,4147,6.325,4914,4.535,4960,6.967,4973,7.882,4974,7.138,4975,8.283,4976,8.283,4977,7.138,4978,7.138,4979,7.138,4980,7.138,4981,5.591,4982,7.863,4983,8.283,4984,8.283,4985,7.863,4986,8.283,4987,7.863,4988,8.283,4989,8.283,4990,5.591,4991,5.591,4992,7.138,4993,5.591,4994,7.138,4995,7.138,4996,5.591,4997,7.138,4998,5.591,4999,7.138,5000,7.138,5001,6.325,5002,5.591,5003,5.591,5004,5.591,5005,5.591,5006,5.591,5007,5.591,5008,5.591]],["title/injectables/ProjectsService.html",[529,1.113,5009,3.443]],["body/injectables/ProjectsService.html",[3,0.148,4,0.136,9,0.124,25,0.161,30,1.083,33,1.185,37,0.776,39,0.957,40,0.008,41,0.572,42,0.188,43,0.755,45,0.919,49,0.651,53,0.252,54,0.498,56,0.173,57,0.017,59,1.211,219,0.007,220,0.007,276,2.028,366,1.801,529,1.955,538,1.943,545,1.238,552,2.964,605,0.789,643,2.81,787,2.482,788,2.164,1364,4.114,1384,5.95,1390,5.088,1391,5.466,5001,5.972,5009,6.047,5010,5.972,5011,8.009,5012,8.009,5013,6.739,5014,8.841,5015,8.545,5016,8.841,5017,6.739,5018,8.009,5019,8.009,5020,6.739,5021,8.009,5022,6.739,5023,6.739,5024,6.739]],["title/injectables/QueriesService.html",[529,1.113,1744,2.796]],["body/injectables/QueriesService.html",[2,1.165,3,0.147,4,0.135,9,0.122,25,0.159,26,0.703,27,1.598,33,1.178,37,0.818,39,0.747,40,0.008,41,0.447,42,0.198,43,0.589,53,0.266,54,0.493,56,0.172,57,0.017,219,0.007,220,0.007,276,2.007,509,4.072,512,2.709,529,1.943,552,2.934,643,2.781,1363,6.798,1364,4.252,1744,4.881,2847,5.521,5009,6.798,5025,5.91,5026,6.67,5027,7.978,5028,6.798,5029,6.67,5030,6.67,5031,6.67,5032,6.67,5033,6.67,5034,6.67,5035,6.67,5036,6.67,5037,6.67]],["title/directives/QueryBodyDirective.html",[95,0.784,208,0.907]],["body/directives/QueryBodyDirective.html",[0,0.146,3,0.098,4,0.09,5,1.497,9,0.082,14,0.907,16,0.889,17,1.121,18,0.632,21,0.676,23,0.676,25,0.107,26,0.543,27,1.338,33,0.661,37,0.559,39,0.5,40,0.008,41,0.299,42,0.135,43,0.395,46,1.202,51,0.69,53,0.224,54,0.33,56,0.195,57,0.018,58,2.161,59,1.064,70,2.439,80,3.526,89,3.522,93,1.223,94,0.871,95,1.447,178,1.446,179,1.513,204,0.618,205,0.871,208,1.507,210,1.399,219,0.005,220,0.005,223,0.384,231,0.647,232,3.002,262,2.59,270,4.509,288,0.871,310,0.721,354,3.173,384,3.934,520,2.529,534,1.16,544,2.825,546,1.891,554,3.612,558,2.079,572,1.753,592,1.944,599,1.471,605,0.693,608,1.77,632,1.965,634,2.243,638,1.5,651,2.355,672,2.529,675,4.313,722,2.32,723,1.441,733,4.369,750,1.67,760,2.437,769,3.482,777,2.079,780,4.053,784,3.424,785,2.629,800,1.77,813,1.344,817,2.948,825,2.862,863,3.419,868,3.772,870,3.273,874,1.863,944,2.529,983,2.02,984,2.377,991,3.982,1007,1.863,1008,1.77,1009,1.863,1011,1.467,1040,2.943,1057,2.355,1058,3.243,1095,2.529,1148,4.136,1226,2.079,1252,2.439,1416,4.676,1443,2.864,1607,4.337,1614,4.369,1641,2.74,1649,3.708,1689,4.139,1750,2.74,1771,3.007,1785,2.529,1787,3.007,1796,2.864,1805,3.039,1840,2.705,1855,3.839,2484,3.943,2615,4.369,2685,3.007,2709,4.873,2733,5.721,2888,2.74,3027,2.279,3183,4.644,3933,2.529,3982,2.864,3996,2.74,4342,3.373,4489,3.373,4552,3.373,4863,3.007,5038,4.996,5039,3.173,5040,6.146,5041,4.988,5042,3.373,5043,4.468,5044,4.468,5045,5.705,5046,5.31,5047,5.31,5048,3.624,5049,3.624,5050,3.624,5051,3.624,5052,3.624,5053,3.624,5054,3.624,5055,3.624,5056,4.644,5057,4.988,5058,3.624,5059,4.988,5060,4.988,5061,4.988,5062,4.988,5063,3.624,5064,4.988,5065,4.644,5066,3.624,5067,3.624,5068,3.624,5069,3.624,5070,3.624,5071,4.988,5072,3.624,5073,3.173,5074,3.624,5075,3.624,5076,5.705,5077,3.624,5078,5.705,5079,3.624,5080,3.624,5081,6.824,5082,6.146,5083,4.988,5084,3.173,5085,3.373,5086,3.624,5087,3.624,5088,5.705,5089,3.624,5090,3.624,5091,3.624,5092,4.988,5093,4.988,5094,3.624,5095,3.624,5096,3.624,5097,3.624,5098,3.624,5099,3.624,5100,3.624]],["title/directives/QueryButtonDirective.html",[95,0.784,210,0.907]],["body/directives/QueryButtonDirective.html",[0,0.146,3,0.099,4,0.09,5,1.452,9,0.082,14,0.909,16,0.89,17,1.122,18,0.633,21,0.677,23,0.677,25,0.107,26,0.544,27,1.339,33,0.662,37,0.559,39,0.501,40,0.008,41,0.3,42,0.136,43,0.395,46,1.202,51,0.692,53,0.224,54,0.331,56,0.195,57,0.018,58,2.164,59,1.065,70,2.443,80,3.529,89,3.578,93,1.225,94,1.478,95,1.448,178,1.518,179,1.509,204,0.619,205,0.872,208,1.4,210,1.509,219,0.005,220,0.005,223,0.384,231,0.648,232,3.004,262,2.593,270,4.514,288,0.872,310,0.722,354,3.179,384,3.878,520,2.534,534,1.162,544,2.827,546,1.893,554,3.703,558,2.083,572,1.754,592,1.946,599,1.473,605,0.694,608,1.773,632,1.969,634,2.245,638,1.503,651,2.36,672,2.534,675,4.317,722,2.323,723,1.443,733,4.374,750,1.671,760,2.44,769,3.486,777,2.083,780,3.141,784,3.426,785,2.634,800,1.773,813,1.347,817,2.952,825,2.866,863,3.339,868,3.776,870,3.276,874,1.866,944,2.534,983,2.024,984,2.38,991,3.986,1007,1.866,1008,1.773,1009,1.866,1011,1.47,1040,2.944,1057,2.36,1058,3.247,1095,2.534,1148,4.139,1226,2.083,1252,2.443,1416,4.679,1443,2.87,1607,4.34,1614,4.374,1641,2.745,1649,3.712,1689,3.013,1750,2.745,1771,3.013,1785,2.534,1787,3.013,1796,2.87,1805,3.043,1840,2.709,1855,3.843,2484,3.948,2615,3.179,2685,3.013,2709,4.65,2733,5.316,2888,2.745,3027,2.283,3183,4.65,3933,2.534,3982,2.87,3996,2.745,4342,3.38,4489,3.38,4552,3.38,4863,4.145,5038,5.001,5039,3.179,5040,5.71,5041,3.63,5045,6.665,5046,5.316,5047,5.316,5048,4.995,5049,4.995,5050,3.63,5051,3.63,5052,3.63,5053,3.63,5054,3.63,5055,3.63,5056,4.65,5057,4.995,5058,3.63,5059,4.995,5060,4.995,5061,4.995,5062,4.995,5063,3.63,5064,4.995,5065,4.65,5066,3.63,5067,3.63,5068,3.63,5069,3.63,5070,3.63,5071,4.995,5072,3.63,5073,3.179,5074,3.63,5075,3.63,5076,5.71,5077,3.63,5078,5.71,5079,3.63,5080,3.63,5081,6.828,5082,6.151,5083,4.995,5084,3.179,5085,3.38,5086,3.63,5087,3.63,5088,5.71,5089,3.63,5090,3.63,5091,3.63,5092,4.995,5093,4.995,5094,3.63,5095,3.63,5096,3.63,5097,3.63,5098,3.63,5099,3.63,5100,3.63,5101,4.476,5102,4.476,5103,4.476]],["title/components/QueryComponent.html",[0,0.078,178,0.87]],["body/components/QueryComponent.html",[0,0.148,1,0.629,2,0.614,3,0.067,4,0.061,5,1.454,6,0.697,7,0.683,8,0.655,9,0.056,11,0.604,14,0.943,16,0.604,17,1.408,18,1.336,19,0.604,20,0.511,21,0.702,23,0.702,25,0.072,26,0.41,27,1.329,30,0.628,33,0.449,37,0.744,39,0.631,40,0.008,41,0.5,42,0.174,43,0.558,45,0.724,46,1.218,49,0.231,50,0.868,51,0.976,53,0.186,54,0.224,56,0.163,57,0.014,58,1.631,59,1.129,62,0.982,70,2.534,78,1.591,80,3.583,85,1.67,88,0.511,89,3.531,92,0.683,93,1.256,94,1.099,95,1.324,96,1.391,97,0.683,98,1.812,99,0.616,100,0.533,101,0.905,102,0.962,103,0.629,104,0.683,105,0.629,106,0.616,107,0.683,108,0.629,109,0.683,110,0.591,111,0.604,112,0.819,113,0.616,114,0.591,115,0.765,116,1.268,117,0.604,118,0.056,119,0.616,120,0.921,121,0.629,122,0.629,123,0.568,124,0.683,125,0.604,126,0.683,127,0.629,128,0.683,129,0.629,130,0.683,131,0.616,132,0.683,133,0.616,134,0.683,135,0.439,136,0.683,137,0.616,138,0.299,139,0.683,140,0.629,141,0.683,142,0.629,143,1.268,144,0.629,145,0.683,146,0.629,147,1.268,148,0.629,149,0.683,150,0.642,151,0.683,152,0.604,153,0.683,154,0.629,155,0.683,156,0.604,157,0.579,158,0.683,159,0.629,160,1.002,161,1.044,162,0.629,163,0.683,164,0.604,165,0.357,166,0.683,167,0.616,168,0.629,169,0.669,170,0.629,171,0.683,172,0.616,173,0.616,174,0.604,175,0.683,176,0.616,177,0.683,178,1.507,179,1.505,180,0.604,181,0.683,182,0.604,183,0.905,184,0.616,185,0.629,186,0.457,187,0.591,188,0.479,189,0.629,190,0.629,191,0.629,192,0.683,193,0.629,194,0.886,195,0.683,196,0.629,197,0.683,198,0.591,199,0.616,200,0.629,201,0.579,202,0.683,203,0.629,204,0.78,205,0.591,206,0.616,207,0.683,208,1.427,209,0.683,210,1.427,211,0.683,212,0.591,213,0.683,214,0.591,215,0.683,216,0.591,217,0.642,218,0.683,219,0.004,220,0.004,223,0.399,231,0.672,232,3.127,241,2.042,262,3.016,263,1.71,270,4.362,271,1.987,272,2.44,288,0.591,310,0.749,354,2.156,384,3.88,520,2.628,534,0.788,544,2.854,546,1.733,554,3.387,558,2.16,572,1.405,592,2.128,599,1.51,605,0.555,608,1.839,632,2.042,634,2.025,638,1.559,651,1.6,672,1.718,675,4.4,722,2.126,723,1.088,733,4.485,750,1.391,760,2.233,763,1.71,769,3.574,777,2.16,780,2.368,784,3.464,785,1.786,800,1.202,809,1.524,813,1.397,817,3.026,825,2.623,863,3.328,868,3.872,870,3.166,874,1.936,903,1.282,944,2.628,983,2.099,984,2.44,991,4.227,1007,1.265,1008,1.202,1009,1.265,1011,0.997,1040,2.951,1057,2.972,1058,3.329,1095,2.628,1099,1.524,1148,3.446,1171,1.71,1173,2.855,1174,2.294,1190,2.042,1191,2.633,1192,0.997,1194,1.987,1226,1.412,1252,2.534,1416,4.644,1443,2.976,1463,2.732,1501,1.335,1540,2.534,1607,4.396,1614,3.297,1632,1.265,1633,1.548,1641,2.847,1649,3.783,1666,3.12,1667,3.505,1689,2.043,1750,2.847,1760,1.946,1771,2.043,1785,1.718,1787,3.124,1796,2.976,1805,3.12,1840,2.042,1855,3.916,1933,2.732,2258,2.292,2259,1.718,2484,4.048,2611,1.657,2615,2.156,2661,2.534,2664,2.294,2665,3.297,2685,2.043,2709,4.578,2733,4.767,2753,2.689,2758,2.462,2888,2.847,3027,2.368,3092,4.048,3094,3.765,3183,4.256,3933,2.628,3982,2.976,3996,2.847,4342,3.505,4487,4.256,4489,3.505,4552,3.505,4851,2.689,4863,2.043,5038,5.901,5039,2.156,5040,5.121,5041,2.462,5045,5.121,5046,4.767,5047,5.637,5048,2.462,5049,2.462,5050,3.765,5051,3.765,5052,3.765,5053,3.765,5054,3.765,5055,3.765,5056,4.767,5057,5.121,5058,3.765,5059,5.518,5060,5.121,5061,5.121,5062,5.121,5063,3.765,5064,5.121,5065,4.767,5066,3.765,5067,3.765,5068,3.765,5069,3.765,5070,4.572,5071,5.121,5072,5.518,5073,3.297,5074,3.765,5075,3.765,5076,5.121,5077,4.572,5078,4.572,5079,2.462,5080,2.462,5081,6.056,5082,5.518,5083,3.765,5084,3.297,5085,3.505,5086,3.765,5087,3.765,5088,4.572,5089,2.462,5090,2.462,5091,2.462,5092,5.518,5093,3.765,5094,2.462,5095,2.462,5096,2.462,5097,3.765,5098,3.765,5099,5.121,5100,2.462,5104,4.642,5105,3.035,5106,4.642,5107,3.035,5108,3.035,5109,3.035,5110,3.035,5111,3.035,5112,3.035,5113,3.035,5114,3.035,5115,3.035,5116,3.035,5117,3.035]],["title/interfaces/QueryListParams.html",[118,0.084,1384,3.069]],["body/interfaces/QueryListParams.html",[3,0.149,4,0.136,9,0.124,25,0.161,26,0.708,40,0.008,42,0.199,43,0.833,49,0.698,53,0.199,56,0.206,64,2.743,87,0.794,118,0.124,219,0.007,220,0.007,231,0.977,526,1.79,534,1.753,544,2.971,592,1.866,605,0.665,759,3.053,808,3.56,884,3.236,952,4.829,1040,2.217,1062,2.642,1065,3.142,1364,3.142,1384,5.396,1712,3.822,1843,5.098,1844,5.098,1847,5.098,1849,5.098,1903,5.206,1904,4.226,1967,5.672,2437,4.544,2787,5.983,5118,5.983,5119,8.847,5120,6.752,5121,6.752,5122,6.752,5123,5.983,5124,6.752,5125,6.752,5126,6.752,5127,6.752]],["title/components/RegisterComponent.html",[0,0.078,180,0.907]],["body/components/RegisterComponent.html",[0,0.117,1,0.745,2,0.697,3,0.079,4,0.073,5,0.593,6,0.826,7,0.809,8,0.777,9,0.066,11,0.715,16,0.715,17,1.418,18,1.349,19,0.715,20,0.606,21,0.797,23,0.797,25,0.086,26,0.466,30,0.713,33,0.532,37,0.763,39,0.856,40,0.008,41,0.577,42,0.174,43,0.607,45,0.877,46,1.225,49,0.583,50,1.285,51,1.252,53,0.239,54,0.266,56,0.093,57,0.009,59,1.106,62,1.115,78,1.015,81,4.344,84,1.425,87,0.423,88,0.606,89,1.425,92,0.809,93,1.049,94,1.027,95,0.619,96,1.514,97,0.809,98,1.89,99,0.73,100,0.632,101,0.952,102,1.093,103,0.745,104,0.809,105,0.745,106,0.73,107,0.809,108,0.745,109,0.809,110,0.701,111,0.715,112,0.881,113,0.73,114,0.701,115,0.869,116,1.404,117,0.715,118,0.066,119,0.73,120,0.947,121,0.745,122,0.745,123,0.672,124,0.809,125,0.715,126,0.809,127,0.745,128,0.809,129,0.745,130,0.809,131,0.73,132,0.809,133,0.73,134,0.809,135,0.52,136,0.809,137,0.73,138,0.354,139,0.809,140,0.745,141,0.809,142,0.745,143,1.404,144,0.745,145,0.809,146,0.745,147,1.404,148,0.745,149,0.809,150,0.761,151,0.809,152,0.715,153,0.809,154,0.745,155,0.809,156,0.715,157,0.687,158,0.809,159,0.745,160,1.138,161,1.186,162,0.745,163,0.809,164,0.715,165,0.423,166,0.809,167,0.73,168,0.745,169,0.793,170,0.745,171,0.809,172,0.73,173,0.73,174,0.715,175,0.809,176,0.73,177,0.809,178,0.687,179,0.58,180,1.367,181,0.809,182,0.715,183,1.027,184,0.73,185,0.745,186,0.519,187,0.701,188,0.568,189,0.745,190,0.745,191,0.745,192,0.809,193,0.745,194,0.687,195,0.809,196,0.745,197,0.809,198,0.701,199,0.73,200,0.745,201,0.687,202,0.809,203,0.745,204,1.144,205,0.701,206,0.73,207,0.809,208,0.715,209,0.809,210,0.715,211,0.809,212,0.701,213,0.809,214,0.701,215,0.809,216,0.701,217,0.761,218,0.809,219,0.004,220,0.004,223,0.656,228,2.207,231,0.994,234,4.671,244,1.162,246,2.671,247,3.084,250,1.674,251,1.357,255,0.77,265,2.306,284,3.548,288,0.701,296,2.605,310,1.275,312,1.52,313,2.605,336,5.43,397,2.205,413,4.328,496,1.324,518,4.625,519,6.18,532,3.572,534,0.934,544,1.77,550,2.257,572,1.823,573,2.779,580,4.031,599,0.86,605,0.615,632,1.582,638,2.307,664,6.208,674,4.954,686,2.421,687,2.715,714,4.276,723,0.843,724,3.102,751,3.187,758,2.779,774,2.036,838,2.536,899,4.001,953,4.031,960,5.573,983,2.822,984,2.656,1007,1.5,1008,1.425,1009,1.5,1040,2.759,1041,2.877,1069,1.461,1100,3.233,1163,5.772,1188,1.896,1192,1.181,1233,2.942,1311,3.233,1397,4.406,1403,3.38,1421,1.777,1440,3.38,1442,5.754,1443,5.194,1547,3.233,1595,5.611,1672,6.117,1775,2.689,1871,2.715,1973,2.037,2120,3.98,2130,4.276,2134,3.183,2350,2.036,2437,5.453,2705,3.187,2722,5.529,2751,4.276,2799,6.483,2812,4.276,2845,2.555,2928,5.529,3004,4.276,3020,3.187,3079,2.555,3881,4.2,3883,5.529,3884,4.671,3889,4.671,3899,5.529,3907,3.187,3913,3.187,3914,3.187,4307,3.98,4375,3.98,4433,5.188,4590,4.671,4842,4.671,4848,3.187,4888,6.241,4950,4.276,5128,3.187,5129,5.573,5130,6.24,5131,5.271,5132,6.24,5133,5.529,5134,6.24,5135,5.271,5136,5.271,5137,6.872,5138,3.596,5139,6.24,5140,6.872,5141,6.24,5142,6.872,5143,5.271,5144,5.271,5145,3.596,5146,6.872,5147,5.271,5148,3.596,5149,5.271,5150,5.271,5151,3.596,5152,5.271,5153,5.271,5154,5.271,5155,3.596,5156,5.271,5157,3.596,5158,3.596,5159,5.271,5160,3.596,5161,5.271,5162,5.271,5163,4.671,5164,3.596,5165,3.596,5166,5.271,5167,5.271,5168,3.596,5169,3.596,5170,5.271,5171,3.596,5172,3.596,5173,3.596,5174,3.596,5175,3.596,5176,3.596,5177,3.596,5178,3.596,5179,3.596,5180,3.596,5181,3.596,5182,3.596,5183,3.187,5184,3.596,5185,5.271,5186,3.596,5187,5.271,5188,5.271,5189,3.596,5190,3.596,5191,3.596,5192,3.596,5193,3.596,5194,8.101,5195,5.271]],["title/interfaces/RelationEdge.html",[118,0.084,1217,2.683]],["body/interfaces/RelationEdge.html",[0,0.139,3,0.117,4,0.164,5,1.138,9,0.127,25,0.127,26,0.61,40,0.008,42,0.201,49,0.708,53,0.24,56,0.178,57,0.017,87,0.902,101,0.624,112,0.639,118,0.169,120,0.735,135,0.768,138,0.68,165,1.015,186,0.866,188,0.839,219,0.006,220,0.006,231,1.176,255,0.655,279,2.41,291,4.265,311,3.124,512,1.597,526,1.408,538,1.531,545,1.334,592,2.463,605,0.878,619,1.866,717,1.955,722,2.003,814,2.273,833,1.743,903,1.809,949,3.256,1062,1.99,1063,3.387,1066,3.692,1067,3.478,1090,2.003,1194,3.284,1202,4.514,1203,2.401,1204,3.006,1205,4.797,1206,5.079,1207,3.677,1208,3.309,1209,2.898,1210,2.545,1211,3.282,1212,3.309,1213,2.708,1214,2.799,1215,4.187,1216,4.283,1217,4.78,1218,3.256,1219,3.256,1220,3.256,1221,3.256,1222,3.256,1223,3.256,1224,3.256,1225,3.256,1226,3.213,1227,3.256,1228,3.256,1229,4.234,1230,3.677,1231,3.124,1232,3.124,1233,2.273,1234,3.768,1235,3.404,1236,3.404,1237,1.824,1238,2.471,1239,2.545,1240,3.256,1241,2.898,1242,2.545,1243,2.898,1244,3.256,1245,3.404,1246,2.052,1247,3.404,1248,2.708,1249,3.404,1250,2.335,1251,3.404,1252,2.898,1253,3.404,1254,3.256,1255,3.404,1256,4.343,1257,2.799,1258,3.006,1259,2.545,1260,3.908,1261,3.404,1262,3.404,1263,3.404,1264,4.062,1265,3.404,1266,4.426,1267,3.404,1268,3.404,1269,3.404,1270,3.256,1271,1.955,1272,3.908,1273,4.919,1274,3.404,1275,3.404,1276,5.399,1277,3.404,1278,4.426,1279,4.426,1280,3.404,1281,3.404,1282,4.187,1283,4.426,1284,3.256,1285,4.234,1286,4.426,1287,3.404,1288,4.599,1289,3.64,1290,3.404,1291,3.256,1292,3.404,1293,3.404,1294,3.404,1295,3.256,1296,4.062,1297,3.256,1298,2.898,1299,3.256,1300,2.799]],["title/components/RemoveDialogComponent.html",[0,0.078,182,0.907]],["body/components/RemoveDialogComponent.html",[0,0.135,1,0.825,2,0.75,3,0.088,4,0.08,5,0.656,6,0.913,7,0.895,8,0.859,9,0.073,11,0.791,13,1.616,14,1.151,15,1.826,16,0.791,17,1.424,18,1.356,19,0.791,20,1.464,21,0.857,22,2.828,23,0.857,24,2.427,25,0.095,26,0.501,27,1.282,28,3.481,30,0.767,33,0.589,34,2.252,35,3.174,36,2.494,37,0.74,39,0.445,40,0.008,41,0.557,42,0.179,43,0.351,45,0.651,46,1.151,49,0.503,50,1.06,51,0.876,53,0.195,54,0.294,55,1.223,56,0.146,57,0.01,58,1.398,60,1.1,62,1.2,77,2.494,78,1.123,80,2.639,85,1.431,87,0.847,88,0.67,89,3.227,92,0.895,93,1.128,94,1.105,95,0.684,96,1.587,97,0.895,98,1.933,99,0.808,100,0.699,101,0.979,102,1.175,103,0.825,104,0.895,105,0.825,106,0.808,107,0.895,108,0.825,109,0.895,110,0.775,111,0.791,112,0.917,113,0.808,114,0.775,115,0.935,116,1.486,117,0.791,118,0.104,119,0.808,120,0.962,121,0.825,122,0.825,123,0.744,124,0.895,125,0.791,126,0.895,127,0.825,128,0.895,129,0.825,130,0.895,131,0.808,132,0.895,133,0.808,134,0.895,135,0.576,136,0.895,137,0.808,138,0.392,139,0.895,140,0.825,141,0.895,142,0.825,143,1.486,144,0.825,145,0.895,146,0.825,147,1.486,148,0.825,149,0.895,150,0.842,151,0.895,152,0.791,153,0.895,154,0.825,155,0.895,156,0.791,157,0.759,158,0.895,159,0.825,160,1.224,161,1.275,162,0.825,163,0.895,164,0.791,165,0.468,166,0.895,167,0.808,168,0.825,169,0.877,170,0.825,171,0.895,172,0.808,173,0.808,174,0.791,175,0.895,176,0.808,177,0.895,178,0.759,179,0.642,180,0.791,181,0.895,182,1.433,183,1.651,184,0.808,185,0.825,186,0.75,187,0.775,188,0.628,189,0.825,190,0.825,191,0.825,192,0.895,193,0.825,194,1.617,195,0.895,196,0.825,197,0.895,198,0.775,199,0.808,200,0.825,201,1.261,202,0.895,203,0.825,204,0.997,205,0.775,206,0.808,207,0.895,208,0.791,209,0.895,210,0.791,211,0.895,212,0.775,213,0.895,214,0.775,215,0.895,216,0.775,217,0.842,218,0.895,219,0.005,220,0.005,223,0.342,231,1.179,236,4.077,241,1.75,242,2.639,246,2.828,249,1.616,251,1.501,252,1.799,255,0.699,262,2.088,269,2.639,270,2.551,271,1.703,272,2.192,273,2.826,274,2.826,279,2.487,288,1.105,310,0.642,312,1.147,366,0.895,423,4.899,605,0.392,742,2.44,792,3.635,809,1.306,813,1.706,823,1.799,837,3.74,863,1.616,903,1.342,922,2.892,961,3.477,1000,2.341,1026,3.635,1028,3.3,1029,4.236,1099,2.169,1171,1.465,1173,3.257,1176,1.907,1188,2.098,1190,2.906,1191,2.755,1192,1.306,1197,2.551,1198,3.483,1239,2.718,1271,2.088,1305,4.028,1420,1.851,1457,3.227,1475,5.024,1567,4.881,1594,4.989,1595,6.239,1623,3.004,1632,2.364,1633,2.029,1651,1.907,1666,3.911,1672,3.004,1793,3.004,1840,1.75,1903,2.341,1933,3.337,2110,6.287,2111,4.989,2112,5.854,2113,4.853,2114,3.525,2115,4.847,2116,5.854,2117,3.525,2118,4.693,2119,5.854,2120,4.281,2121,5.024,2122,5.024,2123,4.599,2124,5.024,2125,4.028,2126,5.024,2127,5.024,2128,5.024,2129,5.854,2130,3.227,2131,3.525,2132,4.052,2133,5.024,2134,3.37,2135,5.854,2136,5.024,2137,3.525,2138,3.525,2139,4.847,2208,2.029,2258,3.004,2259,2.252,2484,3.635,2609,2.551,2610,3.004,2664,2.802,2747,1.907,2752,2.171,2893,2.551,3546,4.028,3782,3.004,3968,3.525,3973,3.525,5196,3.978,5197,3.978,5198,5.024,5199,3.978,5200,5.67,5201,5.67,5202,3.978,5203,7.202,5204,5.67,5205,3.978,5206,3.978,5207,3.978]],["title/components/RemoveProjectMemberComponentComponent.html",[0,0.078,184,0.926]],["body/components/RemoveProjectMemberComponentComponent.html",[0,0.143,1,0.981,2,0.846,3,0.104,4,0.095,5,0.78,6,1.087,7,1.065,8,1.022,9,0.087,11,0.942,14,1.299,15,2.003,16,0.942,17,1.433,18,1.367,19,0.942,20,1.22,21,0.967,23,0.967,25,0.113,26,0.565,27,1.365,28,3.414,29,2.584,30,0.866,33,0.7,34,2.68,35,3.381,37,0.759,39,0.53,40,0.008,41,0.56,42,0.159,43,0.418,45,0.734,46,1.096,50,0.885,51,0.732,53,0.214,54,0.472,55,1.455,56,0.122,57,0.012,58,1.664,60,1.308,62,1.353,63,2.496,77,2.814,78,2.046,82,3.765,84,1.875,85,1.703,88,0.797,92,1.065,93,1.273,94,1.247,95,0.814,96,1.711,97,1.065,98,2.002,99,0.961,100,0.831,101,1.121,102,1.96,103,0.981,104,1.065,105,0.981,106,0.961,107,1.065,108,0.981,109,1.065,110,0.922,111,0.942,112,0.976,113,0.961,114,0.922,115,1.055,116,1.63,117,0.942,118,0.087,119,0.961,120,0.984,121,0.981,122,0.981,123,0.885,124,1.065,125,0.942,126,1.065,127,0.981,128,1.065,129,0.981,130,1.065,131,0.961,132,1.065,133,0.961,134,1.065,135,0.685,136,1.065,137,0.961,138,0.466,139,1.065,140,0.981,141,1.065,142,0.981,143,1.63,144,0.981,145,1.065,146,0.981,147,1.63,148,0.981,149,1.065,150,1.001,151,1.065,152,0.942,153,1.065,154,0.981,155,1.065,156,0.942,157,0.904,158,1.065,159,0.981,160,1.381,161,1.439,162,0.981,163,1.065,164,0.942,165,0.556,166,1.065,167,0.961,168,0.981,169,1.043,170,0.981,171,1.065,172,0.961,173,0.961,174,0.942,175,1.065,176,0.961,177,1.065,178,0.904,179,0.764,180,0.942,181,1.065,182,0.942,183,1.75,184,1.576,185,0.981,186,0.63,187,0.922,188,0.748,189,0.981,190,0.981,191,0.981,192,1.065,193,0.981,194,0.904,195,1.065,196,0.981,197,1.065,198,0.922,199,0.961,200,0.981,201,0.904,202,1.065,203,0.981,204,1.003,205,0.922,206,0.961,207,1.065,208,0.942,209,1.065,210,0.942,211,1.065,212,0.922,213,1.065,214,0.922,215,1.065,216,0.922,217,1.001,218,1.065,219,0.005,220,0.005,231,1.209,233,6.422,236,4.394,241,2.082,242,2.977,249,1.923,252,2.141,255,0.584,257,4.194,258,4.194,259,5.189,262,1.743,263,1.743,264,5.189,265,3.035,266,3.574,267,4.194,268,4.194,269,2.203,270,3.035,271,2.026,272,2.473,273,3.362,274,3.362,434,6.068,922,2.414,1028,2.667,2110,6.45,2139,5.224,2847,2.903,5208,4.194,5209,7.247,5210,6.398,5211,4.733,5212,4.733,5213,4.733,5214,6.398,5215,4.733,5216,4.733]],["title/components/SetEditorComponent.html",[0,0.078,185,0.945]],["body/components/SetEditorComponent.html",[0,0.111,1,0.664,2,0.64,3,0.071,4,0.065,5,0.528,6,0.735,7,0.721,8,0.692,9,0.059,11,0.637,14,0.982,15,1.611,16,0.637,17,1.41,18,1.342,19,0.637,20,1.35,21,0.731,23,0.731,25,0.076,27,0.814,29,3.543,30,0.654,33,0.716,36,2.855,37,0.787,39,0.359,40,0.008,41,0.491,42,0.192,43,0.283,45,0.669,46,0.484,49,0.597,50,1.214,51,1.003,53,0.231,54,0.237,55,0.985,56,0.082,57,0.008,59,1.15,60,0.886,62,1.373,78,0.904,82,1.885,87,0.819,88,1.35,92,0.721,93,0.962,94,0.943,95,0.551,96,1.431,97,0.721,98,1.837,99,0.651,100,0.563,101,0.921,102,1.002,103,0.664,104,0.721,105,0.664,106,0.651,107,0.721,108,0.664,109,0.721,110,0.624,111,0.637,112,0.965,113,0.651,114,1.592,115,0.797,116,1.311,117,0.637,118,0.059,119,0.651,120,0.942,121,0.664,122,0.664,123,0.599,124,0.721,125,0.637,126,0.721,127,0.664,128,0.721,129,0.664,130,0.721,131,0.651,132,0.721,133,0.651,134,0.721,135,0.464,136,0.721,137,0.651,138,0.316,139,0.721,140,0.664,141,0.721,142,0.664,143,1.311,144,0.664,145,0.721,146,0.664,147,1.311,148,0.664,149,0.721,150,0.678,151,0.721,152,0.637,153,0.721,154,0.664,155,1.311,156,0.637,157,0.612,158,0.721,159,0.664,160,1.044,161,1.088,162,0.664,163,0.721,164,0.637,165,0.763,166,0.721,167,0.651,168,0.664,169,0.706,170,0.664,171,0.721,172,0.651,173,0.651,174,0.637,175,0.721,176,0.651,177,0.721,178,0.612,179,1.227,180,0.637,181,0.721,182,0.637,183,0.943,184,0.651,185,1.345,186,0.905,187,0.943,188,1.328,189,0.664,190,0.664,191,0.664,192,0.721,193,0.664,194,1.399,195,0.721,196,0.664,197,0.721,198,0.624,199,0.651,200,0.664,201,0.612,202,0.721,203,0.664,204,0.806,205,0.624,206,0.982,207,0.721,208,0.637,209,0.721,210,0.637,211,0.721,212,0.624,213,0.721,214,0.624,215,0.721,216,0.624,217,0.678,218,0.721,219,0.007,220,0.004,223,0.275,231,0.843,244,1.431,255,0.395,262,1.18,263,1.781,264,2.598,279,2.189,310,1.047,312,2.009,366,1.891,408,1.535,520,2.738,534,0.832,535,1.824,545,0.748,554,2.563,571,3.111,592,1.611,599,0.766,605,0.477,619,1.126,634,1.832,668,3.981,702,1.269,722,1.824,723,1.97,724,2.846,725,1.371,750,1.615,760,2.309,761,3.255,763,1.781,765,1.965,766,2.764,775,2.613,778,2.839,779,2.598,780,2.467,784,2.017,785,1.885,786,2.598,787,2.146,788,1.029,789,1.336,790,1.535,800,1.269,809,2.904,814,2.071,817,2.318,823,2.635,826,1.409,831,2.39,838,1.965,867,3.923,900,1.814,971,2.187,989,2.846,998,3.436,1000,2.846,1011,2.725,1028,2.429,1062,0.924,1079,3.436,1099,2.131,1176,2.318,1190,1.409,1191,1.336,1194,1.371,1237,1.661,1416,4.948,1468,3.014,1473,2.635,1474,3.101,1501,2.127,1507,3.694,1510,4.162,1511,4.468,1584,3.255,1607,2.64,1628,2.55,1632,1.336,1633,1.634,1649,3.423,1666,1.583,1667,2.419,1712,4.306,1713,3.101,1734,2.64,1754,3.436,1770,2.335,1775,1.634,1779,3.652,1866,1.965,1895,1.885,1904,1.583,1969,3.101,1973,2.252,2004,4.139,2092,2.054,2113,1.965,2115,2.156,2175,3.652,2217,3.652,2539,5.355,2658,2.419,2666,2.276,2667,2.419,2678,5.752,2706,6.175,2747,1.535,2772,2.156,2781,3.652,2785,4.949,2793,5.752,2820,3.922,2827,3.101,2830,3.101,2837,4.698,2838,4.698,2840,5.021,2893,2.054,2895,3.299,3073,4.286,3302,1.965,3555,2.966,3921,2.419,3924,5.163,3925,4.286,3952,5.598,3956,3.736,4032,2.276,4055,5.271,4056,3.101,4057,6.155,4058,5.204,4059,4.611,4060,4.611,4061,4.611,4062,4.611,4063,4.611,4064,2.276,4066,2.276,4069,4.611,4072,5.204,4074,2.276,4080,2.276,4115,2.276,4308,4.286,4758,2.598,5056,3.652,5085,2.419,5217,6.491,5218,5.827,5219,5.827,5220,5.827,5221,3.204,5222,3.204,5223,4.837,5224,3.204,5225,3.204,5226,3.204,5227,6.491,5228,6.491,5229,4.837,5230,3.204,5231,3.204,5232,3.204,5233,3.204,5234,4.837,5235,4.837,5236,3.204,5237,4.286,5238,4.837,5239,3.204,5240,4.286,5241,3.204,5242,4.837,5243,3.204,5244,3.204,5245,3.204,5246,4.837,5247,3.204,5248,3.204,5249,3.204,5250,3.204,5251,3.204,5252,3.204,5253,3.204,5254,4.837,5255,3.204,5256,3.204,5257,3.204,5258,3.204,5259,4.837,5260,3.204,5261,3.204,5262,3.204,5263,3.204,5264,3.204,5265,3.204,5266,3.204,5267,3.204,5268,3.204,5269,3.204,5270,3.204,5271,3.204,5272,3.204,5273,3.204,5274,3.204,5275,3.204,5276,3.204,5277,3.204,5278,3.204,5279,3.204,5280,3.204,5281,3.204,5282,3.204,5283,3.204,5284,3.204,5285,3.204,5286,3.204,5287,3.204]],["title/components/SetEditorDialogComponent.html",[0,0.078,187,0.889]],["body/components/SetEditorDialogComponent.html",[0,0.123,1,0.574,2,0.704,3,0.061,4,0.158,5,0.456,6,0.636,7,0.623,8,0.598,9,0.051,11,0.551,13,1.125,14,0.878,15,1.471,16,0.551,17,1.399,18,1.328,19,0.551,20,1.164,21,0.654,22,2.278,23,0.654,24,1.851,25,0.066,26,0.382,27,1.522,28,2.34,30,0.585,33,0.64,35,2.507,37,0.779,39,0.73,40,0.008,41,0.526,42,0.179,43,0.576,45,0.829,46,1.092,49,0.585,50,1.22,51,1.068,53,0.221,54,0.204,55,0.851,56,0.155,57,0.011,58,0.973,59,1.246,60,0.765,62,0.915,64,1.125,77,1.902,78,1.221,84,1.097,85,0.996,87,0.969,88,1.322,92,0.623,93,0.86,94,0.843,95,0.476,96,1.325,97,0.623,98,1.766,99,0.562,100,1.056,101,0.878,102,0.896,103,0.574,104,0.623,105,0.574,106,0.562,107,0.623,108,0.574,109,0.623,110,0.54,111,0.551,112,0.946,113,0.562,114,1.347,115,0.713,116,1.197,117,0.551,118,0.11,119,0.562,120,0.906,121,0.574,122,0.574,123,1.22,124,0.623,125,0.551,126,0.623,127,0.574,128,0.623,129,0.574,130,0.623,131,0.562,132,0.623,133,0.562,134,0.623,135,0.401,136,0.623,137,0.562,138,0.273,139,0.623,140,0.574,141,0.623,142,0.574,143,1.197,144,0.574,145,0.623,146,0.574,147,1.197,148,0.574,149,0.623,150,0.586,151,0.623,152,0.551,153,0.623,154,0.574,155,0.623,156,0.551,157,0.528,158,0.623,159,0.574,160,0.934,161,0.973,162,0.574,163,0.623,164,0.551,165,0.508,166,0.623,167,0.562,168,0.574,169,0.61,170,0.574,171,0.623,172,0.562,173,0.562,174,0.551,175,0.623,176,0.562,177,0.623,178,0.528,179,1.052,180,0.551,181,0.623,182,0.551,183,0.843,184,0.562,185,0.574,186,0.878,187,1.172,188,1.436,189,0.574,190,0.574,191,0.574,192,0.623,193,0.574,194,1.148,195,0.623,196,0.574,197,0.623,198,0.54,199,0.562,200,0.574,201,1.148,202,0.623,203,0.574,204,0.383,205,0.54,206,0.562,207,0.623,208,0.551,209,0.623,210,0.551,211,0.623,212,0.54,213,0.623,214,0.54,215,0.623,216,0.54,217,0.586,218,0.623,219,0.007,220,0.004,223,0.238,231,1.081,232,1.097,241,1.218,242,2.012,244,1.592,249,1.125,252,1.252,255,1.078,263,1.02,271,1.185,279,0.87,296,1.368,310,1.206,366,1.766,413,1.567,534,0.719,535,2.007,545,1.116,546,1.329,550,1.185,558,1.288,564,1.511,571,1.327,599,1.034,605,0.801,618,2.652,634,1.951,649,1.629,688,1.771,722,1.044,725,1.851,739,1.698,750,0.61,758,2.28,760,2.108,761,1.863,765,1.698,766,3.018,775,2.864,777,2.798,780,2.206,784,2.507,787,1.959,788,0.889,789,1.154,790,1.327,800,1.097,809,2.738,813,0.833,823,1.252,831,3.223,841,1.567,874,2.218,886,1.252,900,1.567,903,1.221,920,1.511,923,1.863,938,3.035,941,1.567,952,1.511,974,1.288,984,2.324,988,1.567,1007,1.154,1008,1.097,1009,1.154,1011,1.42,1028,2.218,1035,1.863,1040,0.909,1062,0.798,1065,1.288,1099,1.974,1171,1.02,1173,2.406,1174,1.368,1175,2.714,1184,1.629,1188,2.28,1190,2.34,1191,2.218,1192,2.142,1198,2.28,1237,2.065,1271,1.959,1420,1.288,1447,1.46,1468,2.96,1472,1.07,1481,1.412,1499,1.629,1501,1.218,1507,3.473,1510,3.411,1511,3.411,1515,1.629,1539,4.63,1540,2.904,1574,2.36,1632,1.154,1651,1.327,1660,2.206,1666,2.137,1693,1.775,1712,2.448,1734,1.511,1740,1.698,1742,3.56,1743,1.698,1770,1.555,1803,1.154,1805,2.971,1831,1.863,1832,1.629,1845,1.567,1848,1.775,1866,3.263,1897,3.439,1904,2.137,2006,1.567,2082,1.863,2083,1.629,2084,1.629,2092,1.775,2156,2.772,2169,1.698,2173,2.91,2539,5.296,2611,1.511,2659,1.967,2661,1.511,2662,1.629,2664,1.368,2666,4.633,2667,2.09,2747,2.55,2760,2.09,2772,3.581,2796,1.698,2837,3.855,2838,4.182,2840,1.775,2848,4.047,2862,3.071,2895,2.448,3322,2.453,3541,2.246,3555,1.698,3797,1.967,3839,1.775,3881,1.863,3933,1.567,3942,2.91,3951,4.047,3952,5.537,3953,4.54,3954,2.09,3955,2.09,3956,3.855,3957,2.09,3958,3.265,3959,2.09,3960,2.09,3961,2.09,3963,1.967,3964,2.09,3965,2.09,3969,2.09,3970,2.09,3971,2.09,3972,2.09,3975,4.925,3977,2.09,3979,2.09,3982,1.775,3983,2.09,3984,2.09,3986,2.09,3987,2.09,3988,2.09,3991,2.09,3992,2.09,3995,2.09,3996,1.698,3997,2.652,3998,4.017,3999,3.265,4000,2.09,4001,1.967,4002,2.09,4003,2.09,4004,2.09,4005,3.265,4006,3.265,4007,2.09,4008,2.09,4009,2.09,4010,2.09,4011,3.265,4012,2.09,4013,3.265,4014,2.09,4015,2.09,4016,2.09,4017,2.09,4018,2.09,4019,2.09,4020,2.09,4021,2.09,4022,2.09,4023,2.09,4024,2.09,4025,2.09,4026,2.09,4027,2.09,4028,3.265,4029,4.017,4030,2.09,4031,2.09,4032,1.967,4033,2.09,4034,2.09,4035,2.09,4036,1.967,4037,2.09,4038,2.09,4039,2.09,4040,4.017,4041,2.09,4042,2.09,4043,2.09,4044,2.09,4045,2.09,4046,2.09,4047,2.09,4048,2.09,4049,2.09,4050,2.09,4051,2.09,4052,2.09,4053,2.09,4054,2.09,4055,1.863,4056,4.182,4057,4.633,4058,1.967,4059,1.967,4060,1.967,4061,4.633,4062,1.967,4063,1.967,4064,3.779,4065,4.017,4066,3.779,4067,4.017,4068,2.09,4069,3.071,4070,2.09,4071,2.09,4072,3.779,4073,2.09,4074,1.967,4075,2.09,4076,2.09,4077,3.265,4078,3.265,4079,2.09,4080,1.967,4081,2.09,4082,2.09,4083,2.09,4084,2.09,4085,2.09,4086,2.09,4087,4.54,4088,2.09,4089,3.265,4090,2.09,4091,3.265,4092,2.09,4093,3.265,4094,2.09,4095,3.265,4096,3.265,4097,2.09,4098,2.09,4099,2.09,4100,2.09,4101,3.265,4102,2.09,4103,2.09,4104,2.09,4105,2.09,4106,2.09,4107,2.09,4108,2.09,4109,3.265,4110,2.09,4111,2.09,4112,2.09,4113,2.09,4114,2.09,4115,1.967,4116,2.09,5198,3.831,5288,4.324,5289,4.324,5290,4.324,5291,4.324,5292,4.324,5293,2.769,5294,2.769,5295,2.769,5296,2.769,5297,2.769,5298,2.769,5299,2.769,5300,2.769,5301,2.769,5302,2.769,5303,2.769,5304,2.769,5305,2.769,5306,2.769,5307,2.769,5308,4.324,5309,4.324,5310,4.324,5311,2.769,5312,2.769,5313,2.769,5314,2.769,5315,2.769,5316,5.32,5317,2.769,5318,2.769,5319,2.769,5320,2.769,5321,2.769,5322,2.769]],["title/interfaces/SetEditorDialogData.html",[118,0.084,4056,2.923]],["body/interfaces/SetEditorDialogData.html",[0,0.119,2,0.493,3,0.082,4,0.171,9,0.068,13,1.514,14,0.756,15,1.495,17,0.551,18,0.527,20,0.627,21,0.563,22,1.595,23,0.563,24,1.595,25,0.089,26,0.478,27,1.506,28,1.639,33,0.551,35,2.255,40,0.008,42,0.196,43,0.684,46,0.963,49,0.682,51,0.576,53,0.242,54,0.275,55,1.145,56,0.18,57,0.014,58,1.309,59,1.208,60,1.03,64,1.514,84,1.476,87,0.98,88,1.177,100,0.654,112,0.651,114,1.241,118,0.117,123,1.306,165,0.438,179,1.127,186,0.855,187,0.726,188,1.222,219,0.007,220,0.005,231,1.011,232,1.476,242,1.734,244,1.706,249,1.514,252,1.685,255,1.124,279,2.195,296,1.841,310,1.32,366,1.905,526,0.988,534,0.967,535,2.402,545,1.234,546,1.663,550,1.595,558,1.734,564,2.034,571,1.786,592,2.341,599,0.891,605,0.855,618,3.317,634,2.095,649,2.192,688,2.058,722,1.405,725,2.315,739,2.285,750,0.821,758,2.852,760,2.143,761,4.703,766,3.086,775,3.053,777,3.251,780,3.564,784,2.655,787,2.345,788,1.197,789,1.553,790,1.786,800,1.476,809,2.686,823,1.685,831,3.453,841,2.109,874,1.553,886,1.685,903,0.756,920,2.034,923,2.508,938,1.734,941,2.109,974,1.734,984,2.09,988,2.109,1007,1.553,1008,1.476,1009,1.553,1011,1.776,1028,1.553,1035,2.508,1040,1.223,1062,1.074,1065,1.734,1237,2.4,1420,1.734,1447,1.964,1468,3.437,1472,1.44,1481,1.9,1499,2.192,1501,1.639,1507,1.685,1510,2.389,1511,2.389,1515,2.192,1539,3.468,1574,2.952,1660,2.759,1693,2.389,1712,3.062,1734,2.034,1740,2.285,1742,3.476,1743,2.285,1770,1.946,1803,1.553,1805,3.453,1832,2.192,1845,2.109,1848,2.389,1866,3.317,1897,3.912,1904,2.673,2006,2.109,2082,2.508,2083,2.192,2084,2.192,2092,2.389,2156,3.468,2169,2.285,2539,2.285,2772,2.508,2796,2.285,2837,5.12,2838,4.963,2840,4.48,2848,4.703,2862,3.842,2895,2.109,3555,2.285,3797,2.646,3839,2.389,3881,2.508,3933,2.109,3942,3.64,3951,4.286,3952,2.389,3953,5.276,3954,2.813,3955,2.813,3956,4.963,3957,2.813,3958,4.084,3959,2.813,3960,2.813,3961,2.813,3963,2.646,3964,2.813,3965,2.813,3969,2.813,3970,2.813,3971,2.813,3972,2.813,3975,5.603,3977,2.813,3979,2.813,3982,2.389,3983,2.813,3984,2.813,3986,2.813,3987,2.813,3988,2.813,3991,2.813,3992,2.813,3995,2.813,3996,2.285,3997,3.317,3998,4.808,3999,4.084,4000,2.813,4001,2.646,4002,2.813,4003,2.813,4004,2.813,4005,4.084,4006,4.084,4007,2.813,4008,2.813,4009,2.813,4010,2.813,4011,4.084,4012,2.813,4013,4.084,4014,2.813,4015,2.813,4016,2.813,4017,2.813,4018,2.813,4019,2.813,4020,2.813,4021,2.813,4022,2.813,4023,2.813,4024,2.813,4025,2.813,4026,2.813,4027,2.813,4028,4.084,4029,4.808,4030,2.813,4031,2.813,4032,2.646,4033,2.813,4034,2.813,4035,2.813,4036,2.646,4037,2.813,4038,2.813,4039,2.813,4040,4.808,4041,2.813,4042,2.813,4043,2.813,4044,2.813,4045,2.813,4046,2.813,4047,2.813,4048,2.813,4049,2.813,4050,2.813,4051,2.813,4052,2.813,4053,2.813,4054,2.813,4055,2.508,4056,4.083,4057,5.498,4058,4.963,4059,4.963,4060,4.963,4061,5.271,4062,4.963,4063,4.963,4064,2.646,4065,2.813,4066,2.646,4067,2.813,4068,2.813,4069,3.842,4070,2.813,4071,2.813,4072,4.523,4073,2.813,4074,2.646,4075,2.813,4076,2.813,4077,4.084,4078,4.084,4079,2.813,4080,2.646,4081,2.813,4082,2.813,4083,2.813,4084,2.813,4085,2.813,4086,2.813,4087,2.813,4088,2.813,4089,4.084,4090,2.813,4091,2.813,4092,2.813,4093,2.813,4094,2.813,4095,2.813,4096,4.084,4097,2.813,4098,2.813,4099,2.813,4100,2.813,4101,2.813,4102,2.813,4103,2.813,4104,2.813,4105,2.813,4106,2.813,4107,2.813,4108,2.813,4109,4.084,4110,2.813,4111,2.813,4112,2.813,4113,2.813,4114,2.813,4115,2.646,4116,2.813]],["title/interfaces/SetMultiSource.html",[118,0.084,3956,2.923]],["body/interfaces/SetMultiSource.html",[0,0.12,2,0.722,3,0.083,4,0.175,9,0.069,13,1.534,14,0.766,15,1.509,17,0.558,18,0.534,20,0.636,21,0.571,22,1.616,23,0.571,24,1.616,25,0.09,26,0.482,27,1.509,28,1.66,33,0.558,35,2.277,40,0.008,42,0.171,43,0.621,46,0.97,49,0.626,51,0.583,53,0.242,54,0.279,55,1.16,56,0.181,57,0.014,58,1.327,59,1.213,60,1.043,64,1.534,84,1.495,87,0.984,88,1.184,100,0.663,112,0.658,114,1.25,118,0.129,123,1.314,165,0.444,179,1.134,186,0.865,187,0.736,188,1.266,219,0.007,220,0.005,223,0.324,231,1.017,232,1.495,242,1.757,244,1.714,249,1.534,252,1.707,255,1.126,279,1.186,296,1.865,310,1.325,366,1.99,526,1.001,534,0.98,535,2.42,545,1.239,546,1.679,550,1.616,558,1.757,564,2.06,571,1.809,592,1.509,599,0.903,605,0.857,618,3.349,634,2.195,649,2.221,688,2.07,722,2.06,725,2.746,739,2.315,750,0.832,758,2.879,760,2.163,761,2.541,766,3.097,775,3.06,777,3.731,780,2.785,784,2.675,787,2.363,788,1.212,789,1.574,790,1.809,800,1.495,809,2.856,823,1.707,831,3.474,841,2.137,874,1.574,886,1.707,903,0.766,920,2.06,923,2.541,938,1.757,941,2.137,974,1.757,984,2.11,988,2.137,1007,1.574,1008,1.495,1009,1.574,1011,1.793,1028,1.574,1035,2.541,1040,1.239,1062,1.088,1065,1.757,1237,2.754,1420,1.757,1447,1.99,1468,3.446,1472,2.11,1481,1.925,1499,2.221,1501,1.66,1507,1.707,1510,2.42,1511,2.42,1515,2.221,1539,3.501,1574,2.981,1660,2.785,1693,2.42,1712,3.091,1734,2.981,1740,2.315,1742,3.502,1743,2.315,1770,1.964,1803,1.574,1805,3.474,1832,3.213,1845,3.091,1848,2.42,1866,3.349,1897,4.329,1904,2.698,2006,3.091,2082,2.541,2083,2.221,2084,2.221,2092,2.42,2156,4.113,2169,2.315,2539,2.315,2772,2.541,2796,2.315,2837,4.507,2838,4.113,2840,2.42,2848,5.526,2862,3.879,2895,2.137,3555,2.315,3797,2.681,3839,2.42,3881,2.541,3933,2.137,3942,3.675,3951,4.318,3952,2.42,3953,5.632,3954,2.85,3955,2.85,3956,4.782,3957,2.85,3958,4.123,3959,2.85,3960,2.85,3961,2.85,3963,2.681,3964,2.85,3965,2.85,3969,2.85,3970,2.85,3971,2.85,3972,2.85,3975,6.415,3977,2.85,3979,2.85,3982,2.42,3983,2.85,3984,2.85,3986,2.85,3987,2.85,3988,2.85,3991,2.85,3992,2.85,3995,2.85,3996,2.315,3997,4.311,3998,5.871,3999,5.871,4000,4.123,4001,2.681,4002,2.85,4003,2.85,4004,2.85,4005,4.123,4006,4.123,4007,2.85,4008,2.85,4009,2.85,4010,2.85,4011,4.123,4012,2.85,4013,4.123,4014,2.85,4015,2.85,4016,2.85,4017,2.85,4018,2.85,4019,2.85,4020,2.85,4021,2.85,4022,2.85,4023,2.85,4024,2.85,4025,2.85,4026,2.85,4027,2.85,4028,4.123,4029,4.844,4030,2.85,4031,2.85,4032,2.681,4033,2.85,4034,2.85,4035,2.85,4036,2.681,4037,2.85,4038,2.85,4039,2.85,4040,4.844,4041,2.85,4042,2.85,4043,2.85,4044,2.85,4045,2.85,4046,2.85,4047,2.85,4048,2.85,4049,2.85,4050,2.85,4051,2.85,4052,2.85,4053,2.85,4054,2.85,4055,2.541,4056,3.501,4057,4.557,4058,2.681,4059,2.681,4060,2.681,4061,3.879,4062,2.681,4063,2.681,4064,2.681,4065,2.85,4066,2.681,4067,2.85,4068,2.85,4069,3.879,4070,2.85,4071,2.85,4072,4.557,4073,2.85,4074,2.681,4075,2.85,4076,2.85,4077,4.123,4078,4.123,4079,2.85,4080,2.681,4081,2.85,4082,2.85,4083,2.85,4084,2.85,4085,2.85,4086,2.85,4087,2.85,4088,2.85,4089,4.123,4090,2.85,4091,2.85,4092,2.85,4093,2.85,4094,2.85,4095,2.85,4096,4.123,4097,2.85,4098,2.85,4099,2.85,4100,2.85,4101,2.85,4102,2.85,4103,2.85,4104,2.85,4105,2.85,4106,2.85,4107,2.85,4108,2.85,4109,4.123,4110,2.85,4111,2.85,4112,2.85,4113,2.85,4114,2.85,4115,2.681,4116,2.85]],["title/components/SettingsDialogComponent.html",[0,0.078,189,0.945]],["body/components/SettingsDialogComponent.html",[0,0.13,1,1.29,2,0.823,3,0.1,4,0.092,5,0.749,6,1.043,7,1.022,8,0.981,9,0.083,11,1.712,12,3.431,13,1.846,14,1.263,15,1.961,16,0.904,17,1.431,18,1.364,19,1.59,20,1.449,21,0.941,22,3.038,23,0.941,24,2.664,25,0.108,26,0.55,27,1.502,28,3.357,30,0.842,33,0.672,34,2.573,35,3.333,36,3.357,37,0.768,39,0.509,40,0.008,41,0.553,42,0.168,43,0.401,45,0.814,46,1.154,47,4.42,49,0.474,50,1.163,51,0.962,53,0.265,54,0.524,55,1.913,56,0.117,57,0.011,58,1.597,59,0.687,60,1.256,62,1.953,63,3.281,64,1.846,88,0.765,92,1.022,93,1.238,94,1.213,95,0.782,96,1.682,97,1.022,98,1.987,99,0.923,100,0.798,101,1.012,102,1.29,103,0.942,104,1.022,105,0.942,106,0.923,107,1.022,108,0.942,109,1.022,110,0.886,111,0.904,112,0.963,113,0.923,114,0.886,115,1.026,116,1.596,117,0.904,118,0.083,119,0.923,120,0.979,121,0.942,122,0.942,123,0.85,124,1.022,125,0.904,126,1.022,127,0.942,128,1.022,129,0.942,130,1.022,131,0.923,132,1.022,133,0.923,134,1.022,135,0.658,136,1.022,137,0.923,138,0.448,139,1.022,140,0.942,141,1.022,142,0.942,143,1.596,144,0.942,145,1.022,146,0.942,147,1.596,148,0.942,149,1.022,150,0.961,151,1.022,152,0.904,153,1.022,154,0.942,155,1.022,156,0.904,157,0.867,158,1.022,159,0.942,160,1.344,161,1.4,162,0.942,163,1.022,164,0.904,165,0.534,166,1.022,167,0.923,168,1.29,169,1.762,170,0.942,171,1.022,172,0.923,173,0.923,174,0.904,175,1.022,176,0.923,177,1.022,178,0.867,179,0.733,180,0.904,181,1.022,182,0.904,183,1.213,184,0.923,185,0.942,186,0.613,187,0.886,188,0.718,189,1.582,190,0.942,191,0.942,192,1.022,193,0.942,194,0.867,195,1.022,196,0.942,197,1.022,198,0.886,199,0.923,200,0.942,201,0.867,202,1.022,203,0.942,204,0.629,205,0.886,206,0.923,207,1.022,208,0.904,209,1.022,210,0.904,211,1.022,212,0.886,213,1.022,214,0.886,215,1.022,216,0.886,217,0.961,218,1.022,219,0.005,220,0.005,239,3.228,246,1.945,249,1.846,250,2.115,251,1.714,252,2.055,350,3.228,408,2.982,467,6.498,469,3.431,534,1.18,537,1.895,544,1.526,623,2.318,688,1.338,723,1.065,1097,3.662,1438,3.686,1470,3.431,1548,3.228,1563,3.431,2228,3.431,2240,3.431,2246,3.431,2785,3.228,2820,3.058,2851,2.787,3336,6.763,3337,6.19,5323,7.626,5324,8.068,5325,7.994,5326,7.632,5327,7.632,5328,7.632,5329,4.544,5330,7.096,5331,4.544,5332,4.544,5333,4.544,5334,6.222,5335,4.544,5336,6.222,5337,6.222,5338,4.544,5339,5.514]],["title/components/SideNavComponent.html",[0,0.078,190,0.945]],["body/components/SideNavComponent.html",[0,0.14,1,0.92,2,0.809,3,0.154,4,0.089,5,0.731,6,1.019,7,0.998,8,0.958,9,0.081,11,0.883,16,0.883,17,1.43,18,1.363,19,0.883,20,0.747,21,0.926,23,0.926,25,0.106,26,0.541,27,1.495,33,0.656,37,0.798,39,0.497,40,0.008,41,0.573,42,0.191,43,0.392,49,0.338,50,1.532,51,1.267,53,0.242,54,0.328,56,0.114,57,0.011,58,1.559,62,1.295,88,1.031,91,1.596,92,0.998,93,1.218,94,1.193,95,0.763,96,1.665,97,0.998,98,1.977,99,0.901,100,0.779,101,1.044,102,1.269,103,0.92,104,0.998,105,0.92,106,0.901,107,0.998,108,0.92,109,0.998,110,0.865,111,0.883,112,0.955,113,0.901,114,0.865,115,1.009,116,1.576,117,0.883,118,0.081,119,0.901,120,0.976,121,0.92,122,0.92,123,0.83,124,0.998,125,0.883,126,0.998,127,0.92,128,0.998,129,0.92,130,0.998,131,0.901,132,0.998,133,0.901,134,0.998,135,0.642,136,0.998,137,0.901,138,0.807,139,0.998,140,0.92,141,0.998,142,0.92,143,1.576,144,0.92,145,0.998,146,0.92,147,1.576,148,0.92,149,0.998,150,0.939,151,0.998,152,0.883,153,0.998,154,0.92,155,0.998,156,0.883,157,0.847,158,0.998,159,0.92,160,1.322,161,1.377,162,0.92,163,0.998,164,0.883,165,0.522,166,0.998,167,0.901,168,0.92,169,0.978,170,0.92,171,0.998,172,0.901,173,0.901,174,0.883,175,0.998,176,0.901,177,0.998,178,0.847,179,0.716,180,0.883,181,0.998,182,0.883,183,1.193,184,0.901,185,0.92,186,0.603,187,0.865,188,0.701,189,0.92,190,1.566,191,1.774,192,0.998,193,0.92,194,0.847,195,0.998,196,0.92,197,0.998,198,0.865,199,0.901,200,0.92,201,1.442,202,0.998,203,0.92,204,0.614,205,0.865,206,0.901,207,0.998,208,0.883,209,0.998,210,0.883,211,0.998,212,0.865,213,0.998,214,0.865,215,0.998,216,0.865,217,0.939,218,0.998,219,0.005,220,0.005,223,0.381,269,3.261,271,1.899,272,2.366,366,1.377,373,7.202,496,1.634,509,3.417,512,2.109,514,4.493,532,3.975,546,1.882,553,4.179,605,0.437,651,3.695,722,2.309,903,1.423,971,2.768,983,3.585,984,3.064,1007,1.85,1008,1.758,1009,1.85,1048,3.754,1049,3.754,1069,1.803,1171,2.254,1175,2.263,1192,1.457,1193,3.152,1230,2.934,1420,2.065,1632,1.85,1633,2.263,1671,3.932,2007,3.152,2166,4.844,2208,2.263,2211,5.424,2247,3.35,2611,2.422,2814,3.599,2888,3.754,2893,2.845,3083,5.424,3087,3.599,3088,2.986,3314,3.465,4531,3.599,4838,3.925,4846,5.424,4856,6.21,5340,7.868,5341,3.932,5342,6.121,5343,6.121,5344,5.424,5345,7.008,5346,6.121,5347,7.008,5348,7.008,5349,7.008,5350,7.008,5351,7.927,5352,7.008,5353,4.437,5354,6.121,5355,4.437,5356,4.437,5357,4.437,5358,6.121,5359,4.437,5360,4.437,5361,4.437,5362,4.437,5363,4.437,5364,4.437,5365,4.437,5366,4.437,5367,4.437,5368,4.437,5369,4.437,5370,7.555,5371,4.437,5372,4.437,5373,4.437,5374,4.437,5375,4.437,5376,4.437,5377,3.932]],["title/injectables/StateService.html",[529,1.113,553,2.404]],["body/injectables/StateService.html",[3,0.12,4,0.11,8,1.178,9,0.1,25,0.13,26,0.621,30,0.951,33,0.807,37,0.771,39,0.87,40,0.008,41,0.569,42,0.181,43,0.686,45,0.892,46,0.825,49,0.592,50,1.314,51,1.086,53,0.257,54,0.403,56,0.181,57,0.014,59,1.241,81,3.584,87,0.914,101,1.097,118,0.1,186,0.537,219,0.006,220,0.006,223,0.603,228,2.256,244,1.202,255,0.958,276,1.641,288,1.063,310,1.134,312,2.026,496,2.009,509,2.467,511,5.698,525,5.868,527,4.424,528,5.698,529,1.715,530,7.273,531,4.834,532,4.156,533,3.875,534,1.417,535,2.931,536,3.672,537,2.274,538,1.573,539,5.007,540,4.424,541,2.467,542,3.177,543,6.226,544,2.756,545,1.086,546,2.523,547,4.729,548,6.226,549,4.688,550,3.008,551,6.226,552,2.399,553,3.704,554,3.941,555,5.305,556,7.268,557,4.834,558,3.269,559,4.308,560,3.704,561,6.226,562,6.226,563,4.729,564,3.835,565,5.305,566,3.09,567,6.226,568,5.698,569,2.929,570,3.835,571,3.367,572,1.937,573,3.704,574,6.226,575,6.197,576,5.305,577,6.226,578,6.226,579,6.226,580,3.704,581,6.226,582,6.226,583,4.834,584,4.834,585,4.834,586,6.226,587,6.226,588,3.672,589,4.834,590,6.226,591,4.829,592,1.942,593,5.305,594,6.226,595,5.698,596,3.835,597,6.226,598,6.226,599,1.68,600,4.834,601,5.698,602,4.834,603,4.834,604,4.834,605,0.692,606,4.834,607,4.834,608,2.161,622,3.875,643,2.274,5378,7.026,5379,7.026,5380,7.026,5381,5.455,5382,5.455,5383,5.455]],["title/components/TextDisplayComponent.html",[0,0.078,193,0.945]],["body/components/TextDisplayComponent.html",[0,0.136,1,0.835,2,0.757,3,0.089,4,0.081,5,0.664,6,0.925,7,0.906,8,0.87,9,0.074,11,0.802,16,0.802,17,1.425,18,1.357,19,0.802,20,0.679,21,0.865,23,0.865,25,0.096,26,0.505,30,0.774,37,0.806,39,0.641,40,0.008,41,0.547,42,0.187,43,0.505,45,0.763,46,1.157,49,0.637,50,1.354,51,1.332,53,0.169,54,0.298,56,0.147,57,0.01,59,1.006,62,1.211,77,2.517,78,1.878,82,2.371,85,2.606,88,0.679,89,2.267,92,0.906,93,1.138,94,1.115,95,0.693,96,1.596,97,0.906,98,1.939,99,0.818,100,0.708,101,0.982,102,1.186,103,0.835,104,0.906,105,0.835,106,0.818,107,0.906,108,0.835,109,0.906,110,0.785,111,0.802,112,0.921,113,0.818,114,1.628,115,1.194,116,1.497,117,0.802,118,0.074,119,0.818,120,0.963,121,0.835,122,0.835,123,0.753,124,0.906,125,0.802,126,0.906,127,0.835,128,0.906,129,0.835,130,0.906,131,0.818,132,0.906,133,0.818,134,0.906,135,0.583,136,0.906,137,0.818,138,0.397,139,0.906,140,0.835,141,0.906,142,0.835,143,1.497,144,0.835,145,0.906,146,0.835,147,1.497,148,0.835,149,0.906,150,0.852,151,0.906,152,0.802,153,0.906,154,0.835,155,0.906,156,0.802,157,0.769,158,0.906,159,0.835,160,1.236,161,1.287,162,0.835,163,0.906,164,0.802,165,0.474,166,0.906,167,0.818,168,0.835,169,0.888,170,0.835,171,0.906,172,0.818,173,0.818,174,0.802,175,0.906,176,0.818,177,0.906,178,0.769,179,0.65,180,0.802,181,0.906,182,0.802,183,1.115,184,0.818,185,0.835,186,0.656,187,0.785,188,0.636,189,0.835,190,0.835,191,0.835,192,0.906,193,1.501,194,1.809,195,0.906,196,0.835,197,0.906,198,0.785,199,0.818,200,0.835,201,1.46,202,0.906,203,0.835,204,1.1,205,0.785,206,0.818,207,0.906,208,0.802,209,0.906,210,0.802,211,0.906,212,0.785,213,0.906,214,0.785,215,0.906,216,0.785,217,0.852,218,0.906,219,0.005,220,0.005,223,0.346,244,1.752,262,3.077,263,2.817,271,2.45,272,2.8,279,1.798,310,1.169,459,6.751,558,3.096,572,1.004,573,3.017,592,1.839,599,1.901,605,0.397,608,1.597,651,3.508,656,4.321,667,4.176,723,1.862,763,2.107,837,4.331,863,2.943,884,1.931,900,4.331,903,1.696,989,3.367,1003,4.644,1066,1.637,1069,1.637,1070,2.371,1099,2.863,1170,3.571,1171,2.668,1173,2.588,1174,1.991,1175,2.056,1176,2.743,1188,3.819,1190,2.517,1191,1.68,1192,1.323,1194,3.275,1416,3.915,1540,2.2,1632,2.386,1641,2.471,1651,1.931,1855,2.2,2037,3.24,2113,2.471,2609,2.584,2610,3.043,2611,3.124,2661,3.124,2662,3.367,2664,1.991,2679,5.071,2688,3.043,2709,2.471,2747,1.931,2752,2.2,3092,2.584,3546,2.862,4036,4.065,4127,5.896,4129,7.531,4177,5.071,4338,2.712,4487,3.043,4859,3.571,4865,3.268,5384,7.252,5385,3.268,5386,5.722,5387,6.654,5388,5.722,5389,6.654,5390,6.654,5391,7.244,5392,8.175,5393,6.654,5394,4.03,5395,5.896,5396,4.03,5397,4.03,5398,4.03,5399,5.722,5400,5.722,5401,4.03,5402,4.03,5403,4.03,5404,4.03,5405,4.03,5406,4.03,5407,4.03,5408,4.03,5409,4.03,5410,4.03,5411,4.03,5412,5.722,5413,4.03,5414,4.03,5415,5.722,5416,5.722,5417,4.03,5418,4.03,5419,4.03,5420,6.654,5421,4.03,5422,3.571,5423,3.571,5424,4.03,5425,4.03,5426,4.03]],["title/interfaces/TextFragment.html",[118,0.084,2192,3.069]],["body/interfaces/TextFragment.html",[0,0.138,3,0.13,4,0.12,9,0.109,14,1.204,15,2.048,17,0.877,18,0.839,21,0.897,23,0.897,25,0.142,26,0.654,27,0.998,40,0.008,41,0.567,42,0.163,49,0.645,50,1.109,51,0.916,53,0.257,54,0.438,56,0.191,57,0.015,59,1.12,60,1.639,87,0.871,94,1.156,115,1.436,118,0.136,138,0.584,152,1.18,194,1.615,219,0.006,220,0.006,228,2.379,244,1.632,255,0.731,288,1.156,310,0.957,313,2.93,366,1.334,384,2.681,427,3.237,512,1.784,526,1.572,534,1.54,536,3.991,537,2.472,541,2.681,544,2.487,553,3.906,573,3.126,605,0.584,612,3.237,614,3.126,677,4.986,681,3.489,805,3.357,809,1.947,818,3.991,900,3.357,1040,1.947,1099,1.947,1250,2.608,1400,3.489,1472,3.433,1474,3.802,1501,2.608,1507,3.827,1537,4.212,1876,3.636,2125,4.212,2134,3.025,2140,5.18,2141,4.212,2142,3.636,2143,4.212,2144,5.437,2145,5.862,2146,6.008,2147,6.008,2148,6.008,2149,6.552,2150,4.477,2151,4.986,2152,4.809,2153,4.791,2154,3.802,2155,4.477,2156,3.802,2157,5.738,2158,4.809,2159,4.809,2160,4.809,2161,4.809,2162,4.809,2163,4.477,2164,5.593,2165,4.809,2166,3.802,2167,4.809,2168,4.809,2169,3.636,2170,4.809,2171,4.809,2172,4.477,2173,3.991,2174,5.437,2175,4.477,2176,4.809,2177,4.809,2178,4.809,2179,4.809,2180,4.809,2181,4.809,2182,4.477,2183,4.809,2184,4.809,2185,4.809,2186,4.809,2187,6.008,2188,4.809,2189,4.809,2190,4.809,2191,4.212,2192,5.437]],["title/classes/TimeFormatter.html",[57,0.012,827,2.581]],["body/classes/TimeFormatter.html",[3,0.123,4,0.113,9,0.103,25,0.134,30,0.968,37,0.715,39,0.882,40,0.008,41,0.527,42,0.173,43,0.695,45,0.903,49,0.723,56,0.144,57,0.018,73,7.348,75,4.829,81,4.468,87,0.926,219,0.006,220,0.006,223,0.712,255,1.08,572,2.067,591,4.209,605,0.888,717,2.066,722,3.128,748,4.235,754,5.08,803,3.975,813,2.152,816,4.372,827,4.049,828,4.88,858,3.984,859,4.549,860,3.062,1062,2.47,1189,6.387,1660,3.648,1775,2.861,1973,2.168,2000,4.586,2321,5.317,2477,4.586,4001,6.085,4350,7.348,5183,4.97,5423,7.348,5427,4.97,5428,7.152,5429,7.152,5430,7.152,5431,7.152,5432,5.609,5433,8.759,5434,7.152,5435,7.152,5436,7.152,5437,7.152,5438,7.152,5439,7.152,5440,7.152,5441,7.152,5442,8.566,5443,7.152,5444,5.609,5445,6.338,5446,7.152,5447,8.901,5448,7.152,5449,7.152,5450,9.171,5451,5.609,5452,7.152,5453,5.801,5454,5.609,5455,7.152,5456,5.609,5457,7.152,5458,5.609,5459,5.609,5460,5.609,5461,5.609,5462,7.874,5463,5.609,5464,5.609,5465,7.152,5466,5.609,5467,5.609,5468,7.152,5469,7.152,5470,5.609,5471,5.609,5472,5.609,5473,5.609,5474,5.609,5475,5.609,5476,5.609,5477,5.609,5478,5.609]],["title/directives/TimelineCoalescedItemsDirective.html",[95,0.784,212,0.889]],["body/directives/TimelineCoalescedItemsDirective.html",[0,0.136,3,0.126,4,0.115,5,1.551,9,0.105,14,1.16,16,1.136,17,1.274,18,0.808,21,0.864,23,0.864,25,0.136,26,0.639,27,1.218,33,0.845,37,0.657,39,0.639,40,0.008,41,0.382,42,0.159,43,0.504,53,0.235,54,0.422,56,0.215,57,0.021,58,2.791,87,0.672,88,1.549,95,1.57,186,0.713,198,1.41,199,1.879,205,1.113,212,1.548,214,1.41,216,1.41,217,1.208,219,0.006,220,0.006,223,0.49,224,2.445,231,0.827,244,1.259,262,3.426,288,1.113,310,1.167,312,1.647,384,4.09,429,3.503,453,4.057,462,3.949,471,5.345,619,2.007,634,2.357,702,2.263,723,1.861,750,1.259,780,4.613,785,3.361,802,4.639,803,3.806,810,6.251,816,3.012,825,3.367,827,4.726,828,3.361,829,3.662,840,4.057,863,3.5,870,2.658,905,4.057,922,3.691,941,3.234,1057,3.012,1058,3.815,1148,3.118,1803,2.382,1973,2.208,2010,3.503,2032,3.361,2827,3.662,2851,3.503,2997,3.844,3027,2.914,3305,3.503,3307,3.662,3316,4.633,3997,5.12,4149,4.057,4759,4.057,5042,4.313,5479,6.304,5480,5.463,5481,5.712,5482,5.463,5483,5.463,5484,4.057,5485,4.313,5486,4.313,5487,4.313,5488,4.313,5489,4.313,5490,4.313,5491,4.313,5492,4.313,5493,5.996,5494,4.313,5495,5.463,5496,4.313,5497,4.313,5498,4.313]],["title/components/TimelineItemComponent.html",[0,0.078,198,0.889]],["body/components/TimelineItemComponent.html",[0,0.131,1,0.746,2,0.697,3,0.079,4,0.073,5,1.42,6,0.826,7,0.809,8,0.777,9,0.066,11,0.716,14,1.071,16,0.716,17,1.42,18,1.349,19,0.716,20,0.606,21,0.797,23,0.797,25,0.149,26,0.466,33,0.532,37,0.736,39,0.403,40,0.008,41,0.512,42,0.178,43,0.318,50,1.167,51,0.965,53,0.184,54,0.266,56,0.177,57,0.017,58,2.194,62,1.116,78,2.159,85,1.897,87,0.62,88,1.498,91,2.842,92,0.809,93,1.049,94,1.028,95,1.445,96,1.515,97,0.809,98,1.89,99,0.731,100,0.632,101,0.953,102,1.093,103,0.746,104,0.809,105,0.746,106,0.731,107,0.809,108,0.746,109,0.809,110,0.701,111,0.716,112,0.881,113,0.731,114,0.701,115,0.869,116,1.404,117,0.716,118,0.066,119,0.731,120,0.947,121,0.746,122,0.746,123,0.673,124,0.809,125,0.716,126,0.809,127,0.746,128,0.809,129,0.746,130,0.809,131,0.731,132,0.809,133,0.731,134,0.809,135,0.521,136,0.809,137,0.731,138,0.354,139,0.809,140,0.746,141,0.809,142,0.746,143,1.404,144,0.746,145,0.809,146,0.746,147,1.404,148,0.746,149,0.809,150,0.761,151,0.809,152,0.716,153,0.809,154,0.746,155,0.809,156,0.716,157,0.687,158,0.809,159,0.746,160,1.139,161,1.186,162,0.746,163,0.809,164,0.716,165,0.423,166,0.809,167,0.731,168,0.746,169,0.793,170,0.746,171,0.809,172,0.731,173,0.731,174,0.716,175,0.809,176,0.731,177,0.809,178,0.687,179,0.581,180,0.716,181,0.809,182,0.716,183,1.028,184,0.731,185,0.746,186,0.721,187,0.701,188,0.568,189,0.746,190,0.746,191,0.746,192,0.809,193,0.746,194,1.007,195,0.809,196,0.746,197,0.809,198,1.426,199,1.89,200,0.746,201,1.578,202,0.809,203,0.746,204,0.498,205,0.701,206,0.731,207,0.809,208,0.716,209,0.809,210,0.716,211,0.809,212,1.339,213,0.809,214,1.339,215,0.809,216,1.339,217,1.116,218,0.809,219,0.004,220,0.004,223,0.309,224,2.257,231,0.763,241,2.745,244,1.162,262,3.296,263,1.942,271,3.132,272,2.955,274,2.556,279,1.131,288,0.701,310,1.007,312,1.52,366,0.809,384,3.573,429,3.234,453,2.556,462,2.878,471,5.564,599,0.861,608,1.426,619,1.853,634,1.762,702,2.089,723,1.463,750,0.793,763,1.942,780,3.9,785,2.117,802,4.002,803,3.962,809,1.181,810,5.755,813,1.587,816,2.78,825,2.905,827,4.587,828,2.117,829,2.307,840,4.434,863,3.414,870,1.674,903,1.827,905,4.434,922,3.506,941,2.985,991,3.534,1057,2.78,1058,3.624,1066,3.21,1069,3.359,1070,4.044,1099,2.257,1108,1.964,1148,1.964,1171,1.942,1173,3.998,1174,2.606,1176,2.527,1177,3.746,1179,5.197,1190,2.319,1191,1.5,1192,2.594,1193,4.882,1196,4.277,1198,2.78,1271,2.695,1300,1.897,1540,1.964,1541,3.982,1544,2.037,1630,2.117,1632,1.5,1651,3.507,1666,3.396,1673,2.307,1738,4.434,1803,2.199,1903,3.103,1973,2.038,2010,3.234,2032,3.103,2113,3.234,2263,2.918,2611,3.407,2658,2.717,2660,5.531,2661,3.407,2662,3.103,2663,3.188,2664,4.085,2747,2.527,2752,2.878,2761,3.188,2762,3.188,2827,3.381,2851,3.234,2895,2.985,2997,3.549,3027,2.69,3305,2.207,3307,3.381,3542,2.556,3546,2.556,3673,6.09,3997,3.828,4149,3.746,4759,2.556,4771,2.918,4850,3.188,5377,5.531,5422,4.673,5479,4.713,5480,2.717,5482,5.19,5483,4.713,5484,3.746,5485,3.982,5486,4.713,5487,3.982,5488,4.713,5489,3.982,5490,4.713,5491,4.713,5492,2.717,5493,4.713,5494,2.717,5495,3.982,5496,2.717,5497,2.717,5498,2.717,5499,3.598,5500,5.273,5501,3.598,5502,3.598,5503,3.598,5504,3.598,5505,3.598,5506,3.598,5507,5.273,5508,3.598,5509,3.598,5510,3.598,5511,3.598,5512,3.598,5513,3.598,5514,4.673,5515,3.598,5516,3.598,5517,5.273,5518,3.598,5519,5.273,5520,3.598,5521,7.317,5522,3.598,5523,3.598,5524,3.598,5525,3.598,5526,3.598,5527,3.598,5528,3.598]],["title/directives/TimelineItemDeletedDirective.html",[95,0.784,214,0.889]],["body/directives/TimelineItemDeletedDirective.html",[0,0.135,3,0.125,4,0.115,5,1.551,9,0.104,14,1.156,16,1.133,17,1.273,18,0.806,21,0.861,23,0.861,25,0.136,26,0.638,27,1.216,33,0.842,37,0.656,39,0.637,40,0.008,41,0.381,42,0.159,43,0.503,53,0.234,54,0.421,56,0.215,57,0.021,58,2.787,87,0.669,88,1.548,95,1.569,186,0.781,198,1.545,199,1.878,205,1.11,212,1.407,214,1.545,216,1.407,217,1.205,219,0.006,220,0.006,223,0.489,224,2.437,231,0.824,244,1.255,262,3.425,288,1.11,310,1.28,312,1.642,384,4.087,429,3.492,453,4.044,462,3.941,471,5.337,619,2.001,634,2.354,702,2.256,723,1.858,750,1.255,780,4.61,785,3.35,802,4.629,803,3.8,810,6.112,816,3.002,825,3.36,827,4.721,828,3.35,829,3.651,840,4.044,863,3.497,870,2.65,905,4.044,922,3.683,941,3.223,1057,3.002,1058,3.807,1148,3.108,1803,2.374,1973,2.201,2010,3.492,2032,3.35,2827,3.651,2851,3.492,2997,3.832,3027,2.904,3305,3.492,3307,3.651,3997,5.114,4149,4.044,4759,5.129,5042,4.299,5479,6.296,5480,4.299,5482,5.987,5483,5.987,5484,4.044,5485,4.299,5486,4.299,5487,4.299,5488,4.299,5489,4.299,5490,4.299,5491,4.299,5492,4.299,5493,5.987,5494,4.299,5495,5.452,5496,4.299,5497,4.299,5498,4.299,5529,5.694,5530,5.694]],["title/directives/TimelineSingleItemDirective.html",[95,0.784,216,0.889]],["body/directives/TimelineSingleItemDirective.html",[0,0.136,3,0.126,4,0.115,5,1.551,9,0.105,14,1.16,16,1.136,17,1.274,18,0.808,21,0.864,23,0.864,25,0.136,26,0.639,27,1.218,33,0.845,37,0.657,39,0.639,40,0.008,41,0.382,42,0.159,43,0.504,53,0.235,54,0.422,56,0.215,57,0.021,58,2.791,87,0.672,88,1.549,95,1.57,186,0.713,198,1.41,199,1.879,205,1.113,212,1.41,214,1.41,216,1.548,217,1.531,219,0.006,220,0.006,223,0.49,224,2.445,231,0.827,244,1.259,262,3.426,288,1.113,310,1.167,312,1.647,384,4.09,429,3.503,453,4.057,462,3.949,471,5.345,619,2.007,634,2.357,702,2.263,723,1.861,750,1.259,780,4.613,785,3.361,802,4.639,803,3.806,810,6.251,816,3.012,825,3.367,827,4.726,828,3.361,829,3.662,840,4.057,863,3.5,870,2.658,905,4.057,922,3.691,941,3.234,1057,3.012,1058,3.815,1148,3.118,1803,2.382,1973,2.208,2010,3.503,2032,3.361,2827,3.662,2851,3.503,2997,3.844,3027,2.914,3305,3.503,3307,3.662,3315,5.061,3997,5.12,4149,4.057,4759,4.057,5042,4.313,5479,6.304,5480,4.313,5482,5.463,5483,5.463,5484,4.057,5485,4.313,5486,4.313,5487,4.313,5488,4.313,5489,4.313,5490,4.313,5491,4.313,5492,4.313,5493,5.996,5494,4.313,5495,5.463,5496,4.313,5497,4.313,5498,4.313,5531,5.061]],["title/components/TopToolbarComponent.html",[0,0.078,200,0.945]],["body/components/TopToolbarComponent.html",[0,0.14,1,0.911,2,0.804,3,0.097,4,0.089,5,0.725,6,1.009,7,0.989,8,0.949,9,0.081,11,0.875,16,0.875,17,1.43,18,1.363,19,0.875,20,1.267,21,0.92,23,0.92,25,0.145,26,0.537,27,1.478,30,0.823,33,0.65,36,3.31,37,0.761,39,0.492,40,0.008,41,0.547,42,0.174,43,0.388,45,0.698,46,0.92,50,1.137,51,0.94,53,0.247,54,0.325,55,1.352,56,0.113,57,0.011,59,0.665,62,1.729,87,0.517,88,0.74,89,2.41,91,2.188,92,0.989,93,1.21,94,1.185,95,0.756,96,1.658,97,0.989,98,1.974,99,0.893,100,0.772,101,1.019,102,1.261,103,0.911,104,0.989,105,0.911,106,0.893,107,0.989,108,0.911,109,0.989,110,0.857,111,0.875,112,0.951,113,0.893,114,0.857,115,1.003,116,1.569,117,0.875,118,0.081,119,0.893,120,0.975,121,0.911,122,0.911,123,0.822,124,0.989,125,1.387,126,0.989,127,0.911,128,0.989,129,0.911,130,0.989,131,0.893,132,0.989,133,0.893,134,0.989,135,0.636,136,0.989,137,0.893,138,0.433,139,0.989,140,0.911,141,0.989,142,0.911,143,1.569,144,0.911,145,0.989,146,0.911,147,1.569,148,0.911,149,0.989,150,0.93,151,0.989,152,0.875,153,0.989,154,0.911,155,0.989,156,0.875,157,0.839,158,0.989,159,0.911,160,1.313,161,1.368,162,0.911,163,0.989,164,0.875,165,0.517,166,0.989,167,0.893,168,0.911,169,0.969,170,0.911,171,0.989,172,0.893,173,0.893,174,0.875,175,0.989,176,0.893,177,0.989,178,0.839,179,0.709,180,0.875,181,0.989,182,0.875,183,1.185,184,0.893,185,0.911,186,0.599,187,0.857,188,0.694,189,1.261,190,0.911,191,1.637,192,0.989,193,0.911,194,0.839,195,0.989,196,0.911,197,0.989,198,0.857,199,0.893,200,1.56,201,1.692,202,0.989,203,0.911,204,0.965,205,0.857,206,0.893,207,0.989,208,0.875,209,0.989,210,0.875,211,0.989,212,0.857,213,0.989,214,0.857,215,0.989,216,0.857,217,0.93,218,0.989,219,0.005,220,0.005,223,0.377,244,1.34,262,1.619,269,2.83,288,0.857,313,3.006,350,3.123,371,6.925,408,2.107,466,3.895,467,3.319,522,6.668,534,1.142,537,1.833,544,2.342,546,1.352,566,2.675,569,2.536,599,1.051,612,3.32,623,4.03,654,4.933,688,1.295,702,1.742,723,1.425,742,2.696,763,2.24,813,2.377,878,4.32,898,4.32,903,1.416,1049,4.615,1050,3.443,1066,1.786,1069,2.471,1171,1.619,1173,2.751,1174,2.172,1175,3.102,1184,2.587,1192,1.443,1198,3.677,1548,3.123,1552,5.317,1632,1.833,1651,2.107,1666,3.006,1667,3.319,1673,2.819,1734,3.32,2115,2.959,2153,3.443,2208,4.168,2214,4.933,2222,5.656,2227,3.895,2228,6.17,2235,5.39,2236,4.933,2237,5.39,2238,4.933,2239,5.39,2240,5.266,2246,3.319,2262,7.241,2664,2.172,2749,3.895,2781,4.592,2785,4.954,2820,4.094,2888,3.73,3027,3.102,3097,5.39,3361,4.933,3917,4.933,4923,4.32,5339,5.39,5514,3.895,5532,7.566,5533,3.895,5534,7.526,5535,5.39,5536,6.974,5537,6.082,5538,7.526,5539,7.526,5540,6.974,5541,6.974,5542,4.396,5543,4.396,5544,4.396,5545,4.396,5546,4.396,5547,4.396,5548,4.396,5549,4.396,5550,4.396,5551,4.396]],["title/interfaces/User.html",[118,0.084,204,0.631]],["body/interfaces/User.html",[3,0.134,4,0.123,9,0.112,11,1.625,25,0.145,26,0.665,27,1.267,40,0.008,41,0.618,42,0.166,45,0.698,46,0.92,49,0.698,53,0.264,54,0.449,56,0.157,57,0.015,59,1.138,87,0.715,118,0.112,157,1.436,183,1.185,186,0.599,204,1.314,219,0.006,220,0.006,230,5.064,255,0.928,276,1.83,288,1.185,312,1.753,377,4.319,455,2.535,496,2.239,518,5.499,526,1.612,529,1.484,532,3.695,534,1.579,537,2.535,544,2.867,545,1.426,546,1.869,572,1.875,605,0.841,612,3.319,615,5.345,623,3.102,636,5.345,638,2.042,644,4.932,645,4.591,646,7.24,647,4.932,648,5.388,649,4.428,650,7.24,651,3.206,652,5.388,653,5.388,654,4.932,657,5.388,659,6.667,661,5.388,663,5.388,664,5.499,666,5.388,667,3.319,668,5.011,669,4.626,670,5.388,671,4.932,672,3.442,673,5.681,674,4.107,675,3.729,677,4.093,678,5.388,679,5.388,681,4.428,686,4.093,687,4.591,688,1.791,689,4.093,690,5.388,691,5.388,692,4.932,693,5.388,694,5.388,695,5.388,696,5.388,697,5.388,698,5.388,699,5.388,700,4.591,701,5.388,702,2.409,703,5.388,704,5.388,705,5.388,706,5.388,707,5.388,708,5.388,709,5.388,710,5.388,711,5.388,712,5.388,713,5.388,714,4.932,715,5.388]],["title/components/UserItemComponent.html",[0,0.078,203,0.945]],["body/components/UserItemComponent.html",[0,0.145,1,1.045,2,0.883,3,0.111,4,0.102,5,0.831,6,1.158,7,1.134,8,1.089,9,0.092,11,1.003,16,1.003,17,1.436,18,1.37,19,1.003,20,0.849,21,1.009,23,1.009,25,0.12,37,0.68,40,0.008,41,0.612,42,0.165,50,1.248,51,1.032,53,0.197,54,0.372,56,0.13,57,0.013,62,1.412,88,1.26,92,1.134,93,1.328,94,1.301,95,0.867,96,1.755,97,1.134,98,2.026,99,1.024,100,0.886,101,1.036,102,1.383,103,1.045,104,1.134,105,1.045,106,1.024,107,1.134,108,1.045,109,1.134,110,0.983,111,1.003,112,0.997,113,1.024,114,0.983,115,1.1,116,1.683,117,1.003,118,0.092,119,1.024,120,0.991,121,1.045,122,1.045,123,0.943,124,1.134,125,1.003,126,1.134,127,1.045,128,1.134,129,1.045,130,1.134,131,1.024,132,1.134,133,1.024,134,1.134,135,0.73,136,1.134,137,1.024,138,0.497,139,1.134,140,1.045,141,1.134,142,1.045,143,1.683,144,1.045,145,1.134,146,1.045,147,1.683,148,1.045,149,1.134,150,1.067,151,1.134,152,1.003,153,1.134,154,1.045,155,1.134,156,1.003,157,0.963,158,1.134,159,1.045,160,1.441,161,1.501,162,1.045,163,1.134,164,1.003,165,0.593,166,1.134,167,1.024,168,1.045,169,1.112,170,1.045,171,1.134,172,1.024,173,1.024,174,1.003,175,1.134,176,1.024,177,1.134,178,0.963,179,0.814,180,1.003,181,1.134,182,1.003,183,1.301,184,1.024,185,1.045,186,0.658,187,0.983,188,0.797,189,1.045,190,1.045,191,1.045,192,1.134,193,1.045,194,0.963,195,1.134,196,1.045,197,1.134,198,0.983,199,1.024,200,1.045,201,0.963,202,1.134,203,1.65,204,1.297,205,0.983,206,1.024,207,1.134,208,1.003,209,1.134,210,1.003,211,1.134,212,0.983,213,1.134,214,0.983,215,1.134,216,0.983,217,1.067,218,1.134,219,0.006,220,0.006,223,0.433,231,0.966,244,1.755,259,5.414,538,1.454,599,1.596,674,4.084,723,1.866,763,2.458,788,1.62,971,3.019,1099,2.85,1632,2.783,1633,3.405,1727,5.649,1760,4.28,2547,6.459,2666,3.583,2760,3.808,3027,3.405,3305,3.093,3306,6.068,3307,4.28,5531,4.469,5552,7.056,5553,7.482,5554,5.044,5555,6.675,5556,5.044,5557,6.675,5558,5.044]],["title/injectables/UserNotifyService.html",[529,1.113,984,1.762]],["body/injectables/UserNotifyService.html",[3,0.167,4,0.125,9,0.113,25,0.148,30,1.029,33,0.915,37,0.801,39,0.922,40,0.008,41,0.551,42,0.181,43,0.727,45,0.873,46,1.15,49,0.684,53,0.225,54,0.457,56,0.159,57,0.016,59,1.15,201,1.452,204,1.242,219,0.006,220,0.006,223,0.707,224,3.255,276,1.861,288,1.205,310,1.386,420,4.394,421,6.217,478,6.966,482,4.875,529,1.51,542,3.439,572,2.052,615,5.401,643,2.579,689,4.163,863,3.49,944,3.502,983,3.884,984,2.939,1008,3.403,1011,2.497,1040,3.108,1191,3.171,1234,4.151,1463,3.64,2449,5.481,2466,6.168,2468,6.168,2469,6.168,2470,6.168,2471,6.168,2484,5.888,3096,6.738,5065,4.671,5559,7.611,5560,5.481,5561,7.604,5562,7.604,5563,6.186,5564,6.186,5565,7.604,5566,6.186,5567,7.604,5568,6.738,5569,7.604,5570,7.604,5571,6.186,5572,6.186,5573,6.186,5574,6.186,5575,6.186,5576,6.186,5577,6.186,5578,6.186,5579,6.186]],["title/injectables/UsersService.html",[529,1.113,5028,3.443]],["body/injectables/UsersService.html",[3,0.143,4,0.131,9,0.119,25,0.155,30,1.06,33,1.159,37,0.764,39,0.877,40,0.008,41,0.524,42,0.192,43,0.692,45,0.899,49,0.692,53,0.248,54,0.48,56,0.167,57,0.016,59,1.185,179,1.442,219,0.007,220,0.007,276,1.954,529,1.912,535,3.372,538,1.872,552,2.857,605,0.829,636,6.203,643,2.708,674,3.545,787,2.392,788,2.086,884,3.113,1364,4.064,1390,4.904,1391,5.268,1507,2.937,1547,4.804,1713,4.164,1770,2.336,2025,4.904,2092,4.164,3865,5.564,5028,5.914,5580,5.755,5581,6.495,5582,8.733,5583,8.411,5584,8.733,5585,6.495,5586,7.833,5587,6.495,5588,7.833,5589,6.495,5590,6.495,5591,6.495,5592,6.495,5593,6.495,5594,6.495,5595,6.495,5596,6.495,5597,6.495,5598,6.495,5599,6.495,5600,5.755,5601,6.495,5602,6.495]],["title/classes/Vector.html",[57,0.012,3725,3.443]],["body/classes/Vector.html",[0,0.126,2,0.552,3,0.092,4,0.181,9,0.077,25,0.1,26,0.518,27,1.589,30,0.794,33,1.003,37,0.83,39,0.944,40,0.008,41,0.564,42,0.191,43,0.744,45,1.038,46,0.887,49,0.318,50,1.376,51,0.907,53,0.123,57,0.017,70,2.278,76,5.555,87,1.057,100,1.361,112,0.706,138,0.578,165,1.042,186,0.578,219,0.005,220,0.005,223,0.736,255,1.018,291,2.062,310,0.946,545,0.645,550,1.786,560,2.2,565,3.151,570,2.278,572,2.058,592,1.621,599,1.403,605,0.668,634,1.178,651,2.2,702,2.324,717,1.537,725,2.511,734,6.869,739,3.597,774,2.363,814,1.786,821,3.385,823,1.887,833,2.416,869,4.429,884,2,903,1.74,912,3.385,920,2.278,924,3.151,938,3.156,1030,2.559,1050,2.363,1062,2.654,1063,3.62,1066,2.383,1067,3.608,1068,2.964,1089,2.964,1090,1.574,1171,2.16,1237,2.943,1238,1.942,1242,2,1259,2,1282,4.601,1533,4.429,1607,2.278,1618,2.456,1750,3.597,1785,4.388,1833,2.964,1837,4.166,1933,4.329,1952,2.964,2008,2.964,2014,4.429,2034,4.166,2037,2.363,2113,5.064,2482,4.757,2885,3.385,2886,3.385,3003,5.555,3133,3.385,3222,5.856,3234,5.121,3361,3.385,3464,3.385,3507,4.429,3541,5.501,3693,2.964,3694,7.374,3695,3.385,3706,3.698,3707,5.197,3710,4.757,3719,3.698,3723,3.948,3725,7.318,3727,3.698,3729,3.698,3730,5.197,3731,3.385,3732,3.698,3733,3.698,3735,5.197,3736,5.197,3737,5.197,3738,5.197,3739,3.698,3740,3.698,3741,7.123,3742,5.967,3743,6.519,3744,5.197,3745,5.197,3746,3.698,3747,3.698,3748,3.698,3749,3.698,3750,3.698,3751,3.698,3752,3.698,3753,3.698,3754,3.698,3755,3.698,3756,3.698,3757,3.385,3758,2.964,3759,3.698,3760,3.698,3761,3.698,3762,3.698,3763,6.01,3764,5.197,3765,3.698,3766,3.698,3767,3.698,3768,5.197,3769,3.698,3770,6.52,3771,3.698,3772,3.698,3773,3.698,3774,3.698,3775,3.698,3776,5.967,3777,3.698,3778,3.698,3779,3.698,3780,3.698,3781,3.698,3782,3.151,3783,3.698,3784,3.698,3785,3.698,3786,3.698,3787,3.698,3788,3.698,3789,3.698,3790,3.698,3791,3.698,3792,5.197,4703,3.698,5344,3.698,5603,5.865,5604,5.865,5605,6.782,5606,6.782,5607,7.357,5608,6.782,5609,6.782,5610,6.782,5611,5.865,5612,4.173,5613,4.173,5614,4.173,5615,4.173,5616,4.173,5617,4.173,5618,4.173,5619,5.865,5620,4.173,5621,4.173,5622,5.865,5623,4.173,5624,4.173,5625,4.173,5626,4.173,5627,4.173,5628,4.173,5629,4.173,5630,4.173,5631,4.173,5632,4.173,5633,4.173,5634,4.173,5635,4.173,5636,4.173,5637,5.865,5638,5.865,5639,5.865,5640,4.173,5641,4.173,5642,4.173,5643,4.173,5644,4.173,5645,4.173,5646,4.173,5647,4.173,5648,4.173]],["title/coverage.html",[5649,5.527]],["body/coverage.html",[0,0.162,1,0.635,5,0.771,9,0.056,10,2.715,11,0.93,12,2.313,13,3.59,40,0.008,42,0.067,57,0.022,62,0.989,72,2.176,74,2.176,75,1.879,76,3.53,85,3.382,87,0.36,95,1.239,99,0.622,101,0.847,102,1.315,103,0.635,105,0.635,108,0.635,110,0.597,111,0.609,113,0.622,114,0.911,115,1.046,117,0.609,118,0.169,119,0.622,120,0.798,121,0.635,122,0.635,125,0.609,127,0.635,129,0.635,131,0.622,133,0.622,135,0.443,137,0.622,138,0.886,140,0.635,142,0.635,144,0.635,146,0.635,148,0.635,150,0.648,152,0.609,154,0.635,157,0.585,159,0.635,162,0.635,164,0.609,167,0.622,168,0.635,170,0.635,172,0.622,173,0.622,174,0.609,176,0.622,178,0.585,180,0.609,182,0.609,184,0.622,185,0.635,187,0.597,188,1.002,189,0.635,190,0.635,193,0.635,196,0.635,198,0.597,200,0.635,203,0.635,204,0.424,206,0.622,208,0.609,210,0.609,212,0.597,214,0.597,216,0.597,219,0.004,220,0.004,221,2.715,222,2.176,275,2.715,302,2.313,337,4.599,366,0.689,367,2.313,369,2.313,371,2.485,373,2.485,378,3.336,406,4.173,407,3.911,423,2.751,434,2.176,439,4.32,440,4.068,443,1.734,448,2.485,451,2.485,455,1.949,456,2.313,459,2.313,464,2.485,467,2.313,469,2.313,471,4.27,473,2.485,481,2.485,498,2.313,500,2.176,502,2.313,503,3.321,525,2.313,527,3.792,529,2.168,539,1.734,553,1.615,592,2.52,608,1.214,609,2.313,611,2.715,623,1.563,644,3.792,686,3.147,716,1.563,718,2.715,750,0.675,756,2.715,757,2.715,766,1.156,775,1.052,782,1.514,802,1.964,803,4.21,804,3.792,827,1.734,828,1.803,831,1.514,903,1.931,970,2.715,984,1.184,1008,1.214,1046,4.507,1047,4.507,1056,2.176,1066,1.245,1090,3.35,1096,2.062,1101,2.176,1182,2.313,1185,4.599,1189,4.599,1202,1.803,1203,4.098,1204,4.905,1206,1.803,1207,1.468,1208,1.468,1210,3.702,1215,1.672,1216,1.615,1217,1.803,1218,1.879,1219,1.879,1220,1.879,1221,1.879,1222,1.879,1223,1.879,1224,1.879,1225,1.879,1256,1.734,1272,1.734,1301,1.964,1302,2.715,1303,4.617,1363,2.313,1364,4.284,1365,2.715,1384,2.062,1390,2.313,1396,2.313,1399,1.803,1448,2.313,1468,1.214,1481,1.563,1543,2.715,1546,2.176,1549,1.964,1567,2.998,1646,2.715,1647,2.485,1648,2.715,1660,1.563,1661,4.853,1675,5.042,1677,2.062,1740,1.879,1741,2.751,1743,1.879,1744,1.879,1747,2.176,1748,2.176,1756,2.176,1759,2.176,1765,2.176,1830,2.313,1901,1.964,1923,1.964,2063,2.715,2073,2.313,2082,2.062,2083,1.803,2110,4.281,2140,1.964,2141,4.027,2142,3.477,2143,4.027,2150,2.313,2151,2.062,2192,2.062,2193,2.176,2194,2.485,2201,2.715,2248,2.313,2270,4.751,2271,4.952,2299,1.672,2304,1.964,2305,1.879,2433,5.841,2450,2.485,2457,2.485,2458,2.485,2467,2.485,2472,2.485,2477,1.964,2527,5.115,2539,4.19,2541,2.485,2545,2.485,2547,2.485,2548,2.485,2554,2.485,2562,2.485,2564,2.485,2568,2.715,2604,4.599,2605,2.715,2613,2.715,2633,2.062,2669,2.715,2764,5.542,2770,2.485,2821,2.062,2823,2.485,2896,2.313,2897,2.715,2965,2.313,2966,2.715,2967,2.485,2968,2.715,2996,2.715,3098,2.313,3099,2.715,3100,2.485,3101,2.313,3102,2.715,3123,2.313,3124,2.715,3125,2.485,3126,2.715,3162,2.715,3199,2.313,3200,4.599,3201,4.599,3230,2.176,3287,2.715,3302,2.867,3305,4.594,3323,2.715,3350,4.599,3371,4.281,3373,2.313,3524,2.715,3542,4.507,3552,2.485,3553,2.715,3657,2.715,3674,3.792,3693,2.176,3694,4.599,3695,4.599,3723,3.147,3725,2.313,3770,2.485,3824,5.177,3874,2.715,3920,3.792,3921,3.53,3944,2.715,3951,2.062,3952,4.381,3956,1.964,4056,1.964,4123,3.321,4124,2.313,4249,2.715,4260,2.485,4261,4.143,4274,2.715,4338,2.062,4503,2.715,4651,2.715,4725,2.715,4758,7.373,4770,2.715,4785,4.617,4786,2.715,4862,3.792,4892,3.792,4952,2.313,4956,2.715,4973,2.715,5009,2.313,5010,2.715,5025,2.715,5027,2.715,5028,2.313,5038,4.027,5039,4.027,5118,4.143,5128,2.715,5208,2.715,5323,2.715,5340,2.715,5341,2.715,5384,2.485,5385,2.485,5427,2.715,5445,2.715,5532,2.715,5533,2.715,5552,2.715,5559,2.715,5560,2.715,5580,2.715,5649,2.715,5650,3.064,5651,7.723,5652,9.117,5653,6.345,5654,5.67,5655,7.491,5656,3.064,5657,3.064,5658,3.064,5659,6.345,5660,7.491,5661,5.67,5662,3.064,5663,7.202,5664,7.491,5665,6.832,5666,9.117,5667,4.676,5668,3.064,5669,3.064,5670,4.676,5671,3.064,5672,5.67,5673,5.542,5674,2.485,5675,2.485,5676,3.064,5677,3.064,5678,6.832,5679,2.715,5680,3.064,5681,4.676,5682,3.064,5683,3.064,5684,3.064,5685,3.064,5686,3.064,5687,3.064,5688,4.676,5689,5.67,5690,4.676,5691,2.715,5692,3.064,5693,3.064,5694,3.064,5695,4.676,5696,3.064,5697,3.064,5698,3.064,5699,3.064,5700,3.064,5701,3.064,5702,3.064,5703,3.064,5704,3.064,5705,5.67,5706,3.064,5707,4.676,5708,4.676,5709,3.064,5710,3.064,5711,3.064,5712,3.064,5713,4.676,5714,3.064,5715,3.064,5716,3.064,5717,3.064,5718,5.67,5719,3.064,5720,3.064,5721,3.064,5722,3.064,5723,3.064,5724,4.676,5725,3.064,5726,3.064,5727,3.064,5728,2.715,5729,3.064,5730,3.064,5731,7.202,5732,3.064,5733,3.064,5734,3.064,5735,3.064,5736,3.064,5737,3.064,5738,3.064,5739,3.064,5740,3.064,5741,4.676,5742,3.064,5743,3.064,5744,3.064,5745,4.143,5746,4.143,5747,3.064,5748,3.064,5749,3.064,5750,3.064,5751,4.143,5752,4.143,5753,4.143,5754,2.715,5755,3.064]],["title/dependencies.html",[327,3.693,5756,3.801]],["body/dependencies.html",[40,0.008,54,0.495,160,1.448,188,1.261,219,0.007,220,0.007,251,2.53,272,2.592,286,6.03,287,5.673,327,4.515,384,3.857,385,5.944,391,5.944,397,4.113,400,5.44,420,6.27,421,5.065,426,6.477,427,3.661,429,4.113,430,5.44,432,5.44,439,3.661,446,6.477,496,2.47,534,1.742,1212,3.215,1421,3.315,2174,4.515,2291,4.301,2292,4.515,2437,4.515,2445,5.944,3101,5.065,3963,4.764,3996,4.113,5757,6.708,5758,9.318,5759,6.708,5760,7.986,5761,6.708,5762,6.708,5763,6.708,5764,6.708,5765,6.708,5766,6.708,5767,6.708,5768,6.708,5769,6.708,5770,6.708,5771,6.708,5772,6.708,5773,6.708,5774,6.708,5775,6.708,5776,6.708,5777,6.708,5778,6.708,5779,6.708,5780,6.708,5781,6.708,5782,6.708,5783,6.708,5784,6.708,5785,6.708,5786,6.708,5787,6.708,5788,6.708,5789,6.708,5790,6.708,5791,6.708]],["title/miscellaneous/enumerations.html",[5792,2.558,5793,4.863]],["body/miscellaneous/enumerations.html",[0,0.156,2,0.88,25,0.159,40,0.008,51,1.438,101,0.782,115,1.096,118,0.165,120,0.846,138,0.837,165,0.999,179,1.073,204,0.92,219,0.007,220,0.007,228,2.552,231,0.963,232,2.635,276,2.001,366,1.787,443,3.766,455,2.773,509,3.008,512,2.001,546,2.045,554,2.926,759,3.593,824,4.725,832,4.053,833,2.89,838,2.703,861,4.725,863,2.703,1005,4.725,1040,2.184,1090,2.509,1092,5.095,1194,2.847,1203,3.008,1204,4.811,1227,4.079,1228,4.079,1229,4.079,1230,3.188,1243,3.631,1295,4.873,1296,4.676,1297,4.079,1298,3.631,1299,4.079,1300,3.507,1364,3.095,1421,3.287,1472,2.571,1580,4.079,1803,3.313,2015,3.507,2132,4.079,2134,3.393,2285,3.393,2634,4.265,2843,4.477,2844,4.477,3824,4.265,3828,6,3829,5.022,3830,5.022,3861,5.022,3862,5.022,3863,5.022,3864,5.022,3865,4.725,4123,4.725,4124,6,5038,4.725,5039,4.725,5046,6,5047,5.022,5792,4.477,5793,5.894,5794,6.445,5795,6.445,5796,5.894,5797,6.652]],["title/index.html",[25,0.091,2726,3.083,5798,3.368]],["body/index.html",[0,0.153,2,1.198,9,0.106,30,0.985,40,0.006,42,0.127,68,4.678,101,0.678,120,0.849,204,0.798,219,0.007,220,0.006,226,4.354,228,2.338,276,1.735,284,6.029,327,3.882,512,2.695,514,4.667,526,1.529,546,1.773,560,3.041,569,2.405,593,4.354,608,2.884,612,3.148,634,1.628,638,2.444,649,3.394,702,2.285,720,4.678,750,1.271,774,3.265,792,3.698,808,3.838,813,2.19,838,2.343,841,3.265,858,4.096,860,3.973,873,4.678,938,3.387,948,4.678,952,3.148,961,3.537,989,3.394,1108,3.148,1230,3.489,1231,3.394,1242,3.823,1252,3.148,1298,3.148,1314,3.698,1418,4.096,1420,2.684,1421,2.85,1477,3.882,1484,3.882,1616,3.882,1649,3.041,1714,4.354,1738,4.096,1858,4.096,1901,5.743,1909,5.951,2002,3.537,2003,3.882,2032,5.083,2118,5.666,2260,3.698,2281,5.41,2347,3.698,2384,3.882,2572,3.537,2709,3.537,2726,4.678,2744,5.11,2745,5.11,2751,4.678,2830,4.667,2970,4.899,3003,4.354,3222,3.698,3304,5.11,3415,5.11,3508,5.11,3731,4.678,3758,4.096,3782,4.354,3832,6.362,3842,4.354,3950,5.904,4283,5.11,4493,5.11,4524,5.11,4806,7.265,4863,3.882,5073,5.951,5084,4.096,5163,5.11,5237,6.45,5240,5.11,5798,5.11,5799,5.767,5800,7.279,5801,7.977,5802,5.767,5803,5.767,5804,7.977,5805,6.45,5806,7.279,5807,7.279,5808,7.279,5809,5.767,5810,5.767,5811,5.11,5812,5.767,5813,7.279,5814,5.767,5815,5.767,5816,5.767,5817,5.767,5818,5.767,5819,5.767,5820,5.767,5821,5.767,5822,5.767,5823,5.767,5824,5.767,5825,5.767,5826,5.767,5827,5.767,5828,5.904,5829,7.068,5830,6.45,5831,5.767,5832,7.279,5833,5.767,5834,7.977,5835,5.767,5836,5.767,5837,5.767,5838,5.767,5839,5.767,5840,5.767,5841,5.767,5842,5.767,5843,7.279,5844,5.767,5845,5.767,5846,5.11,5847,5.767,5848,5.767,5849,5.767,5850,5.767,5851,5.767,5852,5.11,5853,5.767,5854,5.767,5855,5.767,5856,5.11,5857,5.11,5858,5.767,5859,7.424,5860,5.11,5861,5.11,5862,5.11,5863,5.767,5864,5.767,5865,5.767,5866,5.767,5867,5.767,5868,5.11,5869,5.767,5870,7.279,5871,7.068,5872,7.977,5873,5.767,5874,5.767,5875,5.767,5876,5.767,5877,5.767,5878,5.767,5879,5.767,5880,5.767,5881,5.767,5882,4.678,5883,5.767,5884,5.767,5885,5.767]],["title/modules.html",[326,3.825]],["body/modules.html",[40,0.007,138,0.833,219,0.007,220,0.007,287,6.004,318,6.856,325,5.583,326,4.534,332,5.252,333,4.976,334,4.976,571,4.051,5886,8.453,5887,9.105]],["title/overview.html",[4838,3.999]],["body/overview.html",[1,1.535,2,0.653,40,0.008,99,1.504,103,1.79,105,1.535,108,1.535,110,1.443,111,1.473,113,1.504,117,1.473,119,1.504,121,1.535,122,1.79,125,1.473,127,1.79,129,1.535,131,1.504,133,1.504,135,1.25,137,1.754,140,1.79,142,1.79,144,1.79,146,1.79,148,1.79,150,1.827,152,1.473,154,1.535,157,1.413,159,1.535,162,1.535,164,1.473,167,1.504,168,1.535,170,1.79,172,1.504,173,1.504,174,1.473,176,1.504,178,1.649,180,1.473,182,1.473,184,1.504,185,1.79,187,1.443,189,1.535,190,1.535,193,1.535,196,1.535,198,1.443,200,1.535,203,1.79,205,0.963,206,1.754,208,1.718,210,1.718,212,1.443,214,1.443,216,1.443,219,0.006,220,0.006,313,2.441,325,7.352,326,3.029,327,4.431,328,4.377,329,4.377,330,4.377,331,4.377,332,5.259,333,4.984,334,6.545,335,4.97,336,3.508,484,3.324,494,3.729,526,1.31,609,3.729,643,2.059,717,1.819,813,1.486,1182,3.729,2515,4.377,2516,4.377,2517,4.377,3350,4.006,4338,3.324,4838,3.167,5691,4.377,5888,4.939,5889,4.939]],["title/routes.html",[494,4.709]],["body/routes.html",[40,0.007,219,0.007,220,0.007,494,5.688]],["title/miscellaneous/typealiases.html",[5792,2.558,5890,5.488]],["body/miscellaneous/typealiases.html",[13,3.075,25,0.146,40,0.008,42,0.202,49,0.577,88,1.034,112,1.032,114,1.746,188,1.195,194,1.445,204,0.849,219,0.006,220,0.006,366,1.381,378,3.612,443,3.475,459,4.635,571,2.942,592,2.368,803,3.627,804,4.979,805,3.475,836,6.706,989,3.612,1028,3.155,1093,5.376,1207,2.942,1208,2.942,1210,2.942,1211,2.261,1303,4.852,1307,3.35,1364,3.986,1384,4.131,1416,3.612,1468,2.432,1472,2.372,1547,5.567,1579,6.138,1675,4.131,1742,4.131,1746,5.376,1770,2.208,1796,3.935,1803,2.559,1805,3.033,1855,3.35,1867,4.635,1998,4.635,1999,4.635,2000,3.935,2001,4.635,2002,3.764,2003,4.131,2004,5.376,2084,4.453,2141,4.36,2142,3.764,2143,5.376,2145,5.523,2153,3.475,2157,4.36,2164,5.714,2174,5.094,2191,4.36,2192,4.131,2194,4.979,2195,5.714,2198,7.271,2270,3.612,2271,5.821,2278,5.094,2293,5.523,2295,5.094,2296,5.094,2356,5.094,2357,3.764,2381,5.094,2539,4.641,2688,4.635,2709,3.764,2895,4.284,3555,3.764,3674,4.979,3824,3.935,3921,5.714,3933,3.475,3952,4.852,4055,5.765,4123,4.36,4124,5.714,5384,4.979,5385,6.138,5395,6.706,5673,4.979,5674,6.138,5675,6.138,5679,5.439,5728,7.271,5792,4.131,5794,6.138,5795,6.138,5796,5.439,5891,6.138,5892,7.568,5893,7.568,5894,8.96,5895,5.439,5896,7.568,5897,6.138,5898,6.138,5899,7.568,5900,7.796,5901,7.568,5902,7.568,5903,7.568,5904,6.138]],["title/interfaces/userMock.html",[118,0.084,4952,3.443]],["body/interfaces/userMock.html",[0,0.128,3,0.112,4,0.102,9,0.093,14,1.03,15,1.852,17,0.75,18,0.718,20,0.854,21,0.767,23,0.767,25,0.121,26,0.592,27,1.263,29,2.769,36,2.947,40,0.008,41,0.449,42,0.176,43,0.753,46,0.767,49,0.704,53,0.27,54,0.375,55,1.559,56,0.172,57,0.013,59,1.013,60,1.402,64,2.061,72,3.603,80,2.36,87,0.882,96,1.118,99,1.03,101,1.081,102,1.654,118,0.123,174,1.009,183,0.988,184,1.03,204,1.221,219,0.006,220,0.006,222,3.603,225,2.674,228,1.629,231,1.234,246,2.868,251,1.913,255,0.984,260,4.114,288,0.988,296,2.506,366,1.955,408,2.431,413,2.872,434,3.603,435,4.114,484,3.414,496,1.868,503,3.603,514,5.32,526,1.345,534,1.317,535,1.913,538,1.462,539,3.793,541,2.294,544,2.25,545,1.422,569,2.115,591,3.943,596,2.769,608,2.01,619,2.637,638,1.703,674,4.356,741,4.114,759,2.294,813,1.526,814,2.171,823,3.03,826,2.231,863,2.061,865,2.464,884,2.431,896,3.252,903,1.03,995,3.414,1006,3.252,1108,2.769,1625,3.83,1640,3.83,1652,5.059,1668,5.059,1713,4.296,2002,3.111,2139,3.414,2260,3.252,2309,3.111,2477,3.252,2522,3.83,2525,5.434,2526,3.83,2533,3.83,2572,3.111,2672,3.793,2711,3.956,2845,6.533,2847,5.089,3052,3.414,3314,2.872,3372,5.059,3373,5.665,3377,4.114,3381,4.114,3384,4.114,3390,4.114,3429,6.085,3432,5.434,3433,4.114,3437,5.434,3438,4.114,3441,5.434,3470,5.434,3473,4.114,3474,4.114,3475,4.114,3476,4.114,3479,4.114,3480,4.114,3481,4.114,3723,3.414,4307,5.059,4338,3.414,4375,3.83,4474,4.114,4785,3.252,4797,5.059,4815,3.83,4862,4.114,4863,3.414,4864,4.495,4865,5.434,4866,3.603,4867,5.937,4868,5.937,4869,4.495,4870,4.495,4871,4.495,4872,4.495,4873,4.495,4876,4.495,4878,6.648,4879,4.495,4884,4.495,4885,5.937,4887,4.495,4888,6.979,4889,4.495,4890,4.495,4891,4.495,4892,4.114,4893,4.495,4894,4.495,4898,4.495,4899,4.495,4900,4.495,4901,4.495,4902,4.495,4903,4.495,4904,4.495,4905,4.495,4906,4.495,4907,4.495,4908,4.495,4909,4.495,4912,4.495,4914,5.434,4920,4.495,4921,4.495,4922,4.495,4923,3.603,4924,4.495,4925,4.495,4926,5.937,4927,5.937,4928,5.937,4929,4.495,4930,4.495,4931,4.495,4932,4.495,4933,4.495,4934,4.495,4935,4.495,4936,4.495,4937,4.495,4938,4.495,4939,4.495,4940,4.495,4941,5.937,4942,4.495,4943,4.495,4944,4.495,4945,4.495,4946,4.495,4947,4.495,4948,4.495,4949,4.495,4950,4.114,4951,4.495,4952,5.059]],["title/miscellaneous/variables.html",[3088,3.693,5792,2.558]],["body/miscellaneous/variables.html",[0,0.058,25,0.081,27,0.574,29,3.907,40,0.008,41,0.448,42,0.208,45,0.391,49,0.632,50,1.715,51,1.418,87,0.787,91,1.227,101,0.401,106,0.693,115,1.405,120,0.644,133,1.229,138,0.499,156,1.332,165,0.958,179,1.358,186,0.336,201,0.651,204,0.702,219,0.004,220,0.004,228,1.096,231,0.494,244,1.333,255,0.826,276,1.026,279,2.249,296,2.505,302,3.828,305,2.293,306,1.799,307,1.635,310,1.155,312,1.462,326,2.092,337,2.767,366,2.036,392,3.023,396,4.492,439,4.094,440,2.187,473,4.112,474,3.023,475,3.023,481,4.112,482,3.25,483,3.023,484,2.296,485,3.023,490,2.296,512,2.337,519,2.423,535,1.287,545,1.364,546,1.049,549,1.74,571,1.635,605,0.499,634,1.431,638,1.145,674,3.302,686,4.508,758,1.799,759,1.543,773,2.423,775,2.078,777,2.359,803,1.635,809,2.932,814,1.46,883,3.023,903,1.029,944,1.931,961,4.107,988,1.931,1040,1.12,1046,2.423,1047,3.601,1062,1.931,1063,1.422,1067,1.46,1090,1.287,1095,2.87,1097,2.007,1101,3.601,1102,2.576,1120,2.187,1191,1.422,1203,1.543,1204,2.87,1226,1.587,1233,1.46,1234,2.767,1237,1.172,1246,1.318,1256,2.87,1259,3.21,1300,1.799,1364,2.815,1406,2.423,1421,1.686,1468,2.654,1472,2.338,1473,3.237,1488,3.828,1509,3.828,1521,3.601,1547,2.092,1576,3.302,1585,1.686,1608,4.893,1627,1.862,1628,2.673,1675,2.296,1677,3.412,1702,6.403,1707,3.828,1712,2.87,1739,2.576,1741,2.007,1744,3.109,1746,2.423,1747,3.601,1748,3.601,1749,6.741,1750,3.109,1751,3.828,1752,2.673,1753,2.576,1754,2.423,1755,4.568,1756,3.601,1758,2.576,1759,3.601,1760,2.187,1761,2.576,1762,2.576,1763,2.576,1764,2.576,1765,3.601,1766,3.601,1770,2.575,1774,2.423,1803,1.422,1805,1.686,1895,2.983,1923,2.187,1930,2.576,1931,2.576,1953,6.741,1959,3.412,2015,1.799,2064,2.767,2123,2.767,2248,3.828,2297,2.187,2333,2.187,2353,1.931,2354,1.931,2355,2.007,2382,2.187,2433,2.767,2437,2.296,2450,4.907,2452,2.767,2453,3.023,2454,3.023,2455,3.023,2456,3.023,2457,4.112,2458,2.767,2459,2.296,2460,3.023,2461,2.767,2462,3.023,2463,3.023,2464,3.023,2465,3.023,2466,4.112,2467,4.112,2468,2.767,2469,2.767,2470,2.767,2471,2.767,2472,4.112,2473,3.023,2474,3.023,2475,3.023,2476,3.023,2477,2.187,2512,4.492,2527,2.423,2633,3.412,2634,2.187,2639,2.423,2764,4.907,2770,4.907,2790,3.023,2821,4.072,2822,3.023,2823,5.433,2824,6.025,2825,5.361,2826,3.25,2827,2.187,2828,3.023,2829,3.023,2830,2.187,2831,4.112,2832,2.767,2833,3.023,2834,5.935,2835,3.023,2836,6.342,2837,4.589,2838,4.589,2839,3.023,2840,4.589,2841,6.342,2842,3.023,2843,2.296,2844,3.412,2845,2.423,2846,4.492,2847,2.092,2848,2.296,2849,4.492,3088,2.296,3302,4.107,3449,3.023,3456,4.112,3821,3.023,3824,2.187,3858,4.568,3859,2.576,3860,3.828,4182,3.023,5133,4.492,5600,7.46,5673,2.767,5674,4.907,5675,4.907,5745,3.023,5746,4.492,5751,3.023,5752,3.023,5753,3.023,5754,4.492,5792,3.412,5794,4.907,5795,4.112,5895,5.361,5900,5.935,5905,6.05,5906,6.05,5907,3.411,5908,5.07,5909,5.07,5910,5.07,5911,3.411,5912,3.411,5913,3.411,5914,5.07,5915,5.07,5916,5.07,5917,5.07,5918,5.07,5919,5.07,5920,5.07,5921,5.07,5922,3.411,5923,3.411,5924,3.411,5925,3.411,5926,3.411,5927,3.411,5928,3.411,5929,7.501,5930,6.05,5931,6.05,5932,6.05,5933,3.411,5934,5.07,5935,3.411,5936,3.411,5937,3.411,5938,3.411,5939,3.411,5940,3.411,5941,5.07,5942,5.07,5943,5.07,5944,3.411,5945,3.411,5946,8.297,5947,5.07,5948,5.07,5949,5.07,5950,3.411,5951,3.411,5952,3.411,5953,3.411,5954,3.411,5955,3.411,5956,3.411,5957,3.411,5958,3.411,5959,3.411,5960,3.411,5961,6.05,5962,6.05,5963,6.05,5964,3.411,5965,3.411,5966,3.411,5967,3.411,5968,3.411,5969,3.411,5970,3.411,5971,3.411,5972,3.411,5973,3.411,5974,3.411,5975,3.411,5976,3.411,5977,3.411,5978,3.411,5979,3.411,5980,3.411,5981,3.411,5982,3.411,5983,3.411,5984,3.411,5985,3.411,5986,3.411,5987,3.411,5988,3.411,5989,7.158,5990,3.411,5991,3.411,5992,3.411,5993,3.411,5994,3.411,5995,3.411,5996,3.411,5997,3.411,5998,3.411,5999,3.411,6000,6.698,6001,3.411,6002,3.411,6003,3.411,6004,3.411,6005,3.411,6006,3.411,6007,3.411,6008,3.411,6009,3.411,6010,3.411,6011,3.411,6012,3.411,6013,3.411,6014,3.411]],["title/additional-documentation/using-gropius.html",[284,2.193,638,1.094,1649,1.718,2830,2.089]],["body/additional-documentation/using-gropius.html",[0,0.154,2,1.154,11,1.025,18,0.729,19,1.347,20,0.868,29,3.695,40,0.007,41,0.558,42,0.166,43,0.668,62,1.699,81,2.628,87,1.006,88,0.868,89,3.304,91,2.435,100,0.905,101,1.104,112,1.051,118,0.164,120,1.005,138,0.667,156,1.347,169,1.136,191,1.068,199,1.694,204,1.208,219,0.006,220,0.006,223,0.716,224,2.206,225,3.986,226,6.063,230,3.468,279,2.376,284,3.468,294,4.809,304,5.112,305,2.33,306,3.569,307,3.849,317,4.34,366,1.992,413,2.917,429,4.152,455,3.692,490,4.556,509,3.419,512,2.832,514,4.34,526,2.005,535,1.944,545,0.796,546,2.081,549,3.453,550,3.237,559,5.115,560,3.569,573,2.717,588,3.468,614,2.717,615,3.66,632,2.266,634,1.911,638,3.007,664,4.556,674,3.695,702,2.041,724,3.032,750,1.136,837,2.917,862,3.833,863,2.094,874,2.823,875,4.566,921,5.595,922,2.628,938,3.737,950,3.468,952,2.812,953,2.717,971,3.061,1001,5.704,1024,3.16,1028,2.823,1042,5.999,1049,5.115,1050,2.917,1065,2.398,1069,2.094,1099,1.692,1231,3.984,1246,3.104,1305,3.66,1418,4.809,1419,3.468,1441,4.179,1442,3.66,1472,3.104,1484,3.468,1507,3.061,1535,3.66,1575,4.179,1580,4.152,1584,3.468,1585,3.968,1627,2.812,1628,3.569,1649,2.717,1752,3.569,1802,3.468,1803,2.148,1897,2.717,1904,2.546,1959,3.468,1973,2.922,2011,6.063,2032,3.032,2118,3.66,2120,3.89,2154,3.304,2155,3.89,2203,4.566,2309,4.152,2311,3.304,2347,4.34,2501,4.566,2709,4.152,2736,4.179,2796,3.16,2847,4.637,3028,4.179,3314,4.28,3337,4.179,3341,4.179,3417,4.566,3832,3.66,3917,4.179,3933,2.917,4284,4.566,4433,3.89,4458,6.133,4554,4.566,4580,4.566,4614,4.566,4629,4.566,4632,5.999,4771,4.179,4806,4.179,4838,4.848,4866,4.809,4888,5.112,4923,4.809,5084,3.66,5129,6.133,5324,4.566,5453,4.179,5535,4.566,5568,4.566,5805,4.566,5828,5.491,5830,4.566,5846,4.566,5852,4.566,5856,6.7,6015,5.153,6016,5.153,6017,7.561,6018,5.153,6019,5.153,6020,5.153,6021,6.77,6022,7.561,6023,5.153,6024,5.153,6025,5.153,6026,5.153,6027,5.153,6028,5.153,6029,6.77,6030,5.153,6031,5.153,6032,5.153,6033,6.77,6034,5.153,6035,5.153,6036,4.566,6037,5.999,6038,6.77,6039,5.153,6040,5.153]],["title/additional-documentation/managing-gropius.html",[284,2.193,638,1.094,2830,2.089,2970,2.193]],["body/additional-documentation/managing-gropius.html",[2,0.812,4,0.153,18,1.212,19,1.221,20,1.034,37,0.558,40,0.007,42,0.135,57,0.016,68,4.979,100,1.078,101,1.067,112,0.739,115,1.012,125,1.221,138,0.605,157,1.172,180,1.221,186,0.605,219,0.006,220,0.006,226,5.714,228,2.826,231,1.095,249,2.494,310,0.99,324,4.131,333,4.131,334,4.131,338,4.979,366,1.381,397,3.764,439,3.35,476,6.706,500,4.36,514,4.852,550,3.24,553,3.236,563,5.094,570,4.131,575,4.635,591,4.828,601,4.979,620,4.852,623,3.131,638,2.541,717,2.787,722,2.855,808,3.236,817,2.942,837,3.475,867,6.655,874,3.155,898,4.36,1027,4.131,1065,2.856,1108,3.35,1232,3.612,1250,3.329,1298,4.131,1307,4.479,1310,6.706,1314,3.935,1421,4.486,1422,3.935,1491,4.453,1662,5.439,1806,4.635,1901,5.641,2002,3.764,2015,4.326,2073,6.195,2099,4.979,2134,3.131,2291,4.852,2437,4.131,2499,5.439,2507,5.439,2571,6.655,2572,5.567,2573,6.468,2820,4.131,2847,5.032,2889,5.439,2970,4.131,3060,4.979,3950,4.979,4501,5.439,4838,3.935,4866,5.376,4923,4.36,5073,6.084,5123,5.439,5129,4.979,5453,4.979,5484,4.36,5811,5.439,5828,4.979,5829,5.439,5857,5.439,5859,7.271,5860,6.706,5861,5.439,5862,6.706,5868,5.439,5871,5.439,6036,5.439,6037,5.439,6041,6.138,6042,6.138,6043,6.138,6044,6.138,6045,9.079,6046,6.138,6047,6.138,6048,6.138,6049,6.138,6050,6.138,6051,6.138,6052,6.138,6053,6.138,6054,6.138,6055,6.138,6056,6.138,6057,6.138,6058,6.138,6059,6.138,6060,6.138,6061,6.138,6062,6.138,6063,6.138,6064,6.138,6065,6.138,6066,6.138,6067,6.138,6068,7.568,6069,6.138,6070,6.138,6071,6.138,6072,6.138]],["title/additional-documentation/contributors.html",[638,1.276,2830,2.437,5882,3.083]],["body/additional-documentation/contributors.html",[40,0.007,219,0.007,220,0.007,2281,4.534,5882,5.997,6073,7.394,6074,7.394,6075,7.394,6076,7.394,6077,7.394,6078,7.394,6079,7.394,6080,7.394,6081,7.394,6082,7.394,6083,7.394,6084,7.394,6085,7.394,6086,7.394,6087,7.394,6088,7.394]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["0",{"_index":903,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0.0.12",{"_index":5785,"title":{},"body":{"dependencies.html":{}}}],["0.0.5",{"_index":5771,"title":{},"body":{"dependencies.html":{}}}],["0.06",{"_index":2612,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{}}}],["0.08",{"_index":5322,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.1",{"_index":2665,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/QueryComponent.html":{}}}],["0.10.2",{"_index":5791,"title":{},"body":{"dependencies.html":{}}}],["0.114",{"_index":3360,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.12",{"_index":2663,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["0.15",{"_index":2741,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["0.175",{"_index":5517,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["0.2",{"_index":3322,"title":{},"body":{"components/IssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.27",{"_index":5320,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.27.0",{"_index":5779,"title":{},"body":{"dependencies.html":{}}}],["0.299",{"_index":3358,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3",{"_index":3370,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3em",{"_index":3818,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["0.5",{"_index":2667,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.54",{"_index":1671,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/SideNavComponent.html":{}}}],["0.587",{"_index":3359,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.5em",{"_index":2749,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TopToolbarComponent.html":{}}}],["0.6",{"_index":5318,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.6.2",{"_index":5776,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":2760,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["0.8em",{"_index":3320,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["0.9",{"_index":4701,"title":{},"body":{"interfaces/Positions.html":{}}}],["0/1",{"_index":5652,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5704,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5700,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5669,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5699,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5660,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5651,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5681,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":5680,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5742,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5678,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5707,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5690,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":1532,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["000000",{"_index":1469,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["005eff",{"_index":3095,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["00ba39",{"_index":2761,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["01",{"_index":5437,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["01t19:44:04.813z",{"_index":5434,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["02t12:27:58.192z",{"_index":5446,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["0x",{"_index":3347,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0xff).tostring(16)).slice",{"_index":1534,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["1",{"_index":813,"title":{"interfaces/DialogData-1.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/TimeFormatter.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["1)[0",{"_index":2864,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["1.14.1",{"_index":5788,"title":{},"body":{"dependencies.html":{}}}],["1.1em",{"_index":5205,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["1.2em",{"_index":3321,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.3.3",{"_index":5789,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":3319,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.5",{"_index":5287,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["1/1",{"_index":5666,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":5698,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5741,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":5703,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5701,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":5696,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5667,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5731,"title":{},"body":{"coverage.html":{}}}],["1/39",{"_index":5729,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5661,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5719,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5689,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5688,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5705,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5687,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1660,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["10.1.0",{"_index":5781,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":5686,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":5702,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["1000",{"_index":5464,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["10000",{"_index":5573,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["100px",{"_index":2753,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/QueryComponent.html":{}}}],["109",{"_index":3544,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["10px",{"_index":3092,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["11",{"_index":5445,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["11pt",{"_index":3547,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["11px",{"_index":1178,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["12",{"_index":1189,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["12px",{"_index":1673,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["13.2.1",{"_index":5784,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1185,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["14/15",{"_index":5710,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":5712,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":5521,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["15.2.0",{"_index":5774,"title":{},"body":{"dependencies.html":{}}}],["15.7.2",{"_index":5778,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":5671,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":5733,"title":{},"body":{"coverage.html":{}}}],["15/18",{"_index":5668,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":83,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["15px",{"_index":1179,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["16",{"_index":3350,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["16/17",{"_index":5683,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1540,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["17",{"_index":5726,"title":{},"body":{"coverage.html":{}}}],["17.2",{"_index":4712,"title":{},"body":{"interfaces/Positions.html":{}}}],["17/17",{"_index":5732,"title":{},"body":{"coverage.html":{}}}],["17px",{"_index":3519,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["18px",{"_index":4851,"title":{},"body":{"components/ProjectListComponent.html":{},"components/QueryComponent.html":{}}}],["195",{"_index":3521,"title":{},"body":{"components/IssueListComponent.html":{}}}],["1]?.id",{"_index":5986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":2266,"title":{},"body":{"components/FrameComponent.html":{}}}],["1px",{"_index":2661,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["2",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["2.0.0",{"_index":5765,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":5511,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["2.6.0",{"_index":5777,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":5718,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5654,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":5697,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5740,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":5692,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":5708,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1182,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/LayoutNode.html":{},"coverage.html":{},"overview.html":{}}}],["200",{"_index":1120,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":2261,"title":{},"body":{"components/FrameComponent.html":{}}}],["201",{"_index":3522,"title":{},"body":{"components/IssueListComponent.html":{}}}],["2021",{"_index":5433,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["20px",{"_index":1193,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["21",{"_index":5889,"title":{},"body":{"overview.html":{}}}],["217",{"_index":3545,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["21:44:04",{"_index":5438,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["23",{"_index":5716,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":5468,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["24px",{"_index":1172,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/LoginComponent.html":{}}}],["25",{"_index":1661,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["255",{"_index":2759,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{}}}],["26px",{"_index":5518,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["27",{"_index":5738,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":5520,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["28",{"_index":5691,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["29",{"_index":5736,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":3735,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["2px",{"_index":2662,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["3",{"_index":2260,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["3.1.2",{"_index":5770,"title":{},"body":{"dependencies.html":{}}}],["3.5.5",{"_index":5764,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":5722,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":5727,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":5659,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5749,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":5706,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":5695,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5658,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":5656,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":74,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["300",{"_index":5376,"title":{},"body":{"components/SideNavComponent.html":{}}}],["300px",{"_index":2742,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["31",{"_index":5471,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["33",{"_index":5655,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":3254,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["35px",{"_index":5508,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["36px",{"_index":2658,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorComponent.html":{},"components/TimelineItemComponent.html":{}}}],["37/59",{"_index":5721,"title":{},"body":{"coverage.html":{}}}],["38px",{"_index":1183,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["3f3f3f",{"_index":4792,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["3px",{"_index":1184,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["4",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"overview.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["4.0.16",{"_index":5768,"title":{},"body":{"dependencies.html":{}}}],["4.0.4",{"_index":5772,"title":{},"body":{"dependencies.html":{}}}],["4/17",{"_index":5717,"title":{},"body":{"coverage.html":{}}}],["4/27",{"_index":5677,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":5663,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4725,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["400",{"_index":1118,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["4000",{"_index":5575,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["400px",{"_index":264,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{}}}],["401",{"_index":2492,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["42",{"_index":5657,"title":{},"body":{"coverage.html":{}}}],["43px",{"_index":3518,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["44px",{"_index":3090,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["45",{"_index":3253,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["46px",{"_index":1187,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["48px",{"_index":2892,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["4px",{"_index":1175,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["5",{"_index":3723,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["5/5",{"_index":5672,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5665,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3542,"title":{},"body":{"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["500",{"_index":1760,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1766,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":79,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["50px",{"_index":1196,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["51",{"_index":5888,"title":{},"body":{"overview.html":{}}}],["56px",{"_index":3820,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["57.75",{"_index":4708,"title":{},"body":{"interfaces/Positions.html":{}}}],["58",{"_index":1543,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"coverage.html":{}}}],["5em",{"_index":5421,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["5px",{"_index":1544,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineItemComponent.html":{}}}],["6",{"_index":4338,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["6.5.4",{"_index":5786,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":5748,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":5662,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":5714,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":5730,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":75,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["600",{"_index":1634,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["60000",{"_index":959,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["600px",{"_index":265,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["60px",{"_index":5424,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["62",{"_index":5720,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":5743,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":1674,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/ProjectHeaderComponent.html":{}}}],["66",{"_index":5653,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1541,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["7",{"_index":72,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["7/11",{"_index":5744,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":5750,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5715,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1129,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["75",{"_index":5713,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1180,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{}}}],["8",{"_index":2477,"title":{},"body":{"modules/GraphQLModule.html":{},"components/IssueLabelComponent.html":{},"components/ProjectMembersComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":5782,"title":{},"body":{"dependencies.html":{}}}],["8/27",{"_index":5737,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5739,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":5725,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":3715,"title":{},"body":{"classes/LayoutNode.html":{}}}],["81",{"_index":5684,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":5664,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4503,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["85px",{"_index":4800,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["87",{"_index":5711,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":5724,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":5420,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["8px",{"_index":1188,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["9",{"_index":4892,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["9.0.0",{"_index":5783,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":6043,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["9.1.13",{"_index":5758,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":5760,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":5780,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5723,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":5685,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":76,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["93",{"_index":5670,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5682,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":888,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["999999",{"_index":5513,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["9px",{"_index":1186,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["_",{"_index":3189,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["__typename",{"_index":3829,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["ababab",{"_index":5116,"title":{},"body":{"components/QueryComponent.html":{}}}],["aborting",{"_index":1615,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["above",{"_index":2154,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["absolute",{"_index":2660,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["absoluterotation",{"_index":4393,"title":{},"body":{"interfaces/Positions.html":{}}}],["abstract",{"_index":1809,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{}}}],["accept",{"_index":2475,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["accepts",{"_index":5590,"title":{},"body":{"injectables/UsersService.html":{}}}],["access",{"_index":19,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessed",{"_index":1776,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["accessible",{"_index":1806,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessors",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/TextDisplayComponent.html":{}}}],["accesstokendialogcomponent",{"_index":1,"title":{"components/AccessTokenDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["according",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accordion",{"_index":3795,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["account",{"_index":5129,"title":{},"body":{"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["account_circle",{"_index":5339,"title":{},"body":{"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["account_tree",{"_index":4846,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["acting",{"_index":3753,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["action",{"_index":1032,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["actions",{"_index":266,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/Positions.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["activated",{"_index":2314,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{}}}],["activatedroute",{"_index":2672,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["activatedroutesnapshot",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":2814,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SideNavComponent.html":{}}}],["activecategories",{"_index":2313,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["activecategories.includes(category",{"_index":2320,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["activecategories.push(key",{"_index":2949,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activecategories}).pipe",{"_index":2953,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activeitemcontent",{"_index":5491,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["activepredicates",{"_index":2768,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["actual",{"_index":2998,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["actual_component",{"_index":218,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["actually",{"_index":988,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":100,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["add(other",{"_index":5613,"title":{},"body":{"classes/Vector.html":{}}}],["addablemembers",{"_index":4931,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableuser.id",{"_index":4936,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableusers",{"_index":4872,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addcoalesceitems(coalescelist",{"_index":932,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addconsumedinterface",{"_index":2900,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterface(component",{"_index":2914,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterface(componentid",{"_index":3166,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterfacegql",{"_index":2907,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterfacemutation",{"_index":2906,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["added",{"_index":814,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["addedtocomponentevent",{"_index":847,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addedtolocationevent",{"_index":850,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addeduser1",{"_index":4887,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser1.de",{"_index":4889,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2",{"_index":4890,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2.de",{"_index":4891,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3",{"_index":4893,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3.de",{"_index":4894,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["adding",{"_index":1780,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["addinterfacetocomponent(offeredbyid",{"_index":4417,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuecommentinput",{"_index":3609,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuefoldernodes(node",{"_index":4650,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuefolders(node",{"_index":4625,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuegroupcontainer(node",{"_index":4634,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuetolocationgql",{"_index":3588,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationinput",{"_index":3598,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationmutation",{"_index":3587,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addition",{"_index":6015,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["additional",{"_index":2830,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["additionally",{"_index":2997,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["additionalsearchstring",{"_index":3497,"title":{},"body":{"components/IssueListComponent.html":{}}}],["additions",{"_index":1510,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["addlocationinput",{"_index":3600,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addmemberdialogref",{"_index":4929,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addmemberdialogref.afterclosed().subscribe(data",{"_index":4933,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addpredicateafter",{"_index":2773,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addpredicateafter(index",{"_index":2788,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addprojectmemberdialogcomponent",{"_index":99,"title":{"components/AddProjectMemberDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["adds",{"_index":896,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addself",{"_index":5603,"title":{},"body":{"classes/Vector.html":{}}}],["addself(other",{"_index":5616,"title":{},"body":{"classes/Vector.html":{}}}],["addsinglecoalesceitem",{"_index":943,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addsubscriber(subscriber",{"_index":1873,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["addtolocation",{"_index":3559,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addtolocation(addlocationinput",{"_index":3597,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["adjusted",{"_index":3365,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["administrator",{"_index":261,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["affect",{"_index":4205,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected",{"_index":2070,"title":{},"body":{"injectables/DataService.html":{},"components/NodeDetailsComponent.html":{}}}],["affected.push",{"_index":4209,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push('deleting",{"_index":4212,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push(affectedinterface",{"_index":4207,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affectedinterface",{"_index":4202,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affecting",{"_index":5146,"title":{},"body":{"components/RegisterComponent.html":{}}}],["afteralertclose",{"_index":1560,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afterclosed().subscribe((close",{"_index":1596,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afternodejoinedgroup",{"_index":3206,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodejoinedgroup(group",{"_index":3212,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afternodeleftgroup",{"_index":3207,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodeleftgroup(group",{"_index":3217,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afterviewinit",{"_index":825,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["afterwards",{"_index":3992,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["again",{"_index":4489,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["against",{"_index":3363,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ago",{"_index":5447,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["aka",{"_index":873,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["alert('todo",{"_index":4781,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["aliases",{"_index":5891,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1190,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["allcomponentslist",{"_index":1449,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["allicons",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alllabelslist",{"_index":2780,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["allnodes",{"_index":3730,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["allow",{"_index":2311,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["allowed",{"_index":744,"title":{},"body":{"classes/CCIMSValidators.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors",{"_index":3271,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('bottom",{"_index":3277,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('left",{"_index":3276,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('right",{"_index":3273,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('top",{"_index":3274,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add(groupnode.position",{"_index":3272,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allows",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["alo",{"_index":2335,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["along",{"_index":5832,"title":{},"body":{"index.html":{}}}],["already",{"_index":774,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["always",{"_index":2006,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["amend",{"_index":1935,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amount",{"_index":1960,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amounts",{"_index":2033,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["analysing",{"_index":5849,"title":{},"body":{"index.html":{}}}],["anchors",{"_index":3142,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["angular",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"directives/ItemDirective.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["angular/animations",{"_index":5757,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":5759,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["angular/cdk/overlay",{"_index":1086,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/portal",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/table",{"_index":2529,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/cdk/tree",{"_index":2531,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/common",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["angular/common/locales/en",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":5761,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/forms",{"_index":251,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/http",{"_index":2443,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["angular/icons",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material",{"_index":5762,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["angular/material/checkbox",{"_index":2544,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/dialog",{"_index":55,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/expansion",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/icon",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/input",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/list",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/menu",{"_index":2551,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/paginator",{"_index":2526,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/progress",{"_index":2561,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/select",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sidenav",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/slide",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sort",{"_index":2533,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/table",{"_index":2522,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/tabs",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/theming",{"_index":3087,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/toolbar",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/tooltip",{"_index":2558,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/platform",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["animation",{"_index":3821,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":2249,"title":{},"body":{"components/FrameComponent.html":{}}}],["animations.ts",{"_index":5746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":3003,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"index.html":{}}}],["ant",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["antd",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["antd/i18n",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["antd/icon",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["antdesignicons",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antdesignicons[key",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["any).__typename",{"_index":908,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueLocationComponent.html":{}}}],["anything",{"_index":2121,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["anyway",{"_index":2890,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["anywhere",{"_index":4459,"title":{},"body":{"interfaces/Positions.html":{}}}],["apart",{"_index":3851,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["api",{"_index":759,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":3182,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["api.service.ts",{"_index":2897,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["api.service.ts:24",{"_index":2912,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:42",{"_index":2918,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:68",{"_index":2932,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:80",{"_index":2915,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:89",{"_index":2930,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["apiservice",{"_index":3165,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apiurl",{"_index":5915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apollo",{"_index":2437,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["apollo/client",{"_index":5763,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/core",{"_index":2441,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/core/apolloclient",{"_index":2451,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/link/error",{"_index":2447,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/link",{"_index":2445,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["apollo_named_options",{"_index":2434,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_options",{"_index":2435,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclientoptions",{"_index":2438,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclients",{"_index":2455,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":2439,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink.from([basic",{"_index":2504,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["app.component",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/authentication.service",{"_index":1548,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["app/components/cache",{"_index":2552,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/cursor",{"_index":2536,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/issue",{"_index":2540,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/item.directive",{"_index":786,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphsModule.html":{},"components/SetEditorComponent.html":{}}}],["app/components/set",{"_index":2538,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/user",{"_index":2546,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/data",{"_index":787,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["app/data/component/component",{"_index":1401,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/interface/interface",{"_index":1550,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/issue",{"_index":1209,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["app/data/project/project",{"_index":1640,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/add",{"_index":4920,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/create",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["app/dialogs/remove",{"_index":1006,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/settings",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{}}}],["app/graphs/automatic",{"_index":4275,"title":{},"body":{"interfaces/Positions.html":{}}}],["app/graphs/component",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["app/graphs/issue",{"_index":1089,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["app/graphs/shared",{"_index":2945,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["app/issue",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["app/node",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["app/project",{"_index":2534,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/state.service",{"_index":2247,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["app/text",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user",{"_index":1007,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["app/utils/query",{"_index":834,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["app/utils/validators",{"_index":1402,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["appcoalescedtimelineitems",{"_index":5480,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["appcoalescedtimelineitems]'},{'name",{"_index":213,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appcomponent",{"_index":103,"title":{"components/AppComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2566,"title":{},"body":{"modules/GraphsModule.html":{}}}],["appears",{"_index":5228,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appitem",{"_index":3661,"title":{},"body":{"directives/ItemDirective.html":{}}}],["appitem]'},{'name",{"_index":207,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["applicable",{"_index":5054,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["application",{"_index":2203,"title":{},"body":{"components/FrameComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["applied",{"_index":2978,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{}}}],["applies",{"_index":2985,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["apply",{"_index":1539,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applychangeset",{"_index":4058,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applycomponentchangeset",{"_index":1508,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["applyfilter",{"_index":3385,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["applyfilter(filter",{"_index":3396,"title":{},"body":{"components/IssueListComponent.html":{}}}],["applyfilter(filtervalue",{"_index":4876,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["applyidchangeset",{"_index":2774,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applyidchangeset(id",{"_index":2791,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applying",{"_index":5223,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appmodule",{"_index":325,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appquerybody",{"_index":5041,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybody]'},{'name",{"_index":209,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appquerybutton",{"_index":5049,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybutton]'},{'name",{"_index":211,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appropriate",{"_index":733,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/IssueIconComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["approutingmodule",{"_index":332,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsingletimelineitem",{"_index":217,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appstate",{"_index":525,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["appstate.project",{"_index":5365,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node",{"_index":5366,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.id",{"_index":5370,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.name",{"_index":5368,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project?.node.id",{"_index":3190,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apptimelineitemdeleted",{"_index":5483,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["apptimelineitemdeleted]'},{'name",{"_index":215,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["arbitrary",{"_index":3781,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["architecture",{"_index":5808,"title":{},"body":{"index.html":{}}}],["architectures",{"_index":5804,"title":{},"body":{"index.html":{}}}],["area",{"_index":6036,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["args",{"_index":1733,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["arguments",{"_index":2351,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["arial",{"_index":3549,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["around",{"_index":2886,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["arranged",{"_index":4268,"title":{},"body":{"interfaces/Positions.html":{}}}],["array",{"_index":823,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["array(nodes.length",{"_index":3780,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["array.from(node.issuegroupcontainer.issuegroupnodeids).map",{"_index":4667,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(nodes.values",{"_index":4752,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.components.values()).map(component",{"_index":4565,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.interfaces.values()).map",{"_index":4569,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.includes(item",{"_index":2866,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.isarray(spec.sourcenodes",{"_index":4004,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.componentlist",{"_index":1512,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["array.isarray(this.data.listset",{"_index":4068,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.listset",{"_index":5250,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["array.push(item",{"_index":2867,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.splice(array.indexof(item",{"_index":2868,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["arrives",{"_index":3005,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["arrow",{"_index":1284,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["arrows",{"_index":1650,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["artifact",{"_index":3830,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":3864,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["asc",{"_index":3474,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["ask",{"_index":2312,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["aspect",{"_index":4501,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["assets/icons/issues",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/svg",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["asseturl",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1536,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["assigned",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["assignedevent",{"_index":962,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.createdby.id",{"_index":964,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.removedassignee?.id",{"_index":965,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignee",{"_index":3500,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignee.displayname",{"_index":3502,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignees",{"_index":1580,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["associated",{"_index":2011,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/using-gropius.html":{}}}],["assume",{"_index":4592,"title":{},"body":{"interfaces/Positions.html":{}}}],["async",{"_index":1509,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2399,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["attempt",{"_index":1461,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["attr('r",{"_index":3118,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('x",{"_index":3116,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('y",{"_index":3117,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attribute",{"_index":4759,"title":{},"body":{"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["auth",{"_index":2499,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["auth/auth.guard",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/authentication.service",{"_index":2448,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["authenticated",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2501,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/using-gropius.html":{}}}],["authentication.service",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticationservice",{"_index":623,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["authenticationsservice",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":500,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["author",{"_index":3417,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["authorization",{"_index":2502,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice",{"_index":1552,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/TopToolbarComponent.html":{}}}],["authservice.logout",{"_index":2493,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auto",{"_index":1198,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["autodismiss",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["automatic",{"_index":2064,"title":{},"body":{"injectables/DataService.html":{},"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueIconComponent.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["automaticly",{"_index":3557,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["autonomous",{"_index":5810,"title":{},"body":{"index.html":{}}}],["available",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1989,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["avoiding",{"_index":4595,"title":{},"body":{"interfaces/Positions.html":{}}}],["await",{"_index":1521,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":3742,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["b",{"_index":950,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["b.blur",{"_index":4834,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["back",{"_index":4307,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["backend",{"_index":228,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["backend:can",{"_index":5875,"title":{},"body":{"index.html":{}}}],["background",{"_index":271,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["backtologin",{"_index":5135,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backtologin(e",{"_index":5144,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backwards",{"_index":3866,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["badge",{"_index":5510,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.closed",{"_index":5526,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.reopened",{"_index":5527,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.warning",{"_index":5524,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badly",{"_index":3823,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["bar",{"_index":2153,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":1242,"title":{},"body":{"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"index.html":{}}}],["basic",{"_index":2472,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":2503,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["before",{"_index":1903,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["beforenodemove",{"_index":3282,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beforenodemove(group",{"_index":3232,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beginediting",{"_index":2678,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["beginning",{"_index":2124,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["begins",{"_index":2684,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["behavior",{"_index":1792,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["behaviorsubject",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["behaviorsubject(false",{"_index":2242,"title":{},"body":{"components/FrameComponent.html":{}}}],["behaviorsubject(null",{"_index":4312,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviorsubject(this.fetchuserfromstorage",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["behaviorsubject({labels",{"_index":2160,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["behaviour",{"_index":4337,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours",{"_index":4272,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours.ts",{"_index":3201,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["behaviours.ts:164",{"_index":3216,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:169",{"_index":3218,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:18",{"_index":3285,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:19",{"_index":3284,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:24",{"_index":3286,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:92",{"_index":3209,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:93",{"_index":3211,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:94",{"_index":3210,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:96",{"_index":3220,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behind",{"_index":5807,"title":{},"body":{"index.html":{}}}],["being",{"_index":1000,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{}}}],["belongs",{"_index":993,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["below",{"_index":2745,"title":{},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["beneath",{"_index":5343,"title":{},"body":{"components/SideNavComponent.html":{}}}],["benefits",{"_index":5819,"title":{},"body":{"index.html":{}}}],["bespoke",{"_index":3477,"title":{},"body":{"components/IssueListComponent.html":{}}}],["best",{"_index":3238,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["bestdistance",{"_index":3241,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beta.3",{"_index":5766,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":6018,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["between",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["beyond",{"_index":1761,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["bit",{"_index":1708,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["black",{"_index":3333,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{}}}],["blank",{"_index":4593,"title":{},"body":{"interfaces/Positions.html":{}}}],["block",{"_index":2747,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["blue",{"_index":3338,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["body",{"_index":991,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TimelineItemComponent.html":{}}}],["body.mat",{"_index":4248,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["bold",{"_index":2893,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{}}}],["bool",{"_index":2834,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{}}}],["booleans",{"_index":3019,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bootstrap",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1173,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["both",{"_index":739,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["bottom",{"_index":1271,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["bound",{"_index":3049,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bounding",{"_index":4317,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox",{"_index":4557,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.height",{"_index":4610,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.width",{"_index":4607,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.x",{"_index":4606,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.y",{"_index":4609,"title":{},"body":{"interfaces/Positions.html":{}}}],["bounds",{"_index":5262,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["box",{"_index":1176,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["brandt",{"_index":6087,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["break",{"_index":4036,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{}}}],["breakpointobserver",{"_index":2228,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["breakpoints",{"_index":2246,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["bridges",{"_index":2206,"title":{},"body":{"components/FrameComponent.html":{}}}],["brightness",{"_index":3354,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["browse",{"_index":5887,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browseranimationsmodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browsermodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["bug",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["bug_report",{"_index":3083,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SideNavComponent.html":{}}}],["bugcount",{"_index":2346,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["bugs",{"_index":2347,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["buildfilter",{"_index":2775,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["builds",{"_index":2795,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["built",{"_index":5803,"title":{},"body":{"index.html":{}}}],["button",{"_index":89,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["buttoncreateproject",{"_index":4861,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttondeleteproject",{"_index":4860,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttonmode",{"_index":5077,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["buttons",{"_index":2668,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["c",{"_index":1959,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["c.name",{"_index":4215,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["c1",{"_index":3414,"title":{},"body":{"components/IssueListComponent.html":{}}}],["cache",{"_index":106,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["cache_fast_debounce_time_ms",{"_index":1756,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_interactive_debounce_time_ms",{"_index":1759,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_stale_time_ms",{"_index":1765,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1676,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cached",{"_index":773,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["cachenodecomponent",{"_index":105,"title":{"components/CacheNodeComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caching",{"_index":2065,"title":{},"body":{"injectables/DataService.html":{}}}],["calc(100",{"_index":1195,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["calc(36px",{"_index":5512,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["calculaiton",{"_index":3147,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculate",{"_index":3234,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculateboundingbox",{"_index":4721,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculated",{"_index":4719,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculatemovement",{"_index":3704,"title":{},"body":{"classes/LayoutNode.html":{}}}],["calculatemovement(allnodes",{"_index":3727,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculates",{"_index":3133,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["calculatesourcehandles",{"_index":3127,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatesourcehandles(source",{"_index":3130,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles",{"_index":3128,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles(target",{"_index":3134,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculation",{"_index":3139,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["calculations",{"_index":4694,"title":{},"body":{"interfaces/Positions.html":{}}}],["call",{"_index":1858,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["callback",{"_index":1416,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["called",{"_index":1855,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["caller",{"_index":3177,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["calling",{"_index":1771,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["calls",{"_index":1251,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["canactivate",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":77,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["cancelled",{"_index":5410,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["cancels",{"_index":1465,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/Positions.html":{}}}],["cancreatenewissue",{"_index":3376,"title":{},"body":{"components/IssueListComponent.html":{}}}],["capturechildmovement",{"_index":3203,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["card",{"_index":3796,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["care",{"_index":4553,"title":{},"body":{"interfaces/Positions.html":{}}}],["carries",{"_index":5152,"title":{},"body":{"components/RegisterComponent.html":{}}}],["carry",{"_index":2924,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["case",{"_index":899,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["catch((error",{"_index":1527,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["catch(err",{"_index":1624,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["catch(error",{"_index":1499,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["catcherror",{"_index":2147,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["categiry",{"_index":3403,"title":{},"body":{"components/IssueListComponent.html":{}}}],["categories",{"_index":2308,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["categories[key",{"_index":2948,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["category",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["category'},{'name",{"_index":128,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["category.component",{"_index":2565,"title":{},"body":{"modules/GraphsModule.html":{}}}],["category.component.html",{"_index":2607,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.scss",{"_index":2606,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.ts",{"_index":2605,"title":{},"body":{"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:10",{"_index":2608,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category/issue",{"_index":2564,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["cause",{"_index":1616,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["caused",{"_index":3304,"title":{},"body":{"components/IssueIconComponent.html":{},"index.html":{}}}],["causes",{"_index":2098,"title":{},"body":{"injectables/DataService.html":{}}}],["caution",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["ccc",{"_index":5519,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["ccims",{"_index":720,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["ccimsicons",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["ccimsvalidators",{"_index":716,"title":{"classes/CCIMSValidators.html":{}},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"coverage.html":{}}}],["ccimsvalidators.contentvalidator",{"_index":1415,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.nameformatvalidator",{"_index":1409,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.namevalidator",{"_index":736,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["ccimsvalidators.urlvalidator",{"_index":1411,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["cdktablemodule",{"_index":2528,"title":{},"body":{"modules/GraphsModule.html":{}}}],["cdktreemodule",{"_index":2530,"title":{},"body":{"modules/GraphsModule.html":{}}}],["center",{"_index":1191,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["center_focus_strong",{"_index":3085,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["centered",{"_index":4854,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["certain",{"_index":4664,"title":{},"body":{"interfaces/Positions.html":{}}}],["chain",{"_index":5833,"title":{},"body":{"index.html":{}}}],["challenges",{"_index":5824,"title":{},"body":{"index.html":{}}}],["change",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["changecolour",{"_index":4809,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["changed",{"_index":2685,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["changedetector",{"_index":1057,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changedetectorref",{"_index":1058,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changeissuecategory",{"_index":3560,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategory(changeissuecategoryinput",{"_index":3601,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorygql",{"_index":3586,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategoryinput",{"_index":3602,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorymutation",{"_index":3585,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changepassword",{"_index":4773,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["changes",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["changes.listset",{"_index":5258,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changes.listset.currentvalue",{"_index":5260,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changeset",{"_index":2793,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["changing",{"_index":1817,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["charset=utf",{"_index":2476,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1785,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["checkbox",{"_index":5312,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["checked",{"_index":1631,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["checkimstype",{"_index":1429,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["checkimstype(returnfromselect",{"_index":1426,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["checking",{"_index":5085,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["checks",{"_index":960,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusernamegql",{"_index":5142,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chevron_left",{"_index":1664,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["chevron_right",{"_index":1665,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["child",{"_index":2659,"title":{},"body":{"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["child(2",{"_index":5317,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(3",{"_index":5319,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(4",{"_index":5321,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child.x",{"_index":3269,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child.y",{"_index":3270,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child::after",{"_index":3819,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["childgroup",{"_index":3213,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode",{"_index":3215,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode.allowedanchors",{"_index":3278,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnodepositions",{"_index":3204,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["children",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["children.has(childid",{"_index":3260,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["circumstance",{"_index":3713,"title":{},"body":{"classes/LayoutNode.html":{}}}],["class",{"_index":57,"title":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["class=\"timeline",{"_index":2653,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["classes",{"_index":717,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["classname",{"_index":2983,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["clean",{"_index":4560,"title":{},"body":{"interfaces/Positions.html":{}}}],["clear",{"_index":2652,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["cleartimeout(this.loadtimeout",{"_index":1851,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cli",{"_index":6041,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["click",{"_index":2118,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Positions.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["clicked",{"_index":1641,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["clickedonrow",{"_index":3386,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["clickedonrow(row",{"_index":3398,"title":{},"body":{"components/IssueListComponent.html":{}}}],["clickedonrow(rowdata",{"_index":4879,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["clicking",{"_index":4458,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["clicks",{"_index":2207,"title":{},"body":{"components/FrameComponent.html":{}}}],["client",{"_index":2507,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["clientmutationid",{"_index":1600,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["clockwise",{"_index":5638,"title":{},"body":{"classes/Vector.html":{}}}],["close",{"_index":61,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["close(closeinput",{"_index":3604,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["close_ios",{"_index":65,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["closebutton",{"_index":2469,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["closecomponentactions(reload",{"_index":4541,"title":{},"body":{"interfaces/Positions.html":{}}}],["closed",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["closedialog",{"_index":31,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["closeinput",{"_index":3607,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissue",{"_index":2620,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["closeissuegql",{"_index":3580,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissueinput",{"_index":3605,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissuemutation",{"_index":3579,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closes",{"_index":2627,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/Positions.html":{}}}],["closing",{"_index":4308,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["clr/ui",{"_index":5767,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_graphsmodule",{"_index":2515,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_declarations",{"_index":2516,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_exports",{"_index":2517,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["coalescable_events",{"_index":842,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesce",{"_index":897,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesced",{"_index":810,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["coalesced.push",{"_index":939,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescedtimelineitem",{"_index":802,"title":{"interfaces/CoalescedTimelineItem.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["coalescelist",{"_index":895,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.length",{"_index":902,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.push(timelineitem",{"_index":918,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0",{"_index":934,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0].createdat",{"_index":940,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescing",{"_index":913,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescingtype",{"_index":894,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["code",{"_index":2572,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["codechange",{"_index":3928,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codedidchange",{"_index":3927,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codegen",{"_index":6059,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["codegenerator",{"_index":1310,"title":{},"body":{"injectables/ComponentStoreService.html":{},"additional-documentation/managing-gropius.html":{}}}],["collect",{"_index":4199,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["collection",{"_index":2013,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["collections",{"_index":2292,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{}}}],["collects",{"_index":3000,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["color",{"_index":272,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"dependencies.html":{}}}],["color($accent",{"_index":5375,"title":{},"body":{"components/SideNavComponent.html":{}}}],["color.length",{"_index":3349,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.match(/^rgb",{"_index":3340,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d",{"_index":3342,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color.slice(1).replace",{"_index":3348,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[1",{"_index":3343,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[2",{"_index":3344,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["color[3",{"_index":3345,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colorpickermodule",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["column",{"_index":2258,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["columns",{"_index":2265,"title":{},"body":{"components/FrameComponent.html":{}}}],["columnstodisplay",{"_index":3377,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["combination",{"_index":5051,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["combined",{"_index":3051,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest",{"_index":3045,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["combinelatest([this.selectedcategories",{"_index":3063,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest([this.ss.state",{"_index":3185,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["combines",{"_index":3001,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["comes",{"_index":4329,"title":{},"body":{"interfaces/Positions.html":{}}}],["coming",{"_index":3685,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["comment",{"_index":972,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["comment'},{'name",{"_index":109,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["comment.component.html",{"_index":976,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.scss",{"_index":975,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentcomponent",{"_index":108,"title":{"components/CommentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentcontainer",{"_index":5522,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["commented",{"_index":1042,"title":{},"body":{"components/CommentComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["commenteditor",{"_index":2618,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["commentid",{"_index":981,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentissue",{"_index":2621,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["commentissue(commentissueinput",{"_index":3608,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuegql",{"_index":3574,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissueinput",{"_index":3610,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuemutation",{"_index":3573,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentsub",{"_index":1012,"title":{},"body":{"components/CommentComponent.html":{}}}],["commonly",{"_index":719,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["commonmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["communicate",{"_index":6050,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["communicated",{"_index":2210,"title":{},"body":{"components/FrameComponent.html":{}}}],["communicating",{"_index":3932,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["communication",{"_index":2456,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["compare",{"_index":3362,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["compared",{"_index":3850,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compatibility",{"_index":2025,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"injectables/UsersService.html":{}}}],["complete",{"_index":4547,"title":{},"body":{"interfaces/Positions.html":{}}}],["completely",{"_index":4545,"title":{},"body":{"interfaces/Positions.html":{}}}],["complex",{"_index":4596,"title":{},"body":{"interfaces/Positions.html":{}}}],["compodoc",{"_index":3950,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["compodoc.p.s",{"_index":5867,"title":{},"body":{"index.html":{}}}],["compodocfor",{"_index":6047,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["component",{"_index":0,"title":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["component'},{'name",{"_index":116,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["component(s",{"_index":4206,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["component.component.html",{"_index":5210,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.scss",{"_index":5209,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts",{"_index":5208,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:10",{"_index":5211,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:13",{"_index":5214,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:16",{"_index":5215,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:21",{"_index":5213,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:25",{"_index":5212,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.graphql",{"_index":1313,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["component.id",{"_index":1257,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.name",{"_index":1258,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.node",{"_index":4186,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component/:componentid",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/:componentid/issue/:issueid",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/project",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["component/query.component",{"_index":835,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["component/query.component.ts",{"_index":5039,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/query.component.ts:134",{"_index":5107,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:135",{"_index":5112,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:136",{"_index":5113,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:141",{"_index":5114,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:142",{"_index":5115,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:144",{"_index":5106,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:163",{"_index":5109,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:173",{"_index":5108,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:206",{"_index":5110,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:212",{"_index":5111,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:34",{"_index":5043,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:35",{"_index":5044,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:46",{"_index":5102,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/query.component.ts:47",{"_index":5103,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/remove",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["component_context_menu_data",{"_index":1101,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":97,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["componentcontextmenu",{"_index":4296,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent",{"_index":110,"title":{"components/ComponentContextMenuComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentcontextmenucomponent.componentcontextmenucomponent",{"_index":4297,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.componentcontextmenuservice",{"_index":4289,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.last_height",{"_index":1074,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.last_width",{"_index":1077,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_height",{"_index":1134,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_width",{"_index":1132,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenudata",{"_index":1056,"title":{"interfaces/ComponentContextMenuData.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{}}}],["componentcontextmenunodeid",{"_index":4298,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenuservice",{"_index":1096,"title":{"injectables/ComponentContextMenuService.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentdetails",{"_index":6014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["componentfilter",{"_index":1388,"title":{},"body":{"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentid",{"_index":1289,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["componentinterface",{"_index":2285,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacefilter",{"_index":1389,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["componentinterfaceprovider",{"_index":3378,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentinterfaces",{"_index":3861,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacesub",{"_index":3379,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentlist",{"_index":1450,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentnode",{"_index":1202,"title":{"interfaces/ComponentNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["componentnodes",{"_index":4564,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentportal",{"_index":1087,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentportal(componentcontextmenucomponent",{"_index":1126,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["components.node.component.name",{"_index":4213,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.node.consumedby.nodes",{"_index":4214,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.service",{"_index":5036,"title":{},"body":{"injectables/QueriesService.html":{}}}],["componentsize",{"_index":4722,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentsservice",{"_index":1363,"title":{"injectables/ComponentsService.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["componentstore",{"_index":1405,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["componentstoreservice",{"_index":1301,"title":{"injectables/ComponentStoreService.html":{}},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentsub",{"_index":3380,"title":{},"body":{"components/IssueListComponent.html":{}}}],["composed",{"_index":3836,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compute",{"_index":2338,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computed",{"_index":3971,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["computerelatedfolders",{"_index":5693,"title":{},"body":{"coverage.html":{}}}],["computerelatedfolders(linkissues",{"_index":2330,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computes",{"_index":2397,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["concat",{"_index":2146,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["condition",{"_index":6062,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["configuration",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["configurations",{"_index":2454,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1595,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmation",{"_index":2120,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["confirmbuttontext",{"_index":1594,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmdeletedialogref",{"_index":1025,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(del",{"_index":1034,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(deletedata",{"_index":4218,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["confirmed",{"_index":1036,"title":{},"body":{"components/CommentComponent.html":{}}}],["confirms",{"_index":1460,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["confirmvalidator",{"_index":5132,"title":{},"body":{"components/RegisterComponent.html":{}}}],["congiuration",{"_index":2464,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["conjunction",{"_index":5479,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["connect",{"_index":1228,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["connectconsumingcomponents(interfacenode",{"_index":4617,"title":{},"body":{"interfaces/Positions.html":{}}}],["connected",{"_index":3710,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["connectedposition",{"_index":1083,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["connectedto",{"_index":3696,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connecting",{"_index":4580,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["connection",{"_index":869,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"components/ProjectIssueListComponent.html":{},"classes/Vector.html":{}}}],["connections",{"_index":4554,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["connector",{"_index":1291,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["connectto",{"_index":3705,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connectto(other",{"_index":3733,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["connecttoofferingcomponent(node",{"_index":4611,"title":{},"body":{"interfaces/Positions.html":{}}}],["considered",{"_index":1762,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["consists",{"_index":4283,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["console",{"_index":5569,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["console.error('oh",{"_index":1718,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('dark",{"_index":5338,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["console.log('deleted",{"_index":2127,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('error",{"_index":5065,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["console.log('node",{"_index":1717,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('not",{"_index":2128,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('register",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('result",{"_index":5064,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["console.log('setting",{"_index":4358,"title":{},"body":{"interfaces/Positions.html":{}}}],["console.log(`[graphql",{"_index":2487,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.log(`[network",{"_index":2489,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["const",{"_index":255,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1790,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{}}}],["constructed",{"_index":2460,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["constructing",{"_index":1998,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["construction",{"_index":2923,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["constructor(@inject(component_context_menu_data",{"_index":1143,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["constructor(activatedroute",{"_index":3392,"title":{},"body":{"components/IssueListComponent.html":{}}}],["constructor(apiservice",{"_index":3163,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["constructor(authservice",{"_index":4981,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["constructor(breakpointobserver",{"_index":2227,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(changedetector",{"_index":5499,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["constructor(components",{"_index":5026,"title":{},"body":{"injectables/QueriesService.html":{}}}],["constructor(createinterfacemutation",{"_index":2577,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["constructor(createissue",{"_index":3567,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["constructor(data",{"_index":1055,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["constructor(dataservice",{"_index":765,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["constructor(dialog",{"_index":1456,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["constructor(dialogref",{"_index":34,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["constructor(element",{"_index":5101,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["constructor(fb",{"_index":5138,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(getfullissuegraphdataquery",{"_index":2904,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor(getlabelsgql",{"_index":3677,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["constructor(http",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(id",{"_index":1833,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["constructor(initialposition",{"_index":3283,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["constructor(labelstore",{"_index":3663,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["constructor(maticonregistry",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(notify",{"_index":5105,"title":{},"body":{"components/QueryComponent.html":{}}}],["constructor(overlay",{"_index":1199,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["constructor(private",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"interfaces/userMock.html":{}}}],["constructor(projectstore",{"_index":4813,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["constructor(public",{"_index":58,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(qlistprojectcomponents",{"_index":1370,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["constructor(qlistprojects",{"_index":5013,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(qsearchusers",{"_index":5581,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(queries",{"_index":1892,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["constructor(route",{"_index":3885,"title":{},"body":{"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["constructor(router",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"injectables/StateService.html":{}}}],["constructor(spec",{"_index":3966,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["constructor(ss",{"_index":5353,"title":{},"body":{"components/SideNavComponent.html":{}}}],["constructor(template",{"_index":5042,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(toastr",{"_index":5563,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["constructor(updatecomponentmutation",{"_index":1322,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["constructor(x",{"_index":3738,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["constructors",{"_index":1236,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["consumed",{"_index":2916,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["consumedby",{"_index":2359,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["consumer",{"_index":4376,"title":{},"body":{"interfaces/Positions.html":{}}}],["consumerid",{"_index":4618,"title":{},"body":{"interfaces/Positions.html":{}}}],["consuming",{"_index":4581,"title":{},"body":{"interfaces/Positions.html":{}}}],["contain",{"_index":805,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["contained",{"_index":1252,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"index.html":{}}}],["container",{"_index":1194,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"interfaces/Position.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/enumerations.html":{}}}],["containers",{"_index":4727,"title":{},"body":{"interfaces/Positions.html":{}}}],["containing",{"_index":898,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["contains",{"_index":1973,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/using-gropius.html":{}}}],["content",{"_index":262,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{}}}],["content.nativeelement.addeventlistener('mousedown",{"_index":1139,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["contentchild",{"_index":785,"title":{},"body":{"components/CacheNodeComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(itemdirective",{"_index":778,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/SetEditorComponent.html":{}}}],["contentchild(querybodydirective",{"_index":5074,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(querybuttondirective",{"_index":5075,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(timelinecoalesceditemsdirective",{"_index":5487,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelineitemdeleteddirective",{"_index":5489,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelinesingleitemdirective",{"_index":5485,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contents",{"_index":2615,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contents'},{'name",{"_index":130,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["contents.component",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{}}}],["contents.component.html",{"_index":2617,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.scss",{"_index":2616,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts",{"_index":2613,"title":{},"body":{"components/IssueContentsComponent.html":{},"coverage.html":{}}}],["contents.component.ts:19",{"_index":2624,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":2625,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:33",{"_index":2632,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:35",{"_index":2623,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:56",{"_index":2626,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:61",{"_index":2629,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:66",{"_index":2628,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contentvalidator",{"_index":726,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["context",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["contextmenutype",{"_index":4480,"title":{},"body":{"interfaces/Positions.html":{}}}],["contextmenutypefornodetype(node",{"_index":4484,"title":{},"body":{"interfaces/Positions.html":{}}}],["continue",{"_index":920,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["contrast",{"_index":806,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{}}}],["contributors",{"_index":5882,"title":{"additional-documentation/contributors.html":{}},"body":{"index.html":{},"additional-documentation/contributors.html":{}}}],["contributors.p.s",{"_index":5878,"title":{},"body":{"index.html":{}}}],["contributors:can",{"_index":5877,"title":{},"body":{"index.html":{}}}],["control",{"_index":1672,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value",{"_index":2130,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value}).subscribe(({data",{"_index":5177,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controlled",{"_index":1657,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["controls",{"_index":1100,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["controls'},{'name",{"_index":139,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["controls.component",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["controls.component.html",{"_index":3008,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.scss",{"_index":3007,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts",{"_index":2996,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:108",{"_index":3025,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":3037,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":3039,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":3040,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":3034,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:33",{"_index":3032,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":3044,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":3043,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:38",{"_index":3035,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:39",{"_index":3016,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":3033,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:50",{"_index":3042,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:57",{"_index":3029,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:66",{"_index":3017,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:74",{"_index":3024,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls/issue",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["conversion",{"_index":2899,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["convert",{"_index":2280,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueLabelComponent.html":{}}}],["converts",{"_index":2321,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/TimeFormatter.html":{}}}],["convertvalueforfilter",{"_index":5734,"title":{},"body":{"coverage.html":{}}}],["convertvalueforfilter(predicates[id].type",{"_index":2875,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["convertvalueforfilter(type",{"_index":2853,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["coordinate",{"_index":3153,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["coordinates",{"_index":4486,"title":{},"body":{"interfaces/Positions.html":{}}}],["coressponding",{"_index":3022,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["corner",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"additional-documentation/using-gropius.html":{}}}],["corner.svg",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["correct",{"_index":748,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["correctly",{"_index":1932,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["correspond",{"_index":2175,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["corresponding",{"_index":862,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["corresponds",{"_index":3837,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["count",{"_index":886,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["count(c",{"_index":1961,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["count.tostring",{"_index":4658,"title":{},"body":{"interfaces/Positions.html":{}}}],["counter",{"_index":5641,"title":{},"body":{"classes/Vector.html":{}}}],["counts",{"_index":2307,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["cover",{"_index":4084,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["coverage",{"_index":5649,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":112,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["create(issueinput",{"_index":3611,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["create(name",{"_index":2588,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["create/edit",{"_index":1482,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["createcomponent",{"_index":1316,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponent(input",{"_index":1337,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentdata",{"_index":1396,"title":{"interfaces/CreateComponentData.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"coverage.html":{}}}],["createcomponentdialogcomponent",{"_index":111,"title":{"components/CreateComponentDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createcomponentdialogref",{"_index":4767,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentdialogref.afterclosed().subscribe(componentinformation",{"_index":4769,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentgql",{"_index":1329,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentinput",{"_index":1338,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["createcomponentinterfacegql",{"_index":2578,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentinterfaceinput",{"_index":2596,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentmutation",{"_index":1328,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentnode",{"_index":1218,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createcomponentnode(component",{"_index":1255,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createconsumptionedge",{"_index":1223,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createconsumptionedge(componentid",{"_index":1287,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["created",{"_index":921,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["createdby",{"_index":936,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["createeditlabeldialogcomponent",{"_index":113,"title":{"components/CreateEditLabelDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createeditlabeldialogdata",{"_index":1448,"title":{"interfaces/CreateEditLabelDialogData.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"coverage.html":{}}}],["createerrorlink",{"_index":5709,"title":{},"body":{"coverage.html":{}}}],["createerrorlink(authservice",{"_index":2478,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["createinterfacedata",{"_index":1546,"title":{"interfaces/CreateInterfaceData.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["createinterfacedialogcomponent",{"_index":117,"title":{"components/CreateInterfaceDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createinterfacedialogref",{"_index":4419,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacedialogref.afterclosed().subscribe((interfaceid",{"_index":4421,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacemutation",{"_index":2587,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createinterfacenode",{"_index":1219,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfacenode(intrface",{"_index":1261,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createinterfaceprovisionedge",{"_index":1224,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfaceprovisionedge(componentid",{"_index":1292,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissue",{"_index":3596,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuedialogcomponent",{"_index":119,"title":{"components/CreateIssueDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createissuefoldernode",{"_index":1221,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuefoldernode(node",{"_index":1274,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissuegql",{"_index":3568,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuegroupcontainernode",{"_index":1220,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuegroupcontainernode(node",{"_index":1267,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissueinput",{"_index":1582,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"injectables/IssueStoreService.html":{}}}],["createitem",{"_index":4061,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["createnode",{"_index":4117,"title":{},"body":{"classes/NodeCache.html":{}}}],["createnode(id",{"_index":2016,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["createproject",{"_index":4987,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectdialogcomponent",{"_index":121,"title":{"components/CreateProjectDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectdialogref",{"_index":4826,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectdialogref.afterclosed().subscribe(result",{"_index":4828,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectgql",{"_index":4988,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectinput",{"_index":4999,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createrelationedge",{"_index":1222,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createrelationedge(sourceid",{"_index":1277,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["creates",{"_index":1447,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["creating",{"_index":1484,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["creation",{"_index":1233,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["creator",{"_index":925,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["creator's",{"_index":928,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["credentials",{"_index":2496,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["credits",{"_index":5879,"title":{},"body":{"index.html":{}}}],["critical",{"_index":5826,"title":{},"body":{"index.html":{}}}],["cross",{"_index":5834,"title":{},"body":{"index.html":{}}}],["crud",{"_index":3554,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["css",{"_index":4335,"title":{},"body":{"interfaces/Positions.html":{}}}],["current",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["current_user_node",{"_index":2633,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current_user_node.id",{"_index":5993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentcolor",{"_index":5315,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["currentdata",{"_index":1812,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currenthasnode(key",{"_index":1974,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentissueid",{"_index":4529,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentitems",{"_index":1898,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currently",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["currentqueryparams",{"_index":1816,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentuser",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["currentusergql",{"_index":5584,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentusersub",{"_index":2636,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["currentusersubject",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentuservalue",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentviewwindow",{"_index":4680,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentvisiblearea",{"_index":4295,"title":{},"body":{"interfaces/Positions.html":{}}}],["cursor",{"_index":123,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["cursor(c",{"_index":1958,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cursor[objkey",{"_index":4035,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["cursorpaginatorcomponent",{"_index":122,"title":{"components/CursorPaginatorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cursory",{"_index":3801,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["custom_elements_schema",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["customevent",{"_index":4403,"title":{},"body":{"interfaces/Positions.html":{}}}],["d",{"_index":6032,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["d4d4d4",{"_index":5516,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["danner",{"_index":6075,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["dark",{"_index":3337,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["dark_mode",{"_index":5330,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dashboard",{"_index":3086,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["dashed",{"_index":4555,"title":{},"body":{"interfaces/Positions.html":{}}}],["data",{"_index":231,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["data.checkusername",{"_index":5178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["data.color",{"_index":1497,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["data.component.id",{"_index":3462,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.createproject.project.id",{"_index":1645,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["data.currentuser",{"_index":5995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.emptyresultslabel",{"_index":5309,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.emptysuggestionslabel",{"_index":5310,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.length",{"_index":5981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node",{"_index":5989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.pageinfo",{"_index":5969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.totalcount",{"_index":5968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.pageinfo",{"_index":5931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.totalcount",{"_index":5930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.pageinfo",{"_index":5938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.totalcount",{"_index":5937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.pageinfo",{"_index":5942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.totalcount",{"_index":5941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.pageinfo",{"_index":5948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.totalcount",{"_index":5947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.nodes",{"_index":3692,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["data.node.labels.pageinfo",{"_index":5962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.totalcount",{"_index":5961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.pageinfo",{"_index":5978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.totalcount",{"_index":5977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkingissues.nodes.map(gqlissue",{"_index":2328,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["data.node.linkstoissues.pageinfo",{"_index":5973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkstoissues.totalcount",{"_index":5972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.pageinfo",{"_index":5958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.totalcount",{"_index":5957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.pageinfo",{"_index":5953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.totalcount",{"_index":5952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.edges.map(edge",{"_index":5007,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["data.projects.pageinfo",{"_index":5926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.totalcount",{"_index":5925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.searchuser",{"_index":5601,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.title",{"_index":5198,"title":{},"body":{"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["data.ts",{"_index":2271,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:100",{"_index":2419,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:101",{"_index":2421,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:102",{"_index":2422,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:103",{"_index":2418,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:104",{"_index":2420,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:106",{"_index":2423,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:119",{"_index":2424,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:133",{"_index":2276,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:134",{"_index":2274,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:135",{"_index":2275,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:141",{"_index":2279,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:152",{"_index":2283,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:169",{"_index":2428,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:170",{"_index":2427,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:171",{"_index":2430,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:172",{"_index":2429,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:178",{"_index":2432,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:190",{"_index":2431,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:37",{"_index":2417,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.ts:48",{"_index":2416,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.userstoadd",{"_index":4934,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.userstodelete",{"_index":4943,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.values",{"_index":3472,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.verificationname",{"_index":5207,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["data/issue",{"_index":3047,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["data/label/label",{"_index":2152,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["data/project/project",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"components/ProjectListComponent.html":{},"injectables/StateService.html":{}}}],["data[0]?.id",{"_index":5983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data[data.length",{"_index":5985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataaspromise",{"_index":1697,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["database",{"_index":229,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["datalist",{"_index":831,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["datalist(this.queries",{"_index":2106,"title":{},"body":{"injectables/DataService.html":{}}}],["datanode",{"_index":782,"title":{"classes/DataNode.html":{}},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["datanode#subscribelazy",{"_index":1010,"title":{},"body":{"components/CommentComponent.html":{}}}],["datanode(this.queries",{"_index":2019,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.hasdata",{"_index":2031,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.insertresult(node",{"_index":2042,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanodes",{"_index":2009,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery",{"_index":1677,"title":{"classes/DataQuery.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dataquery#interactive",{"_index":1757,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery:106",{"_index":1705,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:140",{"_index":1711,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:183",{"_index":1724,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:192",{"_index":1720,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:211",{"_index":1726,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:222",{"_index":1723,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:250",{"_index":1731,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:334",{"_index":1710,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:55",{"_index":1704,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:56",{"_index":1709,"title":{},"body":{"classes/DataNode.html":{}}}],["dataservice",{"_index":766,"title":{"injectables/DataService.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["dataservice.getlist(spec.sourcenodes",{"_index":4008,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dataservice.getnode(somenodeid",{"_index":1716,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datasource",{"_index":3381,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["datatype",{"_index":2836,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":5442,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(datestring",{"_index":5456,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(time).tostring",{"_index":5454,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date.now",{"_index":1854,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["date.parse(firstitem.createdat",{"_index":958,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["datestring",{"_index":5448,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["day",{"_index":5474,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["days",{"_index":73,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/TimeFormatter.html":{}}}],["db",{"_index":1554,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["deal",{"_index":1794,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debounce",{"_index":1707,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["debounced",{"_index":1905,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debouncetime",{"_index":4271,"title":{},"body":{"interfaces/Positions.html":{}}}],["debouncetime(300",{"_index":4357,"title":{},"body":{"interfaces/Positions.html":{}}}],["debugnologin",{"_index":6056,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["decide",{"_index":885,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["decides",{"_index":911,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["declarations",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["declare",{"_index":1773,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["declared",{"_index":2519,"title":{},"body":{"modules/GraphsModule.html":{}}}],["decode",{"_index":3841,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid",{"_index":2083,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodelistid(id",{"_index":3867,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid(id).type",{"_index":2104,"title":{},"body":{"injectables/DataService.html":{}}}],["decodenodeid",{"_index":1740,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodenodeid(firstkey",{"_index":1966,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(id",{"_index":3839,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["decodenodeid(keys[keys.length",{"_index":1972,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(parts[0",{"_index":3868,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decompose",{"_index":5809,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":241,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["deep",{"_index":1630,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["defaultdictionary",{"_index":2290,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["defaultmenutitle",{"_index":5347,"title":{},"body":{"components/SideNavComponent.html":{}}}],["defaultoptions",{"_index":2450,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":4948,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["define",{"_index":1406,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"directives/ItemDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["defines",{"_index":1625,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["definition",{"_index":6057,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["definitions",{"_index":1232,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"additional-documentation/managing-gropius.html":{}}}],["degrees",{"_index":3743,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["del",{"_index":1035,"title":{},"body":{"components/CommentComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delay",{"_index":1728,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["delete",{"_index":1028,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["delete(id",{"_index":2591,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["deletecomment",{"_index":979,"title":{},"body":{"components/CommentComponent.html":{},"injectables/IssueStoreService.html":{}}}],["deletecomment(deleteissuecommentinput",{"_index":3614,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deletecomponent",{"_index":1317,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponent(id",{"_index":1340,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentgql",{"_index":1325,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinput",{"_index":1353,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinterfacegql",{"_index":2582,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentinterfaceinput",{"_index":2597,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentmutation",{"_index":1324,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deleted",{"_index":922,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/using-gropius.html":{}}}],["deletedata",{"_index":4219,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deleteinterfacemutation",{"_index":2581,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deleteissuecommentgql",{"_index":3576,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentinput",{"_index":3615,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentmutation",{"_index":3575,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteitem",{"_index":4063,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["deletememberdialogref",{"_index":4938,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deletememberdialogref.afterclosed().subscribe(data",{"_index":4942,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleteproject",{"_index":4960,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["deleteprojectgql",{"_index":4989,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deleteprojectinput",{"_index":5000,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deletequery",{"_index":4174,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deletes",{"_index":995,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleting",{"_index":1305,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["deletion",{"_index":1037,"title":{},"body":{"components/CommentComponent.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/Positions.html":{}}}],["deletions",{"_index":1511,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delivers",{"_index":2322,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["demo",{"_index":4844,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["denoting",{"_index":2935,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["dependencies",{"_index":327,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1298,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["dependent",{"_index":4500,"title":{},"body":{"interfaces/Positions.html":{}}}],["depending",{"_index":2832,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["depends",{"_index":1297,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["depicted",{"_index":4649,"title":{},"body":{"interfaces/Positions.html":{}}}],["deployment",{"_index":5821,"title":{},"body":{"index.html":{}}}],["deps",{"_index":2514,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["derived",{"_index":4761,"title":{},"body":{"interfaces/Positions.html":{}}}],["described",{"_index":5836,"title":{},"body":{"index.html":{}}}],["describes",{"_index":2297,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"miscellaneous/variables.html":{}}}],["describing",{"_index":3173,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["description",{"_index":223,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{}}}],["description).subscribe(({data",{"_index":1557,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["descriptionvalidator",{"_index":1639,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["deselect",{"_index":5235,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["design/icons",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["desired",{"_index":2037,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{}}}],["destroy",{"_index":3009,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["destroyed",{"_index":1797,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["destruction",{"_index":4328,"title":{},"body":{"interfaces/Positions.html":{}}}],["detail",{"_index":155,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail'},{'name",{"_index":132,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":2671,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.scss",{"_index":2670,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts",{"_index":2669,"title":{},"body":{"components/IssueDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:115",{"_index":2691,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":2700,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":2698,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":2697,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":2701,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":2702,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":2703,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2696,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":2699,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":2695,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":2682,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":2693,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:65",{"_index":2690,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":2683,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:94",{"_index":2687,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail/comment/comment.component",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["detail/comment/comment.component.ts",{"_index":970,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["detail/comment/comment.component.ts:23",{"_index":987,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:25",{"_index":986,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:27",{"_index":992,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:30",{"_index":1004,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:32",{"_index":999,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:34",{"_index":1002,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:39",{"_index":985,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:59",{"_index":997,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:76",{"_index":994,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/issue",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail/linked",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"components/LinkedIssueItemComponent.html":{},"coverage.html":{}}}],["detail/time",{"_index":828,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/coalesced/timeline",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/timeline.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["detail/timeline/timeline.component.ts",{"_index":804,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detailed",{"_index":2704,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["details",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["details'},{'name",{"_index":166,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["details.component",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["details.component.html",{"_index":4126,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.scss",{"_index":4125,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts",{"_index":4124,"title":{},"body":{"components/NodeDetailsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["details.component.ts:130",{"_index":4146,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:145",{"_index":4148,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:152",{"_index":4150,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:160",{"_index":4151,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:165",{"_index":4153,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":4152,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:201",{"_index":4157,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:249",{"_index":4154,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:263",{"_index":4155,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:277",{"_index":4158,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:292",{"_index":4159,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:43",{"_index":4145,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:47",{"_index":4143,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:51",{"_index":4144,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:55",{"_index":4141,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":4163,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":4160,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:68",{"_index":4162,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:69",{"_index":4161,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:70",{"_index":4165,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":4164,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":4168,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":4167,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":4170,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:77",{"_index":4166,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":4169,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":4140,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details/node",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["detailscallback",{"_index":1151,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["determine",{"_index":3361,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["determines",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["dev",{"_index":6044,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["developing",{"_index":5814,"title":{},"body":{"index.html":{}}}],["development",{"_index":5857,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["dgql",{"_index":788,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{}}}],["dgql/id",{"_index":789,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/id.ts",{"_index":3824,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/index.ts",{"_index":2063,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["dgql/index.ts:24",{"_index":2075,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:34",{"_index":2078,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:39",{"_index":2080,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:67",{"_index":2077,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/load.ts",{"_index":5673,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/mutate",{"_index":2085,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/mutate.ts",{"_index":5676,"title":{},"body":{"coverage.html":{}}}],["dgql/queries/components.service.ts",{"_index":1365,"title":{},"body":{"injectables/ComponentsService.html":{},"coverage.html":{}}}],["dgql/queries/components.service.ts:12",{"_index":1377,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:20",{"_index":1385,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:24",{"_index":1387,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:28",{"_index":1380,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:32",{"_index":1382,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/issues.service.ts",{"_index":5679,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dgql/queries/projects.service.ts",{"_index":5010,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["dgql/queries/projects.service.ts:12",{"_index":5017,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:18",{"_index":5022,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:22",{"_index":5020,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/queries.service.ts",{"_index":5025,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["dgql/queries/queries.service.ts:10",{"_index":5029,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:12",{"_index":5030,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:13",{"_index":5031,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:14",{"_index":5032,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:15",{"_index":5033,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/users.service.ts",{"_index":5580,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["dgql/queries/users.service.ts:11",{"_index":5585,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:17",{"_index":5589,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:35",{"_index":5587,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/util",{"_index":1391,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dgql/queries/util.ts",{"_index":5118,"title":{},"body":{"interfaces/QueryListParams.html":{},"coverage.html":{}}}],["dgql/query",{"_index":790,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/query.ts",{"_index":1675,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/query.ts:106",{"_index":2045,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:140",{"_index":2047,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:183",{"_index":2050,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:192",{"_index":2048,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:201",{"_index":2052,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:211",{"_index":2051,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:222",{"_index":2049,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:250",{"_index":2053,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:276",{"_index":2062,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:330",{"_index":1737,"title":{},"body":{"classes/DataNode.html":{}}}],["dgql/query.ts:55",{"_index":2044,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:56",{"_index":2046,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:588",{"_index":4119,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:593",{"_index":4120,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:599",{"_index":4121,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:613",{"_index":4122,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:65",{"_index":2055,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:70",{"_index":2057,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:80",{"_index":2059,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:83",{"_index":2060,"title":{},"body":{"classes/DataQuery.html":{}}}],["diagram",{"_index":5846,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["dialog'},{'name",{"_index":98,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["dialog.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["dialog.component.html",{"_index":24,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.scss",{"_index":22,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts",{"_index":13,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dialog.component.ts:10",{"_index":38,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["dialog.component.ts:108",{"_index":3989,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:11",{"_index":4779,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:116",{"_index":3985,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:118",{"_index":1464,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":48,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:123",{"_index":1459,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":4776,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:135",{"_index":3994,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:14",{"_index":245,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":238,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:159",{"_index":3981,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:16",{"_index":243,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:163",{"_index":1466,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":248,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:173",{"_index":3990,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:18",{"_index":44,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1435,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1434,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:204",{"_index":5303,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:205",{"_index":5307,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:206",{"_index":5305,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:207",{"_index":5304,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:208",{"_index":5306,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:209",{"_index":5300,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1563,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:210",{"_index":5302,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:211",{"_index":5292,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:217",{"_index":5301,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":47,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:239",{"_index":5298,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":239,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:246",{"_index":5296,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1562,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:251",{"_index":5295,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:255",{"_index":5297,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":4777,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:269",{"_index":5299,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1437,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1439,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:280",{"_index":5293,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":240,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:293",{"_index":5294,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1438,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1436,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1480,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1432,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1470,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1578,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1476,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1433,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":3974,"title":{},"body":{"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1471,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:42",{"_index":5329,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1457,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":3978,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:46",{"_index":3976,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:47",{"_index":1475,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":5197,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":3968,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":1430,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:54",{"_index":1561,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:57",{"_index":5196,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":3967,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:60",{"_index":1573,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:61",{"_index":3973,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:72",{"_index":3980,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:75",{"_index":1571,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:77",{"_index":3993,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:94",{"_index":1568,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":1569,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog/access",{"_index":12,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/add",{"_index":222,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["dialog/create",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["dialog/profile",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/remove",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialog/settings",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":1567,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":28,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(confirm",{"_index":2126,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["dialogs/access",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/add",{"_index":2535,"title":{},"body":{"modules/GraphsModule.html":{}}}],["dialogs/create",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["dialogs/profile",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/remove",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":5220,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["didopen",{"_index":3799,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["difference",{"_index":4703,"title":{},"body":{"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["different",{"_index":2032,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["differs",{"_index":949,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dimensions",{"_index":3235,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["direct",{"_index":5830,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["direction",{"_index":1933,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["directions",{"_index":3779,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["directive",{"_index":95,"title":{"directives/ItemDirective.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"overview.html":{}}}],["directly",{"_index":1095,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/variables.html":{}}}],["directory",{"_index":2575,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["disabled",{"_index":5066,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disables",{"_index":5055,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disappear",{"_index":4760,"title":{},"body":{"interfaces/Positions.html":{}}}],["discard",{"_index":1593,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["display",{"_index":1099,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["display'},{'name",{"_index":195,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["display.component",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.html",{"_index":5388,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.scss",{"_index":5387,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts",{"_index":5385,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["display.component.ts:21",{"_index":5396,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:23",{"_index":5394,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":5399,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:30",{"_index":5408,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:35",{"_index":5398,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":5397,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:39",{"_index":5406,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:40",{"_index":5403,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:41",{"_index":5404,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:42",{"_index":5405,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:44",{"_index":5401,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:55",{"_index":5402,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display/text",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["displayed",{"_index":3314,"title":{},"body":{"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["displayedcode",{"_index":3948,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["displaying",{"_index":4628,"title":{},"body":{"interfaces/Positions.html":{}}}],["displayname",{"_index":2845,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":971,"title":{},"body":{"components/CommentComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["distance",{"_index":3770,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["distance(newposition.x",{"_index":3242,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distance(x",{"_index":3223,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distancetoline",{"_index":5604,"title":{},"body":{"classes/Vector.html":{}}}],["distancetoline(sourcepoint",{"_index":5618,"title":{},"body":{"classes/Vector.html":{}}}],["distinctuntilchanged",{"_index":2148,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["distinguish",{"_index":2039,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["document",{"_index":4436,"title":{},"body":{"interfaces/Positions.html":{}}}],["document.queryselector('#buttoncreateproject",{"_index":4832,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["documentation",{"_index":1901,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"coverage.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["documentation:can",{"_index":5864,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":2036,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["dographlayout",{"_index":4274,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["dographlayout(nodelist",{"_index":4753,"title":{},"body":{"interfaces/Positions.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["domsanitizer",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":1793,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["don\\'t",{"_index":2133,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["done",{"_index":1795,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dont",{"_index":4306,"title":{},"body":{"interfaces/Positions.html":{}}}],["dot",{"_index":3541,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/Vector.html":{}}}],["dot(other",{"_index":5626,"title":{},"body":{"classes/Vector.html":{}}}],["dot(target",{"_index":3744,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["dot(this",{"_index":5629,"title":{},"body":{"classes/Vector.html":{}}}],["dots",{"_index":5314,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["down",{"_index":2216,"title":{},"body":{"components/FrameComponent.html":{}}}],["drag",{"_index":4336,"title":{},"body":{"interfaces/Positions.html":{}}}],["dragged",{"_index":4365,"title":{},"body":{"interfaces/Positions.html":{}}}],["draggededge",{"_index":3140,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["draghandles",{"_index":1286,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["draw",{"_index":2298,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["drawer",{"_index":2212,"title":{},"body":{"components/FrameComponent.html":{}}}],["drawfolderrelations(node",{"_index":4665,"title":{},"body":{"interfaces/Positions.html":{}}}],["drawgraph",{"_index":1254,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["drawing",{"_index":2398,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["draws",{"_index":4662,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropped",{"_index":4372,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropping",{"_index":4379,"title":{},"body":{"interfaces/Positions.html":{}}}],["due",{"_index":3847,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["duplicate",{"_index":1300,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["duplicated",{"_index":5180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["duplicates",{"_index":1299,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["during",{"_index":5120,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["dynamic",{"_index":3101,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{}}}],["dynamictemplate",{"_index":1270,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dynamictemplate.dynamicnodetemplate",{"_index":3122,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["dynamictemplate.dynamictemplatecontext",{"_index":3114,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["e",{"_index":4433,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["e.g",{"_index":722,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"classes/TimeFormatter.html":{},"additional-documentation/managing-gropius.html":{}}}],["e.preventdefault",{"_index":4842,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.stoppropagation",{"_index":4843,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["e6e6e6",{"_index":3941,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["each",{"_index":1246,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["early",{"_index":3789,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["ease",{"_index":5820,"title":{},"body":{"index.html":{}}}],["easier",{"_index":5816,"title":{},"body":{"index.html":{}}}],["east",{"_index":4265,"title":{},"body":{"interfaces/Positions.html":{}}}],["easy",{"_index":5484,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["edge",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edge.createdfrom",{"_index":4380,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.draghandles",{"_index":4389,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.markerend",{"_index":4392,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.node",{"_index":5008,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["edge.svg",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["edge.type",{"_index":2992,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["edge.validtargets.add(node.id.tostring",{"_index":4395,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.add(original.target.tostring",{"_index":4384,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.clear",{"_index":4383,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.delete(existingedge.target.tostring",{"_index":4397,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgeclasssetter",{"_index":2989,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["edges",{"_index":1238,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edgetype",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["edgetype].filter(part",{"_index":3301,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["edgex",{"_index":4504,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgey",{"_index":4506,"title":{},"body":{"interfaces/Positions.html":{}}}],["edit",{"_index":114,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editable",{"_index":2706,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["editbody",{"_index":977,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment",{"_index":980,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment(body",{"_index":996,"title":{},"body":{"components/CommentComponent.html":{}}}],["edited",{"_index":1001,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["editexisting",{"_index":1485,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["editing",{"_index":989,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["edititem",{"_index":4062,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["editmode",{"_index":4127,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["editor",{"_index":188,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["editor'},{'name",{"_index":161,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["editor.component",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["editor.component.html",{"_index":3925,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.scss",{"_index":3924,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.ts",{"_index":3921,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editor.component.ts:147",{"_index":5245,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":3937,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":3929,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":3931,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":3934,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":5236,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":5233,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":5222,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":5239,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":5241,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":5225,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":5230,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":5226,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":5231,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":5232,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":5224,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":5244,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":5243,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:79",{"_index":5221,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor/markdown",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["editor/set",{"_index":2539,"title":{},"body":{"modules/GraphsModule.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorcontainer",{"_index":3940,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editoroptions",{"_index":3926,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["edits",{"_index":998,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["edittext",{"_index":5389,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["effect",{"_index":1859,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["effects",{"_index":4316,"title":{},"body":{"interfaces/Positions.html":{}}}],["elegant",{"_index":5593,"title":{},"body":{"injectables/UsersService.html":{}}}],["element",{"_index":94,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["element.assigneesstring",{"_index":3514,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.createdby.displayname",{"_index":3513,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.displayname",{"_index":4953,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.email",{"_index":4954,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.title",{"_index":3512,"title":{},"body":{"components/IssueListComponent.html":{}}}],["elementref",{"_index":1079,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["elements",{"_index":2174,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["ellipsis",{"_index":3817,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["elsewhere",{"_index":1721,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["email",{"_index":4888,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["embedded",{"_index":4280,"title":{},"body":{"interfaces/Positions.html":{}}}],["emission",{"_index":3062,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["emit",{"_index":1876,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/TextFragment.html":{}}}],["emiterrortoallsubscribers(error",{"_index":1884,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emits",{"_index":2812,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["emitselectedlabels",{"_index":2171,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["emitted",{"_index":2787,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/QueryListParams.html":{}}}],["emitting",{"_index":3079,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["emitupdatetoallsubscribers",{"_index":1881,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emoji_objects",{"_index":3082,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["empty",{"_index":900,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["emptying",{"_index":2100,"title":{},"body":{"injectables/DataService.html":{}}}],["emptyresultslabel",{"_index":4060,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["emptysuggestionslabel",{"_index":4059,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["en",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["en_us",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":4840,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["enabled",{"_index":5056,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["enablehtml",{"_index":2471,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4591,"title":{},"body":{"interfaces/Positions.html":{}}}],["enabling",{"_index":5838,"title":{},"body":{"index.html":{}}}],["encoded",{"_index":3838,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodedid",{"_index":2017,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["encodelistid",{"_index":2082,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodelistid(id",{"_index":2105,"title":{},"body":{"injectables/DataService.html":{}}}],["encodelistid(ld",{"_index":3871,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodelistid(selector",{"_index":2093,"title":{},"body":{"injectables/DataService.html":{}}}],["encodenodeid",{"_index":1481,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodenodeid(id",{"_index":1515,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodenodeid(ld.node",{"_index":3872,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(nd",{"_index":3855,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(this.getnodeid(item",{"_index":4094,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodes",{"_index":3846,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encoding",{"_index":3852,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["end",{"_index":1668,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["endcursor",{"_index":5984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1774,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":5161,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ensures",{"_index":732,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["enter",{"_index":1442,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["entered",{"_index":2928,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/RegisterComponent.html":{}}}],["entirely",{"_index":5812,"title":{},"body":{"index.html":{}}}],["entities",{"_index":5453,"title":{},"body":{"classes/TimeFormatter.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["entry",{"_index":2123,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["entry[1",{"_index":2880,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["enum",{"_index":1226,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["enumdictionary",{"_index":2198,"title":{},"body":{"interfaces/FilterState.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":5793,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2506,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.publicclientname",{"_index":5159,"title":{},"body":{"components/RegisterComponent.html":{}}}],["environment.signupurl",{"_index":2511,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["equals",{"_index":915,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["equation",{"_index":3355,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["equivalent",{"_index":1992,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["err",{"_index":1614,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["err.message).join",{"_index":2486,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["error",{"_index":1040,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"modules/GraphQLModule.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('bad",{"_index":5265,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["error('could",{"_index":3840,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["error('not",{"_index":5997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('parameters",{"_index":1896,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["error(`${nodetype[node.type",{"_index":6003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`${nodetype[type",{"_index":6007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`unknown",{"_index":2852,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["error(err",{"_index":5094,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["error.status",{"_index":3911,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorconfig",{"_index":5572,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["errorlink",{"_index":2479,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["errormessage",{"_index":5072,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["errorpolicy",{"_index":2463,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"interfaces/User.html":{}}}],["essentially",{"_index":3736,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["etc",{"_index":5163,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["even",{"_index":5817,"title":{},"body":{"index.html":{}}}],["event",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{}}}],["event.detail.currentviewwindow",{"_index":4463,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.dropposition",{"_index":4414,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.edge",{"_index":4404,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.eventsource",{"_index":4405,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node",{"_index":4439,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node.type",{"_index":4450,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.rendered",{"_index":4546,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.shiftkey",{"_index":4475,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.stopimmediatepropagation",{"_index":4490,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.movementx",{"_index":1165,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.movementy",{"_index":1167,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.preventdefault",{"_index":4406,"title":{},"body":{"interfaces/Positions.html":{}}}],["eventemitter",{"_index":2785,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["eventlisteneroreventlistenerobject",{"_index":4544,"title":{},"body":{"interfaces/Positions.html":{}}}],["events",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/StateService.html":{}}}],["everywhere",{"_index":5124,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["ex",{"_index":3411,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["example",{"_index":80,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/userMock.html":{}}}],["examplecomponent",{"_index":1684,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["examples",{"_index":3827,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["except",{"_index":6025,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["exclusive",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["execute",{"_index":6061,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["executed",{"_index":3183,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["execution",{"_index":4699,"title":{},"body":{"interfaces/Positions.html":{}}}],["exist",{"_index":2007,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/SideNavComponent.html":{}}}],["existing",{"_index":1474,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["exists",{"_index":924,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["exit",{"_index":1022,"title":{},"body":{"components/CommentComponent.html":{}}}],["expands",{"_index":3794,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["expected",{"_index":6017,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["expects",{"_index":5052,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["expitarion",{"_index":71,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["explanation",{"_index":6064,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["exports",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["expose",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["exposes",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["exposing",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["expression",{"_index":2934,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["extended",{"_index":3309,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["extending",{"_index":1247,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["extends",{"_index":1205,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["extra",{"_index":2884,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["extract",{"_index":4437,"title":{},"body":{"interfaces/Positions.html":{}}}],["extractissueid(issuelist",{"_index":4536,"title":{},"body":{"interfaces/Positions.html":{}}}],["extracts",{"_index":4534,"title":{},"body":{"interfaces/Positions.html":{}}}],["f",{"_index":1904,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["f.subscribe",{"_index":5127,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["f0ad4e",{"_index":5525,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["fabian",{"_index":6074,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["factor",{"_index":5644,"title":{},"body":{"classes/Vector.html":{}}}],["fade",{"_index":1669,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["fafafa",{"_index":5422,"title":{},"body":{"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["failed",{"_index":5071,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["fails",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["false",{"_index":244,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":3548,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["fb",{"_index":1403,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["feature",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["feature_request",{"_index":4517,"title":{},"body":{"interfaces/Positions.html":{}}}],["featurerequestcount",{"_index":2348,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["featurerequests",{"_index":2358,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{}}}],["features",{"_index":5856,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["features:can",{"_index":5869,"title":{},"body":{"index.html":{}}}],["feed",{"_index":3006,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["feeds",{"_index":2999,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["fetch",{"_index":772,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["fetched",{"_index":4147,"title":{},"body":{"components/NodeDetailsComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["fetches",{"_index":4975,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["fetchpolicy",{"_index":2462,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["fetchuserfromstorage",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["ff0036",{"_index":2762,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fff",{"_index":274,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/TimelineItemComponent.html":{}}}],["field",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["fields",{"_index":724,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["file.run",{"_index":6060,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["files",{"_index":6045,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["files.:warning",{"_index":6055,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["files:run",{"_index":5863,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2567,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["filter",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["filter'},{'name",{"_index":134,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["filter(([appstate",{"_index":3188,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filter(childid",{"_index":3259,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["filter(event",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["filter(f",{"_index":1955,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["filter(part",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(timelineitem",{"_index":917,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["filter.component",{"_index":2556,"title":{},"body":{"modules/GraphsModule.html":{}}}],["filter.component.html",{"_index":2767,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.scss",{"_index":2766,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts",{"_index":2764,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:116",{"_index":2784,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:118",{"_index":2783,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2786,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:123",{"_index":2817,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:124",{"_index":2816,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:127",{"_index":2813,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:129",{"_index":2818,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:131",{"_index":2819,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:137",{"_index":2798,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:147",{"_index":2809,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:157",{"_index":2801,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:167",{"_index":2789,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:180",{"_index":2804,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:195",{"_index":2792,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:210",{"_index":2794,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:222",{"_index":2811,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.fullsearch",{"_index":2872,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.username",{"_index":5595,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter[id",{"_index":2874,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter_list",{"_index":2878,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filterby",{"_index":5119,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["filterchange",{"_index":2782,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filtered",{"_index":2309,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["filterelement",{"_index":2164,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filtering",{"_index":2155,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["filterlabel",{"_index":2145,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":2796,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["filterselection",{"_index":2140,"title":{"interfaces/FilterSelection.html":{}},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["filterstate",{"_index":2193,"title":{"interfaces/FilterState.html":{}},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["filterstate.selectedcategories",{"_index":3193,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.labels",{"_index":3194,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.texts",{"_index":3195,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filtertext",{"_index":4994,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["filtervalue",{"_index":4878,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.tolowercase",{"_index":4947,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.trim",{"_index":4946,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["finally",{"_index":1024,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["find",{"_index":2173,"title":{},"body":{"interfaces/FilterSelection.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["findidealcomponentposition(id",{"_index":4603,"title":{},"body":{"interfaces/Positions.html":{}}}],["finds",{"_index":4602,"title":{},"body":{"interfaces/Positions.html":{}}}],["finishcoalescing",{"_index":901,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["finished",{"_index":2733,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["finishediting",{"_index":2679,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TextDisplayComponent.html":{}}}],["finishediting(save",{"_index":2686,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["finishediting(saved",{"_index":5400,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["finishes",{"_index":2688,"title":{},"body":{"components/IssueDetailComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fired",{"_index":1642,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["fires",{"_index":4836,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["first",{"_index":952,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["first_page",{"_index":1663,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["firstcomponent",{"_index":4687,"title":{},"body":{"interfaces/Positions.html":{}}}],["firstitem",{"_index":933,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.__typename",{"_index":935,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.createdby.id",{"_index":955,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstkey",{"_index":1964,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstnode",{"_index":3785,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstnode.fixed",{"_index":3787,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstpage",{"_index":1978,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstpageitemid",{"_index":1963,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["fit",{"_index":4487,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["fitgraphinview",{"_index":4718,"title":{},"body":{"interfaces/Positions.html":{}}}],["fits",{"_index":4717,"title":{},"body":{"interfaces/Positions.html":{}}}],["fix",{"_index":3464,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["fixed",{"_index":3697,"title":{},"body":{"classes/LayoutNode.html":{}}}],["fixme",{"_index":884,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/TextDisplayComponent.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["flag",{"_index":1758,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1666,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["float",{"_index":90,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["float:right",{"_index":267,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["floating",{"_index":4857,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["flow",{"_index":2264,"title":{},"body":{"components/FrameComponent.html":{}}}],["flying",{"_index":3784,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["focus",{"_index":4831,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["folder",{"_index":1314,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["folderedgetypes",{"_index":1295,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["folderedgetypes.relatedto",{"_index":1279,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["foldernode",{"_index":4669,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernode.type",{"_index":4671,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernodes",{"_index":4666,"title":{},"body":{"interfaces/Positions.html":{}}}],["folders",{"_index":2396,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["following",{"_index":1900,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["font",{"_index":1632,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["force",{"_index":3752,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["forces",{"_index":2117,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["forgot",{"_index":3918,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":81,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"additional-documentation/using-gropius.html":{}}}],["format",{"_index":749,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["formatcategorydescription",{"_index":3387,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategorydescription(category",{"_index":3401,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon",{"_index":3388,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon(issue",{"_index":3404,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatissueopentime",{"_index":2680,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["formatted",{"_index":4149,"title":{},"body":{"components/NodeDetailsComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter",{"_index":829,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter.ts",{"_index":5427,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["formatter.ts:11",{"_index":5432,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:19",{"_index":5444,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:48",{"_index":5451,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime",{"_index":5428,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime(time",{"_index":5431,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference",{"_index":5429,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference(datestring",{"_index":5443,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatting",{"_index":859,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{}}}],["formbuilder",{"_index":1397,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":246,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["formgroup",{"_index":3899,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["forward",{"_index":1902,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["forward(f",{"_index":1962,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["found",{"_index":3832,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["fragment",{"_index":2176,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["fragments",{"_index":2157,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["frame",{"_index":1136,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":126,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["frame.component.html",{"_index":2221,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame.component.scss",{"_index":2220,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["framecomponent",{"_index":125,"title":{"components/FrameComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["fri",{"_index":5435,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["fromat",{"_index":2380,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql",{"_index":2272,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlgraphcomponent",{"_index":2277,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlinterface",{"_index":2361,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlissue",{"_index":2391,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgqlnolinks",{"_index":2426,"title":{},"body":{"classes/GraphIssue.html":{}}}],["fromgqlnolinks(gqlpartialissue",{"_index":2386,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromsinglelist",{"_index":3962,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["fromsinglelist(list",{"_index":3979,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["frontend",{"_index":2281,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"index.html":{},"additional-documentation/contributors.html":{}}}],["full",{"_index":86,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/LinkedIssueItemComponent.html":{}}}],["fullissue",{"_index":3807,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuelink",{"_index":3798,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuesub",{"_index":3808,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["funcion",{"_index":3418,"title":{},"body":{"components/IssueListComponent.html":{}}}],["function",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":5535,"title":{},"body":{"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["functionality",{"_index":858,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["functioning",{"_index":6040,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["functions",{"_index":1234,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/StateService.html":{},"index.html":{}}}],["fut.then(data",{"_index":1861,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["g",{"_index":1535,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/IssueLabelComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["g.append('circle",{"_index":3115,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["gamma",{"_index":3364,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["garbage",{"_index":2012,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["gather",{"_index":3876,"title":{},"body":{"components/LoginComponent.html":{}}}],["gathers",{"_index":3018,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["generate",{"_index":68,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["generated",{"_index":2571,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"additional-documentation/managing-gropius.html":{}}}],["generated/graphql",{"_index":830,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["generatetoken",{"_index":32,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["generation",{"_index":5862,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["generation:run",{"_index":5866,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2573,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownPreviewComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["generator.com",{"_index":6066,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["getall",{"_index":4976,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getall(filtertext",{"_index":4992,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallfilter",{"_index":3675,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallfilter(projectid",{"_index":3680,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallprojectsgql",{"_index":4983,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallquery",{"_index":4982,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getalltimelineitems",{"_index":3561,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitems(id",{"_index":3617,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsgql",{"_index":3594,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsquery",{"_index":3593,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getbasiccomponent",{"_index":1318,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponent(id",{"_index":1342,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentgql",{"_index":1333,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentquery",{"_index":1332,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getbasicproject",{"_index":4979,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicproject(id",{"_index":4995,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectgql",{"_index":4984,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectquery",{"_index":528,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{}}}],["getcomponent",{"_index":1366,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponent(id",{"_index":1379,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponentgql",{"_index":1327,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{}}}],["getcomponentinterfaces",{"_index":1319,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfaces(id",{"_index":1344,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesgql",{"_index":1335,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesquery",{"_index":1334,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels",{"_index":1320,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels(id",{"_index":1346,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsgql",{"_index":1331,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsquery",{"_index":1354,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentquery",{"_index":1355,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getconsumingcomponents",{"_index":2576,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponents(id",{"_index":2592,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsgql",{"_index":2585,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsquery",{"_index":2584,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getcurrent",{"_index":2056,"title":{},"body":{"classes/DataQuery.html":{}}}],["getcurrentuservalue",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdefaultfortype",{"_index":5735,"title":{},"body":{"coverage.html":{}}}],["getdefaultfortype(predicates[type].type",{"_index":2861,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getdefaultfortype(type",{"_index":2850,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getencodedid",{"_index":5288,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getencodedid(item",{"_index":4093,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getfullcomponent",{"_index":1321,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponent(id",{"_index":1348,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponentquery",{"_index":1326,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullissue",{"_index":3562,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissue(id",{"_index":3619,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissuegraphdataquery",{"_index":2913,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getfullissuequery",{"_index":3571,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullproject",{"_index":4980,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullproject(id",{"_index":4997,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectgql",{"_index":4986,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectquery",{"_index":4914,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/userMock.html":{}}}],["getfullquery",{"_index":4985,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfulproject",{"_index":4974,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["gethasdata",{"_index":2054,"title":{},"body":{"classes/DataQuery.html":{}}}],["geticonlabel",{"_index":3290,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["geticonname",{"_index":3291,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["getinterface",{"_index":1367,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterface(id",{"_index":1381,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacegql",{"_index":1376,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacequery",{"_index":2583,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getissuefolderid",{"_index":1225,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["getissuefolderid(id",{"_index":1293,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuefolderid(node.id",{"_index":1275,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuegql",{"_index":3572,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getissuegraphdatadocument",{"_index":2286,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuegraphdataforsearchgql",{"_index":2911,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdatagql",{"_index":2905,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdataquery",{"_index":2287,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuelink",{"_index":3308,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["getissuequery",{"_index":3641,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getlabelsgql",{"_index":3678,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getlabelsquery",{"_index":1330,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getlinkhandles(g",{"_index":3121,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["getlist",{"_index":2072,"title":{},"body":{"injectables/DataService.html":{}}}],["getlist(id",{"_index":2076,"title":{},"body":{"injectables/DataService.html":{}}}],["getlistsetlength",{"_index":5263,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["getmatchinglabels",{"_index":3676,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getmatchinglabels(projectid",{"_index":3682,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getnode",{"_index":2071,"title":{},"body":{"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnode(id",{"_index":2020,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnodeid",{"_index":5289,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getnodeid(item",{"_index":4091,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getnodename",{"_index":4132,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring",{"_index":4133,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring().tolowercase",{"_index":4246,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getparams",{"_index":2058,"title":{},"body":{"classes/DataQuery.html":{}}}],["getproject",{"_index":5011,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getproject(id",{"_index":5019,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getprojectgql",{"_index":5016,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getqueryparamfilter",{"_index":3389,"title":{},"body":{"components/IssueListComponent.html":{}}}],["getremainingtypes",{"_index":2776,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getremainingtypes(index",{"_index":2797,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["gets",{"_index":878,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["getsearchissuegraphdataquery",{"_index":2910,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getselectedcategories",{"_index":3012,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["getsubscribercount",{"_index":2061,"title":{},"body":{"classes/DataQuery.html":{}}}],["gettext",{"_index":5407,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["getting",{"_index":5798,"title":{"index.html":{}},"body":{"index.html":{}}}],["github",{"_index":1444,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["github/time",{"_index":5769,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1245,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["given",{"_index":838,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueIconComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["gives",{"_index":4559,"title":{},"body":{"interfaces/Positions.html":{}}}],["glitch",{"_index":3822,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["globalconfig",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["gm",{"_index":4635,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.addnodetogroup(node.id",{"_index":4645,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.markastreeroot(node.id",{"_index":4637,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.setgroupbehaviourof",{"_index":4640,"title":{},"body":{"interfaces/Positions.html":{}}}],["gmt+0200",{"_index":5439,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["gotolocationdetails",{"_index":3527,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["gql",{"_index":2003,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"classes/NodeCache.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gqlcomponent.id",{"_index":2378,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent",{"_index":2278,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlgraphcomponent.featurerequests.totalcount",{"_index":2373,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.id",{"_index":2375,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.name",{"_index":2376,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.unclassified.totalcount",{"_index":2374,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponents",{"_index":2284,"title":{},"body":{"classes/GraphComponent.html":{}}}],["gqlinterface",{"_index":2356,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlinterface.component.id",{"_index":2367,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.consumedby.nodes.map(component",{"_index":2368,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.featurerequests.totalcount",{"_index":2363,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.id",{"_index":2365,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.name",{"_index":2366,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.unclassified.totalcount",{"_index":2364,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterfaces",{"_index":2425,"title":{},"body":{"classes/GraphInterface.html":{}}}],["gqlissue",{"_index":2381,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlissue.linkstoissues.nodes.map(gqlpartialissue",{"_index":2394,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue",{"_index":2385,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.category",{"_index":2388,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.id",{"_index":2387,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.locations.nodes.map(location",{"_index":2389,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graph",{"_index":138,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"modules.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["graph'},{'name",{"_index":136,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["graph.addeventlistener('click",{"_index":4460,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeadd",{"_index":4368,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgedrop",{"_index":4373,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeremove",{"_index":4370,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeadd",{"_index":4449,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeclick",{"_index":4430,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodedragend",{"_index":4438,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodepositionchange",{"_index":4432,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('noderemove",{"_index":4452,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('render",{"_index":4456,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('zoomchange",{"_index":4461,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.calculatelinkhandlesforedge",{"_index":3148,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["graph.component",{"_index":1091,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["graph.component.css",{"_index":4288,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.html",{"_index":4287,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.ts",{"_index":4261,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["graph.dynamictemplateregistry.adddynamictemplate('issue",{"_index":3112,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["graph.getedge(edge.createdfrom",{"_index":4382,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getedgesbysource(sourcenode.id).foreach((existingedge",{"_index":4396,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.source",{"_index":4378,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.target",{"_index":4427,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(rootid",{"_index":4521,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.groupingmanager.gettreerootof(node.id",{"_index":4519,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.nodelist.foreach((node",{"_index":4394,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.oncreatedraggededge",{"_index":4363,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.ondraggededgetargetchange",{"_index":4366,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.setedgeclass",{"_index":2994,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph.setnodeclass",{"_index":2987,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph/class",{"_index":2966,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["graph/dynamic",{"_index":3099,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["graph/graph",{"_index":1210,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graph/group",{"_index":3200,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["graph/issue",{"_index":1090,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["graph/link",{"_index":3124,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["graph_structure_documentation.png",{"_index":3226,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["graphcomponent",{"_index":1207,"title":{"classes/GraphComponent.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphcomponent.fromgql(gqlcomponent",{"_index":2379,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphcomponent.mapfromgql(data.node.components.nodes",{"_index":2325,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdata",{"_index":2299,"title":{"interfaces/GraphData.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["graphdata.graphlocations.values",{"_index":2317,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdatafactory",{"_index":2305,"title":{"classes/GraphDataFactory.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["graphdatafactory.graphdatafromgql",{"_index":2926,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdatafactory.removefiltereddata(graphdatafactory.graphdatafromgql(result.data",{"_index":2954,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdataforfilter",{"_index":3061,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["graphdataforfilter(filter",{"_index":3168,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["graphdatafromgql",{"_index":2414,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["graphdatafromgql(data",{"_index":2324,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphedit.zoomtobox(box",{"_index":4705,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor",{"_index":1248,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["grapheditor.getnode(childid",{"_index":3268,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grapheditor.zoomtobox",{"_index":4696,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor.zoomtobox(box",{"_index":4695,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfirstrender",{"_index":4299,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfolder",{"_index":2295,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphical",{"_index":5843,"title":{},"body":{"index.html":{}}}],["graphically",{"_index":5840,"title":{},"body":{"index.html":{}}}],["graphinitialized",{"_index":4301,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphinterface",{"_index":1208,"title":{"classes/GraphInterface.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphinterface.fromgql(gqlinterface",{"_index":2371,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphinterface.mapfromgql(data.node.interfaces.nodes",{"_index":2326,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphissue",{"_index":2304,"title":{"classes/GraphIssue.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{}}}],["graphissue.fromgql(gqlissue",{"_index":2329,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphlink",{"_index":5348,"title":{},"body":{"components/SideNavComponent.html":{}}}],["graphlocation",{"_index":2296,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphlocations",{"_index":2300,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphql",{"_index":1421,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphql.module",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["graphql.module.ts",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":2483,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlerrors.map(err",{"_index":2485,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlmodule",{"_index":333,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphs/graphs.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["graphs/issue",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["graphsmodule",{"_index":334,"title":{"modules/GraphsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphstateservice",{"_index":3070,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["graphwrapper",{"_index":4292,"title":{},"body":{"interfaces/Positions.html":{}}}],["gray",{"_index":4859,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TextDisplayComponent.html":{}}}],["green",{"_index":273,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueLabelComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["grid",{"_index":2257,"title":{},"body":{"components/FrameComponent.html":{}}}],["gropius",{"_index":284,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["gropius.p.s",{"_index":5870,"title":{},"body":{"index.html":{}}}],["group",{"_index":1230,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["groupbehaviour",{"_index":3202,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grouping",{"_index":4630,"title":{},"body":{"interfaces/Positions.html":{}}}],["groupnode",{"_index":3214,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.add(childgroup",{"_index":3280,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.delete(childgroup",{"_index":3281,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.position",{"_index":3251,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.type",{"_index":3236,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.x",{"_index":3243,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.y",{"_index":3244,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groups",{"_index":4267,"title":{},"body":{"interfaces/Positions.html":{}}}],["grow",{"_index":3089,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["gs",{"_index":1404,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["guard",{"_index":609,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gui",{"_index":3894,"title":{},"body":{"components/LoginComponent.html":{}}}],["h2",{"_index":4858,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["hack",{"_index":3463,"title":{},"body":{"components/IssueListComponent.html":{}}}],["hand",{"_index":5534,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handels",{"_index":2922,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["handle",{"_index":3111,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handleclick",{"_index":5538,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handled",{"_index":953,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["handler",{"_index":3804,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["handles",{"_index":966,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handles.service",{"_index":4277,"title":{},"body":{"interfaces/Positions.html":{}}}],["handles.service.ts",{"_index":3126,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["handles.service.ts:101",{"_index":3136,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:22",{"_index":3138,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:65",{"_index":3132,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.sourcehandles",{"_index":3151,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles/issue",{"_index":3125,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["handling",{"_index":866,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["handset",{"_index":2219,"title":{},"body":{"components/FrameComponent.html":{}}}],["happen",{"_index":3791,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["happens",{"_index":1788,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hardcoded",{"_index":4865,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/userMock.html":{}}}],["hasdata",{"_index":1786,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hasin",{"_index":3297,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasmore",{"_index":3957,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hasn't",{"_index":3805,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["hasnextpage",{"_index":1931,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasout",{"_index":3299,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["haspreviouspage",{"_index":1930,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":1976,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["having",{"_index":1714,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["header",{"_index":2269,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["header'},{'name",{"_index":171,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["header.component",{"_index":2555,"title":{},"body":{"modules/GraphsModule.html":{}}}],["header.component.html",{"_index":4788,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.scss",{"_index":4787,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts",{"_index":4786,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:12",{"_index":4791,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":4790,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header/project",{"_index":2554,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2474,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["headline",{"_index":4855,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["height",{"_index":263,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["help",{"_index":3084,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["helper",{"_index":2889,"title":{},"body":{"components/IssueFilterComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["hence",{"_index":1934,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["here",{"_index":1909,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["heuristic",{"_index":4083,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hex",{"_index":3331,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hidden",{"_index":2268,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["hide",{"_index":4771,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/TimelineItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["hides",{"_index":5555,"title":{},"body":{"components/UserItemComponent.html":{}}}],["highlight",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["highlighting",{"_index":3923,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["hold",{"_index":1315,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["holding",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["holds",{"_index":2202,"title":{},"body":{"components/FrameComponent.html":{}}}],["home",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TopToolbarComponent.html":{}}}],["hook",{"_index":876,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["horizontal",{"_index":4799,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["host",{"_index":3302,"title":{},"body":{"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":1080,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mousemove",{"_index":1161,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mouseup",{"_index":1159,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["host}/api",{"_index":5916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/api/public",{"_index":5918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/login",{"_index":5920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":5476,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hours",{"_index":5465,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hsp",{"_index":3339,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["html",{"_index":93,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["htmlelement",{"_index":4833,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["http",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["http://alienryderflex.com/hsp.html",{"_index":3356,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://ccims.github.io/ccims",{"_index":5865,"title":{},"body":{"index.html":{}}}],["http://gist.github.com/983661",{"_index":3346,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://localhost:4200",{"_index":5861,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["http://localhost:6060",{"_index":6048,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["http://localhost:8080",{"_index":5921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["httpclientmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["httperrorresponse",{"_index":3901,"title":{},"body":{"components/LoginComponent.html":{}}}],["httplink",{"_index":2442,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink.create({uri",{"_index":2505,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://github.com/ccims/ccims",{"_index":5876,"title":{},"body":{"index.html":{}}}],["https://graphql",{"_index":6065,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["hue",{"_index":3351,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hydrate",{"_index":5219,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["hydrated",{"_index":1827,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrateinitial(data",{"_index":1993,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydratelist",{"_index":2004,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateraw",{"_index":1698,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["hydrateraw(prepareddata",{"_index":1719,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrates",{"_index":1986,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydration",{"_index":1867,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["hyperlink",{"_index":3312,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["i.c.insertnodes(data",{"_index":5987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.assignees.nodes",{"_index":5970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.components.nodes",{"_index":5932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.interfaces.nodes",{"_index":5939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issues.nodes",{"_index":5943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issuesonlocation.nodes",{"_index":5949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.labels.nodes",{"_index":5963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkedbyissues.nodes",{"_index":5979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkstoissues.nodes",{"_index":5974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.locations.nodes",{"_index":5959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.timeline.nodes",{"_index":5954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.projects.nodes",{"_index":5927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.consumedby.nodes",{"_index":4208,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.consumedby.nodes.length",{"_index":4204,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.e",{"_index":771,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["i.name",{"_index":4203,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.q.components.getcomponent(id).then(data",{"_index":5990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.getinterface(id).then(data",{"_index":5991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectcomponents(list.node.id",{"_index":5928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectinterfaces(list.node.id",{"_index":5936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getissueheader(id).then(data",{"_index":5992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getlabel(id).then(data",{"_index":5999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentinterfaceissuesonlocation(list.node.id",{"_index":5950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissues(list.node.id",{"_index":5944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissuesonlocation(list.node.id",{"_index":5945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentlabels(list.node.id",{"_index":5964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissueassignees(list.node.id",{"_index":5967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuecomponents(list.node.id",{"_index":5933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelabels(list.node.id",{"_index":5965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkedbyissues(list.node.id",{"_index":5976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkstoissues(list.node.id",{"_index":5971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelocations(list.node.id",{"_index":5956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuetimelineitems(list.node.id",{"_index":5951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listlabelcomponents(list.node.id",{"_index":5935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectissues(list.node.id",{"_index":5940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectlabels(list.node.id",{"_index":5960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.getproject(id).then(data",{"_index":5988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.listprojects(listparams(params)).then(data",{"_index":5924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.currentuser().then(data",{"_index":5994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.searchusers(params.filter",{"_index":5980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i1",{"_index":3412,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icomponent",{"_index":3442,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icon",{"_index":2208,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon'},{'name",{"_index":141,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["icon.component",{"_index":2549,"title":{},"body":{"modules/GraphsModule.html":{}}}],["icon.component.html",{"_index":3289,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.scss",{"_index":3288,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts",{"_index":3287,"title":{},"body":{"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:13",{"_index":3292,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:15",{"_index":3294,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:30",{"_index":3293,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon/issue",{"_index":2548,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icondefinition",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["id.split",{"_index":3843,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["idea",{"_index":5806,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":4498,"title":{},"body":{"interfaces/Positions.html":{}}}],["identical",{"_index":3760,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["identified",{"_index":1679,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["identifier",{"_index":1830,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{}}}],["identifies",{"_index":3826,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["identity",{"_index":1891,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["ids",{"_index":1473,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["idt",{"_index":1991,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["id}).pipe",{"_index":3656,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["id}__${issuecategory",{"_index":1294,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["if(this.mode",{"_index":5333,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["if(this.modeicon",{"_index":5335,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["ifempty",{"_index":2841,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["iff",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{}}}],["ignore",{"_index":1011,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UserNotifyService.html":{}}}],["ignored",{"_index":2026,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ignoring",{"_index":2383,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["img",{"_index":4801,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["immediately",{"_index":1715,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["immutable",{"_index":3737,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["implementations",{"_index":3228,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["implemented",{"_index":5998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["important",{"_index":5377,"title":{},"body":{"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["imported",{"_index":2520,"title":{},"body":{"modules/GraphsModule.html":{}}}],["imports",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ims",{"_index":1418,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["imstype",{"_index":1398,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["imstype.github",{"_index":1428,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["in(black",{"_index":1670,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["inarray",{"_index":2803,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["include",{"_index":3731,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"index.html":{}}}],["included",{"_index":3977,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["includes",{"_index":1231,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["including",{"_index":1575,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"additional-documentation/using-gropius.html":{}}}],["indented",{"_index":2116,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["independence",{"_index":5823,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1689,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicates",{"_index":2689,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["indicating",{"_index":3020,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["indication",{"_index":5053,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicator",{"_index":5060,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indirection",{"_index":3955,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["individual",{"_index":819,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{}}}],["individualconfig",{"_index":2449,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["infinite",{"_index":5621,"title":{},"body":{"classes/Vector.html":{}}}],["infinitely",{"_index":5622,"title":{},"body":{"classes/Vector.html":{}}}],["infix",{"_index":2748,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["infoconfig",{"_index":5574,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["information",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["inherit",{"_index":2263,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inherited",{"_index":1703,"title":{},"body":{"classes/DataNode.html":{}}}],["inidcate",{"_index":5048,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["initgraph",{"_index":2972,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["initial",{"_index":1626,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["initialized",{"_index":4300,"title":{},"body":{"interfaces/Positions.html":{}}}],["initializes",{"_index":4319,"title":{},"body":{"interfaces/Positions.html":{}}}],["initially",{"_index":3930,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["initialposition",{"_index":3231,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["initiated",{"_index":3410,"title":{},"body":{"components/IssueListComponent.html":{}}}],["inject",{"_index":249,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["inject(component_context_menu_data",{"_index":1072,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["inject(mat_dialog_data",{"_index":242,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["injectable",{"_index":529,"title":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{}},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["injectables",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":1309,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["injection",{"_index":6068,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["injectiontoken",{"_index":1081,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injectiontoken('component_context_menu_data",{"_index":1102,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1082,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injector)).instance",{"_index":1127,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["inline",{"_index":2752,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inmemorycache",{"_index":2440,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["inner",{"_index":1831,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{}}}],["innermapfn",{"_index":1824,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerqueryfn",{"_index":1807,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inout",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":723,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputs",{"_index":763,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputtitle",{"_index":2673,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["insert",{"_index":1988,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertnodes",{"_index":4118,"title":{},"body":{"classes/NodeCache.html":{}}}],["insertnodes(nodes",{"_index":2027,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertresult(result",{"_index":1887,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inserts",{"_index":2024,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inset",{"_index":3517,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["inside",{"_index":3419,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["instance",{"_index":2459,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["instances",{"_index":2977,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["instantiated",{"_index":1249,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["instead",{"_index":817,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["int",{"_index":4192,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["int.node",{"_index":4193,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["inteface",{"_index":6023,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["intended",{"_index":5050,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["interact",{"_index":5848,"title":{},"body":{"index.html":{}}}],["interacting",{"_index":1769,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["interaction",{"_index":227,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["interactive",{"_index":1695,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{}}}],["interest",{"_index":2927,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["interested",{"_index":3178,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["interface",{"_index":118,"title":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"interfaces/GraphData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["interface.graphql",{"_index":2574,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["interface/:interfaceid",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["interfaceconsumer",{"_index":1227,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["interfaceid",{"_index":1288,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["interfacenode",{"_index":1215,"title":{"interfaces/InterfaceNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["interfacenode.dataaspromise().then(data",{"_index":3465,"title":{},"body":{"components/IssueListComponent.html":{}}}],["interfacenode.id",{"_index":4621,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes",{"_index":4568,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes.foreach(interfacenode",{"_index":4582,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfaceofferingcomponents",{"_index":2340,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaceofferingcomponents.has(id",{"_index":2345,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["interfaces.get(interfaceid).offeredby",{"_index":2343,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.has(locationid)).map(interfaceid",{"_index":2342,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.node.interfaces.nodes",{"_index":4201,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["interfacesize",{"_index":4723,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacestore",{"_index":1553,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["interfacestoreservice",{"_index":1549,"title":{"injectables/InterfaceStoreService.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["internal",{"_index":1866,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["interplay",{"_index":3229,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["intrface",{"_index":4570,"title":{},"body":{"interfaces/Positions.html":{}}}],["intrface.id",{"_index":1262,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.name",{"_index":1263,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.offeredby",{"_index":1265,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["introduction",{"_index":5799,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1440,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidate",{"_index":1699,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidatelists",{"_index":2074,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidatelists(selector",{"_index":2079,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidates",{"_index":2081,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidating",{"_index":2097,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidcredentials",{"_index":3880,"title":{},"body":{"components/LoginComponent.html":{}}}],["investigate",{"_index":5125,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["invisible",{"_index":4622,"title":{},"body":{"interfaces/Positions.html":{}}}],["invoke",{"_index":6071,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["invoked",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{}}}],["invokes",{"_index":2925,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["involves",{"_index":2122,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["irrelevant",{"_index":3174,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["isbehind",{"_index":5605,"title":{},"body":{"classes/Vector.html":{}}}],["isbehind(source",{"_index":5630,"title":{},"body":{"classes/Vector.html":{}}}],["isclosed",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["iscoalesced",{"_index":822,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iscomponent",{"_index":3528,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["isduplicate",{"_index":2835,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isfilterlabel",{"_index":2150,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["isfilterlabel(item)).map(item",{"_index":2179,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["isfilterlabel(label",{"_index":2182,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{}}}],["ishandset",{"_index":2222,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["isinset",{"_index":5290,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["isinset(item",{"_index":4095,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isissuebody",{"_index":982,"title":{},"body":{"components/CommentComponent.html":{}}}],["islinkedbyissues",{"_index":2842,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":3881,"title":{},"body":{"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["islocalset",{"_index":4064,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isn't",{"_index":4497,"title":{},"body":{"interfaces/Positions.html":{}}}],["isnextsublazy",{"_index":1828,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["isopen",{"_index":2833,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isprojectset",{"_index":2223,"title":{},"body":{"components/FrameComponent.html":{}}}],["isprojecturl",{"_index":5378,"title":{},"body":{"injectables/StateService.html":{}}}],["isprojecturl(url",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["isright",{"_index":6011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":120,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["issue$.current?.usercaneditissue",{"_index":2708,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issue's",{"_index":990,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["issue.assignees.nodes",{"_index":3501,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.assigneesstring",{"_index":3498,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.category",{"_index":2405,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["issue.createdby.displayname",{"_index":3505,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.graphql",{"_index":3558,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issue.id",{"_index":4537,"title":{},"body":{"interfaces/Positions.html":{}}}],["issue.isopen",{"_index":3446,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labels.nodes",{"_index":3503,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labelsstring",{"_index":3499,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.linksissues",{"_index":2393,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issue.search",{"_index":3506,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.title",{"_index":2734,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{}}}],["issuecategory",{"_index":1211,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/typealiases.html":{}}}],["issuecategory.bug",{"_index":2353,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.featurerequest",{"_index":2354,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.unclassified",{"_index":2355,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory[key",{"_index":4654,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecategorycomponent",{"_index":127,"title":{"components/IssueCategoryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecomment",{"_index":1005,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuecontainersize",{"_index":4724,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecontentscomponent",{"_index":129,"title":{"components/IssueContentsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecount",{"_index":1273,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuecounts",{"_index":4651,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["issuecounts(bugcount",{"_index":2352,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlgraphcomponent.bugs.totalcount",{"_index":2372,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlinterface.bugs.totalcount",{"_index":2362,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts.get(issuecategory",{"_index":4656,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecounts.has(issuecategory",{"_index":4655,"title":{},"body":{"interfaces/Positions.html":{}}}],["issued",{"_index":4310,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuedata",{"_index":1564,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["issuedetailcomponent",{"_index":131,"title":{"components/IssueDetailComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueeditable",{"_index":2674,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuefilter",{"_index":2765,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["issuefiltercomponent",{"_index":133,"title":{"components/IssueFilterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["issuefoldernode",{"_index":1272,"title":{"interfaces/IssueFolderNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuefoldernode.id",{"_index":4661,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraph",{"_index":1103,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{}}}],["issuegraphapiservice",{"_index":2896,"title":{"injectables/IssueGraphApiService.html":{}},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["issuegraphclasssettersservice",{"_index":2965,"title":{"injectables/IssueGraphClassSettersService.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphcomponent",{"_index":135,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponent",{"_index":137,"title":{"components/IssueGraphControlsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponents",{"_index":4311,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphdynamictemplateregistryservice",{"_index":3098,"title":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphlinkhandlesservice",{"_index":3123,"title":{"injectables/IssueGraphLinkHandlesService.html":{}},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphnodes",{"_index":4273,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createcomponentnode(component",{"_index":4566,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createinterfacenode(intrface",{"_index":4571,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuefoldernode(node",{"_index":4657,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuegroupcontainernode(node",{"_index":4638,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createrelationedge(foldernode.id",{"_index":4673,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.getissuefolderid(issuenodeid",{"_index":4674,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.interfacenode",{"_index":4612,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode",{"_index":4575,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode[]).concat(interfacenodes",{"_index":4574,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.component",{"_index":4387,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interface",{"_index":4388,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interfaceconsumer",{"_index":4401,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.issuegroupcontainer",{"_index":4440,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.position",{"_index":4418,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphstateservice",{"_index":1399,"title":{"injectables/IssueGraphStateService.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainer",{"_index":1229,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["issuegroupcontainerbehaviour",{"_index":3199,"title":{"classes/IssueGroupContainerBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainernode",{"_index":1216,"title":{"interfaces/IssueGroupContainerNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuegroupcontainernode.id",{"_index":4646,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupcontainerparentbehaviour",{"_index":3230,"title":{"classes/IssueGroupContainerParentBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainerparentbehaviour(initialposition",{"_index":4641,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupnodeids",{"_index":1266,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuegroupparents",{"_index":4303,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroups",{"_index":4262,"title":{},"body":{"interfaces/Positions.html":{}}}],["issueheadercomponent",{"_index":4793,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["issueiconcomponent",{"_index":140,"title":{"components/IssueIconComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueid",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["issueinput",{"_index":3613,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issueitemcomponent",{"_index":142,"title":{"components/IssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent",{"_index":144,"title":{"components/IssueLabelComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent.labelcolorforbackground(color",{"_index":3368,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["issuelist",{"_index":4535,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuelistcomponent",{"_index":146,"title":{"components/IssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistid",{"_index":4128,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["issuelistparams",{"_index":5896,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["issuelocation",{"_index":3530,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["issuelocationcomponent",{"_index":148,"title":{"components/IssueLocationComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelocations",{"_index":3863,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuenode",{"_index":1206,"title":{"interfaces/IssueNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuenodeid",{"_index":2714,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["issuenodes",{"_index":4573,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.foreach(node",{"_index":4576,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.length",{"_index":4587,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuepage",{"_index":2288,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issueregex",{"_index":2957,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issueregex}).pipe",{"_index":2960,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ComponentNode.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"injectables/QueriesService.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["issues&quot",{"_index":2941,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues.service",{"_index":5034,"title":{},"body":{"injectables/QueriesService.html":{}}}],["issuesidebarcomponent",{"_index":150,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueslink",{"_index":5349,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issuesonlocation",{"_index":3862,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuesservice",{"_index":5027,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["issuestoreservice",{"_index":3552,"title":{"injectables/IssueStoreService.html":{}},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["issuestub",{"_index":3793,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuestub.title",{"_index":3816,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuesub",{"_index":2675,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuetimelineitem",{"_index":824,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuing",{"_index":5153,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iszero",{"_index":5606,"title":{},"body":{"classes/Vector.html":{}}}],["it's",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["italic",{"_index":5425,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["item",{"_index":88,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["item's",{"_index":927,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item'},{'name",{"_index":143,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"modules/GraphsModule.html":{}}}],["item.component.html",{"_index":3307,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.name",{"_index":2883,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["item.component.scss",{"_index":3306,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts",{"_index":3305,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:12",{"_index":5531,"title":{},"body":{"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:13",{"_index":3315,"title":{},"body":{"components/IssueItemComponent.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["item.component.ts:14",{"_index":5556,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:15",{"_index":3313,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:16",{"_index":5554,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:17",{"_index":3311,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:19",{"_index":3310,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:22",{"_index":3802,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:24",{"_index":3316,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:25",{"_index":5481,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:27",{"_index":3806,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:31",{"_index":3800,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:37",{"_index":5529,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:38",{"_index":5530,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:42",{"_index":3803,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:54",{"_index":5502,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:56",{"_index":5501,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:59",{"_index":5504,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:61",{"_index":5506,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:63",{"_index":5505,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:65",{"_index":5503,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:66",{"_index":5500,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.createdby",{"_index":930,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.createdby.displayname",{"_index":931,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.id",{"_index":2169,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["item.label",{"_index":844,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.linkedissue",{"_index":855,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.location",{"_index":851,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.name",{"_index":1537,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["item.removedcomponent",{"_index":849,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlabel",{"_index":846,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlinkedissue",{"_index":857,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlocation",{"_index":853,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item/issue",{"_index":2545,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueItemComponent.html":{},"coverage.html":{}}}],["item/user",{"_index":2547,"title":{},"body":{"modules/GraphsModule.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item::before",{"_index":5523,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["itemdirective",{"_index":206,"title":{"directives/ItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemfilterfunction",{"_index":836,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/typealiases.html":{}}}],["itemfilterfunction|undefined",{"_index":942,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemops",{"_index":4055,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["items",{"_index":809,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{}}}],["items.filter(x",{"_index":3689,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["items.push(item",{"_index":4045,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.splice(this.limit",{"_index":4049,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.values",{"_index":906,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["items/events",{"_index":820,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemtemplate",{"_index":761,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["itemtype",{"_index":907,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iterate",{"_index":3757,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["itself",{"_index":2214,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["javascript",{"_index":3849,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["jimmy",{"_index":6076,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["join",{"_index":2962,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["json",{"_index":4681,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(atob(response.token.split('.')[1",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(data",{"_index":4353,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(localstorage.getitem(this.userstoragekey",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(previousboundingboxasstring",{"_index":4690,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring",{"_index":4691,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring).k",{"_index":4709,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentviewwindow",{"_index":4333,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentzoomtransform",{"_index":4331,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.savedpositions",{"_index":4360,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(user",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["jump",{"_index":4951,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["jumps",{"_index":4837,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["justify",{"_index":1667,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["jwt",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["k",{"_index":2199,"title":{},"body":{"interfaces/FilterState.html":{}}}],["keep",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["keeps",{"_index":2008,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["key",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["key.split",{"_index":4034,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["keyed",{"_index":2828,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":1635,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["keys",{"_index":1969,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{}}}],["keys[keys.length",{"_index":1971,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["keyset",{"_index":1513,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.add(encodenodeid(item",{"_index":1518,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.delete(encodenodeid(item",{"_index":1520,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.has(encodenodeid(item",{"_index":1516,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyword",{"_index":3407,"title":{},"body":{"components/IssueListComponent.html":{},"components/MarkdownPreviewComponent.html":{}}}],["keywords",{"_index":3420,"title":{},"body":{"components/IssueListComponent.html":{}}}],["kliment",{"_index":6078,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["klimentov",{"_index":6079,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["knowledge",{"_index":1937,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["kristina",{"_index":6080,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["label",{"_index":115,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["label'},{'name",{"_index":145,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["label.component",{"_index":2542,"title":{},"body":{"modules/GraphsModule.html":{}}}],["label.component.html",{"_index":3325,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.scss",{"_index":3324,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts",{"_index":3323,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{}}}],["label.component.ts:14",{"_index":3328,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:20",{"_index":3330,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:65",{"_index":3335,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.id",{"_index":2956,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label.name",{"_index":3504,"title":{},"body":{"components/IssueListComponent.html":{}}}],["label/issue",{"_index":2541,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLabelComponent.html":{},"coverage.html":{}}}],["label/label",{"_index":2946,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label?.name",{"_index":3369,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelcolorforbackground",{"_index":3326,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelcolorforbackground(color",{"_index":3329,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labeled",{"_index":5386,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["labelisdark",{"_index":3327,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelisdark(color",{"_index":3334,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labelledevent",{"_index":843,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["labels",{"_index":1472,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["labels.length",{"_index":2950,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labels.map(label",{"_index":2955,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labelsearch",{"_index":3010,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["labelsearchcomponent",{"_index":152,"title":{"components/LabelSearchComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labelsinput",{"_index":2162,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelsloading",{"_index":2161,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstore",{"_index":2165,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstoreservice",{"_index":2151,"title":{"injectables/LabelStoreService.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["labeltext",{"_index":5392,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["landing",{"_index":4804,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["language",{"_index":2936,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/MarkdownEditorComponent.html":{}}}],["larger",{"_index":3919,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":1967,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{}}}],["last_height",{"_index":1133,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["last_width",{"_index":1131,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["lastloadtime",{"_index":1813,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastpageitemid",{"_index":1968,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastqueriedprojectname",{"_index":4807,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["latter",{"_index":6039,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["layer",{"_index":3954,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["layour",{"_index":4744,"title":{},"body":{"interfaces/Positions.html":{}}}],["layout",{"_index":2099,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["layout.ts",{"_index":3695,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layout.ts:100",{"_index":5640,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:109",{"_index":5627,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:123",{"_index":5620,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:133",{"_index":5632,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:143",{"_index":3721,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:146",{"_index":3716,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:149",{"_index":3718,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:152",{"_index":3720,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:155",{"_index":3722,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:158",{"_index":3724,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:161",{"_index":3714,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:164",{"_index":3726,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:167",{"_index":3711,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:170",{"_index":3709,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:173",{"_index":3708,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:186",{"_index":3734,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:195",{"_index":3728,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:29",{"_index":5631,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:40",{"_index":5643,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:47",{"_index":5633,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:55",{"_index":5634,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:64",{"_index":5614,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:73",{"_index":5617,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:8",{"_index":5612,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:84",{"_index":5648,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:9",{"_index":5611,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:92",{"_index":5636,"title":{},"body":{"classes/Vector.html":{}}}],["layoutgraph",{"_index":3013,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["layoutmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutnode",{"_index":3693,"title":{"classes/LayoutNode.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layoutnode(node.id",{"_index":4746,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.padding_component",{"_index":3746,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.padding_interface",{"_index":3747,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.position.x",{"_index":4756,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.position.y",{"_index":4757,"title":{},"body":{"interfaces/Positions.html":{}}}],["lazily",{"_index":770,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{}}}],["lazy",{"_index":764,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ld",{"_index":3870,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["lead",{"_index":3415,"title":{},"body":{"components/IssueListComponent.html":{},"index.html":{}}}],["leak",{"_index":1800,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["leaving",{"_index":753,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["left",{"_index":1069,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["leftdistance",{"_index":3246,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["legend",{"_index":92,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["length",{"_index":734,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/Vector.html":{}}}],["lets",{"_index":1772,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{}}}],["levels",{"_index":4633,"title":{},"body":{"interfaces/Positions.html":{}}}],["li",{"_index":5509,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["license",{"_index":5884,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":875,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"additional-documentation/using-gropius.html":{}}}],["light",{"_index":3336,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["light_mode",{"_index":5336,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["lightgray",{"_index":5204,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["limit",{"_index":3958,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["limitation",{"_index":3848,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["line",{"_index":2113,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"classes/Vector.html":{}}}],["line.replace('\\n",{"_index":5419,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line.replace(\\'\\n",{"_index":5426,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line:component",{"_index":793,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["lines",{"_index":2112,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["link",{"_index":750,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"injectables/IssueStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["link(linkissueinput",{"_index":3621,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linked",{"_index":156,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["linked).catch(err",{"_index":1613,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["linkedbyissues",{"_index":2843,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissue",{"_index":2406,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissue.category",{"_index":2410,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissueitemcomponent",{"_index":154,"title":{"components/LinkedIssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linkedissues",{"_index":2634,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissuesub",{"_index":2635,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["linkevent",{"_index":854,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["linkhandle",{"_index":3109,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.x",{"_index":3156,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.y",{"_index":3159,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandlecalculation",{"_index":3141,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linking",{"_index":3556,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissue",{"_index":3569,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissuegql",{"_index":3570,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissueinput",{"_index":3622,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissues",{"_index":2303,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["links",{"_index":2384,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"index.html":{}}}],["linksissues",{"_index":2382,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["linkstoissues",{"_index":1581,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["list",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["list'},{'name",{"_index":147,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["list.component",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["list.component.html",{"_index":3375,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.scss",{"_index":3374,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts",{"_index":3371,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list.component.ts:163",{"_index":3406,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:18",{"_index":4819,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:188",{"_index":3397,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":4796,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:197",{"_index":3399,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:20",{"_index":4795,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:207",{"_index":3416,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:21",{"_index":4820,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:22",{"_index":4814,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:24",{"_index":4794,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["list.component.ts:245",{"_index":3408,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:33",{"_index":3394,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:34",{"_index":3395,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:35",{"_index":3435,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:36",{"_index":3431,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":3424,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:40",{"_index":3428,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:43",{"_index":3425,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:44",{"_index":3427,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:47",{"_index":3426,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":4818,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:51",{"_index":3422,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:53",{"_index":3421,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:55",{"_index":3430,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:56",{"_index":3423,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:57",{"_index":3436,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:58",{"_index":3440,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:60",{"_index":3434,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:61",{"_index":3439,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:62",{"_index":3393,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:70",{"_index":4817,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:77",{"_index":3405,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:93",{"_index":3402,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.interactive",{"_index":4018,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.invalidate",{"_index":2101,"title":{},"body":{"injectables/DataService.html":{}}}],["list.loaddebounced",{"_index":2102,"title":{},"body":{"injectables/DataService.html":{}}}],["list.subscribe",{"_index":4021,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.subscribercount",{"_index":2096,"title":{},"body":{"injectables/DataService.html":{}}}],["list/issue",{"_index":2527,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/project",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectIssueListComponent.html":{},"coverage.html":{}}}],["list]=\"linkedissues",{"_index":2654,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["listall",{"_index":2838,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["listallissues",{"_index":2823,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listed",{"_index":864,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["listen",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listeners",{"_index":4286,"title":{},"body":{"interfaces/Positions.html":{}}}],["listening",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listento",{"_index":5104,"title":{},"body":{"components/QueryComponent.html":{}}}],["listento(query",{"_index":5087,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["listfromnode",{"_index":3999,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listid",{"_index":1468,"title":{"interfaces/ListId.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listidenc",{"_index":2084,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["listing",{"_index":2822,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listparams",{"_index":1741,"title":{"interfaces/ListParams.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listparams(params",{"_index":5946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listparams(params)).then(data",{"_index":5929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listprojectcomponents",{"_index":1368,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponents(project",{"_index":1383,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponentsgql",{"_index":1371,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces",{"_index":1369,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces(project",{"_index":1386,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfacesgql",{"_index":1373,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojects",{"_index":5012,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojects(list",{"_index":5021,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojectsgql",{"_index":5014,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listqueries",{"_index":5674,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listqueries[type",{"_index":6001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type",{"_index":6002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type](i",{"_index":6005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueryinput",{"_index":5901,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["listresult",{"_index":1746,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lists",{"_index":1897,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["listset",{"_index":4057,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listsetsub",{"_index":4066,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listtype",{"_index":832,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["listtype.assignees",{"_index":5966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.componentinterfaces",{"_index":2849,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.components",{"_index":1488,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuelocations",{"_index":5955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.issues",{"_index":2826,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuesonlocation",{"_index":4182,"title":{},"body":{"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.labels",{"_index":3449,"title":{},"body":{"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.linkedbyissues",{"_index":5975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.linkedissues",{"_index":2639,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["listtype.projects",{"_index":5923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.searchusers",{"_index":2846,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.timelineitems",{"_index":883,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/variables.html":{}}}],["listtype[ld.type",{"_index":3873,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[parts[1",{"_index":3869,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[type",{"_index":6004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listwrapper",{"_index":4849,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["literal",{"_index":1547,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1501,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["loaddebounced",{"_index":1700,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["loaddebounced(interactive",{"_index":1725,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loaded",{"_index":777,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadifneeded",{"_index":1696,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loadimpl(fut",{"_index":1850,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loading",{"_index":232,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/enumerations.html":{}}}],["loadissuegraphdata",{"_index":2901,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["loadissuegraphdata(projectid",{"_index":2917,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["loadlabels",{"_index":2184,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["loads",{"_index":758,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadsavedpositions",{"_index":4351,"title":{},"body":{"interfaces/Positions.html":{}}}],["loadtimeout",{"_index":1826,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["local",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{}}}],["localissuedata",{"_index":1579,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/typealiases.html":{}}}],["locally",{"_index":5872,"title":{},"body":{"index.html":{}}}],["localset",{"_index":4065,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["localstorage",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('token",{"_index":2498,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["localstorage.getitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4683,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(`zoomtransform_${this.projectstoragekey",{"_index":4686,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(this.projectstoragekey",{"_index":4352,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.removeitem('currentuser",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem('token",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('token",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4332,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(`zoomtransform_${this.projectstoragekey",{"_index":4330,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.projectstoragekey",{"_index":4361,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.userstoragekey",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["located",{"_index":5883,"title":{},"body":{"index.html":{}}}],["location",{"_index":1627,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["location's",{"_index":3533,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location'},{'name",{"_index":149,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["location.component",{"_index":2563,"title":{},"body":{"modules/GraphsModule.html":{}}}],["location.component.html",{"_index":3526,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.scss",{"_index":3525,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts",{"_index":3524,"title":{},"body":{"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["location.component.ts:15",{"_index":3531,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:17",{"_index":3529,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:23",{"_index":3534,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:28",{"_index":3532,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.id",{"_index":2390,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.issues",{"_index":2318,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.name",{"_index":3540,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location/issue",{"_index":2562,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["locationid",{"_index":2293,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["locationids",{"_index":2331,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locationids.filter(id",{"_index":2344,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locations",{"_index":1576,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":3917,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["logged",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["loggin",{"_index":4805,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["logic",{"_index":3445,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["login",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":158,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["login(username",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["login.component.html",{"_index":3879,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":3878,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":157,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["loginurl",{"_index":5919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["lollipop",{"_index":4615,"title":{},"body":{"interfaces/Positions.html":{}}}],["long",{"_index":1750,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":923,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["look",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["loop",{"_index":3788,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["lowercase",{"_index":4949,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["made",{"_index":3933,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["main",{"_index":1802,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"additional-documentation/using-gropius.html":{}}}],["make",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["makecommentid(node",{"_index":967,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["makecomponentfilter(search",{"_index":1506,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["makefilter",{"_index":2840,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":2218,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{}}}],["making",{"_index":5240,"title":{},"body":{"components/SetEditorComponent.html":{},"index.html":{}}}],["manage",{"_index":4863,"title":{},"body":{"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["manageclasssetters",{"_index":2973,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["manageclasssetters(graph",{"_index":2974,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["managed",{"_index":5828,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["managedragbehaviour(graph",{"_index":4362,"title":{},"body":{"interfaces/Positions.html":{}}}],["managedynamictemplateregistry",{"_index":3104,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["managedynamictemplateregistry(graph",{"_index":3105,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["manageeventlisteners(graph",{"_index":4429,"title":{},"body":{"interfaces/Positions.html":{}}}],["managelinkhandles",{"_index":3129,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["managelinkhandles(graph",{"_index":3137,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["management",{"_index":5829,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["manager",{"_index":4631,"title":{},"body":{"interfaces/Positions.html":{}}}],["manages",{"_index":1048,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["managing",{"_index":2970,"title":{"additional-documentation/managing-gropius.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["manipulation",{"_index":3176,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["manually",{"_index":1796,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/typealiases.html":{}}}],["many",{"_index":4524,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["map",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["map(([selectedcategories",{"_index":3066,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["map(({data",{"_index":2600,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["map([...components",{"_index":2327,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map([...location.issues].filter(([category",{"_index":2319,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlgraphcomponents.map(gqlcomponent",{"_index":2377,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlinterfaces.map(gqlinterface",{"_index":2370,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(items",{"_index":3688,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["map(key",{"_index":3257,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["map(result",{"_index":2238,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/TopToolbarComponent.html":{}}}],["map(state",{"_index":2251,"title":{},"body":{"components/FrameComponent.html":{}}}],["map.set(component_context_menu_data",{"_index":1123,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["map.set(encodenodeid(id",{"_index":2043,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mapfromgql",{"_index":2273,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{}}}],["mapfromgql(gqlgraphcomponents",{"_index":2282,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapfromgql(gqlinterfaces",{"_index":2369,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapping",{"_index":2332,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["maps",{"_index":1832,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["margin",{"_index":1192,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mark",{"_index":2705,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["markdown",{"_index":160,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"dependencies.html":{}}}],["markdown/markdown",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["markdowneditorcomponent",{"_index":159,"title":{"components/MarkdownEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdownmodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownpreviewcomponent",{"_index":162,"title":{"components/MarkdownPreviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":4391,"title":{},"body":{"interfaces/Positions.html":{}}}],["markerend",{"_index":1283,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["marks",{"_index":2722,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":269,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mat_dialog_data",{"_index":252,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2524,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matbutton",{"_index":5045,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["matbuttonmodule",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matbuttontogglemodule",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["match",{"_index":2134,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/managing-gropius.html":{}}}],["matcheckboxmodule",{"_index":2543,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matches",{"_index":4950,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["matching",{"_index":220,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["matchstrings",{"_index":4031,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchstrings.push(cursor",{"_index":4037,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchvalidator",{"_index":2129,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["matdialog",{"_index":36,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["matdialogmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matdialogref",{"_index":35,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["matdialogref,@inject(mat_dialog_data",{"_index":253,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["matexpansionmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["math.abs(date.parse(timelineitem.createdat",{"_index":957,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["math.abs(linkhandle.x",{"_index":3154,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.abs(linkhandle.y",{"_index":3155,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.max(0",{"_index":4509,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(1",{"_index":3771,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.max(nodex",{"_index":4741,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(nodey",{"_index":4743,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(this.height",{"_index":1166,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(this.width",{"_index":1164,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(y",{"_index":4468,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodex",{"_index":4737,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodey",{"_index":4739,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.random",{"_index":1533,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.random().tostring",{"_index":1020,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["math.random().tostring(36",{"_index":1601,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["math.round((+now",{"_index":5463,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(hours",{"_index":5467,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(minutes",{"_index":5466,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.sqrt",{"_index":3357,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["math.sqrt(0.5",{"_index":3367,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["maticonmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["maticonregistry",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matlistmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matmenumodule",{"_index":2550,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matpaginator",{"_index":3432,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matpaginatormodule",{"_index":2525,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matprogressspinnermodule",{"_index":2559,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matselectmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsidenavmodule",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matslidetogglemodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsort",{"_index":3437,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortable",{"_index":3441,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortmodule",{"_index":2532,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matspinner",{"_index":2560,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabledatasource",{"_index":3429,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattabledatasource(data",{"_index":3471,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mattabledatasource(this.mockusers",{"_index":4926,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattablemodule",{"_index":2521,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabsmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattoolbarmodule",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattooltipmodule",{"_index":2557,"title":{},"body":{"modules/GraphsModule.html":{}}}],["max",{"_index":84,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["max_distance_connected",{"_index":3698,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maximum",{"_index":3717,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maxopened",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":1810,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{}}}],["maybelocallist",{"_index":5902,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mayer",{"_index":6085,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["media",{"_index":2743,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{}}}],["member",{"_index":102,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["members'},{'name",{"_index":175,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["members.component",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["members.component.html",{"_index":4871,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.scss",{"_index":4870,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.ts",{"_index":4862,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members.component.ts:115",{"_index":4886,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:119",{"_index":4877,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:125",{"_index":4880,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:26",{"_index":4911,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:27",{"_index":4913,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:28",{"_index":4918,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:29",{"_index":4917,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:30",{"_index":4916,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:31",{"_index":4915,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:32",{"_index":4919,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":4896,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:35",{"_index":4897,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:38",{"_index":4910,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:47",{"_index":4895,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:51",{"_index":4875,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:77",{"_index":4882,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:97",{"_index":4883,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["memberslink",{"_index":5350,"title":{},"body":{"components/SideNavComponent.html":{}}}],["memory",{"_index":1801,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mentioned",{"_index":5839,"title":{},"body":{"index.html":{}}}],["menu",{"_index":1049,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["menu.component",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["menu.component.html",{"_index":1052,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.scss",{"_index":1051,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts",{"_index":1047,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menu.component.ts:117",{"_index":1078,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:119",{"_index":1075,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:121",{"_index":1076,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:134",{"_index":1059,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:136",{"_index":1073,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:166",{"_index":1064,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:175",{"_index":1060,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":1200,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts:60",{"_index":1201,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu/component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuclick",{"_index":5541,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["menutitle",{"_index":5351,"title":{},"body":{"components/SideNavComponent.html":{}}}],["merge",{"_index":2041,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["message",{"_index":2484,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/UserNotifyService.html":{}}}],["message.startswith",{"_index":5200,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["message.substring(1",{"_index":5201,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["messages",{"_index":1029,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["met",{"_index":6063,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["method",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{}}}],["mgmt",{"_index":2894,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["mico",{"_index":4281,"title":{},"body":{"interfaces/Positions.html":{}}}],["middle",{"_index":2610,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["milliseconds",{"_index":1755,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":82,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["min_distance_connected",{"_index":3699,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_edge",{"_index":3700,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_not_connected",{"_index":3701,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_height",{"_index":1130,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["min_width",{"_index":1128,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minheight",{"_index":1119,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minimap",{"_index":2975,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["minimap.addedge(event.detail.edge",{"_index":4454,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.addnode(node",{"_index":4451,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.calculatelinkhandlesforedge",{"_index":3149,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["minimap.completerender",{"_index":4548,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removeedge(event.detail.edge",{"_index":4455,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removenode(node",{"_index":4453,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.setedgeclass",{"_index":2995,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.setnodeclass",{"_index":2988,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.updategraphpositions",{"_index":4551,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.updatenodeclasses",{"_index":4550,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.zoomtoboundingbox",{"_index":4549,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimum",{"_index":3719,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["minute",{"_index":5478,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minutes",{"_index":5462,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minwidth",{"_index":1117,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["mirrors",{"_index":2001,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":5792,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitteleuropäische",{"_index":5440,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["mock",{"_index":4923,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["mocked",{"_index":226,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["mockmembers",{"_index":4940,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mockusers",{"_index":4867,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mode",{"_index":5324,"title":{},"body":{"components/SettingsDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["modeicon",{"_index":5325,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["models",{"_index":5841,"title":{},"body":{"index.html":{}}}],["module",{"_index":324,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}},"body":{"modules/GraphsModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["modules",{"_index":326,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["monaco",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"dependencies.html":{}}}],["monacoeditormodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["monacoeditormodule.forroot",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":5472,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["months",{"_index":5457,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["more",{"_index":938,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["more:can",{"_index":5874,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":5308,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["moritz",{"_index":6082,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["mouseevent",{"_index":1163,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/RegisterComponent.html":{}}}],["move",{"_index":3507,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["movechildrenalonggoup",{"_index":3205,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["moved",{"_index":4398,"title":{},"body":{"interfaces/Positions.html":{}}}],["movement",{"_index":3729,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["moves",{"_index":1977,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["movex",{"_index":4508,"title":{},"body":{"interfaces/Positions.html":{}}}],["movey",{"_index":4511,"title":{},"body":{"interfaces/Positions.html":{}}}],["moz",{"_index":4853,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["much",{"_index":5815,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":2156,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["multisourcelist",{"_index":3951,"title":{"classes/MultiSourceList.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["multisourcelist(this.data.listall",{"_index":4076,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["multisourcelist.fromsinglelist(this.data.listall",{"_index":4079,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["mutate",{"_index":1462,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{}}}],["mutation",{"_index":1311,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/RegisterComponent.html":{}}}],["mutationinputdata",{"_index":4243,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["mutations",{"_index":2073,"title":{},"body":{"injectables/DataService.html":{},"injectables/IssueStoreService.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["mutations(queries",{"_index":2089,"title":{},"body":{"injectables/DataService.html":{}}}],["mutually",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["n",{"_index":4001,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["namedoptions",{"_index":2436,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["nameformatvalidator",{"_index":727,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["names",{"_index":2132,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["namevalidator",{"_index":728,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateProjectDialogComponent.html":{}}}],["narrow",{"_index":2746,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLocationComponent.html":{}}}],["nativeelement",{"_index":4293,"title":{},"body":{"interfaces/Positions.html":{}}}],["nav",{"_index":4856,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":192,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nav.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":5346,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.scss",{"_index":5345,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":5341,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":5355,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:18",{"_index":5359,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:19",{"_index":5361,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:20",{"_index":5356,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:21",{"_index":5357,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:22",{"_index":5354,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:24",{"_index":5363,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:25",{"_index":5362,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:26",{"_index":5360,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":5860,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["navigates",{"_index":3400,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{}}}],["navigating",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["navigation",{"_index":2211,"title":{},"body":{"components/FrameComponent.html":{},"components/SideNavComponent.html":{}}}],["navigationend",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["nbsp",{"_index":2735,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp",{"_index":5199,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["nbsp;&sdot",{"_index":2738,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nd",{"_index":3854,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nd.id",{"_index":3857,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nearest",{"_index":3237,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["necessary",{"_index":2000,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"miscellaneous/typealiases.html":{}}}],["need",{"_index":841,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"index.html":{}}}],["needed",{"_index":1775,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{}}}],["needs",{"_index":5885,"title":{},"body":{"index.html":{}}}],["network",{"_index":2465,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["networkerror",{"_index":2481,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.name}\\n${networkerror.message}\\n${networkerror.stack",{"_index":2490,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.status",{"_index":2491,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerrortoast",{"_index":2467,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1829,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["new",{"_index":87,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["newdata",{"_index":4359,"title":{},"body":{"interfaces/Positions.html":{}}}],["newest",{"_index":1857,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{}}}],["newly",{"_index":3030,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["newposition",{"_index":3233,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.x",{"_index":3239,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.y",{"_index":3240,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newsourceset",{"_index":4011,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(source",{"_index":4015,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(this.spec.listfromnode(nodeid",{"_index":4013,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.has(source",{"_index":4024,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newvalue",{"_index":5259,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["next",{"_index":792,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"index.html":{}}}],["nextpage",{"_index":1984,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ng",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":870,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["ngmodel",{"_index":3050,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["ngmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ngonchanges(changes",{"_index":5257,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ngondestroy",{"_index":800,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ngoninit",{"_index":60,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["ngoptionhighlightmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngselectmodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngx",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/MarkdownEditorComponent.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["ngzorroantdmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["nice",{"_index":6046,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["noce",{"_index":2986,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["node",{"_index":165,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["node.component",{"_index":2553,"title":{},"body":{"modules/GraphsModule.html":{}}}],["node.component.ts",{"_index":757,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:18",{"_index":776,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:20",{"_index":768,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:21",{"_index":781,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:23",{"_index":783,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:24",{"_index":767,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.dataaspromise().then(data",{"_index":1494,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node.id",{"_index":969,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["node.id.tostring",{"_index":4492,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.id}__issue",{"_index":1268,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["node.invalidate",{"_index":1492,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.issuecount",{"_index":4522,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupcontainer",{"_index":4643,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupnodeids.size",{"_index":4726,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.load",{"_index":1493,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.position",{"_index":4442,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.type",{"_index":2984,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["node.x",{"_index":4445,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.y",{"_index":4446,"title":{},"body":{"interfaces/Positions.html":{}}}],["node?.id",{"_index":2028,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node]'},{'name",{"_index":107,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nodecache",{"_index":1923,"title":{"classes/NodeCache.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodecache(queries",{"_index":2087,"title":{},"body":{"injectables/DataService.html":{}}}],["nodeclasssetter",{"_index":2982,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["nodeclickcontextmenuhastype(node",{"_index":4485,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickissuefolder(node",{"_index":4516,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickmanyissues(rootnode",{"_index":4538,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickoneissue(rootid",{"_index":4526,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodedeleted",{"_index":1152,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{}}}],["nodedetails",{"_index":1142,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailscomponent",{"_index":164,"title":{"components/NodeDetailsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailspagecomponent",{"_index":167,"title":{"components/NodeDetailsPageComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailsready",{"_index":1053,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailstype",{"_index":1092,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/enumerations.html":{}}}],["nodedetailstype.component",{"_index":4179,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodedetailstype.interface",{"_index":4190,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodeid",{"_index":775,"title":{"interfaces/NodeId.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodeid[]).length",{"_index":5264,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["nodeid`s",{"_index":3853,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeidenc",{"_index":1742,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["nodelist",{"_index":4751,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodequeries",{"_index":5675,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodequeries[type",{"_index":6006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequeries[type](i",{"_index":6008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequery",{"_index":4172,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["nodequeryinput",{"_index":5903,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nodes",{"_index":1237,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodes.get(edge.source).connectto(nodes.get(edge.target",{"_index":4749,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(edge.target).connectto(nodes.get(edge.source",{"_index":4750,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(node.id",{"_index":4754,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.source",{"_index":4747,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.target",{"_index":4748,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.length",{"_index":3778,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodes.set(node.id",{"_index":4745,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.ts",{"_index":1204,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nodes[0",{"_index":3786,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodesub",{"_index":762,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["nodetype",{"_index":833,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{}}}],["nodetype.component",{"_index":1259,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodetype.componentinterface",{"_index":3456,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.interface",{"_index":1264,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.interfaceconsumer",{"_index":1290,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.issue",{"_index":1608,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.issuecomment",{"_index":968,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["nodetype.issuegroupcontainer",{"_index":1269,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.label",{"_index":5934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodetype.project",{"_index":2824,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.root",{"_index":3858,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.user",{"_index":3860,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype[nd.type",{"_index":3856,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[parts[0",{"_index":3844,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[typename",{"_index":3835,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetypefromtypename",{"_index":1743,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["nodetypefromtypename(item.__typename",{"_index":4092,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["nodetypefromtypename(node.__typename",{"_index":2029,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["nodetypefromtypename(typename",{"_index":3834,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeupdatedcallbackfn",{"_index":1093,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nodex",{"_index":4728,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodey",{"_index":4730,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodisplay",{"_index":5553,"title":{},"body":{"components/UserItemComponent.html":{}}}],["non",{"_index":1618,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["none",{"_index":2895,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normal",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{}}}],["normalize",{"_index":5607,"title":{},"body":{"classes/Vector.html":{}}}],["normalized",{"_index":5635,"title":{},"body":{"classes/Vector.html":{}}}],["north",{"_index":4263,"title":{},"body":{"interfaces/Positions.html":{}}}],["not(.has",{"_index":5558,"title":{},"body":{"components/UserItemComponent.html":{}}}],["notation",{"_index":4616,"title":{},"body":{"interfaces/Positions.html":{}}}],["note",{"_index":70,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["nothing",{"_index":4810,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["nothing(e",{"_index":4816,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["notification",{"_index":3096,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify",{"_index":983,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify.notifyerror('the",{"_index":5374,"title":{},"body":{"components/SideNavComponent.html":{}}}],["notify.service",{"_index":1009,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["notify.service.ts",{"_index":5560,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notify.service.ts:23",{"_index":5564,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:33",{"_index":5566,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:45",{"_index":5571,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify/user",{"_index":1008,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notifyerror",{"_index":5561,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyerror(message",{"_index":5565,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo",{"_index":5562,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo(message",{"_index":5570,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyservice",{"_index":4067,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["now",{"_index":754,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{}}}],["now.getfullyear",{"_index":5460,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["now.getmonth",{"_index":5458,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["nowrap",{"_index":5206,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["npm",{"_index":5859,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["nth",{"_index":5316,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["null",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":1957,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["number",{"_index":1062,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nz",{"_index":4848,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["nz_i18n",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["nz_icons",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["obervable",{"_index":3069,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["object",{"_index":1770,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(ccimsicons",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(antdesignicons).map(key",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(issuecategory",{"_index":3256,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["object.keys(issuecategory).foreach(key",{"_index":4653,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(predicates).filter(id",{"_index":2857,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(predicates).length",{"_index":2815,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(this.savedpositions.nodes).length",{"_index":4563,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(this.validateform.controls",{"_index":5185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(this.validateform.controls).foreach(controlkey",{"_index":3902,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(issuecategory",{"_index":2947,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["objects",{"_index":1307,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/managing-gropius.html":{}}}],["objkey",{"_index":4033,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["observable",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}}}],["observable#subscribe",{"_index":1782,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["observable((observer",{"_index":5175,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observables",{"_index":3171,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["observe",{"_index":5122,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["observed",{"_index":3443,"title":{},"body":{"components/IssueListComponent.html":{}}}],["observer",{"_index":5166,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.complete",{"_index":5182,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next(null",{"_index":5181,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next({error",{"_index":5179,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observers",{"_index":2069,"title":{},"body":{"injectables/DataService.html":{}}}],["obtain",{"_index":1678,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["occurred",{"_index":5567,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["occurs",{"_index":5827,"title":{},"body":{"index.html":{}}}],["oct",{"_index":5436,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["offer",{"_index":2339,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offered",{"_index":2570,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offeredby",{"_index":2360,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offeredbyid",{"_index":1260,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["offering",{"_index":2333,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["offeringcomponentid",{"_index":2589,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offers",{"_index":4866,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["offset",{"_index":1068,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["offsetx",{"_index":1112,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["offsety",{"_index":1113,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["old",{"_index":4782,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["onaddclick",{"_index":3390,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["oncancelclick",{"_index":4134,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["once",{"_index":2709,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["onchanges",{"_index":5218,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["onclick",{"_index":5067,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["onconfirmclick",{"_index":1453,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["onconfirmclick(name",{"_index":1458,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["oncreate",{"_index":1565,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["oncreateedge",{"_index":4377,"title":{},"body":{"interfaces/Positions.html":{}}}],["ondeleteclick",{"_index":2139,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{}}}],["ondestroy",{"_index":760,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ondialogapplychangeset",{"_index":5266,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogcreateitem",{"_index":5268,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogdeleteitem",{"_index":5272,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogedititem",{"_index":5270,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondraggededgetargetchanged",{"_index":4399,"title":{},"body":{"interfaces/Positions.html":{}}}],["one",{"_index":808,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["onedgeadd",{"_index":4402,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgedrop",{"_index":4412,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgeremove",{"_index":4426,"title":{},"body":{"interfaces/Positions.html":{}}}],["oneditclick",{"_index":4135,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["oneditfinished",{"_index":5393,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["onerror",{"_index":2446,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["onerror(({graphqlerrors",{"_index":2480,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["ones",{"_index":6026,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["onlabelcancelclick",{"_index":1454,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["onminimaprender(minimap",{"_index":4543,"title":{},"body":{"interfaces/Positions.html":{}}}],["onmousemove(event",{"_index":1162,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onmouseup",{"_index":1160,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onnoclick",{"_index":236,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["onnoclick(showconfirmdialog",{"_index":1570,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["onnodeclick",{"_index":4469,"title":{},"body":{"interfaces/Positions.html":{}}}],["onnodeupdate",{"_index":4252,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onnodeupdate(deleted",{"_index":4254,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onokclick",{"_index":237,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onokclick(name",{"_index":1417,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onpagechange",{"_index":4874,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["onpagechange(event",{"_index":4884,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["onsaveclick",{"_index":4136,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["onto",{"_index":3170,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["opacity",{"_index":2666,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["open",{"_index":1097,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["open(parent",{"_index":1104,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["openaccesstokensettings",{"_index":5326,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opencreatecomponentdialog",{"_index":4766,"title":{},"body":{"interfaces/Positions.html":{}}}],["opencreateprojectdialog",{"_index":4811,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["opened",{"_index":2736,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["opening",{"_index":4416,"title":{},"body":{"interfaces/Positions.html":{}}}],["openprofilesettings",{"_index":5327,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opens",{"_index":1584,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["opensettingsdialog",{"_index":5539,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["operation",{"_index":2482,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["operations",{"_index":3555,"title":{},"body":{"injectables/IssueStoreService.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["optimized",{"_index":4678,"title":{},"body":{"interfaces/Positions.html":{}}}],["option",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{},"additional-documentation/using-gropius.html":{}}}],["option2",{"_index":52,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["optionally",{"_index":5568,"title":{},"body":{"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["options",{"_index":2831,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1239,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{}}}],["ordered",{"_index":1899,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["original",{"_index":4381,"title":{},"body":{"interfaces/Positions.html":{}}}],["originally",{"_index":3891,"title":{},"body":{"components/LoginComponent.html":{}}}],["originates",{"_index":4385,"title":{},"body":{"interfaces/Positions.html":{}}}],["originating",{"_index":4663,"title":{},"body":{"interfaces/Positions.html":{}}}],["originx",{"_index":1107,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["originy",{"_index":1109,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["othernode",{"_index":3756,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.id",{"_index":3759,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.padding",{"_index":3769,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.position.subtract(this.position",{"_index":3764,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernodesvisited",{"_index":3755,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["others",{"_index":6088,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["otherwise",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["out",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueIconComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"overview.html":{}}}],["outlet",{"_index":2233,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata",{"_index":2254,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata.animation",{"_index":2255,"title":{},"body":{"components/FrameComponent.html":{}}}],["output",{"_index":2820,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["outputs",{"_index":2781,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["outside",{"_index":5623,"title":{},"body":{"classes/Vector.html":{}}}],["over",{"_index":3758,"title":{},"body":{"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"index.html":{}}}],["overflow",{"_index":1197,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["overlay",{"_index":1084,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{}}}],["overlayref",{"_index":1085,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayx",{"_index":1110,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayy",{"_index":1111,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["override",{"_index":5227,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["overview",{"_index":4838,"title":{"overview.html":{}},"body":{"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{},"overview.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["overview'},{'name",{"_index":177,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["overview.component",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":4959,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.scss",{"_index":4958,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts",{"_index":4956,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:23",{"_index":4966,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:25",{"_index":4965,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":4964,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":4961,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:47",{"_index":4963,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:55",{"_index":4962,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview/project",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overviewlink",{"_index":5352,"title":{},"body":{"components/SideNavComponent.html":{}}}],["overwriting",{"_index":2035,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["owner",{"_index":4957,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["p",{"_index":1738,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/TimelineItemComponent.html":{},"index.html":{}}}],["package",{"_index":5756,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":3768,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["padding",{"_index":1171,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["padding.these",{"_index":4698,"title":{},"body":{"interfaces/Positions.html":{}}}],["padding_component",{"_index":3702,"title":{},"body":{"classes/LayoutNode.html":{}}}],["padding_interface",{"_index":3703,"title":{},"body":{"classes/LayoutNode.html":{}}}],["paddingx",{"_index":4707,"title":{},"body":{"interfaces/Positions.html":{}}}],["paddingy",{"_index":4711,"title":{},"body":{"interfaces/Positions.html":{}}}],["page",{"_index":638,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["page.component",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":4251,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.scss",{"_index":4250,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts",{"_index":4249,"title":{},"body":{"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":4257,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:11",{"_index":4256,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:12",{"_index":4253,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:34",{"_index":4255,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page/node",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["pageevent",{"_index":4885,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagefill",{"_index":4803,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pageinfo",{"_index":1749,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":4944,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagesizes",{"_index":1655,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["pagesizes]=\"[10",{"_index":2655,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["paginated",{"_index":4864,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagination",{"_index":1956,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pagination/sorting/filtering",{"_index":3478,"title":{},"body":{"components/IssueListComponent.html":{}}}],["paginator",{"_index":1652,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["paginator'},{'name",{"_index":124,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["paginator.component",{"_index":2537,"title":{},"body":{"modules/GraphsModule.html":{}}}],["paginator.component.html",{"_index":1654,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":1653,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":1648,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:14",{"_index":1656,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts:16",{"_index":1658,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator/cursor",{"_index":1647,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"modules/GraphsModule.html":{},"coverage.html":{}}}],["paginatormodule",{"_index":4873,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pairs",{"_index":2979,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["panel",{"_index":5515,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["param",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["parameter",{"_index":1808,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["parameterize",{"_index":6070,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["params",{"_index":1702,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["params(p",{"_index":1820,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["params.filter",{"_index":3489,"title":{},"body":{"components/IssueListComponent.html":{}}}],["parent",{"_index":1071,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/NodeId.html":{}}}],["parent}__${issuecategory[key",{"_index":3258,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__bug",{"_index":3264,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__feature",{"_index":3265,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__undecided",{"_index":3263,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parsed",{"_index":4350,"title":{},"body":{"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["parsing",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["part",{"_index":5237,"title":{},"body":{"components/SetEditorComponent.html":{},"index.html":{}}}],["part).join",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/IssueIconComponent.html":{}}}],["partial",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["participants",{"_index":2844,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":3842,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"index.html":{}}}],["parts[1",{"_index":3845,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["pass",{"_index":3073,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SetEditorComponent.html":{}}}],["passed",{"_index":1734,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TopToolbarComponent.html":{}}}],["passes",{"_index":2215,"title":{},"body":{"components/FrameComponent.html":{}}}],["password",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"additional-documentation/using-gropius.html":{}}}],["passwords",{"_index":5195,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pasttime",{"_index":5455,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getfullyear",{"_index":5461,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getmonth",{"_index":5459,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["path",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":752,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["pcount",{"_index":1917,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pcursor",{"_index":1916,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pencheva",{"_index":6081,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["pendingcreate",{"_index":4808,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["per",{"_index":1662,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["perceived",{"_index":3353,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["perform",{"_index":4841,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["performed",{"_index":811,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["perpendicularclockwise",{"_index":5608,"title":{},"body":{"classes/Vector.html":{}}}],["perpendicularcounterclockwise",{"_index":5609,"title":{},"body":{"classes/Vector.html":{}}}],["persisted",{"_index":6072,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["persistent",{"_index":6038,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["personal",{"_index":66,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["pertain",{"_index":6052,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["pertaining",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["pfeffer",{"_index":6083,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["pfilter",{"_index":1918,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pforward",{"_index":1919,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["phone",{"_index":4472,"title":{},"body":{"interfaces/Positions.html":{}}}],["pick",{"_index":2357,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{},"components/ProjectListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["picker",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"components/IssueFilterComponent.html":{},"dependencies.html":{}}}],["picture",{"_index":5854,"title":{},"body":{"index.html":{}}}],["pictures",{"_index":6016,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["piece",{"_index":1767,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pipe",{"_index":2237,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["pipe(first",{"_index":3908,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(response",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":4356,"title":{},"body":{"interfaces/Positions.html":{}}}],["place",{"_index":3782,"title":{},"body":{"classes/LayoutNode.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["placeholder",{"_index":4129,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["places",{"_index":3248,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["please",{"_index":5194,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pluralize",{"_index":5430,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralize(n",{"_index":5449,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralized",{"_index":5452,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pnodes",{"_index":1922,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["point",{"_index":3222,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"index.html":{}}}],["point.x",{"_index":4605,"title":{},"body":{"interfaces/Positions.html":{}}}],["point.y",{"_index":4608,"title":{},"body":{"interfaces/Positions.html":{}}}],["pointer",{"_index":3523,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pointing",{"_index":3741,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["points",{"_index":5344,"title":{},"body":{"components/SideNavComponent.html":{},"classes/Vector.html":{}}}],["pop",{"_index":6022,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["popup",{"_index":6020,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["portalinjector",{"_index":1088,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalinjector(this.injector",{"_index":1124,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["pos",{"_index":1106,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position",{"_index":1066,"title":{"interfaces/Position.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["position.withpositions([pos",{"_index":1114,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position.x",{"_index":4423,"title":{},"body":{"interfaces/Positions.html":{}}}],["position.y",{"_index":4424,"title":{},"body":{"interfaces/Positions.html":{}}}],["positionclass",{"_index":2470,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["positioning",{"_index":4443,"title":{},"body":{"interfaces/Positions.html":{}}}],["positions",{"_index":4260,"title":{"interfaces/Positions.html":{}},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["positionstrategy",{"_index":1121,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["positionx",{"_index":3706,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["positiony",{"_index":3707,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["possible",{"_index":2827,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/variables.html":{}}}],["possibly",{"_index":2829,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["practice",{"_index":2005,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pre",{"_index":3261,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/MarkdownEditorComponent.html":{}}}],["pred",{"_index":2891,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicate",{"_index":2790,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["predicatecount",{"_index":2769,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates",{"_index":2770,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predicates[id].ifempty",{"_index":2882,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[id].label",{"_index":2881,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[type].label",{"_index":2879,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicatevalues",{"_index":2771,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["prepare",{"_index":892,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["prepareddata",{"_index":1722,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["prepareissuearray",{"_index":3391,"title":{},"body":{"components/IssueListComponent.html":{}}}],["prepareroute",{"_index":2225,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepareroute(outlet",{"_index":2230,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepares",{"_index":891,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{}}}],["preparetimelineitems(items",{"_index":893,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["presence",{"_index":2805,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["present",{"_index":1869,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["presents",{"_index":5855,"title":{},"body":{"index.html":{}}}],["preservewhitespaces",{"_index":3945,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["pressed",{"_index":4474,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["presumes",{"_index":4648,"title":{},"body":{"interfaces/Positions.html":{}}}],["prevent",{"_index":3783,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["prevents",{"_index":4839,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["preview",{"_index":3942,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["preview'},{'name",{"_index":163,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["preview.component",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["preview.component.html",{"_index":3947,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.scss",{"_index":3946,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.ts",{"_index":3944,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:17",{"_index":3949,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview/markdown",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":1981,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["previousboundingbox",{"_index":4693,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.height",{"_index":4702,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.width",{"_index":4700,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.x",{"_index":4713,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.y",{"_index":4714,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingboxasstring",{"_index":4682,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousitems",{"_index":2855,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previousitems.includes(id",{"_index":2858,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previouslyhadpagecontents",{"_index":1921,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["prevpage",{"_index":1982,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["primary",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["primary.segments",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary.segments.length",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary_outlet",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments[0].path",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primer/css",{"_index":5773,"title":{},"body":{"dependencies.html":{}}}],["prior",{"_index":1936,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pristine",{"_index":5149,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":59,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["problem",{"_index":5837,"title":{},"body":{"index.html":{}}}],["problems",{"_index":5842,"title":{},"body":{"index.html":{}}}],["process",{"_index":948,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"index.html":{}}}],["processing",{"_index":4927,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["product",{"_index":5628,"title":{},"body":{"classes/Vector.html":{}}}],["production",{"_index":5914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":169,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["profilesettingsdialogcomponent",{"_index":168,"title":{"components/ProfileSettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":101,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["project's",{"_index":4284,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["project.description",{"_index":4970,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["project.name",{"_index":4845,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["project.node.users.nodes.foreach(u",{"_index":4924,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["project:(todo",{"_index":5853,"title":{},"body":{"index.html":{}}}],["project_${this.projectid",{"_index":4324,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectfilter",{"_index":5001,"title":{},"body":{"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{}}}],["projectheadercomponent",{"_index":170,"title":{"components/ProjectHeaderComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectid",{"_index":865,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectissuelistcomponent",{"_index":172,"title":{"components/ProjectIssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectlistcomponent",{"_index":173,"title":{"components/ProjectListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectmemberscomponent",{"_index":174,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["projectname",{"_index":4789,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["projectnameedited",{"_index":4774,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectnameedited(saved",{"_index":4778,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectoverviewcomponent",{"_index":176,"title":{"components/ProjectOverviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/QueriesService.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["projects.service",{"_index":5035,"title":{},"body":{"injectables/QueriesService.html":{}}}],["projects/:id",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["projectsservice",{"_index":5009,"title":{"injectables/ProjectsService.html":{}},"body":{"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["projectstoragekey",{"_index":4304,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectstore",{"_index":4815,"title":{},"body":{"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectstoreservice",{"_index":539,"title":{"injectables/ProjectStoreService.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["prolong",{"_index":1706,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promise",{"_index":1712,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1843,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["promise.all(promises",{"_index":1622,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promise.reject(new",{"_index":5996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve",{"_index":5598,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise.resolve(this.current",{"_index":1842,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promises",{"_index":1610,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promises.push(this.dataservice.mutations.linkissue(math.random().tostring",{"_index":1612,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promisifyapollofetch",{"_index":1390,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["promisifyapollofetch(f",{"_index":5126,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["promisifyapollofetch(this.qcurrentuser.fetch",{"_index":5602,"title":{},"body":{"injectables/UsersService.html":{}}}],["promisifyapollofetch(this.qgetcomponent.fetch",{"_index":1394,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetinterface.fetch",{"_index":1395,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetproject.fetch",{"_index":5024,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qlistprojectcomponents.fetch",{"_index":1392,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojectinterfaces.fetch",{"_index":1393,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojects.fetch",{"_index":5023,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qsearchusers.fetch",{"_index":5599,"title":{},"body":{"injectables/UsersService.html":{}}}],["prop",{"_index":4279,"title":{},"body":{"interfaces/Positions.html":{}}}],["propagate",{"_index":5831,"title":{},"body":{"index.html":{}}}],["propagates",{"_index":2068,"title":{},"body":{"injectables/DataService.html":{}}}],["propagation",{"_index":5850,"title":{},"body":{"index.html":{}}}],["proper",{"_index":3444,"title":{},"body":{"components/IssueListComponent.html":{}}}],["properly",{"_index":4623,"title":{},"body":{"interfaces/Positions.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["property",{"_index":1778,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["protected",{"_index":1811,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["provide",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["provided",{"_index":230,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{},"additional-documentation/using-gropius.html":{}}}],["providedefaultapollo",{"_index":2458,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providedefaultapollo(httplink",{"_index":2497,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["providedin",{"_index":552,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{}}}],["providepublicapollo",{"_index":2457,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providepublicapollo(httplink",{"_index":2510,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["provider",{"_index":1419,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["providers",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["provides",{"_index":224,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["providing",{"_index":4415,"title":{},"body":{"interfaces/Positions.html":{}}}],["prvider",{"_index":3413,"title":{},"body":{"components/IssueListComponent.html":{}}}],["ps",{"_index":556,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/StateService.html":{}}}],["ps.getbasicproject(this.router.parseurl(event.url).root?.children[primary_outlet].segments[1].path",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["psetparamsnoupdate",{"_index":1814,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ptotalcount",{"_index":1920,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["publicclient",{"_index":2512,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["publicclientname",{"_index":5133,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["purely",{"_index":6037,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["purpose",{"_index":2452,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":2744,"title":{},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["px",{"_index":1145,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["q",{"_index":6000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qcurrentuser",{"_index":5583,"title":{},"body":{"injectables/UsersService.html":{}}}],["qgetcomponent",{"_index":1374,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetinterface",{"_index":1375,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetproject",{"_index":5015,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qlistprojectcomponents",{"_index":1378,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojectinterfaces",{"_index":1372,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojects",{"_index":5018,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qsearchusers",{"_index":5586,"title":{},"body":{"injectables/UsersService.html":{}}}],["queries",{"_index":2015,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["queries/queries.service",{"_index":1745,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["queriesservice",{"_index":1744,"title":{"injectables/QueriesService.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"injectables/QueriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":179,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query.component.html",{"_index":5069,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.component.scss",{"_index":5070,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.subscribe((value",{"_index":5090,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query/mutation",{"_index":6067,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["querybodydirective",{"_index":208,"title":{"directives/QueryBodyDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querybuttondirective",{"_index":210,"title":{"directives/QueryButtonDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponent",{"_index":178,"title":{"components/QueryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponentstate",{"_index":5046,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["querycomponentstate.error",{"_index":5093,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.loading",{"_index":5076,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.ready",{"_index":5082,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querylist",{"_index":1747,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querylist(queries",{"_index":1924,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["querylistparams",{"_index":1384,"title":{"interfaces/QueryListParams.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querynode",{"_index":1748,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querynode(queries",{"_index":1894,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["queryparamfilter",{"_index":3382,"title":{},"body":{"components/IssueListComponent.html":{}}}],["queryparams",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["querystate",{"_index":5059,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["quick",{"_index":3996,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["quicker",{"_index":69,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{}}}],["quickscore",{"_index":3995,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quickscore(matchstrings.join",{"_index":4038,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quot;(newest",{"_index":2943,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;test&quot",{"_index":2942,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;{{data.verificationname}}&quot",{"_index":5202,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["r",{"_index":1531,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["r.matches",{"_index":4327,"title":{},"body":{"interfaces/Positions.html":{}}}],["radius",{"_index":1174,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ran",{"_index":5098,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["randomize",{"_index":1545,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["randomizecolor",{"_index":1455,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["randomized",{"_index":3762,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["randomizes",{"_index":1467,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["rank",{"_index":3969,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ranking",{"_index":3987,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ratio",{"_index":4502,"title":{},"body":{"interfaces/Positions.html":{}}}],["raw",{"_index":1483,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["re",{"_index":1787,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["reactiveformsmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["read",{"_index":779,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphQLModule.html":{},"components/SetEditorComponent.html":{}}}],["readonly",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["ready",{"_index":5047,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["really",{"_index":1027,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["reasonable",{"_index":4082,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["recalculates",{"_index":5156,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recoverable",{"_index":1619,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["rect",{"_index":4269,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.x",{"_index":4704,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmax",{"_index":4740,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmin",{"_index":4736,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.y",{"_index":4710,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymax",{"_index":4742,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymin",{"_index":4738,"title":{},"body":{"interfaces/Positions.html":{}}}],["red",{"_index":3094,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["redirect",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirected",{"_index":5154,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirects",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":3890,"title":{},"body":{"components/LoginComponent.html":{}}}],["redraw",{"_index":3074,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["redrawbycloseofcomponentdetails",{"_index":4309,"title":{},"body":{"interfaces/Positions.html":{}}}],["reduce",{"_index":4977,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["reduces",{"_index":4945,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["reducing",{"_index":2066,"title":{},"body":{"injectables/DataService.html":{}}}],["redundant",{"_index":1990,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ref",{"_index":1115,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["ref.attach(new",{"_index":1125,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["reference",{"_index":1098,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["references",{"_index":4290,"title":{},"body":{"interfaces/Positions.html":{}}}],["referring",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["refers",{"_index":3535,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["reflect",{"_index":4282,"title":{},"body":{"interfaces/Positions.html":{}}}],["reflected",{"_index":6031,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["refresh",{"_index":1538,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["refreshes",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["regarding",{"_index":5880,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":3775,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["register",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":181,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["register.component.css",{"_index":5130,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":5131,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":180,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["registering",{"_index":2461,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["registerlocaledata",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(en",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["registerusergql",{"_index":5140,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruserinput",{"_index":5167,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerusermutation",{"_index":5139,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":2508,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["registry",{"_index":3103,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{}}}],["registry.service",{"_index":4278,"title":{},"body":{"interfaces/Positions.html":{}}}],["registry.service.ts",{"_index":3102,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:21",{"_index":3106,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["registry/issue",{"_index":3100,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["regular",{"_index":2933,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["reject",{"_index":1844,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["reject(error",{"_index":1849,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["related",{"_index":2993,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["relatedfolder",{"_index":4672,"title":{},"body":{"interfaces/Positions.html":{}}}],["relatedfolders",{"_index":2302,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["relatedfolders.getvalue(folder).concat(targetfolders",{"_index":2413,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedfolders.setvalue(folder",{"_index":2412,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedto",{"_index":1296,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relationedge",{"_index":1217,"title":{"interfaces/RelationEdge.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["relations",{"_index":3028,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["relative",{"_index":1070,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["relativepositionchanged",{"_index":3208,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativepositionchanged(group",{"_index":3219,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativerotation",{"_index":1285,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["relativeto",{"_index":4477,"title":{},"body":{"interfaces/Positions.html":{}}}],["relevance",{"_index":3970,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["reload",{"_index":1491,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["reload$]).pipe",{"_index":3186,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["reloaded",{"_index":1764,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["reloadlistset",{"_index":5249,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["reloadonmouseup",{"_index":4313,"title":{},"body":{"interfaces/Positions.html":{}}}],["reloadprojects",{"_index":4812,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["reloads",{"_index":4540,"title":{},"body":{"interfaces/Positions.html":{}}}],["remaining",{"_index":916,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["remember",{"_index":1692,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["remove",{"_index":183,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["removeconsumedinterface",{"_index":2902,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterface(component",{"_index":2929,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterface(componentid",{"_index":3180,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterfacegql",{"_index":2909,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterfacemutation",{"_index":2908,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removed",{"_index":2336,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["removedfromcomponentevent",{"_index":848,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedfromlocationevent",{"_index":852,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedialogcomponent",{"_index":182,"title":{"components/RemoveDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["removefiltereddata",{"_index":2415,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["removefiltereddata(graphdata",{"_index":2316,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removefromlocation",{"_index":3563,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removefromlocation(removelocationinput",{"_index":3624,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationgql",{"_index":3590,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationinput",{"_index":3625,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationmutation",{"_index":3589,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removelocationinput",{"_index":3627,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeofferingcomponents",{"_index":5694,"title":{},"body":{"coverage.html":{}}}],["removeofferingcomponents(issue.locations",{"_index":2402,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(linkedissue.locations",{"_index":2408,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(locationids",{"_index":2337,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removepredicateat",{"_index":2777,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removepredicateat(index",{"_index":2800,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removeprojectmembercomponentcomponent",{"_index":184,"title":{"components/RemoveProjectMemberComponentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["removes",{"_index":2306,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{}}}],["rename",{"_index":3564,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["rename(renameinput",{"_index":3628,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameinput",{"_index":3631,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuemutation",{"_index":3583,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitlegql",{"_index":3584,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitleinput",{"_index":3629,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["render",{"_index":2919,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"interfaces/Positions.html":{}}}],["rendered",{"_index":2205,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["rendering",{"_index":2323,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["renderinitialtemplate",{"_index":3113,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["renders",{"_index":2614,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["reopen",{"_index":2656,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["reopen(reopeninput",{"_index":3632,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopeninput",{"_index":3635,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissue",{"_index":2622,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["reopenissuegql",{"_index":3582,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissueinput",{"_index":3633,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissuemutation",{"_index":3581,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopens",{"_index":2630,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["replace",{"_index":2707,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["replaced",{"_index":4869,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["replaysubject",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["replaysubject(1",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["report",{"_index":3093,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["reports",{"_index":1929,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["repository",{"_index":1441,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["repositoryurl",{"_index":1424,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["represent",{"_index":1243,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["representation",{"_index":860,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["represented",{"_index":821,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["representing",{"_index":818,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["represents",{"_index":4629,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["reqeusts",{"_index":2509,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["request",{"_index":1628,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["requested",{"_index":2921,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["requests",{"_index":1752,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["requesttimelineitems",{"_index":877,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["require",{"_index":5754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":5912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["requires",{"_index":6034,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["rerun",{"_index":6053,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["reset",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["resetform",{"_index":5136,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetform(e",{"_index":5147,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetgraph",{"_index":4597,"title":{},"body":{"interfaces/Positions.html":{}}}],["resets",{"_index":4590,"title":{},"body":{"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["resetvalues",{"_index":4137,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["resize",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resizecorner(content",{"_index":1138,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resolve(data",{"_index":1847,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["resolved",{"_index":5825,"title":{},"body":{"index.html":{}}}],["respective",{"_index":3828,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["response.token",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["responsible",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["respoonsible",{"_index":2969,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["rest",{"_index":6049,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["restricting",{"_index":2920,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["result",{"_index":1607,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{}}}],["result.id",{"_index":1609,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["result.items",{"_index":1943,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.items.size",{"_index":1942,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.matches",{"_index":2239,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["result.pageinfo",{"_index":1926,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.totalcount",{"_index":1928,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result?.createdprojectid",{"_index":4830,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["resulting",{"_index":4706,"title":{},"body":{"interfaces/Positions.html":{}}}],["results",{"_index":219,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["rethrow",{"_index":1621,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["retrieval",{"_index":2898,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["retrieve",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"injectables/LabelStoreService.html":{},"injectables/StateService.html":{}}}],["retrieved",{"_index":929,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["retrievel",{"_index":2569,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["retrieves",{"_index":872,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["retrieving",{"_index":1306,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/ProjectIssueListComponent.html":{}}}],["return",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["returnedfilter",{"_index":3487,"title":{},"body":{"components/IssueListComponent.html":{}}}],["returnfromselect",{"_index":1431,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["returnfromselect.localecompare(imstype.github",{"_index":1427,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["returning",{"_index":2453,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returnurl",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reusability",{"_index":5822,"title":{},"body":{"index.html":{}}}],["reusable",{"_index":3508,"title":{},"body":{"components/IssueListComponent.html":{},"index.html":{}}}],["rgb",{"_index":3332,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rgb(0",{"_index":1181,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueLocationComponent.html":{}}}],["rgb(204",{"_index":1542,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["rgb(9",{"_index":3543,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["rgba(0",{"_index":2611,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["rgba(0,0,0,0.75",{"_index":4852,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["rgba(201",{"_index":3520,"title":{},"body":{"components/IssueListComponent.html":{}}}],["rgba(201,195,201,1",{"_index":4955,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rgba(255",{"_index":2758,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["rid",{"_index":3303,"title":{},"body":{"components/IssueIconComponent.html":{},"interfaces/Positions.html":{}}}],["right",{"_index":91,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["right/bottom",{"_index":4494,"title":{},"body":{"interfaces/Positions.html":{}}}],["rightdistance",{"_index":3245,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["role",{"_index":260,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["root",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":104,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["root_node",{"_index":2821,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootid",{"_index":4518,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode",{"_index":4520,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.id",{"_index":4539,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.type",{"_index":4527,"title":{},"body":{"interfaces/Positions.html":{}}}],["rotate",{"_index":5637,"title":{},"body":{"classes/Vector.html":{}}}],["rotate(360deg",{"_index":1638,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["rotated",{"_index":5639,"title":{},"body":{"classes/Vector.html":{}}}],["route",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/userMock.html":{}}}],["router",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{}}}],["router.events.pipe",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["routermodule",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2231,"title":{},"body":{"components/FrameComponent.html":{}}}],["routerstatesnapshot",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":494,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["routing.module",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":2259,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["row.id",{"_index":3493,"title":{},"body":{"components/IssueListComponent.html":{}}}],["row:hover",{"_index":3516,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["rowdata",{"_index":4881,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rows",{"_index":2267,"title":{},"body":{"components/FrameComponent.html":{}}}],["run",{"_index":5073,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["running",{"_index":5871,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["runtime",{"_index":5121,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["rxjs",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["rxjs/operators",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["s",{"_index":5183,"title":{},"body":{"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{}}}],["s${sourceid}t${targetid}r${edgetype",{"_index":1280,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["s1",{"_index":2038,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["s2",{"_index":2040,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["same",{"_index":815,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["sandwich",{"_index":2235,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sans",{"_index":3550,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["sat",{"_index":3352,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["satisfy",{"_index":5261,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["save",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{}}}],["savechanges",{"_index":2681,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["saved",{"_index":1003,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{}}}],["savedpositions",{"_index":4314,"title":{},"body":{"interfaces/Positions.html":{}}}],["savefailed",{"_index":1551,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["savepositionssubject",{"_index":4315,"title":{},"body":{"interfaces/Positions.html":{}}}],["saves",{"_index":2692,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["saveusertostorage",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveusertostorage(user",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["saving",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["savingbody",{"_index":978,"title":{},"body":{"components/CommentComponent.html":{}}}],["savingchanges",{"_index":2676,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["savingcomment",{"_index":2619,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["scalar",{"_index":5645,"title":{},"body":{"classes/Vector.html":{}}}],["scalars",{"_index":2289,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scalars['id",{"_index":2294,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scale",{"_index":3776,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["scale(factor",{"_index":5642,"title":{},"body":{"classes/Vector.html":{}}}],["scaled",{"_index":5646,"title":{},"body":{"classes/Vector.html":{}}}],["schema",{"_index":1422,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["schemas",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["schould",{"_index":4868,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["score",{"_index":3963,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["score(item",{"_index":3984,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scorekeys",{"_index":2837,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["scores",{"_index":3986,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scoring",{"_index":5242,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["screen",{"_index":3875,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Positions.html":{}}}],["sdot",{"_index":1044,"title":{},"body":{"components/CommentComponent.html":{}}}],["search",{"_index":1507,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UsersService.html":{},"additional-documentation/using-gropius.html":{}}}],["search'},{'name",{"_index":153,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["search.component",{"_index":2197,"title":{},"body":{"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["search.component.html",{"_index":2158,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.scss",{"_index":2159,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.ts",{"_index":2143,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search.component.ts:17",{"_index":3668,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:19",{"_index":3669,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:20",{"_index":3671,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:21",{"_index":3670,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3664,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:31",{"_index":3667,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:38",{"_index":3665,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:49",{"_index":3666,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search/label",{"_index":2142,"title":{},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searched",{"_index":5217,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["searchissuesdataarray",{"_index":3383,"title":{},"body":{"components/IssueListComponent.html":{}}}],["searchquery",{"_index":2772,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchquerydidchange",{"_index":4087,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchuser",{"_index":5596,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusers",{"_index":3865,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["searchusers(filter",{"_index":5588,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusersgql",{"_index":5582,"title":{},"body":{"injectables/UsersService.html":{}}}],["second",{"_index":4624,"title":{},"body":{"interfaces/Positions.html":{}}}],["seconds",{"_index":951,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["section",{"_index":6030,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["see",{"_index":974,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems",{"_index":4039,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.add(id",{"_index":4044,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.has(id",{"_index":4043,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["segment",{"_index":5624,"title":{},"body":{"classes/Vector.html":{}}}],["select",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{}}}],["select.label",{"_index":3672,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["select/ng",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["selectable",{"_index":5311,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["selected",{"_index":29,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["selectedcategories",{"_index":2195,"title":{},"body":{"interfaces/FilterState.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["selectedfilter",{"_index":2196,"title":{},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{}}}],["selectedlabels",{"_index":2163,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selectedusers",{"_index":233,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["selecting",{"_index":6028,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["selection",{"_index":2172,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["selection.labels",{"_index":2180,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selection.texts",{"_index":2177,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["selects",{"_index":3409,"title":{},"body":{"components/IssueListComponent.html":{}}}],["self",{"_index":961,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["self.alllabelslist",{"_index":2839,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["self.projectid",{"_index":2825,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["selfassigned(assignedevent",{"_index":963,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["send",{"_index":3935,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["sending",{"_index":1754,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["separate",{"_index":3341,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["separately",{"_index":3797,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sequence",{"_index":3172,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["serif",{"_index":3551,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["server",{"_index":867,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/SetEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["server/connection",{"_index":2495,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["server:run",{"_index":5858,"title":{},"body":{"index.html":{}}}],["service",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{}}}],["services",{"_index":5811,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["session",{"_index":4677,"title":{},"body":{"interfaces/Positions.html":{}}}],["set",{"_index":186,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["set(locationids.filter(locationid",{"_index":2341,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["set(this.componentlist.map(id",{"_index":1514,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["setcontext",{"_index":2444,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":2500,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((operation",{"_index":2473,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["seteditorcomponent",{"_index":185,"title":{"components/SetEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogcomponent",{"_index":187,"title":{"components/SetEditorDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogdata",{"_index":4056,"title":{"interfaces/SetEditorDialogData.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["seterror",{"_index":5092,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["setfilter",{"_index":3964,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setfilter(query",{"_index":3988,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setgraphtolastview",{"_index":4679,"title":{},"body":{"interfaces/Positions.html":{}}}],["setinenumarray",{"_index":2778,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setinenumarray(array",{"_index":2802,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setmultisource",{"_index":3956,"title":{"interfaces/SetMultiSource.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["setparams",{"_index":1946,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["setparams(p",{"_index":1736,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["setpredicatetype",{"_index":2779,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setpredicatetype(index",{"_index":2808,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setrelationvisibility",{"_index":3014,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["setrelationvisibility(showrelations",{"_index":4763,"title":{},"body":{"interfaces/Positions.html":{}}}],["sets",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{}}}],["setter",{"_index":2981,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters",{"_index":2971,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["setters.service",{"_index":4276,"title":{},"body":{"interfaces/Positions.html":{}}}],["setters.service.ts",{"_index":2968,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["setters.service.ts:24",{"_index":2976,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters/issue",{"_index":2967,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["settext(value",{"_index":5409,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["settimeout",{"_index":1871,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RegisterComponent.html":{}}}],["setting",{"_index":4762,"title":{},"body":{"interfaces/Positions.html":{}}}],["settings",{"_index":62,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"additional-documentation/using-gropius.html":{}}}],["settingsdialogcomponent",{"_index":189,"title":{"components/SettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":3060,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["several",{"_index":807,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["shadow",{"_index":1177,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["shared",{"_index":3046,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["sharereplay",{"_index":2240,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sharereplay(1",{"_index":3196,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["sheet",{"_index":4594,"title":{},"body":{"interfaces/Positions.html":{}}}],["shift",{"_index":4473,"title":{},"body":{"interfaces/Positions.html":{}}}],["short",{"_index":1727,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/UserItemComponent.html":{}}}],["shortcut",{"_index":4835,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["shot",{"_index":5851,"title":{},"body":{"index.html":{}}}],["shouldn't",{"_index":1999,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":3027,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["showconfirmdialog",{"_index":1572,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["showdeleted",{"_index":5482,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["showdeletedialog",{"_index":4138,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdeletedialog(affected",{"_index":4156,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdrawer",{"_index":2224,"title":{},"body":{"components/FrameComponent.html":{}}}],["showing",{"_index":2888,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["showmenubutton",{"_index":5540,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["shown",{"_index":863,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["showname",{"_index":4130,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showplaceholder",{"_index":5390,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["showrelations",{"_index":3011,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["shows",{"_index":837,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/DialogData-1.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["side",{"_index":191,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["sidebar",{"_index":2217,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{}}}],["sidebar'},{'name",{"_index":151,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar.component",{"_index":1583,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{}}}],["sidebar.component.ts",{"_index":5728,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sidemenu",{"_index":5342,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sidenav",{"_index":2256,"title":{},"body":{"components/FrameComponent.html":{}}}],["sidenavcomponent",{"_index":190,"title":{"components/SideNavComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":6033,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["signal",{"_index":3175,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["signals",{"_index":3071,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["signature",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["significant",{"_index":3790,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["signup",{"_index":5922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupurl",{"_index":5917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["similar",{"_index":5844,"title":{},"body":{"index.html":{}}}],["simple",{"_index":2034,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["simplechanges",{"_index":5246,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["simultaneously",{"_index":3972,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["single",{"_index":941,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["singular",{"_index":5450,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["size",{"_index":1651,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["size.height",{"_index":4731,"title":{},"body":{"interfaces/Positions.html":{}}}],["size.width",{"_index":4729,"title":{},"body":{"interfaces/Positions.html":{}}}],["sizes",{"_index":1659,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["slate",{"_index":4561,"title":{},"body":{"interfaces/Positions.html":{}}}],["slide",{"_index":3091,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["slider",{"_index":2248,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideto",{"_index":5747,"title":{},"body":{"coverage.html":{}}}],["slideto('right",{"_index":6012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sliding",{"_index":6013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["small",{"_index":3761,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["smaller",{"_index":5313,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["software",{"_index":5800,"title":{},"body":{"index.html":{}}}],["solid",{"_index":2664,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["solution",{"_index":5594,"title":{},"body":{"injectables/UsersService.html":{}}}],["solves",{"_index":5835,"title":{},"body":{"index.html":{}}}],["something",{"_index":3982,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sometimes",{"_index":4305,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhat",{"_index":4499,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhere",{"_index":3983,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sommerzeit",{"_index":5441,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["soon",{"_index":5061,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["sort",{"_index":3372,"title":{},"body":{"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["sorted",{"_index":3262,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids",{"_index":3255,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.foreach((childid",{"_index":3266,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.length",{"_index":3275,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["source.allowedanchors.has('bottom",{"_index":3158,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.allowedanchors.has('right",{"_index":3157,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.current.entries",{"_index":4042,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.current.size",{"_index":4046,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.filter",{"_index":4030,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.hasdata",{"_index":4041,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.loading",{"_index":4052,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source?.allowedanchors",{"_index":3143,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourced",{"_index":4000,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcefolders",{"_index":2403,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcefolders.foreach(folder",{"_index":2411,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcehandles",{"_index":3131,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles.filter((linkhandle",{"_index":3152,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles:linkhandle[];targethandles:linkhandle",{"_index":3150,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourceid",{"_index":1281,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourceissues",{"_index":1276,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourcelocationids",{"_index":2401,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcelocationids.map(locationid",{"_index":2404,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcenode",{"_index":2990,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["sourcenode.type",{"_index":4386,"title":{},"body":{"interfaces/Positions.html":{}}}],["sourcenodelist",{"_index":3959,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodelistsub",{"_index":4002,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodes",{"_index":3975,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcepoint",{"_index":5625,"title":{},"body":{"classes/Vector.html":{}}}],["sources",{"_index":3953,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcesubs",{"_index":4003,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["south",{"_index":4264,"title":{},"body":{"interfaces/Positions.html":{}}}],["space",{"_index":2115,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spacer",{"_index":3097,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spaces",{"_index":743,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["spacing",{"_index":2885,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["span[matline",{"_index":4847,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["spec",{"_index":3960,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec.sourcenodes",{"_index":4006,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec\\.ts",{"_index":5913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3859,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"additional-documentation/using-gropius.html":{}}}],["specified",{"_index":1420,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["specifies",{"_index":3997,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["specify",{"_index":6024,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["specifying",{"_index":1094,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{}}}],["spinner",{"_index":1636,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["src/.../app.module.ts",{"_index":5905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../component",{"_index":5907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":5909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph",{"_index":5894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../graphql.module.ts",{"_index":5906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.ts",{"_index":5795,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issue",{"_index":5794,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issues.service.ts",{"_index":5897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../label",{"_index":5893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../load.ts",{"_index":5900,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../node",{"_index":5796,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../query.component.ts",{"_index":5797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../query.ts",{"_index":5895,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":5911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set",{"_index":5899,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../shared.ts",{"_index":5892,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":5908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../text",{"_index":5904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timeline.component.ts",{"_index":5898,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:10",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:22",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/authentication.service.ts",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/auth/authentication.service.ts:15",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:16",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:17",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:24",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:28",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:32",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:43",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:59",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/components/cache",{"_index":756,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["src/app/components/cursor",{"_index":1646,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["src/app/components/issue",{"_index":2604,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["src/app/components/item.directive.ts",{"_index":3657,"title":{},"body":{"directives/ItemDirective.html":{},"coverage.html":{}}}],["src/app/components/set",{"_index":3952,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/components/user",{"_index":5552,"title":{},"body":{"components/UserItemComponent.html":{},"coverage.html":{}}}],["src/app/data",{"_index":1364,"title":{},"body":{"injectables/ComponentsService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/component/component",{"_index":1302,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["src/app/data/interface/interface",{"_index":2568,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"coverage.html":{}}}],["src/app/data/issue",{"_index":2270,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/issue/issue",{"_index":3553,"title":{},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["src/app/data/label/label",{"_index":3674,"title":{},"body":{"injectables/LabelStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/project/project",{"_index":4973,"title":{},"body":{"injectables/ProjectStoreService.html":{},"coverage.html":{}}}],["src/app/dialogs/access",{"_index":10,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/add",{"_index":221,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/create",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/profile",{"_index":4770,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/remove",{"_index":2110,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/settings",{"_index":5323,"title":{},"body":{"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts",{"_index":2201,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts:27",{"_index":2243,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:28",{"_index":2244,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:30",{"_index":2241,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:34",{"_index":2229,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:36",{"_index":2245,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:45",{"_index":2234,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:49",{"_index":2232,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/graphql.module.ts",{"_index":2433,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs",{"_index":3227,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["src/app/graphs/automatic",{"_index":3694,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["src/app/graphs/component",{"_index":1046,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/graphs.module.ts",{"_index":2518,"title":{},"body":{"modules/GraphsModule.html":{}}}],["src/app/graphs/issue",{"_index":1203,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/label",{"_index":2141,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/graphs/shared.ts",{"_index":2194,"title":{},"body":{"interfaces/FilterState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/issue",{"_index":803,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/login/login.component.ts",{"_index":3874,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":3900,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":3897,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":3896,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":3895,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":3898,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":3887,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":3886,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/markdown/markdown",{"_index":3920,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["src/app/node",{"_index":4123,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/project",{"_index":4785,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["src/app/register/register.component.ts",{"_index":5128,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:118",{"_index":5148,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:131",{"_index":5145,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":5164,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":5158,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":5143,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":5160,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:67",{"_index":5157,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":5155,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:95",{"_index":5151,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/route",{"_index":5745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/side",{"_index":5340,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/state.service.ts",{"_index":527,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["src/app/state.service.ts:16",{"_index":5383,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:17",{"_index":5380,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:31",{"_index":5382,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:57",{"_index":5381,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/text",{"_index":5384,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/top",{"_index":5532,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":5559,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["src/app/utils/query",{"_index":5038,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/utils/validators.ts",{"_index":718,"title":{},"body":{"classes/CCIMSValidators.html":{},"coverage.html":{}}}],["src/app/utils/validators.ts:10",{"_index":746,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:16",{"_index":738,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:25",{"_index":747,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:30",{"_index":731,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/environments/environment.prod.ts",{"_index":5751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generated",{"_index":6054,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["src/generated/graphql",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"injectables/StateService.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["src/generated/public",{"_index":5168,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/styles/dialog",{"_index":1445,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["src/styles/spinner",{"_index":2657,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectListComponent.html":{}}}],["src/styles/variables",{"_index":1170,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/TextDisplayComponent.html":{}}}],["src/styles/variables.scss",{"_index":2740,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["src/test.ts",{"_index":5753,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":2166,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{}}}],["ss.state$.pipe",{"_index":2250,"title":{},"body":{"components/FrameComponent.html":{}}}],["ss.state$.subscribe(appstate",{"_index":5364,"title":{},"body":{"components/SideNavComponent.html":{}}}],["stale",{"_index":1763,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["standing",{"_index":2191,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["star",{"_index":2757,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["start",{"_index":1108,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["start/end",{"_index":740,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["startcursor",{"_index":5982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2726,"title":{"index.html":{}},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["startediting",{"_index":5391,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["startoffset",{"_index":3252,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["starts",{"_index":2114,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["state",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["state.project",{"_index":2252,"title":{},"body":{"components/FrameComponent.html":{}}}],["state.service",{"_index":1400,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["state.service.ts",{"_index":3162,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":3164,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:28",{"_index":3169,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:44",{"_index":3167,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:51",{"_index":3181,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.url",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state[fill",{"_index":2754,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["state[stroke",{"_index":2755,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["stateful",{"_index":1768,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statelock",{"_index":1825,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statements",{"_index":5650,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3179,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["stateservice",{"_index":553,"title":{"injectables/StateService.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["static",{"_index":725,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["staticsourcenodelist",{"_index":3961,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["staticsources",{"_index":2848,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":2763,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["status",{"_index":2751,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["sticky",{"_index":5551,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["still",{"_index":1477,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["stop",{"_index":912,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["stopcoalescing",{"_index":910,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stopcoalescing(coalescingtype",{"_index":954,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stops",{"_index":947,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["storage",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueLabelComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store.service",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["store.service.ts",{"_index":1303,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["store.service.ts:100",{"_index":3640,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:104",{"_index":3620,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:110",{"_index":3618,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:12",{"_index":3679,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:23",{"_index":3684,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:25",{"_index":2586,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:29",{"_index":4990,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:30",{"_index":1336,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:34",{"_index":2590,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:36",{"_index":3681,"title":{},"body":{"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["store.service.ts:41",{"_index":1347,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:42",{"_index":3595,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:43",{"_index":2593,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:44",{"_index":4991,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:45",{"_index":1343,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:49",{"_index":1349,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:51",{"_index":4996,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:53",{"_index":1345,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:55",{"_index":4998,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:56",{"_index":3612,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:57",{"_index":1341,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:59",{"_index":4993,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:60",{"_index":3623,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:64",{"_index":1339,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:68",{"_index":1352,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:72",{"_index":3616,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:76",{"_index":3606,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:80",{"_index":3634,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:84",{"_index":3630,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:88",{"_index":3603,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:92",{"_index":3599,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:96",{"_index":3626,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["stored",{"_index":1241,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["stretch",{"_index":268,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2937,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["stroke",{"_index":2756,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["structural",{"_index":3659,"title":{},"body":{"directives/ItemDirective.html":{}}}],["structure",{"_index":2002,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["stuff",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["style",{"_index":3546,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["style('opacity",{"_index":3119,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["sub",{"_index":1845,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.error(error",{"_index":1886,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.next(this.current",{"_index":1883,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.unsubscribe",{"_index":1848,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.unsubscribe()`]{@link",{"_index":1798,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subdivided",{"_index":6051,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["subheading",{"_index":2750,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["subject",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["submitform",{"_index":3884,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform(value",{"_index":5150,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":769,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribe(_",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(filterstate",{"_index":3067,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["subscribe(project",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(r",{"_index":4325,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscribe(this.isprojectset",{"_index":2253,"title":{},"body":{"components/FrameComponent.html":{}}}],["subscribe]{@link",{"_index":1781,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribed",{"_index":973,"title":{},"body":{"components/CommentComponent.html":{}}}],["subscribelazy",{"_index":1701,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribelazy(...args",{"_index":1730,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriber",{"_index":1739,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["subscriber.next(this.current",{"_index":1877,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribercount",{"_index":1889,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribers",{"_index":1823,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribes",{"_index":4342,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribetosubject",{"_index":4354,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscription",{"_index":784,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["subscription#unsubscribe",{"_index":1799,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriptions",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{}}}],["subsequent",{"_index":1783,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subtract",{"_index":5610,"title":{},"body":{"classes/Vector.html":{}}}],["subtract(other",{"_index":5647,"title":{},"body":{"classes/Vector.html":{}}}],["success",{"_index":270,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["success(value",{"_index":5091,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["successful",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["successfull",{"_index":3889,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":5040,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["succession",{"_index":812,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["sucessfull",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["such",{"_index":2010,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["sufficient",{"_index":1789,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["suggestions",{"_index":5229,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["sum",{"_index":5615,"title":{},"body":{"classes/Vector.html":{}}}],["super(id",{"_index":1893,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["super(subscriber",{"_index":1834,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["superset",{"_index":5234,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["support",{"_index":5886,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1030,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"classes/Vector.html":{}}}],["svg",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/IssueDetailComponent.html":{},"modules.html":{}}}],["switch",{"_index":2851,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["switches",{"_index":3021,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["switchmap",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{}}}],["switchmap(([appstate",{"_index":3191,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["switchmap((event",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["switchmap(term",{"_index":2188,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["switchtheme",{"_index":5328,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["symbols",{"_index":5162,"title":{},"body":{"components/RegisterComponent.html":{}}}],["synchronously",{"_index":1777,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["syncstatewithurl",{"_index":5379,"title":{},"body":{"injectables/StateService.html":{}}}],["syncstatewithurl(router",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["syntax",{"_index":3922,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["system",{"_index":4806,"title":{},"body":{"components/ProjectListComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["systems",{"_index":5801,"title":{},"body":{"index.html":{}}}],["t",{"_index":1805,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterState.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":4247,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["table",{"_index":3373,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5755,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3831,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["taken",{"_index":2799,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{}}}],["takes",{"_index":4552,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["takeuntil",{"_index":3048,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["takeuntil(destroy",{"_index":3187,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["takeuntil(this.destroy",{"_index":3065,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["tap",{"_index":2149,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["target",{"_index":1282,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["target.allowedanchors.has('bottom",{"_index":3161,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target.allowedanchors.has('right",{"_index":3160,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target?.allowedanchors",{"_index":3145,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targeted",{"_index":6027,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["targetfolders",{"_index":2400,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetfolders.concat(targetlocationids.map(locationid",{"_index":2409,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targethandles",{"_index":3135,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetid",{"_index":1278,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["targetlocationids",{"_index":2407,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetnode",{"_index":2991,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["targetnode.id.tostring()).subscribe",{"_index":4410,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetnode?.type",{"_index":4400,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetpoint",{"_index":5619,"title":{},"body":{"classes/Vector.html":{}}}],["targets",{"_index":4390,"title":{},"body":{"interfaces/Positions.html":{}}}],["task",{"_index":4928,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["team",{"_index":6073,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["technologies",{"_index":5873,"title":{},"body":{"index.html":{}}}],["tell",{"_index":3026,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["templateref",{"_index":780,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["templates",{"_index":3660,"title":{},"body":{"directives/ItemDirective.html":{}}}],["templates/dynamic",{"_index":3108,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["term",{"_index":3683,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["term).pipe",{"_index":2190,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["test",{"_index":2939,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["test)&quot;&quot",{"_index":2944,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["testing",{"_index":755,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["text",{"_index":194,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["text(value",{"_index":5411,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["textdisplaycomponent",{"_index":193,"title":{"components/TextDisplayComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textdisplayeditcallbackfn",{"_index":5395,"title":{},"body":{"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textfragment",{"_index":2192,"title":{"interfaces/TextFragment.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2144,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["texts.length",{"_index":2951,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["texts.map(text",{"_index":2961,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex",{"_index":2903,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([\"newest",{"_index":2938,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([&quot;newest",{"_index":2940,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex(texts",{"_index":2931,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["thecurrent",{"_index":879,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["theme",{"_index":3936,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["then(created",{"_index":1529,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["then(data",{"_index":5600,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["theres",{"_index":4676,"title":{},"body":{"interfaces/Positions.html":{}}}],["theses",{"_index":6069,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["thing",{"_index":1681,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.hasdata",{"_index":1682,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.loading",{"_index":1680,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing.something",{"_index":1683,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingid",{"_index":1685,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["things",{"_index":1907,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingslistid",{"_index":1906,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingssub",{"_index":1910,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingsub",{"_index":1686,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["think",{"_index":1235,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["this.activatedroute.parent",{"_index":4478,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":3488,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":2712,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('issueid",{"_index":2713,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activeitemcontent",{"_index":5493,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.activepredicates",{"_index":2873,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.slice(0",{"_index":2856,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.splice(index",{"_index":2863,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates[index",{"_index":2859,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.addableusers",{"_index":4932,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addableusers.foreach(addableuser",{"_index":4935,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addcoalesceitems(coalescelist",{"_index":904,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addconsumedinterfacemutation.mutate({input",{"_index":2963,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.addinterfacetocomponent(event.detail.sourcenode.id",{"_index":4413,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefoldernodes(node",{"_index":4627,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefolders(node",{"_index":4578,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuegroupcontainer(node",{"_index":4626,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuetolocationmutation.mutate({input",{"_index":3651,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.additions.add(encodenodeid(node",{"_index":4114,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.add(id",{"_index":4106,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.delete(id",{"_index":4103,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.has(id",{"_index":4097,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.size",{"_index":4107,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.addsinglecoalesceitem(timelineitem",{"_index":919,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addsubscriber(subscriber",{"_index":1835,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.allcomponentslist",{"_index":1505,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.alllabelslist",{"_index":3447,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.apiservice.addconsumedinterface(componentid",{"_index":3197,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.loadissuegraphdata(appstate.project.node.id",{"_index":3192,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.removeconsumedinterface(componentid",{"_index":3198,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.applychangeset(additions",{"_index":5267,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.login(this.validateform.controls.username.value",{"_index":3906,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.body",{"_index":5079,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.body.code",{"_index":1598,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":2236,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["this.bug",{"_index":3054,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.button",{"_index":5080,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.button.element.disabled",{"_index":5100,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.buttonmode",{"_index":5078,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.calculateboundingbox",{"_index":4558,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.calculatesourcehandles(source",{"_index":3144,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.calculatetargethandles(target",{"_index":3146,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.callback",{"_index":4221,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(false",{"_index":4242,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(true",{"_index":4222,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.cancreatenewissue",{"_index":3451,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.category.setvalue(data.category",{"_index":2725,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.category.setvalue(issuecategory.unclassified",{"_index":1586,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.category.value",{"_index":1599,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["this.changecolour",{"_index":4829,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":1148,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.changeissuecategorymutation.mutate({input",{"_index":3650,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.childnodepositions.set(childid",{"_index":3267,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.close",{"_index":1154,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.closecomponentactions",{"_index":4334,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closecomponentactions(false",{"_index":4434,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closeissuemutation.mutate({input",{"_index":3647,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.codechange.emit(this.code",{"_index":3939,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.color",{"_index":1496,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.comment",{"_index":1013,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment$.subscribelazy",{"_index":1016,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteditor.code",{"_index":2651,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.commentid",{"_index":1021,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentissuemutation.mutate({input",{"_index":3645,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.commentsub",{"_index":1015,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentsub?.unsubscribe",{"_index":1017,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.component",{"_index":3452,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["this.component$.id",{"_index":3510,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component$.subscribe",{"_index":3455,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component.node.description",{"_index":4228,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.id",{"_index":4240,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.ims.imstype",{"_index":4226,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.name",{"_index":4216,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.componentcontextmenu",{"_index":4464,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.close",{"_index":4542,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.data.nodeid",{"_index":4470,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.height",{"_index":4512,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.updateposition(math.max(x",{"_index":4467,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.width",{"_index":4510,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenunodeid",{"_index":4488,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenuservice.open",{"_index":4491,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentinterface",{"_index":3457,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.dataaspromise().then(data",{"_index":3460,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.id",{"_index":3511,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.subscribe",{"_index":3459,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfaceprovider",{"_index":3461,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub",{"_index":3458,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub?.unsubscribe",{"_index":3486,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentlist",{"_index":1487,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.push(item",{"_index":1517,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.splice(this.componentlist.indexof(item",{"_index":1519,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentstoreservice.getfullcomponent(rootid).subscribe(component",{"_index":4528,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentsub",{"_index":3454,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentsub?.unsubscribe",{"_index":3485,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.confirmvalidator",{"_index":5174,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.connectconsumingcomponents(interfacenode",{"_index":4584,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.connectedto.add(other",{"_index":3750,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connectedto.has(othernode",{"_index":3777,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connecttoofferingcomponent(interfacenode",{"_index":4583,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.contextmenutypefornodetype(node",{"_index":4481,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.createcomponentmutation.mutate({input",{"_index":1361,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.createinterfacemutation.mutate({input",{"_index":2598,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.createissue.mutate({input",{"_index":3642,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.createitem",{"_index":5269,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.createnode(id",{"_index":2022,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.createproject.mutate({input",{"_index":5002,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.current",{"_index":1875,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys",{"_index":1970,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys().next()?.value",{"_index":1965,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.values",{"_index":1954,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current?.has(encodenodeid(key",{"_index":1975,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentdata",{"_index":1815,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentqueryparams",{"_index":1819,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentuser",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["this.currentuser$.subscribe",{"_index":2644,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub",{"_index":2643,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub.unsubscribe",{"_index":2646,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersubject",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentvisiblearea",{"_index":4462,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.cursor",{"_index":1979,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.data",{"_index":5062,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.data.applychangeset([...this.additions].map(decodenodeid",{"_index":4110,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.components",{"_index":1589,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.confirmbuttontext",{"_index":5203,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["this.data.createitem().then(node",{"_index":4113,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.editexisting",{"_index":1486,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.editexisting.id",{"_index":1526,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.graph.reload",{"_index":1153,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.issueid",{"_index":1504,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.listall",{"_index":4075,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.listset].map(id",{"_index":4071,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.locations",{"_index":1592,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.makefilter(this.searchquery",{"_index":4089,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.nodeid",{"_index":1169,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.data.offeredbyid",{"_index":1556,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.data.overlayref.dispose",{"_index":1158,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.overlayref.getconfig().positionstrategy.apply",{"_index":1157,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsetx",{"_index":1155,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsety",{"_index":1156,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.projectid",{"_index":1423,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.scorekeys",{"_index":4077,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.verificationname",{"_index":2131,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dataservice",{"_index":4078,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist",{"_index":881,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{}}}],["this.dataservice.getlist(decodelistid(source",{"_index":4017,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.data.listset",{"_index":4073,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.listid",{"_index":3467,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getlist(this.listset",{"_index":5252,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.dataservice.getlist(this.thingslistid",{"_index":1912,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode",{"_index":3812,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.dataservice.getnode(current_user_node",{"_index":2642,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.getnode(issuenodeid",{"_index":2716,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.getnode(node",{"_index":4798,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["this.dataservice.getnode(this.commentid",{"_index":1014,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.getnode(this.data.editexisting",{"_index":1490,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.getnode(this.listid.node",{"_index":3453,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getnode(this.node",{"_index":795,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.dataservice.getnode(this.thingid",{"_index":1688,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode({type",{"_index":4967,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.dataservice.mutations.addissuecomment",{"_index":2650,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.addlabeltocomponent(math.random().tostring",{"_index":1522,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.changeissuecategory",{"_index":2731,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.closeissue(math.random().tostring",{"_index":2647,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.createissue(issuedata).then(async",{"_index":1606,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dataservice.mutations.createlabel",{"_index":1528,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.deleteissuecomment",{"_index":1038,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.removelabelfromcomponent(math.random().tostring",{"_index":1523,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.renameissuetitle",{"_index":2729,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.reopenissue(math.random().tostring",{"_index":2648,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.updateissuecomment",{"_index":1019,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.updatelabel",{"_index":1524,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.datasource",{"_index":3470,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.filter",{"_index":3481,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.paginator",{"_index":3479,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.sort",{"_index":3475,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.defaultmenutitle",{"_index":5358,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.deletecomponentmutation.mutate({input",{"_index":1360,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.deleteinterfacemutation.mutate({input",{"_index":2603,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.deleteissuecommentmutation.mutate({input",{"_index":3646,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.deleteitem.emit(item",{"_index":5273,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.deleteproject.mutate({input",{"_index":5003,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.deletequery.listento(this.componentstoreservice.deletecomponent(this.nodeid",{"_index":4220,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.componentstoreservice.getcomponentinterfaces(this.nodeid",{"_index":4200,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.delete(this.nodeid",{"_index":4224,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.getconsumingcomponents(this.nodeid",{"_index":4211,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletions.add(id",{"_index":4104,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.delete(id",{"_index":4105,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.has(id",{"_index":4098,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.size",{"_index":4108,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions].map(decodenodeid)).then",{"_index":4111,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.description",{"_index":4969,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.destroy",{"_index":3080,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$).pipe",{"_index":3076,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$.next",{"_index":3081,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["this.dialog.close",{"_index":1525,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(created",{"_index":1530,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(null",{"_index":1502,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.open(accesstokendialogcomponent",{"_index":5332,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(addprojectmemberdialogcomponent",{"_index":4930,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(createcomponentdialogcomponent",{"_index":4768,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createinterfacedialogcomponent",{"_index":4420,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createissuedialogcomponent",{"_index":3509,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dialog.open(createprojectdialogcomponent",{"_index":4827,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.dialog.open(profilesettingsdialogcomponent",{"_index":5331,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(removedialogcomponent",{"_index":1026,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialog.open(removeprojectmembercomponentcomponent",{"_index":4939,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(settingsdialogcomponent",{"_index":5550,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":63,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.dialogref.close(data",{"_index":258,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.dialogref.close(data.createcomponentinterface.componentinterface.id",{"_index":1558,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2138,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close(null",{"_index":4109,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dialogref.close(true",{"_index":1623,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close({createdprojectid",{"_index":1644,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.dialogref.disableclose",{"_index":1587,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dialogservice.open>(seteditordialogcomponent",{"_index":5274,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/svg",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(asseturl",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawfolderrelations(node",{"_index":4579,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.drawgraph",{"_index":4589,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.editbody",{"_index":1023,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.edititem.emit(item",{"_index":5271,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.editmode",{"_index":4177,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["this.edittext",{"_index":5416,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.emiterrortoallsubscribers(error",{"_index":1864,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emitupdatetoallsubscribers",{"_index":1872,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emptyresultslabel",{"_index":5280,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.emptysuggestionslabel",{"_index":5279,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.errorconfig",{"_index":5577,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.extractissueid(component.node.issues.nodes",{"_index":4530,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.extractissueid(interfacecomponent.node.issuesonlocation.nodes",{"_index":4533,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fb.group",{"_index":3914,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.featurerequests",{"_index":3055,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter",{"_index":3002,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter$.next(filterstate",{"_index":3068,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filterchange.emit(this.buildfilter",{"_index":2877,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.filterselection",{"_index":2170,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.filterselection$.next(selection",{"_index":2183,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.findidealcomponentposition(component.id",{"_index":4567,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.firstpageitemid",{"_index":1983,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.fitgraphinview",{"_index":4716,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fixed",{"_index":3751,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.formatcategorydescription(element.category",{"_index":3515,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.formatissueopentime",{"_index":2737,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.forward",{"_index":1938,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.frame.nativeelement.style.minheight",{"_index":1146,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.frame.nativeelement.style.minwidth",{"_index":1144,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.fromgqlnolinks(gqlissue",{"_index":2392,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fromgqlnolinks(gqlpartialissue",{"_index":2395,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fullissue",{"_index":3811,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissue.subscribe",{"_index":3814,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuelink",{"_index":3809,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub",{"_index":3813,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub?.unsubscribe",{"_index":3815,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.getallfilter(projectid",{"_index":3686,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallfilter(projectid).pipe",{"_index":3687,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallquery.fetch({filter}).pipe",{"_index":5006,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getalltimelineitemsquery.fetch({input",{"_index":3655,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getbasiccomponentquery.fetch({id}).pipe(map(({data",{"_index":1357,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getbasicprojectquery.fetch({id}).pipe(map(({data",{"_index":5004,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getcomponentinterfacesquery.fetch({id}).pipe(map(({data",{"_index":1359,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getconsumingcomponentsquery.fetch({id}).pipe(map(({data",{"_index":2601,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getencodedid(item",{"_index":4096,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.getfullcomponentquery.fetch({id}).pipe(map(({data",{"_index":1358,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getfullissuegraphdataquery.fetch({projectid",{"_index":2952,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getfullissuequery.fetch({id}).pipe",{"_index":3654,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getfullquery.fetch({id}).pipe(map(({data",{"_index":5005,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getinterfacequery.fetch({id}).pipe",{"_index":2599,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getlabelsgql.fetch({projectid}).pipe",{"_index":3691,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getlabelsquery.fetch({id}).pipe(map(({data",{"_index":1356,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getnode(id",{"_index":2030,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.getqueryparamfilter",{"_index":3482,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.getremainingtypes(index",{"_index":2865,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.getsearchissuegraphdataquery.fetch({projectid",{"_index":2959,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getselectedcategories",{"_index":3041,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.graph",{"_index":4320,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(edge",{"_index":4675,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createconsumptionedge(consumerid",{"_index":4620,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createinterfaceprovisionedge(node.offeredbyid",{"_index":4613,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuefoldernode",{"_index":4659,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuegroupcontainernode",{"_index":4644,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(node",{"_index":4577,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.completerender",{"_index":4585,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentviewwindow",{"_index":4495,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.apply([node.x",{"_index":4466,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.k",{"_index":4496,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.edgelist",{"_index":4598,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.source",{"_index":4407,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.target",{"_index":4408,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(id",{"_index":4668,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(this.componentcontextmenunodeid",{"_index":4465,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getsvg().style",{"_index":4764,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager",{"_index":4636,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.addnodetogroup(node.issuegroupcontainer.id",{"_index":4660,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.clearallgroups",{"_index":4601,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.nodelist",{"_index":4599,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox",{"_index":4513,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(previousboundingbox",{"_index":4715,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(rect",{"_index":4720,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata",{"_index":4285,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.components.size",{"_index":4688,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.graphlocations.get(node.id).issues",{"_index":4652,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.interfaces.get(interfacenode.id).consumedby",{"_index":4619,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders",{"_index":4556,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders.getvalue([node.id.tostring",{"_index":4670,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphfirstrender",{"_index":4692,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphinitialized",{"_index":4339,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphlink",{"_index":5371,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.graphwrapper.nativeelement",{"_index":4321,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.addconsumedinterface(sourcenode.id.tostring",{"_index":4409,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.graphdataforfilter(this.filter",{"_index":3075,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.gs.removeconsumedinterface(sourcenode.id.tostring",{"_index":4428,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.hasdata",{"_index":1841,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hasmore",{"_index":4040,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.height",{"_index":1150,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.http.post(environment.loginurl",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.hydrate",{"_index":5255,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.hydrated",{"_index":1863,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hydrateraw(data.then(value",{"_index":1994,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.id",{"_index":1837,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["this.infoconfig",{"_index":5579,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.initgraph",{"_index":4322,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.innermapfn",{"_index":1839,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innermapfn(result",{"_index":1888,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innerqueryfn",{"_index":1838,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.inputtitle.nativeelement.value",{"_index":2730,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.insertresult(data",{"_index":1862,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interactive",{"_index":1729,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interface",{"_index":4194,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.description",{"_index":4231,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.id",{"_index":4244,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.name",{"_index":4223,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interfacestore.create(name",{"_index":1555,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.interfacestoreservice.getinterface(rootid).subscribe(interfacecomponent",{"_index":4532,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.invalidate",{"_index":1980,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.invalidatelists.bind(this",{"_index":2090,"title":{},"body":{"injectables/DataService.html":{}}}],["this.invalidcredentials",{"_index":3893,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.iscomponent",{"_index":3537,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.ishandset",{"_index":4326,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.isinset(item",{"_index":4102,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isloading",{"_index":3905,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.islocalset",{"_index":4069,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isnextsublazy",{"_index":1836,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.isprojecturl(event.url",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.issue",{"_index":2715,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.dataaspromise().then(data",{"_index":2724,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.hasdata",{"_index":2720,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.id",{"_index":2638,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issue$.subscribe",{"_index":2718,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue.category",{"_index":3295,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.id",{"_index":3318,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["this.issue.isopen",{"_index":3296,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkedbyissues?.totalcount",{"_index":3298,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkstoissues?.totalcount",{"_index":3300,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issuedata.assignees.map(node",{"_index":1605,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.map(node",{"_index":1602,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.push(componentid",{"_index":1590,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.labels.map(node",{"_index":1604,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.linkstoissues",{"_index":1611,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.map(node",{"_index":1603,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.push(componentid",{"_index":1591,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issueeditable",{"_index":2723,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuegraph.drawgraph",{"_index":3058,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.fitgraphinview",{"_index":3059,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.graphdata",{"_index":3077,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.layoutgraph",{"_index":3057,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.reload",{"_index":3072,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.setrelationvisibility(this.showrelations",{"_index":3078,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraphclasssettersservice.manageclasssetters(graph",{"_index":4345,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphdynamictemplateregistryservice.managedynamictemplateregistry(graph",{"_index":4348,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphlinkhandlesservice.managelinkhandles(graph",{"_index":4346,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents",{"_index":4600,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents.push(node",{"_index":4647,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issueid",{"_index":882,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issuelistid",{"_index":4180,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["this.issueslink",{"_index":5372,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.issuestub.id",{"_index":3810,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.issuesub",{"_index":2717,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuesub.unsubscribe",{"_index":2719,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.itemops.includes('create",{"_index":5281,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('delete",{"_index":5285,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('edit",{"_index":5283,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemtemplate",{"_index":5276,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.labels",{"_index":2185,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsearch.filterselection$]).pipe",{"_index":3064,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.labelsinput$.pipe",{"_index":2186,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsloading",{"_index":2187,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelstore.getmatchinglabels(this.ss.state.project.node.id",{"_index":2189,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.lastloadtime",{"_index":1853,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastpageitemid",{"_index":1985,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastqueriedprojectname",{"_index":4822,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.layoutgraph",{"_index":4588,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.lazy",{"_index":797,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.linkedissues",{"_index":2637,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissues$.subscribe",{"_index":2641,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub",{"_index":2640,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub.unsubscribe",{"_index":2645,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkissue.mutate({input",{"_index":3643,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.list",{"_index":3466,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.count",{"_index":3468,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.current.values",{"_index":3496,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.filter",{"_index":3491,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.hasdata",{"_index":3494,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listall",{"_index":4074,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.setfilter(this.searchquery",{"_index":4090,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.unsubscribe",{"_index":4116,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listid.node",{"_index":3448,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listid.node.type",{"_index":3450,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.lists",{"_index":2103,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(encodedid).add(list",{"_index":2109,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(id",{"_index":2095,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(encodedid",{"_index":2107,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(id",{"_index":2094,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.set(encodedid",{"_index":2108,"title":{},"body":{"injectables/DataService.html":{}}}],["this.listset",{"_index":4072,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.count",{"_index":4085,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.current?.has(id",{"_index":4100,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.filter",{"_index":4088,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.hydrateinitial(this.hydrate",{"_index":5256,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.interactive",{"_index":4086,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.subscribe",{"_index":5253,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$?.subscribe",{"_index":4081,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub",{"_index":4080,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub.unsubscribe",{"_index":5251,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listsetsub?.unsubscribe",{"_index":4115,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.load",{"_index":1870,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loaddebounced",{"_index":1822,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadifneeded",{"_index":1878,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(prepareddata",{"_index":1868,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(this.innerqueryfn(this.id",{"_index":1865,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loading",{"_index":1489,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{}}}],["this.loadlabels",{"_index":2167,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.loadsavedpositions",{"_index":4341,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.loadtimeout",{"_index":1852,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.localset",{"_index":4070,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.localset.includes(id",{"_index":4099,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.location",{"_index":3536,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.location.id",{"_index":3539,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.makefilter",{"_index":5278,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.managedragbehaviour(graph",{"_index":4347,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.manageeventlisteners(graph",{"_index":4349,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.matchvalidator",{"_index":2136,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.maticonregistry.addsvgicon(iconname",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.maticonregistry.addsvgicon(key",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["this.memberslink",{"_index":5373,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.menuclick.emit",{"_index":5549,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.menutitle",{"_index":5367,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.minimap.nativeelement",{"_index":4344,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.mockusers",{"_index":4941,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(addableuser",{"_index":4937,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(u",{"_index":4925,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mode",{"_index":5334,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.modeicon",{"_index":5337,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.mutations",{"_index":2088,"title":{},"body":{"injectables/DataService.html":{}}}],["this.node",{"_index":794,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribe",{"_index":799,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribelazy",{"_index":798,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node().node.name",{"_index":4197,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodeclickcontextmenuhastype(node",{"_index":4482,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickissuefolder(node",{"_index":4483,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickmanyissues(rootnode",{"_index":4525,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickoneissue(rootid",{"_index":4523,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodedetails.getnodename",{"_index":1168,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.nodedetailsready",{"_index":1147,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.nodeid",{"_index":4181,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.nodequery",{"_index":4195,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.componentstoreservice.getbasiccomponent(this.nodeid",{"_index":4185,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.interfacestoreservice.getinterface(this.nodeid",{"_index":4191,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.ready",{"_index":4196,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.seterror",{"_index":4189,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodes",{"_index":2086,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.get(encodedid",{"_index":2023,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.getnode(id",{"_index":2091,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.has(encodedid",{"_index":2021,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.set(encodedid",{"_index":2018,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodesub",{"_index":796,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodesub.unsubscribe",{"_index":801,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodetype",{"_index":4178,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.notify.notifyerror('could",{"_index":1500,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.notify.notifyerror('failed",{"_index":1041,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notify.notifyerror(this.errormessage",{"_index":5096,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.notify.notifyinfo('successfully",{"_index":1039,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.notifyservice.notifyerror('failed",{"_index":4112,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.oncreateedge",{"_index":4364,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.ondialogapplychangeset",{"_index":5277,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogcreateitem",{"_index":5282,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogdeleteitem",{"_index":5286,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogedititem",{"_index":5284,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondraggededgetargetchanged",{"_index":4367,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeadd",{"_index":4369,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgedrop",{"_index":4374,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeremove",{"_index":4371,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.oneditfinished",{"_index":5417,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.oneditfinished(saved",{"_index":5418,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.onminimaprender(minimap",{"_index":4457,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onnodeclick",{"_index":4431,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.overlay.create",{"_index":1116,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overlay.position().flexibleconnectedto(parent",{"_index":1105,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overviewlink",{"_index":5369,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.padding",{"_index":3745,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.pageinfo",{"_index":1925,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.hasnextpage",{"_index":1941,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.haspreviouspage",{"_index":1939,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.paginator",{"_index":3480,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.params",{"_index":1947,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcount",{"_index":1949,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcursor",{"_index":1948,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pfilter",{"_index":1951,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pforward",{"_index":1950,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pluralize(days",{"_index":5473,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(hours",{"_index":5475,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(minutes",{"_index":5477,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(months",{"_index":5469,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pnodes",{"_index":1944,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pnodes.insertnodes(value.nodes",{"_index":1997,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.position",{"_index":3748,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.x",{"_index":3766,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.y",{"_index":3767,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.predicatevalues[id",{"_index":2876,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].push(item",{"_index":2869,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].splice(this.predicatevalues[id].indexof(item",{"_index":2870,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[type",{"_index":2860,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.prepareissuearray",{"_index":3484,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.preparetimelineitems(value",{"_index":890,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.previouslyhadpagecontents",{"_index":1940,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.project",{"_index":4797,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.project$.subscribe(project",{"_index":4922,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.project.current.name",{"_index":4971,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectid",{"_index":2711,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.projectname",{"_index":4823,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projects",{"_index":4825,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstoragekey",{"_index":4323,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.projectstore.delete(this.projectid).subscribe",{"_index":4972,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectstore.getall(this.projectname).subscribe(projects",{"_index":4824,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstore.getfullproject(this.projectid",{"_index":4921,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.ps.create(name",{"_index":1643,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.psetparamsnoupdate",{"_index":1821,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.ptotalcount",{"_index":1927,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.publicclientname",{"_index":5170,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.query",{"_index":4028,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.query.listento(this.list",{"_index":3469,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.query.listento(this.someobservable",{"_index":5063,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.somethingthattakesawhile",{"_index":5068,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.timelineitems",{"_index":889,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.query.querystate",{"_index":5086,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.querycomponent.listento(this.componentstore.createcomponent(input",{"_index":1425,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["this.querycomponent.listento(this.project",{"_index":4968,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.queryparamfilter",{"_index":3490,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.querystate",{"_index":5081,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.randomizecolor",{"_index":1503,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.redrawbycloseofcomponentdetails",{"_index":4471,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.registerusermutation.client",{"_index":5169,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerusermutation.mutate({input}).subscribe(({data",{"_index":5191,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.relativepositionchanged(group",{"_index":3279,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.reload",{"_index":4448,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reload$.next(null",{"_index":4411,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadlistset",{"_index":5254,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.reloadonmouseup",{"_index":4435,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadprojects",{"_index":4821,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.removeconsumedinterfacemutation.mutate({input",{"_index":2964,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.removeissuefromlocationmutation.mutate({input",{"_index":3652,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.renameissuemutation.mutate({input",{"_index":3649,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.reopenissuemutation.mutate({input",{"_index":3648,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.requesttimelineitems",{"_index":871,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.resetgraph",{"_index":4562,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.resetvalues",{"_index":4198,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.resize",{"_index":1140,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.results",{"_index":4050,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.returnurl",{"_index":3915,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.parammap.get('componentid",{"_index":4258,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3052,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.route.snapshot.parammap.get('interfaceid",{"_index":4259,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":3916,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":4531,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{}}}],["this.router.navigate(['./component",{"_index":4476,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['./interface",{"_index":4479,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['/login",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/projects",{"_index":3492,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.router.navigate(['login",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['projects",{"_index":3538,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":3910,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(url",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.router.serializeurl(this.router.createurltree",{"_index":3317,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["this.savechanges",{"_index":2728,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savedpositions",{"_index":4340,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[issuegroupcontainernode.id",{"_index":4639,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[node.id",{"_index":4441,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[id",{"_index":4604,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[interfaceid",{"_index":4422,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[intrface.id",{"_index":4572,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[layoutnode.id",{"_index":4755,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[node.id",{"_index":4444,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savefailed",{"_index":1559,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.savepositionssubject",{"_index":4355,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savepositionssubject.next",{"_index":4425,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.saveusertostorage(user",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.savingbody",{"_index":1018,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.savingchanges",{"_index":2727,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savingcomment",{"_index":2649,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.score(a",{"_index":4047,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.score(b",{"_index":4048,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.scorekeys",{"_index":4032,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.searchissuesdataarray",{"_index":3495,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.searchquery.trim",{"_index":2871,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.selectedcategories",{"_index":3031,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedcategories$.next",{"_index":3053,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedlabels.filter(item",{"_index":2178,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedlabels.filter(label",{"_index":2181,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedusers",{"_index":257,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.seterror",{"_index":5095,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.setgraphtolastview",{"_index":4586,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.setparams",{"_index":1945,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.showdeleted",{"_index":5492,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.showdeletedialog(affected",{"_index":4210,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.showdrawer",{"_index":2213,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showplaceholder",{"_index":5413,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.sort",{"_index":3476,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sort.sort(({id",{"_index":3473,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sourcenodelist",{"_index":4007,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist.subscribe",{"_index":4010,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.current?.keys",{"_index":4012,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.loading",{"_index":4051,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub",{"_index":4009,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub?.unsubscribe",{"_index":4053,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.delete(source",{"_index":4027,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.has(source",{"_index":4016,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.keys",{"_index":4023,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.set(source",{"_index":4019,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.values",{"_index":4029,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.delete(source",{"_index":4026,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.foreach(sub",{"_index":4054,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.get(source).unsubscribe",{"_index":4025,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.set(source",{"_index":4020,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.spec.staticsources",{"_index":4014,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.state",{"_index":3184,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.state$.next(this.state",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.state.project",{"_index":586,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.statelock",{"_index":1860,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.staticsourcenodelist",{"_index":4005,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.stopcoalescing(coalescingtype",{"_index":914,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.subscribe(...args",{"_index":1880,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribe(data",{"_index":1846,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers",{"_index":1882,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.add(subscriber",{"_index":1874,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.delete(subscriber",{"_index":1879,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.size",{"_index":1890,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribetosubject",{"_index":4343,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.subscription",{"_index":5089,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":5083,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.syncstatewithurl(router",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.text",{"_index":5415,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.textstoregex(texts",{"_index":2958,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.thing",{"_index":1687,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thing$.subscribe",{"_index":1691,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things",{"_index":1911,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things$.subscribe",{"_index":1914,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub",{"_index":1913,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub.unsubscribe",{"_index":1915,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub",{"_index":1690,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub.unsubscribe",{"_index":1694,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.timeformatter.formattimedifference(comment.createdat",{"_index":1043,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(comment.lasteditedat",{"_index":1045,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(this.issue$.current.createdat",{"_index":2721,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timeformatter.formattimedifference(timelineitem.time",{"_index":5507,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["this.timeformatter.pluralize(issue.issuecomments?.totalcount",{"_index":2739,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timelineitem.iscoalesced",{"_index":5495,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemcontent.template",{"_index":5498,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemdeletedcontent.template",{"_index":5494,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitems",{"_index":880,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitems$.count",{"_index":887,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitemscontent",{"_index":5496,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemscontent.template",{"_index":5497,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.title.value",{"_index":1597,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.titletext?.nativeelement.textcontent",{"_index":5275,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.toastr.error(message",{"_index":5576,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.toastr.info(message",{"_index":5578,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.unclassified",{"_index":3056,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.unknownerror",{"_index":3912,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.unlinkissuemutation.mutate({input",{"_index":3644,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.update",{"_index":2862,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updatebutton",{"_index":5088,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.updatecommentmutation.mutate({input",{"_index":3653,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.updatecomponent",{"_index":4230,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatecomponentmutation.mutate({input",{"_index":1362,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.updateinterface",{"_index":4232,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateinterfacemutation.mutate({input",{"_index":2602,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.updatepasswordfieldsshown",{"_index":4780,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["this.updatequery.listento(this.componentstoreservice.updatecomponent(input",{"_index":4241,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatequery.listento(this.interfacestoreservice.update(mutationinputdata",{"_index":4245,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateresults",{"_index":4022,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updateselecteditems",{"_index":1588,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.useravailablyquery.client",{"_index":5171,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.useravailablyquery.fetch({username",{"_index":5176,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.username(firstitem",{"_index":937,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.username(timelineitem",{"_index":945,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.usernameasyncvalidator",{"_index":5172,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform",{"_index":3913,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls.confirm.updatevalueandvalidity",{"_index":5184,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls.password.reset",{"_index":3909,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls.password.value",{"_index":3907,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls[controlkey].markasdirty",{"_index":3903,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[controlkey].updatevalueandvalidity",{"_index":3904,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[key].markasdirty",{"_index":5186,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].markaspristine",{"_index":5193,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].updatevalueandvalidity",{"_index":5187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.reset",{"_index":5192,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validationdescription.setvalue(this.component.node.description",{"_index":4237,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.setvalue(this.interface.node.description",{"_index":4239,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.value",{"_index":4229,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationfilter.setvalue(this.getqueryparamfilter",{"_index":3483,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.validationims.setvalue",{"_index":4183,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('http://example.ims.com",{"_index":4234,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('this",{"_index":4187,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationlabeldescription.setvalue(data.description",{"_index":1498,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationlabelname.setvalue(data.name",{"_index":1495,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationname.setvalue(this.component.node.name",{"_index":4233,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.setvalue(this.interface.node.name",{"_index":4238,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.value",{"_index":4225,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.setvalue(this.component.node.ims.imstype",{"_index":4235,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.value",{"_index":4227,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationrole.setvalue('administrator",{"_index":254,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["this.validationurl.setvalue",{"_index":4184,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue('http://example.repo.com",{"_index":4236,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue(component.node.repositoryurl",{"_index":4188,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.value",{"_index":5412,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.verificationnameinput.markastouched",{"_index":2137,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.width",{"_index":1149,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.x",{"_index":3739,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.y",{"_index":3740,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.zoomonredraw",{"_index":4447,"title":{},"body":{"interfaces/Positions.html":{}}}],["though",{"_index":5818,"title":{},"body":{"index.html":{}}}],["through",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/User.html":{},"index.html":{}}}],["throw",{"_index":1895,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":5813,"title":{},"body":{"index.html":{}}}],["till",{"_index":6084,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["time",{"_index":816,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timeformatter",{"_index":827,"title":{"classes/TimeFormatter.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["timeline",{"_index":199,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["timeline'},{'name",{"_index":197,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline.component.html",{"_index":839,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timeline.component.scss",{"_index":840,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinecoalesceditemsdirective",{"_index":212,"title":{"directives/TimelineCoalescedItemsDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent",{"_index":196,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent.coalescable_events.get(itemtype",{"_index":909,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem",{"_index":905,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitem.createdat",{"_index":946,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem.createdby.id",{"_index":956,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitemcomponent",{"_index":198,"title":{"components/TimelineItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitemcontent",{"_index":5486,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeletedcontent",{"_index":5490,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeleteddirective",{"_index":214,"title":{"directives/TimelineItemDeletedDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitems",{"_index":861,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["timelineitemscontent",{"_index":5488,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinesingleitemdirective",{"_index":216,"title":{"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timeout",{"_index":2468,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["tipping",{"_index":3366,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["title",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["title.value.length",{"_index":1629,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["titletext",{"_index":5248,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["toast",{"_index":2466,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["toasterconfig",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastr",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["toastr.error(message",{"_index":2488,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastr.error(networkerror.message",{"_index":2494,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastrmodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["toastrmodule.forroot(toasterconfig",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["toasts",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["todo",{"_index":64,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["toggle",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{}}}],["toggleinset",{"_index":5291,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["toggleinset(item",{"_index":4101,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["togglemenu",{"_index":2226,"title":{},"body":{"components/FrameComponent.html":{}}}],["toggles",{"_index":2315,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["token",{"_index":11,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"additional-documentation/using-gropius.html":{}}}],["tokenpayload",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.name",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.sub",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokens",{"_index":67,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["toolbar",{"_index":2262,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":202,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["toolbar.component",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.html",{"_index":5537,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":5536,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":5533,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:22",{"_index":5543,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:25",{"_index":5544,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:27",{"_index":5548,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":5542,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:33",{"_index":5547,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:35",{"_index":5545,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:39",{"_index":5546,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":201,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["topbar",{"_index":2209,"title":{},"body":{"components/FrameComponent.html":{}}}],["topdistance",{"_index":3247,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["toptoolbarcomponent",{"_index":200,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":1952,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["totalcount",{"_index":1953,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["towards",{"_index":3774,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother",{"_index":3763,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.iszero",{"_index":3765,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.length",{"_index":3772,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.scale(1",{"_index":3773,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["track",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{},"classes/LayoutNode.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["trackbyfn",{"_index":3662,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["trackbyfn(item",{"_index":2168,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["transfered",{"_index":4978,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["transform",{"_index":1637,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/Positions.html":{}}}],["transition",{"_index":6010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transparent",{"_index":3673,"title":{},"body":{"components/LabelSearchComponent.html":{},"components/TimelineItemComponent.html":{}}}],["travel",{"_index":3732,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["treated",{"_index":5238,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["tree.root.children[primary_outlet",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["tries",{"_index":3877,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":1818,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["trigger('routeanimations",{"_index":6009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggered",{"_index":4375,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["triggering",{"_index":1791,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["triggers",{"_index":4765,"title":{},"body":{"interfaces/Positions.html":{}}}],["true",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["try",{"_index":3888,"title":{},"body":{"components/LoginComponent.html":{}}}],["ts",{"_index":1840,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["tsconfig.doc.json",{"_index":5868,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["tslib",{"_index":5787,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":791,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["turned",{"_index":3023,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["twice",{"_index":1856,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["two",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["typealiases",{"_index":5890,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":2125,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["typename",{"_index":3833,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["typeof",{"_index":2092,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["typeparam",{"_index":1804,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["types",{"_index":1803,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["typescript",{"_index":2291,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["u",{"_index":2200,"title":{},"body":{"interfaces/FilterState.html":{}}}],["ul",{"_index":5528,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["uml",{"_index":5845,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{}}}],["unclassified",{"_index":1585,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["unclassifiedcount",{"_index":2349,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["undefined",{"_index":944,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3712,"title":{},"body":{"classes/LayoutNode.html":{}}}],["undone",{"_index":1033,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["undone!'].concat(affected",{"_index":4217,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["uneditable",{"_index":2732,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["union",{"_index":2301,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["unique",{"_index":2810,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["uniquely",{"_index":3825,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["unknown",{"_index":1885,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unknownerror",{"_index":3882,"title":{},"body":{"components/LoginComponent.html":{}}}],["unlabelledevent",{"_index":845,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unless",{"_index":1732,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unlink",{"_index":3565,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlink(unlinkissueinput",{"_index":3636,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkevent",{"_index":856,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unlinkissuegql",{"_index":3578,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissueinput",{"_index":3637,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissuemutation",{"_index":3577,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unnecessary",{"_index":2067,"title":{},"body":{"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["unsubscribe",{"_index":1693,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["unsubscribes",{"_index":3991,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["until",{"_index":1753,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"additional-documentation/using-gropius.html":{}}}],["update",{"_index":1065,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["update(input",{"_index":2594,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatebutton",{"_index":5099,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["updatecomment",{"_index":3566,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomment(updatecommentinput",{"_index":3638,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentgql",{"_index":3592,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentinput",{"_index":3639,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentmutation",{"_index":3591,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomponent",{"_index":1312,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponent(input",{"_index":1350,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentgql",{"_index":1323,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentinput",{"_index":1351,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentinterfacegql",{"_index":2580,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatecomponentinterfaceinput",{"_index":2595,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentmutation",{"_index":1308,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updated",{"_index":4142,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterface",{"_index":4139,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterfacemutation",{"_index":2579,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatepassword",{"_index":4775,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updatepasswordfieldsshown",{"_index":4772,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updateposition",{"_index":1054,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["updateposition(x",{"_index":1061,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["updatequery",{"_index":4176,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateresults",{"_index":3965,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updates",{"_index":1574,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updateselectedcategories",{"_index":3015,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["updateselecteditems",{"_index":1566,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["updatetemplate",{"_index":3120,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["updating",{"_index":1304,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/Positions.html":{}}}],["upon",{"_index":1779,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{}}}],["upper",{"_index":4632,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["url",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"injectables/StateService.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["urls",{"_index":6058,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["urlvalidator",{"_index":729,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["usable",{"_index":721,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["usage",{"_index":3938,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["use",{"_index":874,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["used",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"directives/ItemDirective.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["usefactory",{"_index":2513,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["useful",{"_index":5097,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["user",{"_index":204,"title":{"interfaces/User.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["user's",{"_index":6035,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["user.displayname",{"_index":259,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/UserItemComponent.html":{}}}],["user.username",{"_index":5557,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user1",{"_index":4898,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user1.de",{"_index":4899,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2",{"_index":4900,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2.de",{"_index":4901,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3",{"_index":4902,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3.de",{"_index":4903,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4",{"_index":4904,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4.de",{"_index":4905,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5",{"_index":4906,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5.de",{"_index":4907,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6",{"_index":4908,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6.de",{"_index":4909,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["useravailablyquery",{"_index":5141,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usercaneditissue",{"_index":2677,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["userfilter",{"_index":5591,"title":{},"body":{"injectables/UsersService.html":{}}}],["useritemcomponent",{"_index":203,"title":{"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermock",{"_index":4952,"title":{"interfaces/userMock.html":{}},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["username",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["username(item",{"_index":926,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["usernameasyncvalidator",{"_index":5134,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usernotifyservice",{"_index":984,"title":{"injectables/UserNotifyService.html":{}},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["users",{"_index":2847,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/QueriesService.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["users.service",{"_index":5037,"title":{},"body":{"injectables/QueriesService.html":{}}}],["usersservice",{"_index":5028,"title":{"injectables/UsersService.html":{}},"body":{"injectables/QueriesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userstoadd",{"_index":256,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["userstodelete",{"_index":5216,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["userstoragekey",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["uses",{"_index":5123,"title":{},"body":{"interfaces/QueryListParams.html":{},"additional-documentation/managing-gropius.html":{}}}],["usevalue",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["using",{"_index":1649,"title":{"additional-documentation/using-gropius.html":{}},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["ustutt/grapheditor",{"_index":1212,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"dependencies.html":{}}}],["usually",{"_index":5802,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":4302,"title":{},"body":{"interfaces/Positions.html":{}}}],["v",{"_index":3792,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["valid",{"_index":1443,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["validateconfirmpassword",{"_index":5137,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateform",{"_index":3883,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":234,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["validationdescription",{"_index":1414,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationerrors",{"_index":5165,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationfilter",{"_index":3384,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["validationims",{"_index":1412,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationlabeldescription",{"_index":1451,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationlabelname",{"_index":1452,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationname",{"_index":1408,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationprovider",{"_index":1413,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationrole",{"_index":235,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["validations",{"_index":1407,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["validationtype",{"_index":4131,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["validationurl",{"_index":1410,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validator",{"_index":1478,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validatorfn",{"_index":2119,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["validators",{"_index":250,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["validators.compose",{"_index":735,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.email",{"_index":5173,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(256",{"_index":745,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.maxlength(30",{"_index":1479,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validators.maxlength(655536",{"_index":730,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.pattern",{"_index":737,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.required",{"_index":247,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":5190,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.length",{"_index":5414,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["value.map(item",{"_index":2854,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["value.pageinfo",{"_index":1996,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.password",{"_index":5189,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.totalcount",{"_index":1995,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.username",{"_index":5188,"title":{},"body":{"components/RegisterComponent.html":{}}}],["values",{"_index":2350,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":96,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["variable",{"_index":4758,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3088,"title":{"miscellaneous/variables.html":{}},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":2807,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["variants",{"_index":2806,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["various",{"_index":3658,"title":{},"body":{"directives/ItemDirective.html":{},"interfaces/Positions.html":{}}}],["vector",{"_index":3725,"title":{"classes/Vector.html":{}},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["vector(positionx",{"_index":3749,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["verbatim",{"_index":1735,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["verification",{"_index":5058,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["verificationname",{"_index":2111,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["verificationnameinput",{"_index":2135,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["verify",{"_index":751,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/RegisterComponent.html":{}}}],["version",{"_index":6042,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["vertical",{"_index":2609,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["very",{"_index":5592,"title":{},"body":{"injectables/UsersService.html":{}}}],["via",{"_index":1250,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"interfaces/TextFragment.html":{},"additional-documentation/managing-gropius.html":{}}}],["view",{"_index":225,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["viewchild",{"_index":826,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild('body",{"_index":1577,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["viewchild('comment",{"_index":2631,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["viewchild('deletequery",{"_index":4173,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('frame",{"_index":1135,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('graph",{"_index":4291,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('minimap",{"_index":4294,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('nodequery",{"_index":4171,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('resizecorner",{"_index":1137,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('titleinput",{"_index":2694,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["viewchild('titletext",{"_index":5247,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["viewchild('updatequery",{"_index":4175,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild(issuegraphcomponent",{"_index":3036,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(labelsearchcomponent",{"_index":3038,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(matpaginator",{"_index":3433,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matpaginatormodule",{"_index":4912,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matsort",{"_index":3438,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(nodedetailscomponent",{"_index":1141,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild(querycomponent",{"_index":868,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["viewers",{"_index":1784,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["views",{"_index":2204,"title":{},"body":{"components/FrameComponent.html":{}}}],["vincent",{"_index":6086,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["visibility",{"_index":4784,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visibility_off",{"_index":4783,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visible",{"_index":4493,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["visible.height",{"_index":4507,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.width",{"_index":4505,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.x",{"_index":4514,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.y",{"_index":4515,"title":{},"body":{"interfaces/Positions.html":{}}}],["visited",{"_index":3754,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["visual",{"_index":4642,"title":{},"body":{"interfaces/Positions.html":{}}}],["visualization",{"_index":6019,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["visualize",{"_index":1240,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["visualized",{"_index":4614,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["visualizes",{"_index":5852,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["visualizing",{"_index":5847,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["vs",{"_index":1244,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["wagner",{"_index":6077,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["wait",{"_index":1751,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1031,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["wanted",{"_index":3892,"title":{},"body":{"components/LoginComponent.html":{}}}],["wasnt",{"_index":4689,"title":{},"body":{"interfaces/Positions.html":{}}}],["way",{"_index":5084,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["we're",{"_index":1908,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["weakmap",{"_index":1122,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["webcomponent",{"_index":5775,"title":{},"body":{"dependencies.html":{}}}],["webcomponent/lib/dynamic",{"_index":3107,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["webcomponent/lib/edge",{"_index":1214,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/grapheditor",{"_index":2980,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["webcomponent/lib/grouping",{"_index":3221,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["webcomponent/lib/index",{"_index":2523,"title":{},"body":{"modules/GraphsModule.html":{}}}],["webcomponent/lib/link",{"_index":3110,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["webcomponent/lib/node",{"_index":1213,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/util",{"_index":4270,"title":{},"body":{"interfaces/Positions.html":{}}}],["webkit",{"_index":4850,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["weight",{"_index":1633,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["weird",{"_index":1617,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["well",{"_index":1050,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{}}}],["west",{"_index":4266,"title":{},"body":{"interfaces/Positions.html":{}}}],["what's",{"_index":6029,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["whenever",{"_index":3004,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["whether",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{}}}],["white",{"_index":742,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["whitesmoke",{"_index":5117,"title":{},"body":{"components/QueryComponent.html":{}}}],["whitespace",{"_index":741,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["whole",{"_index":5805,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["whoose",{"_index":2334,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{}}}],["whose",{"_index":3998,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["width",{"_index":78,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["width:100",{"_index":4802,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["window",{"_index":6021,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["within",{"_index":1253,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["without",{"_index":1713,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["won't",{"_index":1620,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["wont",{"_index":2887,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["word",{"_index":5423,"title":{},"body":{"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{}}}],["work",{"_index":5597,"title":{},"body":{"injectables/UsersService.html":{}}}],["workaround",{"_index":2310,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["worked",{"_index":5881,"title":{},"body":{"index.html":{}}}],["works",{"_index":2710,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["wrap",{"_index":3943,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["wrapper",{"_index":1446,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["x",{"_index":1067,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["x.name.tolocalelowercase().indexof(term.tolocalelowercase",{"_index":3690,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["x2",{"_index":3224,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["xmax",{"_index":4734,"title":{},"body":{"interfaces/Positions.html":{}}}],["xmin",{"_index":4732,"title":{},"body":{"interfaces/Positions.html":{}}}],["xoffset",{"_index":3249,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["y",{"_index":1063,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["y2",{"_index":3225,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["year",{"_index":5470,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["yes",{"_index":1463,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["yielded",{"_index":5057,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["ymax",{"_index":4735,"title":{},"body":{"interfaces/Positions.html":{}}}],["ymin",{"_index":4733,"title":{},"body":{"interfaces/Positions.html":{}}}],["yoffset",{"_index":3250,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["you've",{"_index":1987,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["z",{"_index":5514,"title":{},"body":{"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["zero",{"_index":2014,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["zeroposition",{"_index":1256,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":5790,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"overview.html":{}}}],["zoomonredraw",{"_index":4318,"title":{},"body":{"interfaces/Positions.html":{}}}],["zooms",{"_index":4697,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransform",{"_index":4684,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransformasstring",{"_index":4685,"title":{},"body":{"interfaces/Positions.html":{}}}],["zorro",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessTokenDialogComponent.html":{"url":"components/AccessTokenDialogComponent.html","title":"component - AccessTokenDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessTokenDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-token-dialog\n            \n\n            \n                styleUrls\n                ./access-token-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./access-token-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'option2'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-access-token-dialog',\n  templateUrl: './access-token-dialog.component.html',\n  styleUrls: ['./access-token-dialog.component.scss']\n})\nexport class AccessTokenDialogComponent implements OnInit {\n  selected = 'option2';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //close access token settings dialog\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n\n  public generateToken() {\n    //TODO\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        close_ios\n    \n\n    Personal access tokens\n    Generate a personal access token for quicker access ...\n\n    \n        \n          Note\n          \n        \n      \n\n      \n        Expitarion\n        \n          7 days\n          30 days\n          60 days\n          90 days\n        \n      \n\n      \n\n      \n    \n        Generate Token\n    \n\n      \n        Cancel\n    \n\n\n    \n\n    \n                \n                    ./access-token-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n\n.example-form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n  \n.example-full-width {\n    width: 100%;\n}\n\n.new-item-button{\n    float: right;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close_ios        Personal access tokens    Generate a personal access token for quicker access ...                      Note                                      Expitarion                  7 days          30 days          60 days          90 days                                      Generate Token                  Cancel    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccessTokenDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddProjectMemberDialogComponent.html":{"url":"components/AddProjectMemberDialogComponent.html","title":"component - AddProjectMemberDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddProjectMemberDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a view to add a member to a project\nThe view is just mocked, so no interaction with the backend or database is provided yet\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-project-member-dialog\n            \n\n            \n                styleUrls\n                ./add-project-member-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-project-member-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loading\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                validation\n                            \n                            \n                                validationRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n/**\n * This component provides a view to add a member to a project\n * The view is just mocked, so no interaction with the backend or database is provided yet\n */\n@Component({\n  selector: 'app-add-project-member-dialog',\n  templateUrl: './add-project-member-dialog.component.html',\n  styleUrls: ['./add-project-member-dialog.component.scss']\n})\nexport class AddProjectMemberDialogComponent implements OnInit {\n  loading = false;\n  selectedUsers = [];\n  constructor(public dialogRef: MatDialogRef,@Inject(MAT_DIALOG_DATA) public data) { }\n  validation = new FormControl('', [Validators.required]);\n  validationRole = new FormControl('', [Validators.required]);\n  ngOnInit(): void {\n    this.validationRole.setValue('administrator')\n  }\n\n  //cancel button\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  //add member button\n  onOkClick(){\n    const data = {usersToAdd: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n}\n\n    \n\n    \n        Add Project Member\n\n\n  \n  \n\n    \n\n      {{user.displayName}}\n    \n  \n\n  \n  \n    Role\n    \n      Administrator\n    \n  \n\n\n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-project-member-dialog.component.scss\n                \n                .dialog-content {\n  min-height: 400px;\n  min-width: 400px;\n  max-width: 600px;\n}\n.actions {\n  float:right\n}\n.stretch {\n  width: 100%;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Project Member              {{user.displayName}}              Role          Administrator        Cancel  Add'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddProjectMemberDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gropius'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gropius';\n\n  constructor(private matIconRegistry: MatIconRegistry,\n              private domSanitizer: DomSanitizer) {\n    const ccimsIcons = {\n      'relation-edge': 'relation-edge.svg',\n      'resize-corner': 'resize-corner.svg'\n    };\n\n    for (const [key, value] of Object.entries(ccimsIcons)) {\n      console.log('register', key, 'as', '../assets/icons/svg/' + value );\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/svg/' + value));\n    }\n\n    // add all issue icons\n    for (const type of ['normal', 'assigned']) {\n      for (const category of ['bug', 'feature', 'uncategorized']) {\n        for (const isClosed of [false, true]) {\n          for (const edgeType of [null, 'in', 'out', 'inout']) {\n            const assetUrl = [\n              '../assets/icons/issues/', type, '/', category, isClosed ? '-closed' : null, edgeType && '-', edgeType, '.svg'\n            ].filter(part => !!part).join('');\n            const iconName = [\n              'issue', type === 'assigned' ? 'assigned' : null, category, isClosed ? 'closed' : null, edgeType\n            ].filter(part => !!part).join('-');\n            this.matIconRegistry.addSvgIcon(iconName, this.domSanitizer.bypassSecurityTrustResourceUrl(assetUrl));\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessTokenDialogComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            ComponentContextMenuComponent\n                        \n                        \n                            CreateComponentDialogComponent\n                        \n                        \n                            CreateEditLabelDialogComponent\n                        \n                        \n                            CreateInterfaceDialogComponent\n                        \n                        \n                            CreateIssueDialogComponent\n                        \n                        \n                            CreateProjectDialogComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            IssueContentsComponent\n                        \n                        \n                            IssueDetailComponent\n                        \n                        \n                            LinkedIssueItemComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MarkdownEditorComponent\n                        \n                        \n                            MarkdownPreviewComponent\n                        \n                        \n                            NodeDetailsComponent\n                        \n                        \n                            NodeDetailsPageComponent\n                        \n                        \n                            ProfileSettingsDialogComponent\n                        \n                        \n                            ProjectListComponent\n                        \n                        \n                            ProjectOverviewComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RemoveDialogComponent\n                        \n                        \n                            RemoveProjectMemberComponentComponent\n                        \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            SideNavComponent\n                        \n                        \n                            TextDisplayComponent\n                        \n                        \n                            TimelineCoalescedItemsDirective\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelineItemComponent\n                        \n                        \n                            TimelineItemDeletedDirective\n                        \n                        \n                            TimelineSingleItemDirective\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            GraphsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProjectListComponent} from './project-list-component/project-list.component';\nimport {ProjectOverviewComponent} from './project-overview/project-overview.component';\nimport {TopToolbarComponent} from './top-toolbar/top-toolbar.component';\nimport {SideNavComponent} from './side-nav/side-nav.component';\nimport {GraphQLModule} from './graphql.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {IssueDetailComponent} from './issue-detail/issue-detail.component';\nimport {GraphsModule} from './graphs/graphs.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NZ_ICONS} from 'ng-zorro-antd/icon';\nimport {en_US, NZ_I18N} from 'ng-zorro-antd/i18n';\nimport {NgZorroAntdModule} from 'ng-zorro-antd';\nimport * as AllIcons from '@ant-design/icons-angular/icons';\nimport {IconDefinition} from '@ant-design/icons-angular';\nimport {CommonModule, registerLocaleData} from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport {LoginComponent} from './login/login.component';\nimport {FrameComponent} from './frame/frame.component';\nimport {RegisterComponent} from './register/register.component';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {GlobalConfig, ToastrModule} from 'ngx-toastr';\nimport {RemoveDialogComponent} from './dialogs/remove-dialog/remove-dialog.component';\nimport {CreateComponentDialogComponent} from './dialogs/create-component-dialog/create-component-dialog.component';\nimport {CreateInterfaceDialogComponent} from './dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {CreateIssueDialogComponent} from './dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {NgOptionHighlightModule} from '@ng-select/ng-option-highlight';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport {CreateEditLabelDialogComponent} from '@app/dialogs/create-label-dialog/create-edit-label-dialog.component';\nimport {RemoveProjectMemberComponentComponent} from './dialogs/remove-project-member-component/remove-project-member-component.component';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ComponentContextMenuComponent} from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsComponent} from '@app/node-details/node-details.component';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MarkdownEditorComponent} from './markdown/markdown-editor/markdown-editor.component';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {MarkdownPreviewComponent} from './markdown/markdown-preview/markdown-preview.component';\nimport {TimelineComponent} from './issue-detail/timeline/timeline.component';\nimport {CommentComponent} from './issue-detail/comment/comment.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\nimport {TextDisplayComponent} from '@app/text-display/text-display.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {IssueContentsComponent} from '@app/issue-detail/issue-contents.component';\nimport {LinkedIssueItemComponent} from '@app/issue-detail/linked-issue-item.component';\nimport {SettingsDialogComponent} from '@app/dialogs/settings-dialog/settings-dialog.component';\nimport {ProfileSettingsDialogComponent} from './dialogs/profile-settings-dialog/profile-settings-dialog.component';\nimport {AccessTokenDialogComponent} from './dialogs/access-token-dialog/access-token-dialog.component';\nimport {\n  TimelineCoalescedItemsDirective,\n  TimelineItemComponent,\n  TimelineItemDeletedDirective,\n  TimelineSingleItemDirective\n} from '@app/issue-detail/timeline/coalesced/timeline-item.component';\n\nregisterLocaleData(en);\nconst antDesignIcons = AllIcons as {\n  [key: string]: IconDefinition;\n};\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key]);\n\n// configuration for toasts, the toastrservice is configured in graphql.module.ts\nconst toasterConfig: Partial = {\n  maxOpened: 4,\n  autoDismiss: true\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectListComponent,\n    ProjectOverviewComponent,\n    TopToolbarComponent,\n    SideNavComponent,\n    IssueDetailComponent,\n    LoginComponent,\n    FrameComponent,\n    RegisterComponent,\n    CreateProjectDialogComponent,\n    RemoveDialogComponent,\n    CreateComponentDialogComponent,\n    CreateInterfaceDialogComponent,\n    CreateIssueDialogComponent,\n    CreateEditLabelDialogComponent,\n    RemoveProjectMemberComponentComponent,\n    ComponentContextMenuComponent,\n    NodeDetailsComponent,\n    NodeDetailsPageComponent,\n    MarkdownEditorComponent,\n    MarkdownPreviewComponent,\n    TimelineComponent,\n    CommentComponent,\n    TextDisplayComponent,\n    IssueContentsComponent,\n    LinkedIssueItemComponent,\n    SettingsDialogComponent,\n    ProfileSettingsDialogComponent,\n    AccessTokenDialogComponent,\n    TimelineItemComponent,\n    TimelineSingleItemDirective,\n    TimelineCoalescedItemsDirective,\n    TimelineItemDeletedDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(toasterConfig),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    GraphQLModule,\n    HttpClientModule,\n    GraphsModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    NgSelectModule,\n    CommonModule,\n    NgOptionHighlightModule,\n    ColorPickerModule,\n    MatExpansionModule,\n    PortalModule,\n    MonacoEditorModule.forRoot(),\n    MarkdownModule.forRoot(),\n    MatButtonToggleModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [{provide: NZ_I18N, useValue: en_US}, {provide: NZ_ICONS, useValue: icons}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectListComponent } from './project-list-component/project-list.component';\nimport { ProjectOverviewComponent } from './project-overview/project-overview.component';\nimport { IssueDetailComponent } from './issue-detail/issue-detail.component';\nimport { IssueGraphControlsComponent } from './graphs/issue-graph-controls/issue-graph-controls.component';\nimport { LoginComponent } from './login/login.component';\nimport { FrameComponent } from './frame/frame.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { ProjectIssueListComponent } from './project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: FrameComponent, canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'projects', pathMatch: 'full' },\n      { path: 'projects', component: ProjectListComponent },\n      {\n        path: 'projects/:id',\n        children: [\n          { path: '', pathMatch: 'full', component: ProjectOverviewComponent },\n          { path: 'graph', component: IssueGraphControlsComponent },\n          {\n            path: 'issues',\n            children: [\n              { path: '', pathMatch: 'full', component: ProjectIssueListComponent },\n              { path: ':issueId', pathMatch: 'full', component: IssueDetailComponent },\n            ]\n          },\n          { path: 'members', component: ProjectMembersComponent },\n          {\n            path: 'component/:componentId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n              {\n                path: 'interface/:interfaceId',\n                children: [\n                  { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n                  { path: 'component/:componentId/issue/:issueId', pathMatch: 'full', component: IssueDetailComponent }\n                ]\n              },\n            ]\n          },\n          {\n            path: 'interface/:interfaceId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n            ]\n          }\n        ]\n      },\n      { path: 'issue', component: IssueDetailComponent },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            project\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project:     GetBasicProjectQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GetBasicProjectQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is responsible for navigating the user to /login when he is not\ncurrently logged in according to the AuthenticationsService. It's canActivate\nmethod is automatically invoked by angular on routing events.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:22\n                \n            \n\n\n            \n                \n                    Redirects user to login if he is not authenticated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unused but required for CanActivate signature\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router state when guard was invoked, used to redirect the user after login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff the user is logged in according to the AuthenticationService\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/** AuthGuard is responsible for navigating the user to /login when he is not\n * currently logged in according to the AuthenticationsService. It's canActivate\n * method is automatically invoked by angular on routing events.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    /**\n     * Redirects user to login if he is not authenticated.\n     * @param route unused but required for CanActivate signature\n     * @param state router state when guard was invoked, used to redirect the user after login\n     * @returns true iff the user is logged in according to the AuthenticationService\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for saving user name, id and jwt token in localstorage\nand exposing the name and id through currentUserSubject\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Readonly\n                                userStorageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserFromStorage\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUserToStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserFromStorage\n                        \n                    \n                \n            \n            \n                \nfetchUserFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:43\n                \n            \n\n\n            \n                \n                    If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\nthrough currentUserSubject. If the login fails the returned observable errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the logged in user, errors if login is not successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:59\n                \n            \n\n\n            \n                \n                    remove user from local storage and set subject holding the current user to null\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserToStorage\n                        \n                    \n                \n            \n            \n                \nsaveUserToStorage(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userStorageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'currentUser'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/authentication.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCIMSValidators.html":{"url":"classes/CCIMSValidators.html","title":"class - CCIMSValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCIMSValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/validators.ts\n        \n\n\n            \n                Description\n            \n            \n                This class provides commonly used validators in CCIMS usable for e.g. input fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                contentValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameFormatValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                urlValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        contentValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:30\n                        \n                    \n\n            \n                \n                    Ensures that the text has the appropriate length for content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameFormatValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:16\n                        \n                    \n\n            \n                \n                    Ensures that the text is both usable as a name (#nameValidator) and that the text does not start/end with\na whitespace (white-spaces in the name are allowed)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(256)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:10\n                        \n                    \n\n            \n                \n                    Ensures that text has the appropriate length to be used as a name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        urlValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:25\n                        \n                    \n\n            \n                \n                    Ensures that the provided text has the correct length and the correct format for an URL\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Validators} from '@angular/forms';\n\n/**\n * This class provides commonly used validators in CCIMS usable for e.g. input fields\n */\nexport class CCIMSValidators {\n  /**\n   * Ensures that text has the appropriate length to be used as a name\n   */\n  static readonly nameValidator = Validators.maxLength(256);\n\n  /**\n   * Ensures that the text is both usable as a name ({@link #nameValidator}) and that the text does not start/end with\n   * a whitespace (white-spaces in the name are allowed)\n   */\n  static readonly nameFormatValidator = Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ]);\n\n  /**\n   * Ensures that the provided text has the correct length and the correct format for an URL\n   */\n  // TODO: Verify URL pattern, leaving this out for now for quicker testing\n  static readonly urlValidator = Validators.maxLength(655536);\n\n  /**\n   * Ensures that the text has the appropriate length for content\n   */\n  static readonly contentValidator = Validators.maxLength(655536);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CacheNodeComponent.html":{"url":"components/CacheNodeComponent.html","title":"component - CacheNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CacheNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cache-node.component.ts\n\n\n\n    \n        Description\n    \n    \n        Loads data for a node from the cache or from the API.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [cache-node]\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                itemTemplate\n                            \n                            \n                                node$\n                            \n                            \n                                nodeSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lazy\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cache-node.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:20\n                            \n                        \n                \n                    \n                        If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:18\n                            \n                        \n                \n                    \n                        The node that will be loaded.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        itemTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ItemDirective, {read: TemplateRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ItemDirective } from '@app/components/item.directive';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\n\n/**\n * Loads data for a node from the cache or from the API.\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[cache-node]',\n  template: ''\n})\nexport class CacheNodeComponent implements OnInit, OnDestroy {\n  /** The node that will be loaded. */\n  @Input() node: NodeId;\n  /** If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already) */\n  @Input() lazy = true;\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  node$: DataNode;\n  nodeSub: Subscription;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.node$ = this.dataService.getNode(this.node);\n    this.nodeSub = this.lazy ? this.node$.subscribeLazy() : this.node$.subscribe();\n  }\n  ngOnDestroy() {\n    this.nodeSub.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CacheNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoalescedTimelineItem.html":{"url":"interfaces/CoalescedTimelineItem.html","title":"interface - CoalescedTimelineItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoalescedTimelineItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/timeline.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface may contain in contrast to a normal timeline item several events in one item.\nTimeline items are coalesced because they are performed in close succession.\nlabel 1 and label 2 are added to an issue at the same time.\nInstead of representing them as to individual items/events, they will be represented as one item in the timeline.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCoalesced\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCoalesced\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCoalesced:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:     Array | IssueTimelineItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | IssueTimelineItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\nimport {Router} from '@angular/router';\nimport {IssueTimelineItem} from '../../../generated/graphql-dgql';\nimport {DataList} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This interface may contain in contrast to a normal timeline item several events in one item.\n * Timeline items are coalesced because they are performed in close succession.\n * @example\n * label 1 and label 2 are added to an issue at the same time.\n * Instead of representing them as to individual items/events, they will be represented as one item in the timeline.\n */\nexport interface CoalescedTimelineItem {\n  user: string;\n  type: string;\n  isCoalesced: boolean;\n  item: Array | IssueTimelineItem;\n  time: string;\n}\n\n\ntype ItemFilterFunction = (IssueTimelineItem) => boolean;\n\n/**\n * This component shows the full timeline\n * with all its timeline events for a given issue.\n */\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements AfterViewInit {\n  /**\n   * Events which need to be coalesced\n   */\n  static readonly COALESCABLE_EVENTS: Map = new Map([\n      ['LabelledEvent', (item) => {\n        return !!item.label;\n      }],\n      ['UnlabelledEvent', (item) => {\n        return !!item.removedLabel;\n      }],\n      ['AddedToComponentEvent', (item) => {\n        return !!item.component;\n      }],\n      ['RemovedFromComponentEvent', (item) => {\n        return !!item.removedComponent;\n      }],\n      ['AddedToLocationEvent', (item) => {\n        return !!item.location;\n      }],\n      ['RemovedFromLocationEvent', (item) => {\n        return !!item.removedLocation;\n      }],\n      ['LinkEvent', (item) => {\n        return !!item.linkedIssue;\n      }],\n      ['UnlinkEvent', (item) => {\n        return !!item.removedLinkedIssue;\n      }]\n    ]\n  );\n\n  /**\n   * provides functionality for time formatting for correct representation\n   */\n  public timeFormatter = new TimeFormatter();\n  /**\n   * Already coalesced items for timeline representation\n   */\n  timelineItems: Array = [];\n  /**\n   * Subscription for timelineitems\n   */\n  public timelineItems$: DataList;\n  /**\n   * The id of the corresponding issue for which the timeline is shown\n   */\n  @Input() issueId: NodeId;\n  /**\n   * The id of the project in which the issue is listed\n   */\n  @Input() projectID: string;\n  /**\n   * Component which is handling the query to the server\n   */\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  /**\n   * Service for handling API connection is required\n   * @param {DataService} dataService handling api connection\n   */\n  constructor(private dataService: DataService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.requestTimelineItems();\n  }\n\n  /**\n   * Retrieves all timeline items (aka. timeline events) for the current issue.\n   * Use in ngAfterViewInit() lifecycle hook\n   */\n  requestTimelineItems(): void {\n\n    // gets an observable with all timeline items for thecurrent issue\n    this.timelineItems$ = this.dataService.getList({\n      node: this.issueId,\n      type: ListType.TimelineItems\n    });\n\n    //FIXME: decide on the count\n    this.timelineItems$.count = 99999;\n\n    this.query.listenTo(this.timelineItems$, value => {\n      this.prepareTimelineItems(value);\n    });\n  }\n\n  /**\n   * Prepares the timeline items (aka. the timeline events).\n   * @param  {Map} items - Timeline items to prepare.\n   */\n  prepareTimelineItems(items: Map): void {\n\n    let coalescingType = null;\n    let coalesceList = new Array();\n    let coalesced: Array = [];\n\n    /**\n     * Adds items from the coalesce list {@link coalesceList}\n     * to a list containing all coalesced timeline items {@link coalesced}\n     * in case the coalesce list is not empty.\n     */\n    const finishCoalescing = () => {\n\n      // case: the coalesce list is empty\n      if (coalesceList.length === 0) {\n        return;\n      }\n\n      // case: the coalesce list is not empty\n      else {\n        coalesced = this.addCoalesceItems(coalesceList, coalesced);\n        coalesceList = [];\n      }\n    };\n\n    for (const timelineItem of items.values()) {\n      const itemType = (timelineItem as any).__typename;\n      const filter = TimelineComponent.COALESCABLE_EVENTS.get(itemType);\n      let stopCoalescing = false;\n\n      // decides whether to stop coalescing\n      stopCoalescing = this.stopCoalescing(coalescingType, coalesceList, stopCoalescing, timelineItem);\n\n      // case: the coalescing type equals the current item type\n      // or coalescing should stop\n      if (coalescingType !== itemType || stopCoalescing) {\n\n        // adds remaining items\n        finishCoalescing();\n\n        if (filter && filter(timelineItem)) {\n          coalescingType = itemType;\n          coalesceList.push(timelineItem);\n        } else {\n          coalescingType = null;\n          coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        }\n\n        continue;\n      }\n\n      // case: the coalescing type is null\n      else if (coalescingType == null) {\n        coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        continue;\n      }\n\n      if (filter(timelineItem)) {\n        coalesceList.push(timelineItem);\n      }\n    }\n\n    // adds remaining items\n    finishCoalescing();\n    this.timelineItems = coalesced;\n  }\n\n  /**\n   * Returns the name of the user\n   * that created a given timeline item (aka. timeline event)\n   * or just \"Deleted User\" in case the user no longer exists.\n   * @param  {IssueTimelineItem} item - The given timeline item.\n   * @returns - Name of the timeline item creator.\n   */\n  private userName(item: IssueTimelineItem) {\n\n    // case: the timeline item's creator's name can be retrieved\n    if (item.createdBy) {\n      return item.createdBy.displayName;\n    }\n\n    return 'Deleted User';\n  }\n\n  /**\n   * Adds items from a given coalesce list\n   * to a given list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem[]} coalesceList  The given coalesce list.\n   * @param  {CoalescedTimelineItem[]} coalesced  The given list containing all coalesced timeline items.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addCoalesceItems(coalesceList: IssueTimelineItem[], coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n    const firstItem: any = coalesceList[0];\n    const itemType = firstItem.__typename;\n    const createdBy = this.userName(firstItem);\n\n    // case: the coalesce list has more than one item\n    if (coalesceList.length > 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: true,\n        item: coalesceList,\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // case: the coalesce list has only one item\n    else if (coalesceList.length === 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: false,\n        item: coalesceList[0],\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // returns the list containing all coalesced timeline items\n    return coalesced;\n  }\n\n  /**\n   * Adds a single item to a list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem} timelineItem - The given item.\n   * @param  {ItemFilterFunction|undefined} filter - Filter used on the given item.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addSingleCoalesceItem(\n    timelineItem: IssueTimelineItem,\n    filter: ItemFilterFunction | undefined,\n    coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n      if (!filter || filter(timelineItem)) {\n        coalesced.push({\n          type: (timelineItem as any).__typename,\n          isCoalesced: false,\n          item: timelineItem,\n          user: this.userName(timelineItem),\n          time: timelineItem.createdAt\n        });\n      }\n\n      // returns the list containing all coalesced timeline items\n      return coalesced;\n  }\n\n  /**\n   * Stops the coalescing process in case\n   * a) the user differs or\n   * b) the current item was already added\n   * 60 seconds after the first one added.\n   * @param  {any} coalescingType - Coalescing type handled.\n   * @param  {IssueTimelineItem[]} coalesceList - Coalesce list handled.\n   * @param  {boolean} stopCoalescing - Value that determines whether the coalescing should stop.\n   * @param  {IssueTimelineItem} timelineItem - Timeline item handled.\n   * @returns The value that determines whether the coalescing should stop.\n   */\n   private stopCoalescing(coalescingType: any, coalesceList: IssueTimelineItem[], stopCoalescing: boolean, timelineItem: IssueTimelineItem) {\n\n    if (coalescingType) {\n      const firstItem = coalesceList[0];\n      stopCoalescing = firstItem.createdBy.id !== timelineItem.createdBy.id ||\n        Math.abs(Date.parse(timelineItem.createdAt) - Date.parse(firstItem.createdAt)) > 60000;\n    }\n\n    return stopCoalescing;\n  }\n\n  /**\n   * Checks if the user self-assigned this issue for text representation.\n   * @param assignedEvent - Assigned event handled.\n   */\n  selfAssigned(assignedEvent): boolean {\n\n    if (assignedEvent.createdBy.id === assignedEvent.removedAssignee?.id) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles the id for a given node...\n   */\n  makeCommentId(node): NodeId {\n    return {type: NodeType.IssueComment, id: node.id};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/comment/comment.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue comment.\nThe comment will be subscribed to lazily (see DataNode).\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editBody\n                            \n                            \n                                    Public\n                                savingBody\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteComment\n                            \n                            \n                                    Public\n                                editComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentId\n                            \n                            \n                                isIssueBody\n                            \n                            \n                                issueId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/comment/comment.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commentId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:25\n                            \n                        \n                \n                    \n                        The comment or issue ID. If this is an issue ID, set  to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isIssueBody\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:23\n                            \n                        \n                \n                    \n                        If true, this comment component is actually editing an issue's body.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issueId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:27\n                            \n                        \n                \n                    \n                        The issue this comment belongs to.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:76\n                \n            \n\n\n            \n                \n                    Deletes the current comment.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    editComment(body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:59\n                \n            \n\n\n            \n                \n                    Edits the description of the current comment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe new description of the current issue or comment.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:32\n                        \n                    \n\n            \n                \n                    True if the comment body is being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:34\n                        \n                    \n\n            \n                \n                    True if the comment body is being saved.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:30\n                        \n                    \n\n            \n                \n                    Used to format time.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IssueComment } from '../../../generated/graphql-dgql';\nimport { TimeFormatter } from '@app/issue-detail/time-formatter';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays an issue comment.\n * The comment will be subscribed to lazily (see {@link DataNode#subscribeLazy}).\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit, OnDestroy {\n  /** If true, this comment component is actually editing an issue's body. */\n  @Input() isIssueBody: boolean;\n  /** The comment or issue ID. If this is an issue ID, set {@link #isIssueBody} to true. */\n  @Input() commentId: NodeId;\n  /** The issue this comment belongs to. */\n  @Input() issueId: NodeId;\n\n  /** Used to format time. */\n  public timeFormatter = new TimeFormatter();\n  /** True if the comment body is being edited. */\n  public editBody = false;\n  /** True if the comment body is being saved. */\n  public savingBody = false;\n\n  /** @ignore */\n  comment$: DataNode;\n  /** @ignore */\n  commentSub: Subscription;\n\n  constructor(private dataService: DataService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {}\n\n  ngOnInit() {\n    this.comment$ = this.dataService.getNode(this.commentId);\n    this.commentSub = this.comment$.subscribeLazy();\n  }\n\n  ngOnDestroy() {\n    this.commentSub?.unsubscribe();\n  }\n\n  /**\n   * Edits the description of the current comment.\n   *\n   * @param body - The new description of the current issue or comment.\n   */\n  public editComment(body: string): void {\n    this.savingBody = true;\n    this.dataService.mutations.updateIssueComment(\n      Math.random().toString(),\n      this.commentId,\n      body\n    ).then(() => {\n      // only exit if successful\n      this.editBody = false;\n    }).finally(() => {\n      this.savingBody = false;\n    });\n  }\n\n  /**\n   * Deletes the current comment.\n   */\n  public deleteComment(): void {\n\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete comment ?',\n          messages: ['Are you sure you want to delete this comment ?',\n            'This action cannot be undone!']\n        }\n      });\n\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        // User confirmed deletion\n        this.dataService.mutations.deleteIssueComment(\n          Math.random().toString(),\n          this.issueId,\n          this.commentId\n        ).then(() => {\n          this.notify.notifyInfo('Successfully deleted comment');\n        });\n      }\n    },\n      error => this.notify.notifyError('Failed to delete project!', error));\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n         commented\n        \n          {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}\n        \n        \n          &sdot; edited\n          \n            {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}\n          \n        \n      \n\n      \n      \n      \n        Delete\n      \n      \n        Edit\n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n      \n\n      \n        \n        Cancel\n        \n        \n          Save\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./comment.component.scss\n                \n                @import '../issue-contents.component';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               commented                  {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}                          ⋅ edited                      {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}                                                  Delete                    Edit                                                                      Cancel                          Save                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentContextMenuComponent.html":{"url":"components/ComponentContextMenuComponent.html","title":"component - ComponentContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component manages the component context menu as well as its content\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                component-context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-context-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                height\n                            \n                            \n                                nodeDetailsReady\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ComponentContextMenuData, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ComponentContextMenuData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:175\n                \n            \n\n\n            \n                \n                    Close the context menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:166\n                \n            \n\n\n            \n                \n                    Update the position of the context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentContextMenuData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(COMPONENT_CONTEXT_MENU_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_HEIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:119\n                        \n                    \n\n            \n                \n                    Current height of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeDetailsReady\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:121\n                        \n                    \n\n            \n                \n                    True if the node details component is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_WIDTH\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:117\n                        \n                    \n\n            \n                \n                    Current width of the dialog\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{this.nodeDetails.getNodeName()}}\n        \n        \n            \n        \n    \n\n    \n        {{this.data.nodeId}}\n        \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    component-context-menu.component.scss\n                \n                @import \"src/styles/variables\";\n\n.frame {\n  padding: 24px;\n  background-color: $background-controls;\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%), 0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);\n}\n\n.node-title {\n  width: 100%;\n  text-align: center;\n  margin: 0 0 20px;\n}\n\n.container{\n  height: calc(100% - 50px);\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.nodeDetails.getNodeName()}}                                                    {{this.data.nodeId}}                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComponentContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentContextMenuData.html":{"url":"interfaces/ComponentContextMenuData.html","title":"interface - ComponentContextMenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentContextMenuData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the data required for the component context menu.\nNote that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\nmenu.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            nodeId\n                                        \n                                \n                                \n                                        \n                                            overlayRef\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         IssueGraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the issue graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The node id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayRef:     OverlayRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OverlayRef\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference to the overlay used to display the context menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         ConnectedPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConnectedPosition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position of the overlay\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeDetailsType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeDetailsType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of node, either interface or component. Controls the content shown in the context menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentContextMenuService.html":{"url":"injectables/ComponentContextMenuService.html","title":"injectable - ComponentContextMenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentContextMenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Use this service to create a ComponentContextMenuComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(parent: Element, x: number, y: number, projectID: string, nodeID: string, nodeType: NodeDetailsType, issueGraph: IssueGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:60\n                \n            \n\n\n            \n                \n                    Open a new component context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parent of the context menu\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    projectID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the project the node belongs to\n\n                                    \n                                \n                                \n                                    nodeID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the node\n\n                                    \n                                \n                                \n                                    nodeType\n                                    \n                                                NodeDetailsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The type of the node\n\n                                    \n                                \n                                \n                                    issueGraph\n                                    \n                                                IssueGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A reference to the issue graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentContextMenuComponent\n\n                    \n                    \n                        A reference to the context menu\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentNode.html":{"url":"interfaces/ComponentNode.html","title":"interface - ComponentNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         GraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentStoreService.html":{"url":"injectables/ComponentStoreService.html","title":"injectable - ComponentStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/component/component-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides updating, deleting and retrieving components from the backend.\nObjects like updateComponentMutation are injected and were created by a codegenerator based on\nthe mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\nother mutation and query objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                getBasicComponent\n                            \n                            \n                                getComponentInterfaces\n                            \n                            \n                                getComponentLabels\n                            \n                            \n                                getFullComponent\n                            \n                            \n                                updateComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateComponentMutation: UpdateComponentGQL, deleteComponentMutation: DeleteComponentGQL, getFullComponentQuery: GetComponentGQL, createComponentMutation: CreateComponentGQL, getLabelsQuery: GetComponentLabelsGQL, getBasicComponentQuery: GetBasicComponentGQL, getComponentInterfacesQuery: GetComponentInterfacesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/component/component-store.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateComponentMutation\n                                                  \n                                                        \n                                                                    UpdateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteComponentMutation\n                                                  \n                                                        \n                                                                    DeleteComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullComponentQuery\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createComponentMutation\n                                                  \n                                                        \n                                                                    CreateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getLabelsQuery\n                                                  \n                                                        \n                                                                    GetComponentLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicComponentQuery\n                                                  \n                                                        \n                                                                    GetBasicComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getComponentInterfacesQuery\n                                                  \n                                                        \n                                                                    GetComponentInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createComponent\n                        \n                    \n                \n            \n            \n                \ncreateComponent(input: CreateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            CreateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicComponent\n                        \n                    \n                \n            \n            \n                \ngetBasicComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentInterfaces\n                        \n                    \n                \n            \n            \n                \ngetComponentInterfaces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentLabels\n                        \n                    \n                \n            \n            \n                \ngetComponentLabels(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullComponent\n                        \n                    \n                \n            \n            \n                \ngetFullComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComponent\n                        \n                    \n                \n            \n            \n                \nupdateComponent(input: UpdateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {\n  CreateComponentGQL,\n  CreateComponentInput,\n  DeleteComponentGQL,\n  DeleteComponentInput,\n  GetBasicComponentGQL,\n  GetBasicComponentQuery,\n  GetComponentGQL,\n  GetComponentInterfacesGQL,\n  GetComponentInterfacesQuery,\n  GetComponentLabelsGQL,\n  GetComponentLabelsQuery,\n  GetComponentQuery,\n  UpdateComponentGQL,\n  UpdateComponentInput\n} from 'src/generated/graphql';\nimport {map} from 'rxjs/operators';\n\n/**\n * Provides updating, deleting and retrieving components from the backend.\n * Objects like updateComponentMutation are injected and were created by a codegenerator based on\n * the mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\n * other mutation and query objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentStoreService {\n\n  constructor(private updateComponentMutation: UpdateComponentGQL,\n              private deleteComponentMutation: DeleteComponentGQL,\n              private getFullComponentQuery: GetComponentGQL,\n              private createComponentMutation: CreateComponentGQL,\n              private getLabelsQuery: GetComponentLabelsGQL,\n              private getBasicComponentQuery: GetBasicComponentGQL,\n              private getComponentInterfacesQuery: GetComponentInterfacesGQL) {\n  }\n\n  getComponentLabels(id: string): Observable {\n    return this.getLabelsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getBasicComponent(id: string): Observable {\n    return this.getBasicComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullComponent(id: string): Observable {\n    return this.getFullComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getComponentInterfaces(id: string): Observable {\n    return this.getComponentInterfacesQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  deleteComponent(id: string) {\n    const input: DeleteComponentInput = {\n      component: id\n    };\n    return this.deleteComponentMutation.mutate({input});\n  }\n\n  createComponent(input: CreateComponentInput) {\n    return this.createComponentMutation.mutate({input});\n  }\n\n  updateComponent(input: UpdateComponentInput) {\n    return this.updateComponentMutation.mutate({input});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentsService.html":{"url":"injectables/ComponentsService.html","title":"injectable - ComponentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/components.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getInterface\n                            \n                            \n                                listProjectComponents\n                            \n                            \n                                listProjectInterfaces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjectComponents: ListProjectComponentsGQL, qListProjectInterfaces: ListProjectInterfacesGQL, qGetComponent: GetComponentGQL, qGetInterface: GetInterfaceGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/components.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjectComponents\n                                                  \n                                                        \n                                                                    ListProjectComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qListProjectInterfaces\n                                                  \n                                                        \n                                                                    ListProjectInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetComponent\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetInterface\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectComponents\n                        \n                    \n                \n            \n            \n                \nlistProjectComponents(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectInterfaces\n                        \n                    \n                \n            \n            \n                \nlistProjectInterfaces(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  ComponentFilter, ComponentInterfaceFilter,\n  GetComponentGQL, GetInterfaceGQL,\n  ListProjectComponentsGQL, ListProjectInterfacesGQL,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n  constructor(\n    private qListProjectComponents: ListProjectComponentsGQL,\n    private qListProjectInterfaces: ListProjectInterfacesGQL,\n    private qGetComponent: GetComponentGQL,\n    private qGetInterface: GetInterfaceGQL,\n  ) {}\n\n  listProjectComponents(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectComponents.fetch({ project, ...list }));\n  }\n\n  listProjectInterfaces(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectInterfaces.fetch({ project, ...list }));\n  }\n\n  getComponent(id: string) {\n    return promisifyApolloFetch(this.qGetComponent.fetch({ id }));\n  }\n\n  getInterface(id: string) {\n    return promisifyApolloFetch(this.qGetInterface.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateComponentData.html":{"url":"interfaces/CreateComponentData.html","title":"interface - CreateComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateComponentDialogComponent.html":{"url":"components/CreateComponentDialogComponent.html","title":"component - CreateComponentDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateComponentDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-component-dialog\n            \n\n            \n                styleUrls\n                ./create-component-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-component-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                queryComponent\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkImsType\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateComponentData, fb: FormBuilder, gs: IssueGraphStateService, componentStore: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStore\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkImsType\n                        \n                    \n                \n            \n            \n                \ncheckImsType(returnFromSelect: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnFromSelect\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ImsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, url: string, description: string, ims: string, provider: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ims\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateComponentData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', Validators.required)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n    \n        \n    Create Component\n    \n        \n            \n                Name\n                \n                Invalid component name\n            \n\n            \n                Repository-URL\n                \n                Enter a valid URL\n            \n\n            \n                Provider Type (IMS)\n                \n                    GitHub\n                \n                Select the Provider\n            \n\n            \n                IMS-URL\n                \n                Enter a valid URL\n            \n\n            \n                Description\n                \n            \n        \n    \n    \n        Cancel\n        \n            \n                Create\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./create-component-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Create Component                                        Name                                Invalid component name                                        Repository-URL                                Enter a valid URL                                        Provider Type (IMS)                                    GitHub                                Select the Provider                                        IMS-URL                                Enter a valid URL                                        Description                                                    Cancel                                    Create                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateComponentDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEditLabelDialogComponent.html":{"url":"components/CreateEditLabelDialogComponent.html","title":"component - CreateEditLabelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateEditLabelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This dialog creates or edits a label.\nSee CreateEditLabelDialogData for parameters.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-edit-label-dialog-component\n            \n\n            \n                styleUrls\n                ./create-edit-label-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-edit-label-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allComponentsList\n                            \n                            \n                                color\n                            \n                            \n                                componentList\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                loading\n                            \n                            \n                                validationLabelDescription\n                            \n                            \n                                validationLabelName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmClick\n                            \n                            \n                                onLabelCancelClick\n                            \n                            \n                                randomizeColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialogRef, dataService: DataService, data: CreateEditLabelDialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateEditLabelDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmClick\n                        \n                    \n                \n            \n            \n                \nonConfirmClick(name: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:123\n                \n            \n\n\n            \n                \n                    When the user confirms their changes, attempt to mutate and return with the label data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLabelCancelClick\n                        \n                    \n                \n            \n            \n                \nonLabelCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:118\n                \n            \n\n\n            \n                \n                    When the user cancels label creation or editing, close and return with null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeColor\n                        \n                    \n                \n            \n            \n                \nrandomizeColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:163\n                \n            \n\n\n            \n                \n                    Randomizes the label color.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allComponentsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                        \n                    \n\n            \n                \n                    Source list of all components.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:36\n                        \n                    \n\n            \n                \n                    Color state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeId[] | ListId\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateEditLabelDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the label that is to be edited is still loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:34\n                        \n                    \n\n            \n                \n                    Validator for the label description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, Validators.maxLength(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:32\n                        \n                    \n\n            \n                \n                    Validator for the label name.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n    \n        \n  \n    Update label\n  \n  \n    Create a new label\n  \n\n\n  \n    Components\n    Assign the label to a component\n    \n      {{item.name}}\n    \n  \n\n  \n    Label Name\n    \n    Invalid name\n  \n\n  \n    Description\n    \n  \n\n  \n    Color\n    \n    \n      refresh\n    \n  \n\n\n\n  Cancel\n  \n    \n      Apply\n    \n    \n      Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-edit-label-dialog.component.scss\n                \n                .component-selector {\n  margin-bottom: 16px;\n}\n\n.new-label-input {\n  padding: 6px;\n  width: 100%;\n}\n\n.error-label-create {\n  background-color: rgb(204, 58, 58);\n  color: white;\n  margin-top: 5px;\n}\n\n.color-randomize-button {\n  margin-left: 4px;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n.actions {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Update label        Create a new label        Components    Assign the label to a component          {{item.name}}            Label Name        Invalid name        Description            Color              refresh        Cancel            Apply              Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateEditLabelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditLabelDialogData.html":{"url":"interfaces/CreateEditLabelDialogData.html","title":"interface - CreateEditLabelDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEditLabelDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for the create/edit label dialog component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            editExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueId\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editExisting:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will edit an existing label instead of creating a new one.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueId:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will select all components of this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The raw project id.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateInterfaceData.html":{"url":"interfaces/CreateInterfaceData.html","title":"interface - CreateInterfaceData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateInterfaceData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateInterfaceDialogComponent.html":{"url":"components/CreateInterfaceDialogComponent.html","title":"component - CreateInterfaceDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateInterfaceDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-interface-dialog\n            \n\n            \n                styleUrls\n                ./create-interface-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-interface-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateInterfaceData, fb: FormBuilder, gs: IssueGraphStateService, authService: AuthenticationService, interfaceStore: InterfaceStoreService, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateInterfaceData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStore\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateInterfaceData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n    \n        \n  Create Interface\n  \n    \n      \n        Name\n        \n        Invalid interface name\n      \n\n      \n        Interface-Type\n        \n      \n\n      \n        Description\n        \n      \n\n      \n    \n  \n  \n    Cancel\n    Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-interface-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Interface                    Name                Invalid interface name                    Interface-Type                            Description                                Cancel    Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateInterfaceDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateIssueDialogComponent.html":{"url":"components/CreateIssueDialogComponent.html","title":"component - CreateIssueDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateIssueDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-issue-dialog\n            \n\n            \n                styleUrls\n                ./create-issue-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-issue-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                category\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                issueData\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onCreate\n                            \n                            \n                                onNoClick\n                            \n                            \n                                    Private\n                                updateSelectedItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, dataService: DataService, data: DialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick(showConfirmDialog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showConfirmDialog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateSelectedItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Updates items to be selected in the Create Issue page,\nincluding 1) components and 2) locations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('body')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalIssueData\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n    \n        \nCreate Issue\n\n\n\n  \n\n    \n    \n      Title\n      \n      Invalid issue title\n    \n\n    \n    \n\n    \n    \n      \n        \n        Unclassified\n      \n      \n        \n        Bug\n      \n      \n        \n        Feature Request\n      \n    \n\n    \n    \n\n    \n    \n  \n\n\n\n\n\n\n  \n   0 || title.value.length > 0)\">\n    Cancel\n  \n\n  \n  Create\n  \n\n\n    \n\n    \n                \n                    ./create-issue-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n@keyframes spinner {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Issue                Title            Invalid issue title                                          Unclassified                            Bug                            Feature Request                                 0 || title.value.length > 0)\">    Cancel      Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateIssueDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectDialogComponent.html":{"url":"components/CreateProjectDialogComponent.html","title":"component - CreateProjectDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a dialog for the project creation\nThe user can set a name and description\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-dialog\n            \n\n            \n                styleUrls\n                ./create-project-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionValidator\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                nameValidator\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, ps: ProjectStoreService, fb: FormBuilder, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from \"@app/utils/validators\";\n\n/**\n * This component provides a dialog for the project creation\n * The user can set a name and description\n *\n */\n@Component({\n  selector: 'app-create-project-dialog',\n  templateUrl: './create-project-dialog.component.html',\n  styleUrls: ['./create-project-dialog.component.scss']\n})\nexport class CreateProjectDialogComponent {\n  @Input() name: string;\n  @Input() description: string;\n  public loading: boolean;\n  public saveFailed: boolean;\n\n  constructor(public dialogRef: MatDialogRef,\n              private ps: ProjectStoreService,\n              private fb: FormBuilder,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  nameValidator = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  descriptionValidator = new FormControl('', CCIMSValidators.contentValidator);\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  // after the user clicked on the create button the project creation mutation is fired\n  onOkClick(name: string, description: string): void {\n    this.loading = true;\n    this.ps.create(name, description).subscribe(({data}) => {\n      this.loading = false;\n      this.dialogRef.close({createdProjectId: data.createProject.project.id});\n    }, (error) => {\n      this.notify.notifyError('Failed to create project!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n}\n\n    \n\n    \n        \nCreate Project\n\n\n\n\n  \n\n    \n    \n      Name\n      \n      \n        Invalid project name\n      \n    \n\n    \n    \n      Description\n      \n      Invalid project description\n    \n\n    \n    \n  \n\n\n\n\n\n  \n  \n    Cancel\n  \n  \n  \n  \n    Create\n  \n\n\n\n    \n\n    \n                \n                    ./create-project-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Project                Name                    Invalid project name                        Description            Invalid project description                      Cancel            Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorPaginatorComponent.html":{"url":"components/CursorPaginatorComponent.html","title":"component - CursorPaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CursorPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cursor-paginator/cursor-paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component controls the cursor in a DataList using arrows and a page size selector.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cursor-paginator\n            \n\n            \n                styleUrls\n                ./cursor-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                pageSizes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:14\n                            \n                        \n                \n                    \n                        The DataList that will be controlled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizes\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:16\n                            \n                        \n                \n                    \n                        Available page sizes; e.g. [10, 25, 100]\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataList } from '@app/data-dgql/query';\n\n/**\n * This component controls the cursor in a {@link DataList} using arrows and a page size selector.\n */\n@Component({\n  selector: 'app-cursor-paginator',\n  templateUrl: './cursor-paginator.component.html',\n  styleUrls: ['./cursor-paginator.component.scss']\n})\nexport class CursorPaginatorComponent {\n  /** The DataList that will be controlled. */\n  @Input() list: DataList;\n  /** Available page sizes; e.g. [10, 25, 100] */\n  @Input() pageSizes: number[];\n}\n\n    \n\n    \n        \n     1\">\n        Items per page:\n        \n            \n                \n                    {{size}}\n                \n            \n        \n    \n    \n        \n            first_page\n        \n        \n            chevron_left\n        \n        \n            chevron_right\n        \n    \n\n\n    \n\n    \n                \n                    ./cursor-paginator.component.scss\n                \n                .cursor-paginator {\n  display: flex;\n  justify-content: flex-end;\n  color: fade-in(black, 0.54);\n  padding: 8px 16px;\n\n  .page-size-control {\n    margin-right: 16px;\n\n    .page-size-label {\n      margin-right: 8px;\n      font-size: 12px;\n    }\n\n    .page-size-select {\n      width: 64px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     1\">        Items per page:                                                        {{size}}                                                                first_page                            chevron_left                            chevron_right            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CursorPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataNode.html":{"url":"classes/DataNode.html","title":"class - DataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A cacheable node with no parameters.\nSee DataQuery for more information, and DataService to obtain a DataNode.\nNodes are identified by a NodeId.\nExample\n\n  Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n  Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n  \n    Thing data: {{thing.something}}\n  \nclass ExampleComponent implements OnInit, OnDestroy {\n  @Input() thingId: NodeId;\n\n  public thing$: DataNode;\n  public thingSub: Subscription; // subscription to thing$\n\n  constructor(private dataService: DataService) {}}\n\n  ngOnInit() {\n    // obtain the DataNode from the data service\n    this.thing$ = this.dataService.getNode(this.thingId);\n\n    // subscribe to indicate that we want some data\n    this.thingSub = this.thing$.subscribe();\n  }\n\n  ngOnDestroy() {\n    // remember to unsubscribe!!\n    this.thingSub.unsubscribe();\n  }\n}\n            \n\n            \n                Extends\n            \n            \n                        DataQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIfNeeded\n                            \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:55\n\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:106\n\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:56\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:334\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:140\n\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:192\n\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:222\n\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:183\n\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:211\n\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:250\n\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n\n                \n                    \n                        setparams(p)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:330\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** @ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataQuery.html":{"url":"classes/DataQuery.html","title":"class - DataQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A piece of observable data.\nDataQuery is a stateful interface for interacting with an API object.\nInstead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\nrequest parameters (in #params) of the data you want, and will automatically load the data when needed.\nData can then be accessed synchronously with the #current property.\nUpon adding a subscriber with #subscribe, data will loaded from the API and stored in the\ncache. Subsequent viewers can then immediately access the cached data.\n\nTo check if data is loaded, use #hasData,\nand to check if data is still loading, use #loading.\nTo (re-)load the data from the API, use #load.\nThis happens automatically upon subscription after a sufficient delay (see debounce time constants).\nTo add a subscriber without triggering this behavior, use #subscribeLazy, which will\nonly make an API request if the data is not cached.\nTo invalidate (i.e. delete) the cached data, use #invalidate.\nIf you only need the data right now and don't want to deal with subscriptions, use #dataAsPromise\nto access it as a promise that will either return cached data or load new data.\n\nWhen done using a DataQuery subscription, it must be manually destroyed by calling\nsub.unsubscribe() on the Subscription object returned by\nsubscribe, as it may leak memory otherwise.\nSee DataNode and DataList for the two main types of data that use DataQuery.\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                loadIfNeeded\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasData\n                                \n                                \n                                    current\n                                \n                                \n                                    params\n                                \n                                \n                                    subscriberCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:55\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:106\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:56\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:140\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:192\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:222\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:183\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:211\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:201\n                \n            \n\n\n            \n                \n                    Will load data if it's stale or not present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:250\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasData\n                    \n                \n\n                \n                    \n                        gethasData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:65\n                                \n                            \n                    \n                        \n                                Returns true if data is currently available.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n\n                \n                    \n                        getcurrent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:70\n                                \n                            \n                    \n                        \n                                The currently loaded data.\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:80\n                                \n                            \n                    \n                        \n                                Parameters that will be passed to the request.\nChanging this property will automatically trigger a load.\n\n\n                                \n                                    Returns :     P | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setparams(p: P)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                            \n                                                                        P\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        subscriberCount\n                    \n                \n\n                \n                    \n                        getsubscriberCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:276\n                                \n                            \n                    \n                        \n                                Returns the number of subscribers for this data.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** @ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/index.ts\n        \n\n\n            \n                Description\n            \n            \n                The data service provides access to the backend API.\nIt provides automatic caching of data to reducing unnecessary requests, and a mutation API that\nautomatically propagates updates to all observers of affected data.\nTo get data, use #getNode and #getList. To mutate data, use #mutations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getList\n                            \n                            \n                                getNode\n                            \n                            \n                                invalidateLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/index.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList(id: ListId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:67\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Returns a new DataList for the given ListId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateLists\n                        \n                    \n                \n            \n            \n                \ninvalidateLists(selector: ListId | ListType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:39\n                \n            \n\n\n            \n                \n                    Invalidates all lists with the given id or type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                ListId | ListType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mutations\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/index.ts:24\n                        \n                    \n\n            \n                \n                    Data mutations.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { NodeId, ListId, ListType, encodeListId, decodeListId, ListIdEnc } from './id';\nimport { Injectable } from '@angular/core';\nimport { QueriesService } from './queries/queries.service';\nimport { DataNode, DataList, NodeCache } from './query';\nimport { Mutations } from '@app/data-dgql/mutate';\n\n/**\n * The data service provides access to the backend API.\n * It provides automatic caching of data to reducing unnecessary requests, and a mutation API that\n * automatically propagates updates to all observers of affected data.\n *\n * To get data, use {@link #getNode} and {@link #getList}. To mutate data, use {@link #mutations}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport default class DataService {\n  /** @ignore */\n  nodes: NodeCache;\n  /** @ignore */\n  lists: Map>> = new Map();\n\n  /** Data mutations. */\n  mutations: Mutations;\n\n  constructor(\n    private queries: QueriesService\n  ) {\n    this.nodes = new NodeCache(queries);\n    this.mutations = new Mutations(queries, this.nodes, this.invalidateLists.bind(this));\n  }\n\n  /** Returns the {@link DataNode} for the given {@link NodeId}. */\n  getNode(id: NodeId): DataNode {\n    return this.nodes.getNode(id);\n  }\n\n  /** Invalidates all lists with the given id or type. */\n  invalidateLists(selector: ListId | ListType) {\n    if (typeof selector === 'object') {\n      const id = encodeListId(selector);\n      if (!this.lists.has(id)) {\n        return;\n      }\n      const lists = this.lists.get(id);\n      for (const list of lists) {\n        if (list.subscriberCount) {\n          // invalidating the list causes layout changes we might not want (e.g. emptying a list)\n          // list.invalidate();\n          list.loadDebounced();\n        }\n      }\n    } else {\n      for (const [id, lists] of this.lists) {\n        if (decodeListId(id).type === selector) {\n          for (const list of lists) {\n            if (list.subscriberCount) {\n              list.loadDebounced();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Returns a new {@link DataList} for the given {@link ListId}. */\n  getList(id: ListId): DataList {\n    const encodedId = encodeListId(id);\n    const list = new DataList(this.queries, this.nodes, id);\n    if (!this.lists.has(encodedId)) {\n      this.lists.set(encodedId, new Set());\n    }\n    this.lists.get(encodedId).add(list);\n    return list;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that defines what data is injected to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            locations\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locations:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/remove-dialog/remove-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmButtonText\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows this text as the text in the confirm button. If not set, button shows 'Delete'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of lines shown in the dialog. If a line starts with a space, the line will be indented\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows a text box that forces the user to type the specified text before being able to click the confirm button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterSelection.html":{"url":"interfaces/FilterSelection.html","title":"interface - FilterSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            texts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:         FilterLabel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterLabel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texts:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterState.html":{"url":"interfaces/FilterState.html","title":"interface - FilterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/shared.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            selectedCategories\n                                        \n                                \n                                \n                                        \n                                            selectedFilter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedCategories:         SelectedCategories\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedCategories\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedFilter:         FilterSelection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterSelection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IssueCategory } from 'src/generated/graphql';\nimport { FilterSelection } from './label-search/label-search.component';\n\ntype EnumDictionary = {\n  [K in T]: U;\n};\n\nexport type SelectedCategories = EnumDictionary;\n\nexport interface FilterState {\n  selectedCategories: SelectedCategories;\n  selectedFilter: FilterSelection;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component holds the 'frame' of the application\ncontaining the top bar, the side bar and the main container\ninto which individual views are rendered based on the url.\nIt also bridges between top bar and side menu:\n When the user clicks the menu icon in the topbar, this is communicated to\nthe navigation drawer via this.showDrawer\nThe component itself checks whether the user is currently in a project\nand passes this information down to the sidebar and topbar. It also checks the\ndisplay size and makes the side menu an overlay when on handset size.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n            \n                styleUrls\n                ./frame.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                isProjectSet$\n                            \n                            \n                                    Public\n                                showDrawer\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareRoute\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/frame/frame.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        prepareRoute\n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:45\n                \n            \n\n\n            \n                \n                    When user clicks sandwich this.showDrawer boolean changes value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isProjectSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showDrawer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { StateService } from '@app/state.service';\nimport { RouterOutlet } from '@angular/router';\nimport { slider } from '../route-animations';\n\n/**\n * This component holds the 'frame' of the application\n * containing the top bar, the side bar and the main container\n * into which individual views are rendered based on the url.\n * It also bridges between top bar and side menu:\n *  When the user clicks the menu icon in the topbar, this is communicated to\n * the navigation drawer via this.showDrawer\n * The component itself checks whether the user is currently in a project\n * and passes this information down to the sidebar and topbar. It also checks the\n * display size and makes the side menu an overlay when on handset size.\n */\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss'],\n  animations: [slider]\n})\nexport class FrameComponent {\n  public isProjectSet$ = new BehaviorSubject(false);\n  public showDrawer = true;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver, public ss: StateService) {\n    ss.state$.pipe(\n      map(state => (state.project != null))\n    ).subscribe(this.isProjectSet$);\n  }\n\n  /**\n   * When user clicks sandwich this.showDrawer boolean changes value.\n   */\n  toggleMenu(): void {\n    this.showDrawer = !this.showDrawer;\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./frame.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.sidenav-content {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n}\n\n.container {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  flex: 1 1 auto;\n  overflow-y: auto;\n}\n\n.root {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  height: 100%;\n  overflow-y: hidden;\n}\n\n.header {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphComponent.html":{"url":"classes/GraphComponent.html","title":"class - GraphComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:133\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlGraphComponent: GQLGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:141\n                \n            \n\n\n            \n                \n                    Convert backend representation of graph component to frontend representation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlGraphComponent\n                                    \n                                                GQLGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlGraphComponents: GQLGraphComponent[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlGraphComponents\n                                    \n                                                GQLGraphComponent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes data needed by IssueGraphComponent to draw the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            graphLocations\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            linkIssues\n                                        \n                                \n                                \n                                        \n                                            relatedFolders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphLocations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graphLocations:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkIssues:         GraphIssue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphIssue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatedFolders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relatedFolders:         DefaultDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphDataFactory.html":{"url":"classes/GraphDataFactory.html","title":"class - GraphDataFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphDataFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                graphDataFromGQL\n                            \n                            \n                                    Static\n                                removeFilteredData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        graphDataFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    graphDataFromGQL(data: GetIssueGraphDataQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:48\n                \n            \n\n\n            \n                \n                    Converts the data required for the graph from the format the backend delivers into a\nGraphData object as needed by the IssueGraphComponent for rendering.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetIssueGraphDataQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeFilteredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:37\n                \n            \n\n\n            \n                \n                    Removes the counts for issue categories which are filtered. This is a workaround\nneeded because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphData\n                                    \n                                                GraphData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data with the unnecessary counts\n\n                                    \n                                \n                                \n                                    activeCategories\n                                    \n                                            IssueCategory[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the categories corresponding to the activated toggles of the graph component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphInterface.html":{"url":"classes/GraphInterface.html","title":"class - GraphInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consumedBy\n                            \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                            \n                                offeredBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consumedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offeredBy\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:102\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlInterface: GQLInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterface\n                                    \n                                                GQLInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlInterfaces: GQLInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterfaces\n                                    \n                                                GQLInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphIssue.html":{"url":"classes/GraphIssue.html","title":"class - GraphIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                linksIssues\n                            \n                            \n                                locations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                fromGQLNoLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        linksIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GraphIssue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:171\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlIssue: GQLIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:190\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlIssue\n                                    \n                                                GQLIssue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of Issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphIssue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQLNoLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQLNoLinks(gqlPartialIssue: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:178\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlPartialIssue\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of issue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; category: any; locations: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, NamedOptions} from 'apollo-angular';\nimport {ApolloClientOptions, ApolloLink, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\nimport {setContext} from '@apollo/link-context';\nimport {onError} from '@apollo/client/link/error';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthenticationService} from './auth/authentication.service';\nimport {environment} from '@environments/environment';\nimport {IndividualConfig, ToastrModule, ToastrService} from 'ngx-toastr';\nimport {DefaultOptions} from '@apollo/client/core/ApolloClient';\n\n/**\n * This modules purpose is to provide define functions returning configurations\n * for the automatic creation of ApolloClients for graphql communication with the backend.\n * The key functions are providePublicApollo and provideDefaultApollo. The apollo instance\n * constructed from providePublicApollo is only used for registering.\n */\n\nconst defaultOptions: DefaultOptions = {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n};\n\n/**\n * Congiuration for network error toast on register page.\n */\nconst networkErrorToast: Partial = {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n};\n\nconst basic = setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}));\n\nexport function createErrorLink(authService: AuthenticationService, toastr: ToastrService): ApolloLink {\n  const errorLink = onError(({graphQLErrors, networkError, operation, forward}) => {\n      if (graphQLErrors) {\n        const message = graphQLErrors.map(err => err.message).join('');\n        console.log(`[Graphql errors]: ${message}`);\n        toastr.error(message, 'GraphQL error', networkErrorToast);\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError.name}\\n${networkError.message}\\n${networkError.stack}`);\n        // @ts-ignore\n        if (networkError.status === 401) {\n          authService.logout();\n        } else {\n          toastr.error(networkError.message, 'Server/Connection error', networkErrorToast);\n        }\n      }\n    }\n  );\n  return errorLink;\n}\n\n/**\n * Create Apollo instance where credentials from local storage are attached to requests\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function provideDefaultApollo(httpLink: HttpLink, authService: AuthenticationService,\n                                     toastr: ToastrService): ApolloClientOptions {\n  const token = localStorage.getItem('token');\n  const auth = setContext((_, {headers}) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        Authorization: localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n      }\n    };\n  });\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, auth, httpLink.create({uri: environment.apiUrl})]);\n  const cache = new InMemoryCache();\n  return {link, cache, defaultOptions};\n}\n\n/**\n * Creates Apollo Client used for user registration with public endpoint. In contrast to\n * provideDefaultApollo no token is attached to reqeusts.\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function providePublicApollo(httpLink: HttpLink, authService: AuthenticationService, toastr: ToastrService): NamedOptions {\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, httpLink.create({uri: environment.signUpUrl})]);\n  const cache = new InMemoryCache();\n  return {\n    publicClient: {\n      link,\n      cache,\n      defaultOptions\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    ToastrModule,\n  ],\n  exports: [\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: provideDefaultApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    },\n    {\n      provide: APOLLO_NAMED_OPTIONS,\n      useFactory: providePublicApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    }\n  ],\n})\nexport class GraphQLModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphsModule.html":{"url":"modules/GraphsModule.html","title":"module - GraphsModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\n\n\nGraphsModule\n\nGraphsModule\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphs/graphs.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\nand imported into the main app.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddProjectMemberDialogComponent\n                        \n                        \n                            CacheNodeComponent\n                        \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueFilterComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            LabelSearchComponent\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            ProjectIssueListComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            SetEditorDialogComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IssueGraphComponent } from './issue-graph/issue-graph.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport '@ustutt/grapheditor-webcomponent/lib/index';\nimport { IssueGraphControlsComponent } from './issue-graph-controls/issue-graph-controls.component';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { IssueListComponent } from '@app/issue-list/issue-list.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatSortModule } from '@angular/material/sort';\nimport { LabelSearchComponent } from './label-search/label-search.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgOptionHighlightModule } from '@ng-select/ng-option-highlight';\nimport { ProjectIssueListComponent } from '@app/project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from '@app/project-members/project-members.component';\nimport { AddProjectMemberDialogComponent } from '../dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport { CursorPaginatorComponent } from '@app/components/cursor-paginator/cursor-paginator.component';\nimport { SetEditorComponent } from '@app/components/set-editor/set-editor.component';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { IssueLabelComponent } from '@app/components/issue-label/issue-label.component';\nimport { SetEditorDialogComponent } from '@app/components/set-editor/set-editor-dialog.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IssueItemComponent } from '@app/components/issue-item/issue-item.component';\nimport { UserItemComponent } from '@app/components/user-item/user-item.component';\nimport { IssueIconComponent } from '@app/components/issue-icon/issue-icon.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IssueSidebarComponent } from '@app/issue-detail/issue-sidebar.component';\nimport { CacheNodeComponent } from '@app/components/cache-node.component';\nimport { ProjectHeaderComponent } from '@app/project-header/project-header.component';\nimport { IssueFilterComponent } from '@app/issue-list/issue-filter.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {QueryBodyDirective, QueryButtonDirective, QueryComponent} from '@app/utils/query-component/query.component';\nimport {MatProgressSpinnerModule, MatSpinner} from '@angular/material/progress-spinner';\nimport {IssueLocationComponent} from '@app/components/issue-location/issue-location.component';\nimport {IssueCategoryComponent} from '@app/components/issue-category/issue-category.component';\n\n/**\n * The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\n * and imported into the main app.\n * @export\n * @class GraphsModule\n */\n@NgModule({\n  declarations: [\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    LabelSearchComponent,\n    ProjectIssueListComponent,\n    ProjectMembersComponent,\n    AddProjectMemberDialogComponent,\n    CursorPaginatorComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    SetEditorDialogComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CacheNodeComponent,\n    ProjectHeaderComponent,\n    IssueFilterComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CursorPaginatorComponent,\n    ProjectHeaderComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [\n    {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}},\n  ]\n})\nexport class GraphsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceNode.html":{"url":"interfaces/InterfaceNode.html","title":"interface - InterfaceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InterfaceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterfaceStoreService.html":{"url":"injectables/InterfaceStoreService.html","title":"injectable - InterfaceStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterfaceStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/interface-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides creation, retrievel, update and deletion of interfaces offered by components.\nThe GQL object are generated by the code generator based on interface.graphql in the same directory\nas this file.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getConsumingComponents\n                            \n                            \n                                    Public\n                                getInterface\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createInterfaceMutation: CreateComponentInterfaceGQL, updateInterfaceMutation: UpdateComponentInterfaceGQL, deleteInterfaceMutation: DeleteComponentInterfaceGQL, getInterfaceQuery: GetInterfaceGQL, getConsumingComponentsQuery: GetConsumingComponentsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/interface/interface-store.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createInterfaceMutation\n                                                  \n                                                        \n                                                                    CreateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateInterfaceMutation\n                                                  \n                                                        \n                                                                    UpdateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteInterfaceMutation\n                                                  \n                                                        \n                                                                    DeleteComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getInterfaceQuery\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getConsumingComponentsQuery\n                                                  \n                                                        \n                                                                    GetConsumingComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, offeringComponentId: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offeringComponentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConsumingComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConsumingComponents(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(input: UpdateComponentInterfaceInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInterfaceInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  CreateComponentInterfaceGQL,\n  CreateComponentInterfaceInput,\n  DeleteComponentInterfaceGQL,\n  DeleteComponentInterfaceInput,\n  GetConsumingComponentsGQL,\n  GetConsumingComponentsQuery,\n  GetInterfaceGQL,\n  GetInterfaceQuery,\n  UpdateComponentInterfaceGQL,\n  UpdateComponentInterfaceInput\n} from '../../../generated/graphql';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/**\n * This service provides creation, retrievel, update and deletion of interfaces offered by components.\n * The GQL object are generated by the code generator based on interface.graphql in the same directory\n * as this file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceStoreService {\n\n  constructor(private createInterfaceMutation: CreateComponentInterfaceGQL,\n              private updateInterfaceMutation: UpdateComponentInterfaceGQL,\n              private deleteInterfaceMutation: DeleteComponentInterfaceGQL,\n              private getInterfaceQuery: GetInterfaceGQL,\n              private getConsumingComponentsQuery: GetConsumingComponentsGQL) {\n  }\n\n  public create(name: string, offeringComponentId: string, description?: string) {\n    const input: CreateComponentInterfaceInput = {\n      name,\n      description,\n      component: offeringComponentId\n    };\n    return this.createInterfaceMutation.mutate({input});\n  }\n\n  public getInterface(id: string): Observable {\n    return this.getInterfaceQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  public getConsumingComponents(id: string): Observable {\n    return this.getConsumingComponentsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  public update(input: UpdateComponentInterfaceInput) {\n    return this.updateInterfaceMutation.mutate({input});\n  }\n\n  public delete(id: string) {\n    const input: DeleteComponentInterfaceInput = {\n      componentInterface: id\n    };\n    return this.deleteInterfaceMutation.mutate({input});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCategoryComponent.html":{"url":"components/IssueCategoryComponent.html","title":"component - IssueCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-category/issue-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-category\n            \n\n            \n                styleUrls\n                ./issue-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-category/issue-category.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {IssueCategory} from '../../../generated/graphql-dgql';\n\n@Component({\n  selector: 'app-issue-category',\n  templateUrl: './issue-category.component.html',\n  styleUrls: ['./issue-category.component.scss']\n})\nexport class IssueCategoryComponent {\n  @Input() category: IssueCategory;\n}\n\n    \n\n    \n        \n  \n    \n    Uncategorized\n  \n\n  \n    \n    Bug\n  \n\n  \n    \n    Feature Request\n  \n\n\n    \n\n    \n                \n                    ./issue-category.component.scss\n                \n                .category-icon {\n  vertical-align: middle;\n  margin-bottom: 3px;\n}\n\n.category-box {\n  background: rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n  align-items: center;\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Uncategorized            Bug            Feature Request  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContentsComponent.html":{"url":"components/IssueContentsComponent.html","title":"component - IssueContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-contents.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders the contents of the issue: the issue body, timeline, and comment box.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-contents\n            \n\n            \n                styleUrls\n                issue-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                issue-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentEditor\n                            \n                            \n                                    Public\n                                savingComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeIssue\n                            \n                            \n                                    Public\n                                commentIssue\n                            \n                            \n                                    Public\n                                reopenIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue$\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue$\n                    \n                \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:19\n                            \n                        \n                \n                    \n                        The issue to be rendered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:21\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:56\n                \n            \n\n\n            \n                \n                    Closes the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        commentIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:66\n                \n            \n\n\n            \n                \n                    Adds a comment to the current issue with the data provided in the comment box.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reopenIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    reopenIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:61\n                \n            \n\n\n            \n                \n                    Reopens the currently closed issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentEditor\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('comment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                        \n                    \n\n            \n                \n                    The comment editor (app-markdown-editor).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:33\n                        \n                    \n\n            \n                \n                    True if the issue comment is currently being saved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { DataList, DataNode } from '@app/data-dgql/query';\nimport { Issue } from '../../generated/graphql';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { CURRENT_USER_NODE, ListType, NodeType } from '@app/data-dgql/id';\nimport { User } from '../../generated/graphql-dgql';\n\n/**\n * This component renders the contents of the issue: the issue body, timeline, and comment box.\n */\n@Component({\n  selector: 'app-issue-contents',\n  templateUrl: 'issue-contents.component.html',\n  styleUrls: ['issue-contents.component.scss']\n})\nexport class IssueContentsComponent implements OnInit, OnDestroy {\n  /** The issue to be rendered. */\n  @Input() issue$: DataNode;\n  /** The raw project ID. */\n  @Input() projectId: string;\n\n  /** @ignore */\n  public linkedIssues$: DataList;\n  /** @ignore */\n  public linkedIssueSub: Subscription;\n  /** @ignore */\n  public currentUser$: DataNode;\n  /** @ignore */\n  public currentUserSub: Subscription;\n\n  /** True if the issue comment is currently being saved. */\n  public savingComment = false;\n  /** The comment editor (app-markdown-editor). */\n  @ViewChild('comment') commentEditor;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.linkedIssues$ = this.dataService.getList({\n      node: this.issue$.id,\n      type: ListType.LinkedIssues\n    });\n    this.linkedIssueSub = this.linkedIssues$.subscribe();\n\n    this.currentUser$ = this.dataService.getNode(CURRENT_USER_NODE);\n    this.currentUserSub = this.currentUser$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.linkedIssueSub.unsubscribe();\n    this.currentUserSub.unsubscribe();\n  }\n\n  /** Closes the current issue. */\n  public closeIssue(): void {\n    this.dataService.mutations.closeIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Reopens the currently closed issue. */\n  public reopenIssue(): void {\n    this.dataService.mutations.reopenIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Adds a comment to the current issue with the data provided in the comment box. */\n  public commentIssue(): void {\n    this.savingComment = true;\n    this.dataService.mutations.addIssueComment(\n      Math.random().toString(),\n      this.issue$.id,\n      this.commentEditor.code\n    ).then(() => {\n      // only clear if successful\n      this.commentEditor.code = '';\n    }).finally(() => {\n      this.savingComment = false;\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n     0\" class=\"timeline-item\">\n        \n            \n                link\n                \n                    Linked Issues\n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                        \n                    \n                \n                 10\"\n                    [list]=\"linkedIssues$\"\n                    [pageSizes]=\"[10]\">\n            \n        \n    \n\n    \n\n    \n\n    \n    \n        \n            \n                \n                    Comment this issue as \n                \n            \n            \n                \n                \n                    Close Issue\n                    \n                    Reopen\n                        Issue\n                    \n                    Comment\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    issue-contents.component.scss\n                \n                @import 'src/styles/spinner';\n\n.timeline-item {\n  position: relative;\n  margin-left: 36px;\n  padding: 12px 0;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -1px;\n    bottom: 0;\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n  }\n\n  .item-box {\n    position: relative;\n    background: white;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    margin-left: -36px;\n\n    .item-header {\n      background: rgba(0, 0, 0, 0.06);\n      border-bottom: rgba(0, 0, 0, 0.1);\n      border-radius: 4px 4px 0 0;\n      padding: 8px 16px;\n      display: flex;\n      align-items: center;\n\n      mat-icon {\n        margin-right: 8px;\n        margin-left: -8px;\n      }\n\n      .item-title {\n        flex: 1;\n        margin: 0 16px 0 0;\n        overflow: hidden;\n        font-size: inherit;\n        font-weight: inherit;\n\n        .item-edited {\n          opacity: 0.5;\n        }\n      }\n    }\n\n    .item-body {\n      padding: 16px;\n\n      &.is-editing {\n        padding: 8px;\n      }\n\n      .edit-body-buttons {\n        text-align: right;\n        margin-top: 5px;\n        margin-bottom: 3px;\n      }\n    }\n  }\n}\n\n.comment-form {\n  padding-bottom: 0;\n\n  .comment-buttons {\n    text-align: right;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 0\" class=\"timeline-item\">                                    link                                    Linked Issues                                                                                                                                                                                                                                         10\"                    [list]=\"linkedIssues$\"                    [pageSizes]=\"[10]\">                                                                                                Comment this issue as                                                                                             Close Issue                                        Reopen                        Issue                                        Comment                                                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailComponent.html":{"url":"components/IssueDetailComponent.html","title":"component - IssueDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail\n            \n\n            \n                styleUrls\n                ./issue-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                category\n                            \n                            \n                                inputTitle\n                            \n                            \n                                    Public\n                                issue$\n                            \n                            \n                                    Public\n                                issueEditable\n                            \n                            \n                                    Public\n                                issueId\n                            \n                            \n                                    Public\n                                issueSub\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                savingChanges\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                            \n                                    Public\n                                userCanEditIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                            \n                                    Public\n                                finishEditing\n                            \n                            \n                                formatIssueOpenTime\n                            \n                            \n                                    Private\n                                saveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:76\n                \n            \n\n\n            \n                \n                    Begins the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        finishEditing\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishEditing(save?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:94\n                \n            \n\n\n            \n                \n                    Finishes the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    save\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nBoolean that indicates whether to save the new title.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatIssueOpenTime\n                        \n                    \n                \n            \n            \n                \nformatIssueOpenTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:115\n                \n            \n\n\n            \n                \n                    Saves all changes to the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userCanEditIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Subscription } from 'rxjs';\nimport { NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { TimeFormatter } from '@app/issue-detail/time-formatter';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-issue-detail',\n  templateUrl: './issue-detail.component.html',\n  styleUrls: ['./issue-detail.component.scss']\n})\n/**\n * This component provides detailed information about an issue.\n * It also lets the user edit properties of an issue.\n */\nexport class IssueDetailComponent implements OnInit, OnDestroy {\n\n  // current project id\n  public projectId: string;\n\n  // current issue id\n  public issueId: string;\n\n  // mark whether the current issue is editable\n  public issueEditable = false;\n\n  // mark whether changes to the current issue are being saved,\n  // used for the loading spinner of the Save button\n  public savingChanges = false;\n\n  // provides functions for time formatting\n  public timeFormatter = new TimeFormatter();\n\n  // FIXME: replace with issue$.current?.userCanEditIssue in HTML once that works\n  public userCanEditIssue = true;\n\n  public issue$: DataNode;\n  public issueSub: Subscription;\n\n  // new title of the current issue\n  @ViewChild('titleInput') inputTitle: ElementRef;\n\n  // new category of the current issue\n  category = new FormControl('', [Validators.required]);\n\n  constructor(private dataService: DataService, public activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.projectId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.issueId = this.activatedRoute.snapshot.paramMap.get('issueId');\n    const issueNodeId = { type: NodeType.Issue, id: this.issueId };\n\n    this.issue$ = this.dataService.getNode(issueNodeId);\n    this.issueSub = this.issue$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.issueSub.unsubscribe();\n  }\n\n  formatIssueOpenTime(): string {\n    if (this.issue$.hasData) {\n      return this.timeFormatter.formatTimeDifference(this.issue$.current.createdAt);\n    }\n  }\n\n  /**\n   * Begins the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   */\n  beginEditing() {\n\n    // marks the issue as editable\n    this.issueEditable = true;\n\n    // sets up the issue category\n    this.issue$.dataAsPromise().then(data =>\n      {\n        this.category.setValue(data.category);\n      });\n  }\n\n  /**\n   * Finishes the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   * @param save - Boolean that indicates whether to save the new title.\n   */\n  public finishEditing(save?: boolean): void {\n\n    // case: the new changes are to be saved\n    if (save) {\n\n      // marks the saving process as started\n      this.savingChanges = true;\n\n      // saves all changes\n      this.saveChanges();\n    }\n\n    // case: the new changes are not to be saved\n    else {\n      this.issueEditable = false;\n    }\n  }\n\n  /**\n   * Saves all changes to the current issue.\n   */\n  private saveChanges() {\n\n    // 1) saves the new title\n    this.dataService.mutations.renameIssueTitle(\n      Math.random().toString(),\n      this.issue$.id,\n      this.inputTitle.nativeElement.value\n    );\n\n    // 2) saves the new category\n    this.dataService.mutations.changeIssueCategory(\n      Math.random().toString(),\n      this.issue$.id,\n      this.category.value\n    ).then(() => {\n      // marks the issue as uneditable\n      this.issueEditable = false;\n    }).finally(() => {\n      // marks the saving process as finished\n      this.savingChanges = false;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n\n      \n      \n        {{issue.title}}\n      \n\n      \n      \n        \n      \n\n      \n\n        \n        \n          Edit\n        \n\n        \n\n          \n          \n            Cancel\n          \n\n          &nbsp;\n\n          \n          \n            Save\n          \n        \n      \n    \n\n    \n    \n\n      \n      \n        \n          \n          Unclassified\n        \n        \n          \n          Bug\n        \n        \n          \n          Feature Request\n        \n      \n    \n\n    \n    \n\n      \n      \n        \n        \n          Open\n          Closed\n        \n      \n\n      \n      \n        \n        opened this issue\n        \n          {{this.formatIssueOpenTime()}}\n        \n      \n\n      \n      \n        &nbsp;&sdot; {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, 'comment')}}\n      \n    \n  \n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-detail.component.scss\n                \n                @import 'src/styles/variables.scss';\n@import 'src/styles/spinner';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n.issue-details {\n  padding: 16px;\n\n  .issue-header {\n    padding-bottom: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n    margin-bottom: 16px;\n  }\n\n  .issue-page {\n    display: flex;\n\n    .issue-contents {\n      flex: 2;\n    }\n\n    .issue-sidebar {\n      flex: 1;\n      max-width: 300px;\n      margin-left: 16px;\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  // put issue sidebar below on narrow displays\n  .issue-details .issue-page {\n    display: block;\n  }\n}\n\n.issue-header {\n  .issue-title {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n\n    .title-text {\n      margin: 0;\n      margin-right: 16px;\n      flex: 1;\n    }\n\n    .title-input {\n      flex: 1;\n      margin-right: 16px;\n\n      ::ng-deep .mat-form-field-wrapper {\n        padding-bottom: 0;\n\n        .mat-form-field-infix {\n          border-top-width: 0.5em;\n        }\n      }\n    }\n  }\n\n  .issue-category {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .issue-subheading {\n    display: flex;\n    align-items: center;\n\n    .issue-status {\n      display: inline-flex;\n      padding: 2px 8px 2px 4px;\n      border-radius: 100px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      align-items: center;\n      font-weight: 500;\n      margin-right: 8px;\n\n      .status-icon {\n        margin-right: 2px;\n      }\n      .status-label {\n        display: block;\n      }\n\n      .status-icon ::ng-deep svg {\n        .state[fill] {\n          fill: white;\n        }\n        .state[stroke] {\n          stroke: white;\n        }\n        .arrow-in, .arrow-out, .assigned-star {\n          fill: rgba(255, 255, 255, 0.7);\n        }\n      }\n\n      &.is-open {\n        color: white;\n        background: #00ba39;\n      }\n      &.is-closed {\n        color: white;\n        background: #ff0036;\n      }\n    }\n\n    .issue-opened, .issue-stats {\n      display: inline-block;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{issue.title}}                                                                Edit                                                Cancel                                                     Save                                                                            Unclassified                                    Bug                                    Feature Request                                                                Open          Closed                                          opened this issue                  {{this.formatIssueOpenTime()}}                                   ⋅ {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, \\'comment\\')}}                          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueFilterComponent.html":{"url":"components/IssueFilterComponent.html","title":"component - IssueFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-filter.component.ts\n\n\n\n    \n        Description\n    \n    \n        Edits an IssueFilter object.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-filter\n            \n\n            \n                styleUrls\n                ./issue-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePredicates\n                            \n                            \n                                predicateCount\n                            \n                            \n                                predicates\n                            \n                            \n                                predicateValues\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPredicateAfter\n                            \n                            \n                                applyIdChangeset\n                            \n                            \n                                buildFilter\n                            \n                            \n                                getRemainingTypes\n                            \n                            \n                                removePredicateAt\n                            \n                            \n                                setInEnumArray\n                            \n                            \n                                setPredicateType\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allLabelsList\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allLabelsList\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:118\n                            \n                        \n                \n                    \n                        The list from which to source labels in the label picker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:116\n                            \n                        \n                \n                    \n                        Raw project ID.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:120\n                            \n                        \n                \n                    \n                        Emitted every time the filter is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPredicateAfter\n                        \n                    \n                \n            \n            \n                \naddPredicateAfter(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:167\n                \n            \n\n\n            \n                \n                    Adds a new predicate after the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyIdChangeset\n                        \n                    \n                \n            \n            \n                \napplyIdChangeset(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:195\n                \n            \n\n\n            \n                \n                    Returns a function that can be passed to an app-set-editor to apply the changeset to the\nvalue of the id predicate.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        predicate name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (added: any, removed: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildFilter\n                        \n                    \n                \n            \n            \n                \nbuildFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:210\n                \n            \n\n\n            \n                \n                    Builds an IssueFilter from the search query and selected filters.\n\n\n                    \n                        Returns :     IssueFilter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRemainingTypes\n                        \n                    \n                \n            \n            \n                \ngetRemainingTypes(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:137\n                \n            \n\n\n            \n                \n                    Returns all types of predicates that were not taken in previous items.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePredicateAt\n                        \n                    \n                \n            \n            \n                \nremovePredicateAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:157\n                \n            \n\n\n            \n                \n                    Removes the predicate at the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInEnumArray\n                        \n                    \n                \n            \n            \n                \nsetInEnumArray(array, item, inArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:180\n                \n            \n\n\n            \n                \n                    Sets the presence of a value in an array of enum variants.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the array to mutate\n\n                                    \n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the enum variant\n\n                                    \n                                \n                                \n                                    inArray\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether or not it should be in the array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPredicateType\n                        \n                    \n                \n            \n            \n                \nsetPredicateType(index: number, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:147\n                \n            \n\n\n            \n                \n                    Sets the type of the predicate at index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new type (must be unique!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:222\n                \n            \n\n\n            \n                \n                    Emits a change event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePredicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:127\n                        \n                    \n\n            \n                \n                    The names of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(PREDICATES).length\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PREDICATES\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:129\n                        \n                    \n\n            \n                \n                    The values of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:131\n                        \n                    \n\n            \n                \n                    Current search query.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IssueCategory, IssueFilter } from '../../generated/graphql-dgql';\nimport { ListId, ListType, NodeType, ROOT_NODE } from '@app/data-dgql/id';\n\n/** Returns the ListId for listing all project issues. */\nconst listAllIssues = (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n});\n\n/**\n * List of all possible issue filter predicates.\n *\n * Keyed by their name, each predicate has a type, label,\n * and possibly additional options depending on their type.\n */\nconst PREDICATES = {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n};\n\n/** Returns the default value for a predicate type. */\nfunction getDefaultForType(type: string) {\n  switch (type) {\n    case 'bool':\n      return true;\n    case 'enum':\n    case 'ids':\n      return [];\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\n/** Converts a predicate value into the backend representation for use in the filter. */\nfunction convertValueForFilter(type: string, value: any) {\n  switch (type) {\n    case 'ids':\n      return value.map(item => item.id);\n    default:\n      return value;\n  }\n}\n\n/**\n * Edits an IssueFilter object.\n */\n@Component({\n  selector: 'app-issue-filter',\n  templateUrl: './issue-filter.component.html',\n  styleUrls: ['./issue-filter.component.scss']\n})\nexport class IssueFilterComponent {\n  /** Raw project ID. */\n  @Input() projectId: string;\n  /** The list from which to source labels in the label picker. */\n  @Input() allLabelsList: ListId;\n  /** Emitted every time the filter is changed. */\n  @Output() filterChange = new EventEmitter();\n\n  // constants as class properties because angular\n  predicates = PREDICATES;\n  predicateCount = Object.keys(PREDICATES).length;\n\n  /** The names of currently active predicates. */\n  activePredicates: string[] = [];\n  /** The values of currently active predicates. */\n  predicateValues: { [key: string]: any } = {};\n  /** Current search query. */\n  searchQuery = '';\n\n  /**\n   * Returns all types of predicates that were not taken in previous items.\n   * @param index index in activePredicates\n   */\n  getRemainingTypes(index: number): string[] {\n    const previousItems = this.activePredicates.slice(0, index);\n    return Object.keys(PREDICATES).filter(id => !previousItems.includes(id));\n  }\n\n  /**\n   * Sets the type of the predicate at index in activePredicates.\n   * @param index index in activePredicates\n   * @param type new type (must be unique!)\n   */\n  setPredicateType(index: number, type: string) {\n    this.activePredicates[index] = type;\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Removes the predicate at the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  removePredicateAt(index: number) {\n    const type = this.activePredicates.splice(index, 1)[0];\n    delete this.predicateValues[type];\n    this.update();\n  }\n\n  /**\n   * Adds a new predicate after the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  addPredicateAfter(index: number) {\n    const type = this.getRemainingTypes(index + 1)[0];\n    this.activePredicates.splice(index + 1, 0, type);\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Sets the presence of a value in an array of enum variants.\n   * @param array the array to mutate\n   * @param item the enum variant\n   * @param inArray whether or not it should be in the array\n   */\n  setInEnumArray(array, item, inArray) {\n    if (inArray && !array.includes(item)) {\n      array.push(item);\n    }\n    if (!inArray && array.includes(item)) {\n      array.splice(array.indexOf(item), 1);\n    }\n    this.update();\n  }\n\n  /**\n   * Returns a function that can be passed to an app-set-editor to apply the changeset to the\n   * value of the id predicate.\n   * @param id predicate name\n   */\n  applyIdChangeset(id) {\n    return async (added, removed) => {\n      for (const item of added) {\n        this.predicateValues[id].push(item);\n      }\n      for (const item of removed) {\n        this.predicateValues[id].splice(this.predicateValues[id].indexOf(item), 1);\n      }\n      this.update();\n    };\n  }\n\n  /**\n   * Builds an IssueFilter from the search query and selected filters.\n   */\n  buildFilter(): IssueFilter {\n    const filter: IssueFilter = {};\n    if (this.searchQuery.trim()) {\n      filter.fullSearch = { text: this.searchQuery.trim() };\n    }\n    for (const id of this.activePredicates) {\n      filter[id] = convertValueForFilter(PREDICATES[id].type, this.predicateValues[id]);\n    }\n    return filter;\n  }\n\n  /** Emits a change event. */\n  update() {\n    this.filterChange.emit(this.buildFilter());\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Search\n            \n        \n        \n            filter_list\n        \n    \n\n    \n        \n            Filter\n        \n        \n            \n                \n                    \n                        \n                            {{predicates[type].label}}\n                        \n                    \n                \n            \n            \n\n                \n\n                \n                    \n                        \n                            Yes\n                        \n                        \n                            No\n                        \n                    \n                \n                \n                    \n                        \n                            {{entry[1]}}\n                        \n                    \n                \n                \n                    \n                        {{predicates[id].label}}\n                        {{predicates[id].ifEmpty}}\n                        \n                            \n                            \n                            \n                            \n                                \n                                    {{item.name}}\n                                \n                                \n                                    \n                                        {{item.component.name}} ›\n                                    \n                                    {{item.name}}\n                                \n                            \n                        \n                    \n                \n\n                \n\n            \n            \n                \n                    remove\n                \n                \n                    add\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./issue-filter.component.scss\n                \n                .filter-box {\n  padding: 8px;\n\n  // we do not want the extra spacing around form fields\n  // (we wont be showing any helper text or errors anyway)\n  ::ng-deep .mat-form-field-wrapper {\n    padding-bottom: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .pred-add, .pred-remove {\n    min-width: 48px;\n    width: 48px;\n    padding: 0 8px;\n  }\n\n  .search-box {\n    display: flex;\n    align-items: center;\n\n    .search-field {\n      flex: 1;\n    }\n\n    .pred-add {\n      margin-left: 16px;\n    }\n  }\n\n  .filter-predicates {\n    margin-top: 8px;\n\n    .filter-title {\n      font-weight: bold;\n      padding-left: 8px;\n    }\n\n    .filter-predicate {\n      display: flex;\n      align-items: flex-start;\n\n      .predicate-type {\n        margin-right: 16px;\n      }\n      .predicate-value {\n        flex: 1;\n      }\n\n      .predicate-mgmt {\n        margin-left: 16px;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        border-radius: 4px;\n\n        .pred-add {\n          margin-left: 4px;\n        }\n      }\n\n      @media (max-width: 500px) {\n        display: block;\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\n        padding: 8px 0;\n\n        .predicate-type {\n          margin-right: 0;\n          margin-bottom: 8px;\n\n          .predicate-type-selector {\n            width: 100%;\n          }\n        }\n        .predicate-value {\n          .bool-value {\n            width: 100%;\n            mat-button-toggle {\n              width: 100%;\n            }\n          }\n        }\n        .predicate-mgmt {\n          border: none;\n          margin-left: 0;\n          text-align: right;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Search                                        filter_list                                    Filter                                                                                                                    {{predicates[type].label}}                                                                                                                                                                                            Yes                                                                            No                                                                                                                                                    {{entry[1]}}                                                                                                                        {{predicates[id].label}}                        {{predicates[id].ifEmpty}}                                                                                                                                                                                                            {{item.name}}                                                                                                                                            {{item.component.name}} ›                                                                        {{item.name}}                                                                                                                                                                                                    remove                                                    add                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueFolderNode.html":{"url":"interfaces/IssueFolderNode.html","title":"interface - IssueFolderNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueFolderNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueCount\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     IssueCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphApiService.html":{"url":"injectables/IssueGraphApiService.html","title":"injectable - IssueGraphApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for retrieval and conversion of data needed for graph rendering from backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                loadIssueGraphData\n                            \n                            \n                                removeConsumedInterface\n                            \n                            \n                                textsToRegex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getFullIssueGraphDataQuery: GetIssueGraphDataGQL, addConsumedInterfaceMutation: AddConsumedInterfaceGQL, removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL, getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-api.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getFullIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    AddConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    RemoveConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getSearchIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataForSearchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:80\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIssueGraphData\n                        \n                    \n                \n            \n            \n                \nloadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:42\n                \n            \n\n\n            \n                \n                    Queries backend for data needed to render graph when given parameters restricting what information is requested.\nThis method handels the construction of the parameters to the graphql query,\nand makes the query. To carry out the conversion from backend to frontend format,\nit invokes GraphDataFactory.graphDataFromGQL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    categories\n                                    \n                                                SelectedCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        describes which issue categories (e.g. BUG) are of interest\n\n                                    \n                                \n                                \n                                    labels\n                                    \n                                                FilterLabel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of issue labels the user has entered into the query bar\n\n                                    \n                                \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of text fragments the user has entered into the query bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:89\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textsToRegex\n                        \n                    \n                \n            \n            \n                \ntextsToRegex(texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:68\n                \n            \n\n\n            \n                \n                    Creates a regular expression denoting a language of the union of the strings in texts\ntextsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            textsToRegex([&quot;newest issues&quot;, &quot;test&quot;]) == &quot;(newest issues | test)&quot;&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  AddConsumedInterfaceGQL,\n  GetIssueGraphDataForSearchGQL,\n  GetIssueGraphDataGQL,\n  IssueCategory,\n  RemoveConsumedInterfaceGQL\n} from 'src/generated/graphql';\nimport {GraphData, GraphDataFactory} from './graph-data';\nimport {Observable} from 'rxjs';\nimport {SelectedCategories} from '@app/graphs/shared';\nimport {FilterLabel} from '../label/label-store.service';\n\n/**\n * Responsible for retrieval and conversion of data needed for graph rendering from backend.\n *\n * @export\n * @class IssueGraphApiService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphApiService {\n\n  constructor(private getFullIssueGraphDataQuery: GetIssueGraphDataGQL,\n              private addConsumedInterfaceMutation: AddConsumedInterfaceGQL,\n              private removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL,\n              private getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL) {\n  }\n\n  /**\n   * Queries backend for data needed to render graph when given parameters restricting what information is requested.\n   * This method handels the construction of the parameters to the graphql query,\n   * and makes the query. To carry out the conversion from backend to frontend format,\n   * it invokes GraphDataFactory.graphDataFromGQL\n   * @param projectId\n   * @param categories describes which issue categories (e.g. BUG) are of interest\n   * @param labels a list of issue labels the user has entered into the query bar\n   * @param texts a list of text fragments the user has entered into the query bar\n   */\n  loadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[]): Observable {\n    const activeCategories: IssueCategory[] = [];\n    for (const key of Object.values(IssueCategory)) {\n      if (categories[key]) {\n        activeCategories.push(key as IssueCategory);\n      }\n    }\n    if (labels.length === 0 && texts.length === 0) {\n      return this.getFullIssueGraphDataQuery.fetch({projectId, activeCategories}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    } else {\n      const selectedLabels: string[] = labels.map(label => label.id);\n      const issueRegex = this.textsToRegex(texts);\n      return this.getSearchIssueGraphDataQuery.fetch({projectId, activeCategories, selectedLabels, issueRegex}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    }\n  }\n\n  /**\n   * Creates a regular expression denoting a language of the union of the strings in texts\n   * @param texts\n   * @example\n   * textsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n   */\n  textsToRegex(texts: string[]): string {\n    if (texts.length === 0) {\n      return undefined;\n    }\n    return texts.map(text => '(' + text + ')').join('|');\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  addConsumedInterface(component: string, componentInterface: string) {\n    return this.addConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  removeConsumedInterface(component: string, componentInterface: string) {\n    return this.removeConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphClassSettersService.html":{"url":"injectables/IssueGraphClassSettersService.html","title":"injectable - IssueGraphClassSettersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphClassSettersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the class setters\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageClassSetters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageClassSetters\n                        \n                    \n                \n            \n            \n                \nmanageClassSetters(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts:24\n                \n            \n\n\n            \n                \n                    Manages node / edge class setters so that node / edge classes\nof given GraphEditor instances match their corresponding class names.\nThe setters return true if the class name is applied to the corresponding node / edge.\nThey are called on all nodes, pairs of edges and class names.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the class setters \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphClassSettersService {\n\n  /**\n   * Manages node / edge class setters so that node / edge classes \n   * of given GraphEditor instances match their corresponding class names.\n   * The setters return true if the class name is applied to the corresponding node / edge.\n   * They are called on all nodes, pairs of edges and class names.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageClassSetters(graph: GraphEditor, minimap: GraphEditor) {\n\n    // node class setter\n    const nodeClassSetter = (className: string, node: Node) => {\n      if (className === node.type) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies noce class setter\n    graph.setNodeClass = nodeClassSetter;\n    minimap.setNodeClass = nodeClassSetter;\n\n    // edge class setter\n    const edgeClassSetter = (\n      className: string,\n      edge: Edge,\n      sourceNode: Node,\n      targetNode: Node\n    ) => {\n      if (className === edge.type) {\n        return true;\n      }\n      if (className === 'related-to' && edge.type === 'relatedTo') {\n        return true;\n      }\n      if (className === 'issue-relation' &&\n        (edge.type === 'relatedTo' ||\n          edge.type === 'duplicate' ||\n          edge.type === 'dependency')) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies edge class setter\n    graph.setEdgeClass = edgeClassSetter;\n    minimap.setEdgeClass = edgeClassSetter;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueGraphControlsComponent.html":{"url":"components/IssueGraphControlsComponent.html","title":"component - IssueGraphControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueGraphControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains the graph toggles, the search bar and the button\nfor creating new components. Additionally it contains the actual graph component and feeds\ndata to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\nAnother observable retrieved from the IssueGraphStateService maps these values into the graph\ndata matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-graph-controls\n            \n\n            \n                styleUrls\n                ./issue-graph-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-graph-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bug\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                featureRequests\n                            \n                            \n                                filter$\n                            \n                            \n                                issueGraph\n                            \n                            \n                                labelSearch\n                            \n                            \n                                projectId\n                            \n                            \n                                    Public\n                                selectedCategories$\n                            \n                            \n                                showRelations\n                            \n                            \n                                unclassified\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSelectedCategories\n                            \n                            \n                                layoutGraph\n                            \n                            \n                                setRelationVisibility\n                            \n                            \n                                    Public\n                                updateSelectedCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, gs: IssueGraphStateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:66\n                \n            \n\n\n            \n                \n                    Gathers booleans indicating whether the toggle switches\ncoressponding to values in IssueCategory are turned on or off\n\n\n                    \n                        Returns :         SelectedCategories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        layoutGraph\n                        \n                    \n                \n            \n            \n                \nlayoutGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRelationVisibility\n                        \n                    \n                \n            \n            \n                \nsetRelationVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:108\n                \n            \n\n\n            \n                \n                    Tell the graph component whether to show issue relations or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:57\n                \n            \n\n\n            \n                \n                    Emit newly selected categories via this.selectedCategories$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featureRequests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueGraph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssueGraphComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(IssueGraphComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelSearchComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(LabelSearchComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.getSelectedCategories()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRelations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unclassified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {IssueGraphComponent} from '../issue-graph/issue-graph.component';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {BehaviorSubject, combineLatest, ReplaySubject} from 'rxjs';\nimport {SelectedCategories} from '../shared';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {LabelSearchComponent} from '../label-search/label-search.component';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {FilterState} from '@app/graphs/shared';\n\n/**\n * This component contains the graph toggles, the search bar and the button\n * for creating new components. Additionally it contains the actual graph component and feeds\n * data to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\n * Another observable retrieved from the IssueGraphStateService maps these values into the graph\n * data matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n */\n@Component({\n  selector: 'app-issue-graph-controls',\n  templateUrl: './issue-graph-controls.component.html',\n  styleUrls: ['./issue-graph-controls.component.scss']\n})\nexport class IssueGraphControlsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(IssueGraphComponent) issueGraph: IssueGraphComponent;\n  @ViewChild(LabelSearchComponent) labelSearch: LabelSearchComponent;\n\n  projectId: string;\n\n  // these 3 booleans are bound to the issue category toggles via ngModel\n  featureRequests = true;\n  bug = true;\n  unclassified = true;\n\n  showRelations = true;\n  // emits state of toggles and search bar combined\n  filter$: BehaviorSubject;\n  private destroy$ = new ReplaySubject(1);\n\n  constructor(public dialog: MatDialog, private gs: IssueGraphStateService, private route: ActivatedRoute) {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.filter$ = new BehaviorSubject({\n      selectedCategories: this.getSelectedCategories(), selectedFilter: {\n        labels: [], texts: []\n      }\n    });\n  }\n\n  public selectedCategories$ = new BehaviorSubject(\n    this.getSelectedCategories()\n  );\n\n  /**\n   * Emit newly selected categories via this.selectedCategories$\n   */\n  public updateSelectedCategories() {\n    this.selectedCategories$.next(\n      this.getSelectedCategories());\n  }\n\n  /**\n   * Gathers booleans indicating whether the toggle switches\n   * coressponding to values in IssueCategory are turned on or off\n   */\n  private getSelectedCategories(): SelectedCategories {\n    return {\n      [IssueCategory.Bug]: this.bug,\n      [IssueCategory.FeatureRequest]: this.featureRequests,\n      [IssueCategory.Unclassified]: this.unclassified,\n    };\n  }\n\n  layoutGraph(): void {\n    this.issueGraph.layoutGraph();\n    this.issueGraph.drawGraph();\n    this.issueGraph.fitGraphInView();\n  }\n\n  /**\n   * Setup this.filter$ and create subscription for observable returned from graphDataForFilter\n   */\n  ngAfterViewInit(): void {\n    // sets up emission of values representing the state of the graph toggles and the search bar via this.filter$\n    combineLatest([this.selectedCategories$, this.labelSearch.filterSelection$]).pipe(\n      takeUntil(this.destroy$),\n      map(([selectedCategories, filterSelection]) => ({selectedCategories, selectedFilter: filterSelection}))\n    ).subscribe(filterState => this.filter$.next(filterState));\n\n    // gets an obervable from GraphStateService that emits the matching graph state\n    // after this component emits values on this.filter$ or the IssueGraphComponent\n    // signals the need for a reload via this.issueGraph.reload$. Whenever new graph state\n    // arrives we pass it to the graph and issue a redraw on it.\n    this.gs.graphDataForFilter(this.filter$, this.issueGraph.reload$, this.destroy$).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      graphData => {\n        this.issueGraph.graphData = graphData;\n        this.issueGraph.drawGraph();\n      }\n    );\n  }\n\n  /**\n   * Tell the graph component whether to show issue relations or not.\n   *\n   */\n  setRelationVisibility(): void {\n    this.issueGraph.setRelationVisibility(this.showRelations);\n  }\n\n  /**\n   * Cancel subscriptions by emitting a value on this.destroy$\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n      emoji_objects\n    \n\n    \n    \n      bug_report\n    \n\n      \n    \n      help\n    \n\n    \n    \n      \n    \n\n    \n    \n      center_focus_strong\n    \n\n    \n    \n      dashboard\n    \n\n    \n    \n\n    \n    \n      add\n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./issue-graph-controls.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n.container app-issue-graph {\n  flex-grow: 1;\n}\n\n.controls {\n  display: flex;\n  flex-direction: row;\n  background-color: $background-controls;\n  border-bottom: 1px solid $border-color-controls;\n}\n\n.controls app-label-search {\n  display: inline-block;\n    height: 44px;\n    flex-grow: 1;\n    margin-left: 20px;\n}\n\n.slide-toggle {\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.bug-report-icon {\n  color: red;\n}\n\n.feature-request-icon {\n  color: #005eff;\n}\n\n.feature-request-icon, .bug-report-icon, .notification-icon, .unclassified-icon {\n  margin-top: 7px;\n}\n\n.relation-edge-icon {\n  margin-top: 12px;\n}\n.create-component-button {\n  margin: 10px;\n  margin-left: 20px;\n  right: 10px;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  emoji_objects                  bug_report                    help                                    center_focus_strong                  dashboard                          add          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueGraphControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphDynamicTemplateRegistryService.html":{"url":"injectables/IssueGraphDynamicTemplateRegistryService.html","title":"injectable - IssueGraphDynamicTemplateRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphDynamicTemplateRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the dynamic template registry\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageDynamicTemplateRegistry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageDynamicTemplateRegistry\n                        \n                    \n                \n            \n            \n                \nmanageDynamicTemplateRegistry(graph: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts:21\n                \n            \n\n\n            \n                \n                    Manages the dynamic template registry of given GraphEditor instance.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as dynamicTemplate from '@ustutt/grapheditor-webcomponent/lib/dynamic-templates/dynamic-template';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {LinkHandle} from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the dynamic template registry \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphDynamicTemplateRegistryService {\n\n  /**\n   * Manages the dynamic template registry of given GraphEditor instance.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   */\n  manageDynamicTemplateRegistry(graph: GraphEditor) {\n    graph.dynamicTemplateRegistry.addDynamicTemplate('issue-group-container', {\n      renderInitialTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n        g.append('circle')\n          .attr('x', 0)\n          .attr('y', 0)\n          .attr('r', 1)\n          .style('opacity', 0);\n      },\n      updateTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n      },\n      getLinkHandles(g, grapheditor: GraphEditor): LinkHandle[] {\n        // template has no link handles\n        return [];\n      },\n    } as dynamicTemplate.DynamicNodeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphLinkHandlesService.html":{"url":"injectables/IssueGraphLinkHandlesService.html","title":"injectable - IssueGraphLinkHandlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphLinkHandlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the link handles\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateSourceHandles\n                            \n                            \n                                    Private\n                                calculateTargetHandles\n                            \n                            \n                                manageLinkHandles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateSourceHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateSourceHandles(source: Node, handles: literal type, sourceHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:65\n                \n            \n\n\n            \n                \n                    Calculates the source handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    sourceHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateTargetHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTargetHandles(target: Node, handles: literal type, targetHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:101\n                \n            \n\n\n            \n                \n                    Calculates the target handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    targetHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageLinkHandles\n                        \n                    \n                \n            \n            \n                \nmanageLinkHandles(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:22\n                \n            \n\n\n            \n                \n                    Manages calculation of the link handles of given GraphEditor instances.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {DraggedEdge, Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport { LinkHandle } from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the link handles\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphLinkHandlesService {\n\n  /**\n   * Manages calculation of the link handles of given GraphEditor instances.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageLinkHandles(graph: GraphEditor, minimap: GraphEditor) {\n\n    // calculation for link handles\n    const linkHandleCalculation = (\n      edge: Edge | DraggedEdge,\n      sourceHandles: LinkHandle[],\n      source: Node,\n      targetHandles: LinkHandle[],\n      target: Node\n    ) => {\n\n      // handles at the source / target of a given edge\n      const handles = {\n        sourceHandles,\n        targetHandles,\n      };\n\n      // case: source of edge has allowed anchors\n      // => calculates source handles\n      if (source?.allowedAnchors != null) {\n        this.calculateSourceHandles(source, handles, sourceHandles);\n      }\n\n      // case: target of edge has allowed anchors\n      // => calculates target handles\n      if (target?.allowedAnchors != null) {\n        this.calculateTargetHandles(target, handles, targetHandles);\n      }\n\n      return handles;\n    };\n\n    // applies calculaiton for link handles\n    graph.calculateLinkHandlesForEdge = linkHandleCalculation;\n    minimap.calculateLinkHandlesForEdge = linkHandleCalculation;\n  }\n\n  /**\n   * Calculates the source handles of a given edge.\n   * @param  {Node} source - Source of the edge that is handled.\n   * @param  {{sourceHandles:LinkHandle[];targetHandles:LinkHandle[];}} handles - Handles of the edge.\n   * @param  {LinkHandle[]} sourceHandles - Source handles of the edge.\n   */\n  private calculateSourceHandles(source: Node, \n    handles: { sourceHandles: LinkHandle[]; targetHandles: LinkHandle[]; }, \n    sourceHandles: LinkHandle[]) {\n\n    handles.sourceHandles = sourceHandles.filter((linkHandle) => {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && source.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && source.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y  {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && target.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && target.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphStateService.html":{"url":"injectables/IssueGraphStateService.html","title":"injectable - IssueGraphStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                graphDataForFilter\n                            \n                            \n                                removeConsumedInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: IssueGraphApiService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        IssueGraphApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:44\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphDataForFilter\n                        \n                    \n                \n            \n            \n                \ngraphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject, destroy$: ReplaySubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:28\n                \n            \n\n\n            \n                \n                    Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\nemitting graph state for these filters retrieved from the backend.\nthe filter$ or reload$ observables emit a value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter$\n                                    \n                                                BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting a sequence of values describing the state of the filter bar above the graph\n\n                                    \n                                \n                                \n                                    reload$\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n\n                                    \n                                \n                                \n                                    destroy$\n                                    \n                                            ReplaySubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used to signal that the caller is no longer interested. On emission the returned observable finishes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\nthe filter$ or reload$ observables emit a value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:51\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, ReplaySubject} from 'rxjs';\nimport {StateService} from '@app/state.service';\nimport {GraphData} from './graph-data';\nimport {filter, shareReplay, switchMap, takeUntil} from 'rxjs/operators';\nimport {IssueGraphApiService} from './issue-graph-api.service';\nimport {FilterState} from '@app/graphs/shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphStateService {\n\n  state$: Observable;\n\n  constructor(private apiService: IssueGraphApiService, private ss: StateService) {\n  }\n\n  /**\n   * Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\n   * emitting graph state for these filters retrieved from the backend.\n   * @param filter$ an observable emitting a sequence of values describing the state of the filter bar above the graph\n   * @param reload$ an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n   * @param destroy$ used to signal that the caller is no longer interested. On emission the returned observable finishes.\n   * @returns observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\n   * the filter$ or reload$ observables emit a value.\n   */\n  graphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject,\n                     destroy$: ReplaySubject): Observable {\n    // Whenever a new value arrives from reload$, loadIssueGraphData is executed\n    this.state$ = combineLatest([this.ss.state$, filter$, reload$]).pipe(\n      takeUntil(destroy$),\n      filter(([appState, _]) => appState.project?.node.id != null),\n      switchMap(([appState, filterState]) => this.apiService.loadIssueGraphData(appState.project.node.id,\n        filterState.selectedCategories, filterState.selectedFilter.labels, filterState.selectedFilter.texts)),\n      shareReplay(1)\n    );\n    return this.state$;\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   */\n  addConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.addConsumedInterface(componentId, interfaceId);\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   */\n  removeConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.removeConsumedInterface(componentId, interfaceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerBehaviour.html":{"url":"classes/IssueGroupContainerBehaviour.html","title":"class - IssueGroupContainerBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captureChildMovement\n                            \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterNodeJoinedGroup\n                            \n                            \n                                afterNodeLeftGroup\n                            \n                            \n                                relativePositionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        captureChildMovement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:93\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeJoinedGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeLeftGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relativePositionChanged\n                        \n                    \n                \n            \n            \n                \nrelativePositionChanged(group: string, groupNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueGroupContainerNode.html":{"url":"interfaces/IssueGroupContainerNode.html","title":"interface - IssueGroupContainerNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueGroupContainerNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroupNodeIds\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupNodeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupNodeIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerParentBehaviour.html":{"url":"classes/IssueGroupContainerParentBehaviour.html","title":"class - IssueGroupContainerParentBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerParentBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n            \n                Description\n            \n            \n                See the graph_structure_documentation.png in the src/app/graphs folder for how\nthe two GroupBehaviour implementations interplay with the graph.\n\n            \n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeNodeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPosition: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialPosition\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeNodeMove\n                        \n                    \n                \n            \n            \n                \nbeforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPosition\n                                    \n                                            Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueIconComponent.html":{"url":"components/IssueIconComponent.html","title":"component - IssueIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-icon/issue-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component automatically displays the appropriate mat-icon for the given issue.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-icon\n            \n\n            \n                styleUrls\n                ./issue-icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconLabel\n                            \n                            \n                                getIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-icon/issue-icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIconLabel\n                        \n                    \n                \n            \n            \n                \ngetIconLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconName\n                        \n                    \n                \n            \n            \n                \ngetIconName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue, IssueCategory } from 'src/generated/graphql-dgql';\n\n/**\n * This component automatically displays the appropriate mat-icon for the given issue.\n */\n@Component({\n  selector: 'app-issue-icon',\n  templateUrl: './issue-icon.component.html',\n  styleUrls: ['./issue-icon.component.scss']\n})\nexport class IssueIconComponent {\n  @Input() issue: Issue;\n\n  getIconName() {\n    const category = this.issue.category === IssueCategory.Bug\n      ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest\n      ? 'feature'\n      : 'uncategorized';\n    const closed = this.issue.isOpen ? null : '-closed';\n\n    const hasIn = this.issue.linkedByIssues?.totalCount;\n    const hasOut = this.issue.linksToIssues?.totalCount;\n    const edgeType = (hasIn ? 'in' : '') + (hasOut ? 'out' : '');\n\n    return ['issue-', category, closed, edgeType && '-', edgeType].filter(part => part).join('');\n  }\n\n  getIconLabel() {\n    const category = this.issue.category === IssueCategory.Bug ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest ? 'feature' : 'issue';\n    return this.issue.isOpen ? `Open ${category}` : `Closed ${category}`;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./issue-icon.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n:host > * {\n  // get rid of bottom space caused by line height\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueItemComponent.html":{"url":"components/IssueItemComponent.html","title":"component - IssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-item/issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue (for use in e.g. a list).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-item\n            \n\n            \n                styleUrls\n                ./issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extended\n                            \n                            \n                                interactive\n                            \n                            \n                                issue\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:17\n                            \n                        \n                \n                    \n                        Whether to show extended info, such as the issue's locations.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        interactive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n                \n                    \n                        If true, this component will display a hyperlink.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:15\n                            \n                        \n                \n                    \n                        The issue object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:13\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIssueLink\n                        \n                    \n                \n            \n            \n                \ngetIssueLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-item/issue-item.component.ts:24\n                \n            \n\n\n            \n                \n                    Returns the link URL for the issue.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Router } from '@angular/router';\n\n/** This component displays an issue (for use in e.g. a list). */\n@Component({\n  selector: 'app-issue-item',\n  templateUrl: './issue-item.component.html',\n  styleUrls: ['./issue-item.component.scss']\n})\nexport class IssueItemComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The issue object that will be displayed. */\n  @Input() issue: Issue;\n  /** Whether to show extended info, such as the issue's locations. */\n  @Input() extended = false;\n  /** If true, this component will display a hyperlink. */\n  @Input() interactive = false;\n\n  constructor(private router: Router) {}\n\n  /** Returns the link URL for the issue. */\n  getIssueLink() {\n    return this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issue.id]\n    ));\n  }\n}\n\n    \n\n    \n        \n  \n  {{issue.title}}\n\n\n  \n  {{issue.title}}\n\n\n  \n    {{component.name}}\n  \n\n\n    \n\n    \n                \n                    ./issue-item.component.scss\n                \n                :host {\n  line-height: 1.4em;\n\n  .issue-icon {\n    vertical-align: middle;\n  }\n\n  .linked-issue-locations {\n    font-size: 0.8em;\n    font-weight: normal;\n\n    .inner-item {\n      display: inline-block;\n      line-height: 1.2em;\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 2px;\n      padding: 1px 2px;\n      margin-right: 2px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{issue.title}}    {{issue.title}}      {{component.name}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLabelComponent.html":{"url":"components/IssueLabelComponent.html","title":"component - IssueLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-label/issue-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Renders an issue label.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-label\n            \n\n            \n                styleUrls\n                ./issue-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                labelColorForBackground\n                            \n                            \n                                    Public\n                                labelIsDark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     Label\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-label/issue-label.component.ts:14\n                            \n                        \n                \n                    \n                        The label to display. Nullable. Should have properties name and color.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        labelColorForBackground\n                        \n                    \n                \n            \n            \n                \n                    \n                    labelColorForBackground(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:20\n                \n            \n\n\n            \n                \n                    Determines the label color for a given background color.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the background color string in hex or rgb(...)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"black\" | \"white\"\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        labelIsDark\n                        \n                    \n                \n            \n            \n                \n                    \n                    labelIsDark(color)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:65\n                \n            \n\n\n            \n                \n                    Determines whether the background color is light or dark.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nBackground color of a label.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Label } from 'src/generated/graphql-dgql';\n\n/**\n * Renders an issue label.\n */\n@Component({\n  selector: 'app-issue-label',\n  templateUrl: './issue-label.component.html',\n  styleUrls: ['./issue-label.component.scss']\n})\nexport class IssueLabelComponent {\n  /** The label to display. Nullable. Should have properties `name` and `color`. */\n  @Input() label: Label;\n\n  /**\n   * Determines the label color for a given background color.\n   * @param color the background color string in hex or rgb(...)\n   */\n  public static labelColorForBackground(color) {\n    // Variables for red, green, blue values\n    let r, g, b, hsp;\n\n    // Check the format of the color, HEX or RGB?\n    if (color.match(/^rgb/)) {\n\n      // If RGB --> store the red, green, blue values in separate variables\n      color = color.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/);\n\n      r = color[1];\n      g = color[2];\n      b = color[3];\n    } else {\n\n      // If hex --> Convert it to RGB: http://gist.github.com/983661\n      color = +('0x' + color.slice(1).replace(\n        color.length > 16;\n      g = color >> 8 & 255;\n      b = color & 255;\n    }\n\n    // HSP (Hue-Sat-Perceived-brightness) equation from http://alienryderflex.com/hsp.html\n    hsp = Math.sqrt(\n      0.299 * (r * r) +\n      0.587 * (g * g) +\n      0.114 * (b * b)\n    );\n\n    // Using the HSP value, determine whether the color is light or dark\n    // Compare against gamma-adjusted tipping point\n    if (hsp > Math.sqrt(0.5) * 255) {\n      return 'black';\n    } else {\n      return 'white';\n    }\n  }\n\n  /**\n   * Determines whether the background color is light or dark.\n   *\n   * @param color - Background color of a label.\n   */\n  public labelIsDark(color) {\n    if (!color) {\n      return false;\n    }\n    return IssueLabelComponent.labelColorForBackground(color) === 'black';\n  }\n}\n\n    \n\n    \n        \n    {{label?.name}}\n\n\n    \n\n    \n                \n                    ./issue-label.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n.inner-label {\n  display: inline-block;\n  color: white;\n  border-radius: 4px;\n  padding: 1px 2px;\n  margin: 1px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  &.is-dark-text {\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label?.name}}'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows all issues for a given component / interface.\nIt lets the user 1) filter through all the issues,\n2) create new issues and also 3) sort all issues in a separate table view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                ./issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allLabelsList\n                            \n                            \n                                    Public\n                                canCreateNewIssue\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                    Public\n                                    Optional\n                                component$\n                            \n                            \n                                    Public\n                                    Optional\n                                componentInterface$\n                            \n                            \n                                    Public\n                                componentInterfaceProvider\n                            \n                            \n                                    Private\n                                    Optional\n                                componentInterfaceSub\n                            \n                            \n                                    Private\n                                    Optional\n                                componentSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                    Optional\n                                list$\n                            \n                            \n                                paginator\n                            \n                            \n                                query\n                            \n                            \n                                    Public\n                                queryParamFilter\n                            \n                            \n                                searchIssuesDataArray\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                formatCategoryDescription\n                            \n                            \n                                formatCategoryIcon\n                            \n                            \n                                    Private\n                                getQueryParamFilter\n                            \n                            \n                                onAddClick\n                            \n                            \n                                    Private\n                                prepareIssueArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listId\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dialog: MatDialog, router: Router, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listId\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filter: IssueFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:188\n                \n            \n\n\n            \n                \n                    Applies a given filter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IssueFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGiven filter to be applied.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(row: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:197\n                \n            \n\n\n            \n                \n                    Gets activated when an issue is clicked.\nNavigates the user to the corresponding issue page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIssue that is clicked.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryDescription\n                        \n                    \n                \n            \n            \n                \nformatCategoryDescription(category: IssueCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:93\n                \n            \n\n\n            \n                \n                    Determines issue description depending on the given categiry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                            IssueCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue category.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue description.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryIcon\n                        \n                    \n                \n            \n            \n                \nformatCategoryIcon(issue: Issue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:77\n                \n            \n\n\n            \n                \n                    Determines issue icon depending on the given category.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    issue\n                                    \n                                            Issue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue icon id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getQueryParamFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getQueryParamFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:163\n                \n            \n\n\n            \n                \n                    Gets the query param filter.\nIf it is set, the issue list shows only issues that match the given keyword.\nOtherwise all issues are displayed.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:245\n                \n            \n\n\n            \n                \n                    Opens a Create Issue dialog.\nAlso selects components and locations depending from which\nComponent / Interface page the Create Issue dialog was initiated.\nex. Interface I1 with Prvider Component C1 lead to an Interface Issue\nwith components: Component C1 and locations: Component C1, Interface I1\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareIssueArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareIssueArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:207\n                \n            \n\n\n            \n                \n                    Prepares the issue array for the filter function.\nFor each issue a search string is defined.\nThe search string contains assignees, labels, and the author.\nThe filter funcion can search inside the string for keywords matching the given search string.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allLabelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canCreateNewIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['title', 'author', 'assignees', 'labels', 'category']\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        component$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        componentInterface$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentInterfaceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentInterfaceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParamFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIssuesDataArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {CreateIssueDialogComponent} from '@app/dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport DataService from '@app/data-dgql';\nimport {ListId, ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {DataList, DataNode} from '@app/data-dgql/query';\nimport {\n  Component as IComponent,\n  ComponentInterface,\n  Issue,\n  IssueCategory,\n  IssueFilter\n} from '../../generated/graphql-dgql';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component shows all issues for a given component / interface.\n * It lets the user 1) filter through all the issues,\n * 2) create new issues and also 3) sort all issues in a separate table view.\n */\n@Component({\n  selector: 'app-issue-list',\n  templateUrl: './issue-list.component.html',\n  styleUrls: ['./issue-list.component.scss']\n})\nexport class IssueListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() listId: ListId;\n  @Input() projectId: string;\n  public queryParamFilter = '';\n  public list$?: DataList;\n\n  // component that is observed\n  public component$?: DataNode;\n  private componentSub?: Subscription;\n\n  // interface that is observed\n  public componentInterface$?: DataNode;\n  private componentInterfaceSub?: Subscription;\n\n  // provider of the interface that is observed\n  public componentInterfaceProvider: NodeId;\n\n  // determines whether one can create new issues from a given component / interface page\n  // FIXME remove and use proper logic instead\n  public canCreateNewIssue = false;\n\n  public allLabelsList: ListId;\n\n  dataSource: MatTableDataSource;\n  columnsToDisplay = ['title', 'author', 'assignees', 'labels', 'category'];\n  searchIssuesDataArray: any;\n  validationFilter = new FormControl('');\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private router: Router,\n    private dataService: DataService\n  ) {\n  }\n\n  /**\n   * Determines issue icon depending on the given category.\n   * @param issue - The given issue.\n   * @returns Issue icon id.\n   */\n  formatCategoryIcon(issue: Issue): string {\n    switch (issue.category) {\n      case IssueCategory.Bug:\n        return issue.isOpen ? 'issue-bug' : 'issue-bug-closed';\n      case IssueCategory.FeatureRequest:\n        return issue.isOpen ? 'issue-feature' : 'issue-feature-closed';\n      case IssueCategory.Unclassified:\n        return issue.isOpen ? 'issue-uncategorized' : 'issue-uncategorized-closed';\n    }\n  }\n\n  /**\n   * Determines issue description depending on the given categiry.\n   * @param category - The given issue category.\n   * @returns Issue description.\n   */\n  formatCategoryDescription(category: IssueCategory): string {\n    switch (category) {\n      case IssueCategory.Bug:\n        return 'Bug';\n      case IssueCategory.FeatureRequest:\n        return 'Feature request';\n      case IssueCategory.Unclassified:\n        return 'Unclassified';\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.allLabelsList = {\n      node: this.listId.node,\n      type: ListType.Labels\n    };\n\n    if (this.listId.node.type === NodeType.Component) {\n      this.canCreateNewIssue = true;\n      this.component$ = this.dataService.getNode(this.listId.node);\n      this.componentSub = this.component$.subscribe();\n    } else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.canCreateNewIssue = true;\n      this.componentInterface$ = this.dataService.getNode(this.listId.node);\n      this.componentInterfaceSub = this.componentInterface$.subscribe();\n\n      this.componentInterface$.dataAsPromise().then(data => {\n        this.componentInterfaceProvider = {type: NodeType.Component, id: data.component.id};\n      });\n    }\n\n    // FIXME: a hack to fix the labels list on interfaces\n    if (this.listId.node.type === NodeType.ComponentInterface) {\n      const interfaceNode = this.dataService.getNode(this.listId.node);\n      interfaceNode.dataAsPromise().then(data => {\n        this.allLabelsList = {\n          node: {type: NodeType.Component, id: data.component.id},\n          type: ListType.Labels\n        };\n      });\n    }\n\n    this.list$ = this.dataService.getList(this.listId);\n    this.list$.count = 25;\n  }\n\n  ngAfterViewInit() {\n    this.query.listenTo(this.list$, data => {\n      this.dataSource = new MatTableDataSource(data ? [...data.values()] : []);\n      this.sort.sort(({id: 'category', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n      // FIXME use bespoke pagination/sorting/filtering\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.getQueryParamFilter();\n      this.validationFilter.setValue(this.getQueryParamFilter());\n      this.prepareIssueArray();\n    });\n  }\n\n  ngOnDestroy() {\n    this.componentSub?.unsubscribe();\n    this.componentInterfaceSub?.unsubscribe();\n  }\n\n  /**\n   * Gets the query param filter.\n   * If it is set, the issue list shows only issues that match the given keyword.\n   * Otherwise all issues are displayed.\n   */\n  private getQueryParamFilter(): string {\n    let returnedFilter = '';\n    this.activatedRoute.queryParams.subscribe(\n      params => {\n\n        // case: query param filter is set\n        // => shows only matching issues\n        if (params.filter) {\n          this.queryParamFilter = params.filter;\n          returnedFilter = params.filter;\n        }\n\n          // case: query param filter is not set\n        // => shows all issues\n        else {\n          returnedFilter = '';\n        }\n      });\n    return returnedFilter;\n  }\n\n  /**\n   * Applies a given filter.\n   * @param filter - Given filter to be applied.\n   */\n  applyFilter(filter: IssueFilter) {\n    this.list$.filter = filter;\n  }\n\n  /**\n   * Gets activated when an issue is clicked.\n   * Navigates the user to the corresponding issue page.\n   * @param row - Issue that is clicked.\n   */\n  clickedOnRow(row: any) {\n    this.router.navigate(['/projects', this.projectId, 'issues', row.id]);\n  }\n\n  /**\n   * Prepares the issue array for the filter function.\n   * For each issue a search string is defined.\n   * The search string contains assignees, labels, and the author.\n   * The filter funcion can search inside the string for keywords matching the given search string.\n   */\n  private prepareIssueArray() {\n\n    // FIXME use API search\n    if (!this.list$.hasData) {\n      return;\n    }\n    this.searchIssuesDataArray = [...this.list$.current.values()];\n    for (const issue of this.searchIssuesDataArray) {\n      let additionalSearchString = '';\n      issue.assigneesString = '';\n      issue.labelsString = '';\n\n      // adds all assignees\n      for (const assignee of issue.assignees.nodes) {\n        additionalSearchString += ' ' + assignee.displayName;\n        issue.assigneesString += ' ' + assignee.displayName;\n      }\n\n      // adds all labels\n      for (const label of issue.labels.nodes) {\n        additionalSearchString += ' ' + label.name;\n        issue.labelsString += ' ' + label.name;\n      }\n\n      // adds the author\n      additionalSearchString += ' ' + issue.createdBy.displayName;\n\n      issue.search = additionalSearchString;\n    }\n  }\n\n  /**\n   * Opens a Create Issue dialog.\n   * Also selects components and locations depending from which\n   * Component / Interface page the Create Issue dialog was initiated.\n   * ex. Interface I1 with Prvider Component C1 lead to an Interface Issue\n   * with components: Component C1 and locations: Component C1, Interface I1\n   */\n  onAddClick() {\n\n    // FIXME move functionality so that the component can be reusable as a list\n\n    // case: node is a component\n    if (this.listId.node.type === NodeType.Component) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.component$.id]\n          },\n          width: '600px'\n        });\n    }\n\n    // case: node is an interface\n    else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.componentInterfaceProvider],\n            locations: [this.componentInterface$.id]\n          },\n          width: '600px'\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n      \n      \n\n      \n      \n        \n          Create issue\n        \n      \n\n      \n      \n        \n\n          \n          \n            Title\n            \n             {{element.title}} \n          \n\n          \n          \n            Author\n            \n             {{element.createdBy.displayName}} \n          \n\n          \n          \n            Assignees\n            \n             {{element.assigneesString}} \n          \n\n          \n          \n            Labels\n            \n            \n              \n                \n              \n            \n          \n\n          \n          \n            Category\n            \n            \n              \n                \n                \n                {{this.formatCategoryDescription(element.category)}}\n              \n            \n          \n          \n          \n        \n      \n      \n      \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./issue-list.component.scss\n                \n                .mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201, 195, 201, 1);\n  cursor: pointer;\n}\n\n.table-container {\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Create issue                                                                  Title                         {{element.title}}                                           Author                         {{element.createdBy.displayName}}                                           Assignees                         {{element.assigneesString}}                                           Labels                                                                                                                          Category                                                                                      {{this.formatCategoryDescription(element.category)}}                                                                                              '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLocationComponent.html":{"url":"components/IssueLocationComponent.html","title":"component - IssueLocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-location/issue-location.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays an issue location.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-location\n            \n\n            \n                styleUrls\n                ./issue-location.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-location.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLocationDetails\n                            \n                            \n                                isComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :     IssueLocation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n                \n                    \n                        The location object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:15\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLocationDetails\n                        \n                    \n                \n            \n            \n                \ngoToLocationDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:28\n                \n            \n\n\n            \n                \n                    Navigates to the location's detail page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponent\n                        \n                    \n                \n            \n            \n                \nisComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:23\n                \n            \n\n\n            \n                \n                    Returns true if the location refers to a component.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IssueLocation} from '../../../generated/graphql-dgql';\n\n/**\n * Displays an issue location.\n */\n@Component({\n  selector: 'app-issue-location',\n  styleUrls: ['./issue-location.component.scss'],\n  templateUrl: './issue-location.component.html'\n})\nexport class IssueLocationComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The location object that will be displayed. */\n  @Input() location: IssueLocation;\n\n  constructor(private router: Router) {\n  }\n\n  /** Returns true if the location refers to a component. */\n  isComponent(): boolean {\n    return (this.location as any).__typename === 'Component';\n  }\n\n  /** Navigates to the location's detail page. */\n  goToLocationDetails(): void {\n    if (this.isComponent()) {\n      this.router.navigate(['projects', this.projectId, 'component', this.location.id]);\n    } else {\n      this.router.navigate(['projects', this.projectId, 'interface', this.location.id]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{location.name}}\n    \n  \n\n\n\n  \n    \n    \n      {{location.name}}\n    \n  \n\n\n    \n\n    \n                \n                    ./issue-location.component.scss\n                \n                .dot {\n  height: 10px;\n  width: 10px;\n  background-color: black;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.interface-box {\n  background-color: rgb(0, 0, 0, 0.1);\n  border-radius: 5px;\n  text-align: center;\n  margin: 2px;\n  padding: 2px 4px 2px 4px;\n}\n\n.component-box {\n  background-color: rgb(9, 109, 217, 0.5);\n  border-color: black;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 5px 5px 5px 5px;\n  text-align: center;\n  margin: 2px;\n}\n\n.component-text {\n  font-size: 11pt;\n  font-family: 'Arial Narrow', Arial, sans-serif;\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{location.name}}                      {{location.name}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueNode.html":{"url":"interfaces/IssueNode.html","title":"interface - IssueNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n            \n                Description\n            \n            \n                This file includes type definitions and creation functions (think constructors)\nfor nodes and edges that are added to the graph editor in order to visualize the project.\nSince the data that is stored with these differs based on what they represent (e.g.\ninterface vs component node) we give each their own type. We do this by extending\nthe Node class or the Edge class of the grapheditor. These classes are instantiated\nvia calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n\n            \n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueGroupContainer\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupContainer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupContainer:         IssueGroupContainerNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGroupContainerNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueStoreService.html":{"url":"injectables/IssueStoreService.html","title":"injectable - IssueStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue/issue-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides CRUD operations and linking for issues\nThe code for the mutations are automaticly generated by a code generator for the GraphQL schema\nbased on the definitions in the issue.graphql file in the same folder\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToLocation\n                            \n                            \n                                changeIssueCategory\n                            \n                            \n                                close\n                            \n                            \n                                commentIssue\n                            \n                            \n                                create\n                            \n                            \n                                deleteComment\n                            \n                            \n                                getAllTimelineItems\n                            \n                            \n                                getFullIssue\n                            \n                            \n                                link\n                            \n                            \n                                removeFromLocation\n                            \n                            \n                                rename\n                            \n                            \n                                reopen\n                            \n                            \n                                unlink\n                            \n                            \n                                updateComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createIssue: CreateIssueGQL, linkIssue: LinkIssueGQL, getFullIssueQuery: GetIssueGQL, commentIssueMutation: CommentIssueGQL, deleteIssueCommentMutation: DeleteIssueCommentGQL, unlinkIssueMutation: UnlinkIssueGQL, closeIssueMutation: CloseIssueGQL, reopenIssueMutation: ReopenIssueGQL, renameIssueMutation: RenameIssueTitleGQL, changeIssueCategoryMutation: ChangeIssueCategoryGQL, addIssueToLocationMutation: AddIssueToLocationGQL, removeIssueFromLocationMutation: RemoveIssueFromLocationGQL, updateCommentMutation: UpdateCommentGQL, getAllTimelineItemsQuery: GetAllTimelineItemsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue/issue-store.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createIssue\n                                                  \n                                                        \n                                                                    CreateIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linkIssue\n                                                  \n                                                        \n                                                                    LinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullIssueQuery\n                                                  \n                                                        \n                                                                    GetIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentIssueMutation\n                                                  \n                                                        \n                                                                    CommentIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteIssueCommentMutation\n                                                  \n                                                        \n                                                                    DeleteIssueCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unlinkIssueMutation\n                                                  \n                                                        \n                                                                    UnlinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        closeIssueMutation\n                                                  \n                                                        \n                                                                    CloseIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reopenIssueMutation\n                                                  \n                                                        \n                                                                    ReopenIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameIssueMutation\n                                                  \n                                                        \n                                                                    RenameIssueTitleGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeIssueCategoryMutation\n                                                  \n                                                        \n                                                                    ChangeIssueCategoryGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addIssueToLocationMutation\n                                                  \n                                                        \n                                                                    AddIssueToLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeIssueFromLocationMutation\n                                                  \n                                                        \n                                                                    RemoveIssueFromLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateCommentMutation\n                                                  \n                                                        \n                                                                    UpdateCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllTimelineItemsQuery\n                                                  \n                                                        \n                                                                    GetAllTimelineItemsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToLocation\n                        \n                    \n                \n            \n            \n                \naddToLocation(addLocationInput: AddIssueToLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addLocationInput\n                                    \n                                            AddIssueToLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIssueCategory\n                        \n                    \n                \n            \n            \n                \nchangeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeIssueCategoryInput\n                                    \n                                            ChangeIssueCategoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(closeInput: CloseIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closeInput\n                                    \n                                            CloseIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentIssue\n                        \n                    \n                \n            \n            \n                \ncommentIssue(commentIssueInput: AddIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentIssueInput\n                                    \n                                            AddIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(issueInput: CreateIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    issueInput\n                                    \n                                            CreateIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComment\n                        \n                    \n                \n            \n            \n                \ndeleteComment(deleteIssueCommentInput: DeleteIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteIssueCommentInput\n                                    \n                                            DeleteIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTimelineItems\n                        \n                    \n                \n            \n            \n                \ngetAllTimelineItems(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullIssue\n                        \n                    \n                \n            \n            \n                \ngetFullIssue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n            \n                \nlink(linkIssueInput: LinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkIssueInput\n                                    \n                                            LinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromLocation\n                        \n                    \n                \n            \n            \n                \nremoveFromLocation(removeLocationInput: RemoveIssueFromLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeLocationInput\n                                    \n                                            RemoveIssueFromLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(renameInput: RenameIssueTitleInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renameInput\n                                    \n                                            RenameIssueTitleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reopen\n                        \n                    \n                \n            \n            \n                \nreopen(reopenInput: ReopenIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reopenInput\n                                    \n                                            ReopenIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlink\n                        \n                    \n                \n            \n            \n                \nunlink(unlinkIssueInput: UnlinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unlinkIssueInput\n                                    \n                                            UnlinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComment\n                        \n                    \n                \n            \n            \n                \nupdateComment(updateCommentInput: UpdateCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCommentInput\n                                    \n                                            UpdateCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport {\n  AddIssueCommentInput,\n  CloseIssueGQL,\n  CommentIssueGQL,\n  CreateIssueGQL,\n  CreateIssueInput,\n  GetIssueGQL,\n  GetIssueQuery,\n  LinkIssueGQL,\n  LinkIssueInput,\n  UnlinkIssueGQL,\n  CloseIssueInput,\n  UnlinkIssueInput,\n  ReopenIssueGQL,\n  ReopenIssueInput,\n  RenameIssueTitleInput,\n  RenameIssueTitleGQL,\n  AddIssueToLocationInput,\n  RemoveIssueFromLocationInput,\n  AddIssueToLocationGQL,\n  RemoveIssueFromLocationGQL,\n  DeleteIssueCommentInput,\n  DeleteIssueCommentGQL,\n  UpdateCommentInput,\n  UpdateCommentGQL,\n  GetAllTimelineItemsGQL,\n  GetAllTimelineItemsQuery,\n  ChangeIssueCategoryGQL,\n  ChangeIssueCategoryInput\n} from 'src/generated/graphql';\nimport { Observable } from 'rxjs';\n/**\n * This service provides CRUD operations and linking for issues\n * The code for the mutations are automaticly generated by a code generator for the GraphQL schema\n * based on the definitions in the issue.graphql file in the same folder\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueStoreService {\n\n  constructor(private createIssue: CreateIssueGQL, private linkIssue: LinkIssueGQL, private getFullIssueQuery: GetIssueGQL,\n              private commentIssueMutation: CommentIssueGQL, private deleteIssueCommentMutation: DeleteIssueCommentGQL,\n              private unlinkIssueMutation: UnlinkIssueGQL,\n              private closeIssueMutation: CloseIssueGQL, private reopenIssueMutation: ReopenIssueGQL,\n              private renameIssueMutation: RenameIssueTitleGQL, \n              private changeIssueCategoryMutation: ChangeIssueCategoryGQL,\n              private addIssueToLocationMutation: AddIssueToLocationGQL,\n              private removeIssueFromLocationMutation: RemoveIssueFromLocationGQL,\n              private updateCommentMutation: UpdateCommentGQL,\n              private getAllTimelineItemsQuery: GetAllTimelineItemsGQL) {\n  }\n\n  create(issueInput: CreateIssueInput) {\n    return this.createIssue.mutate({input: issueInput});\n  }\n\n  link(linkIssueInput: LinkIssueInput) {\n    return this.linkIssue.mutate({input: linkIssueInput});\n  }\n\n  unlink(unlinkIssueInput: UnlinkIssueInput) {\n    return this.unlinkIssueMutation.mutate({input: unlinkIssueInput});\n  }\n\n  commentIssue(commentIssueInput: AddIssueCommentInput) {\n    return this.commentIssueMutation.mutate({input: commentIssueInput});\n  }\n\n  deleteComment(deleteIssueCommentInput: DeleteIssueCommentInput) {\n    return this.deleteIssueCommentMutation.mutate({input: deleteIssueCommentInput});\n  }\n\n  close(closeInput: CloseIssueInput) {\n    return this.closeIssueMutation.mutate({input: closeInput});\n  }\n\n  reopen(reopenInput: ReopenIssueInput) {\n    return this.reopenIssueMutation.mutate({input: reopenInput});\n  }\n\n  rename(renameInput: RenameIssueTitleInput) {\n    return this.renameIssueMutation.mutate({input: renameInput});\n  }\n\n  changeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput) {\n    return this.changeIssueCategoryMutation.mutate({input: changeIssueCategoryInput});\n  }\n\n  addToLocation(addLocationInput: AddIssueToLocationInput) {\n    return this.addIssueToLocationMutation.mutate({input: addLocationInput});\n  }\n\n  removeFromLocation(removeLocationInput: RemoveIssueFromLocationInput) {\n    return this.removeIssueFromLocationMutation.mutate({input: removeLocationInput});\n  }\n\n  updateComment(updateCommentInput: UpdateCommentInput) {\n    return this.updateCommentMutation.mutate({input: updateCommentInput});\n  }\n\n  getFullIssue(id: string): Observable {\n    return this.getFullIssueQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  getAllTimelineItems(id: string): Observable{\n    return this.getAllTimelineItemsQuery.fetch({input: id}).pipe(\n      map(({data}) => data)\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ItemDirective.html":{"url":"directives/ItemDirective.html","title":"directive - ItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/item.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in various components as an Angular structural directive to define item templates.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appItem]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n/** Used in various components as an Angular structural directive to define item templates. */\n@Directive({\n  selector: '[appItem]'\n})\nexport class ItemDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelSearchComponent.html":{"url":"components/LabelSearchComponent.html","title":"component - LabelSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/label-search/label-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the display of the search bar above the graph.\nIt allows for filtering issues by multiple labels and text fragments.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-search\n            \n\n            \n                styleUrls\n                ./label-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterSelection$\n                            \n                            \n                                labels$\n                            \n                            \n                                labelsInput$\n                            \n                            \n                                labelsLoading\n                            \n                            \n                                selectedLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitSelectedLabels\n                            \n                            \n                                    Private\n                                loadLabels\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelStore: LabelStoreService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelStore\n                                                  \n                                                        \n                                                                        LabelStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitSelectedLabels\n                        \n                    \n                \n            \n            \n                \nemitSelectedLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:38\n                \n            \n\n\n            \n                \n                    Emit value representing label and text fragments in the search bar via this.filterSelection$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:49\n                \n            \n\n\n            \n                \n                    Load all labels from backend that match the currently typed in ng-select element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(item: FilterLabel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                FilterLabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterSelection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({labels: [], texts: []})\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsInput$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./label-search.component.scss\n                \n                .ng-select.label-select ::ng-deep .ng-select-container {\n  min-height: 0;\n}\n\n.ng-select.label-select ::ng-deep .ng-value-container {\n  border-top: 7px solid transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelStoreService.html":{"url":"injectables/LabelStoreService.html","title":"injectable - LabelStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/label/label-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllFilter\n                            \n                            \n                                getMatchingLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getLabelsGQL: GetLabelsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/label/label-store.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getLabelsGQL\n                                                  \n                                                        \n                                                                    GetLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAllFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFilter(projectId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:36\n                \n            \n\n\n            \n                \n                    Retrieve all labels from backend\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of current project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMatchingLabels\n                        \n                    \n                \n            \n            \n                \ngetMatchingLabels(projectId: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:23\n                \n            \n\n\n            \n                \n                    Retrieve labels matching term.\nwhoose name contains term\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        id of current project\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        coming from search bar above graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting objects standing for labels that exist on backend\nwhoose name contains term\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  GetLabelsGQL,\n  Label,\n} from '../../../generated/graphql';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelStoreService {\n\n  constructor(private getLabelsGQL: GetLabelsGQL) {}\n\n  /**\n   * Retrieve labels matching term.\n   * @param projectId id of current project\n   * @param term coming from search bar above graph\n   * @returns observable emitting objects standing for labels that exist on backend\n   * whoose name contains term\n   */\n  getMatchingLabels(projectId: string, term: string = null): Observable {\n    if (!term) {\n      return this.getAllFilter(projectId);\n    }\n    return this.getAllFilter(projectId).pipe(\n      map(items => items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1))\n    );\n  }\n\n  /**\n   * Retrieve all labels from backend\n   * @param projectId id of current project\n   */\n  private getAllFilter(projectId: string): Observable {\n    return this.getLabelsGQL.fetch({projectId}).pipe(\n      map(({data}) => data.node.labels.nodes)\n    );\n  }\n}\n\nexport type FilterLabel = Pick;\n\nexport function isFilterLabel(label: any) {\n  return 'id' in label && 'name' in label && 'color' in label;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is an abstract representation of a node in a graph\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectedTo\n                            \n                            \n                                    Public\n                                fixed\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_EDGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_NOT_CONNECTED\n                            \n                            \n                                    Readonly\n                                padding\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_COMPONENT\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_INTERFACE\n                            \n                            \n                                    Public\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateMovement\n                            \n                            \n                                    Public\n                                connectTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeType\n                                                  \n                                                        \n                                                                        NodeType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:170\n                        \n                    \n\n            \n                \n                    Set of edges this node is connected to\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fixed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:167\n                        \n                    \n\n            \n                \n                    If true, this node will not move under any circumstance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:161\n                        \n                    \n\n            \n                \n                    Node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MAX_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:146\n                        \n                    \n\n            \n                \n                    The maximum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:149\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_EDGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:152\n                        \n                    \n\n            \n                \n                    The minimum spacing between a node and an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_NOT_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:143\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are not connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                        \n                    \n\n            \n                \n                    Padding to be added to this node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_COMPONENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:155\n                        \n                    \n\n            \n                \n                    The padding around a component node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_INTERFACE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:158\n                        \n                    \n\n            \n                \n                    The padding around an interface node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:164\n                        \n                    \n\n            \n                \n                    Position of this node\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        calculateMovement\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateMovement(allNodes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:195\n                \n            \n\n\n            \n                \n                    Calculate the movement direction that this node should move in, based on all other nodes around it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allNodes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All nodes, can include this node as well\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        The direction in which this node wants to travel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectTo(other: LayoutNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:186\n                \n            \n\n\n            \n                \n                    Create an edge between this node and another node.\nDoes not create a connection from the other node to this node!\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                LayoutNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkedIssueItemComponent.html":{"url":"components/LinkedIssueItemComponent.html","title":"component - LinkedIssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinkedIssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/linked-issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a linked issue in a list.\nBy default, only information from #issueStub will be displayed. When the user expands\nthe accordion card, the issue's body will be loaded separately.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail-linked-issue-item\n            \n\n            \n                styleUrls\n                linked-issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                linked-issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                didOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueStub\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueStub\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:24\n                            \n                        \n                \n                    \n                        Cursory information about the linked issue.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:22\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        didOpen\n                        \n                    \n                \n            \n            \n                \ndidOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/linked-issue-item.component.ts:42\n                \n            \n\n\n            \n                \n                    Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullIssueLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:27\n                        \n                    \n\n            \n                \n                    Link to the full issue page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Issue } from '../../generated/graphql-dgql';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { NodeType } from '@app/data-dgql/id';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n/**\n * Displays a linked issue in a list.\n *\n * By default, only information from {@link #issueStub} will be displayed. When the user expands\n * the accordion card, the issue's body will be loaded separately.\n */\n@Component({\n  selector: 'app-issue-detail-linked-issue-item',\n  templateUrl: 'linked-issue-item.component.html',\n  styleUrls: ['linked-issue-item.component.scss']\n})\nexport class LinkedIssueItemComponent implements OnInit, OnDestroy {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** Cursory information about the linked issue. */\n  @Input() issueStub: Issue;\n\n  /** Link to the full issue page. */\n  public fullIssueLink: string;\n  /** @ignore */\n  public fullIssue?: DataNode;\n  /** @ignore */\n  private fullIssueSub: Subscription;\n\n  constructor(private dataService: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.fullIssueLink = this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issueStub.id]\n    ));\n  }\n\n  /** Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet. */\n  didOpen() {\n    if (!this.fullIssue) {\n      this.fullIssue = this.dataService.getNode({\n        type: NodeType.Issue,\n        id: this.issueStub.id\n      });\n      this.fullIssueSub = this.fullIssue.subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.fullIssueSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{issueStub.title}}\n        \n        \n            {{component.name}}\n        \n    \n    \n        Loading…\n    \n    \n    \n        View Issue chevron_right\n    \n\n\n    \n\n    \n                \n                    linked-issue-item.component.scss\n                \n                .linked-issue-components {\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .linked-issue-component {\n    &::after {\n      content: ',';\n      margin-right: 0.3em;\n    }\n    &:last-child::after {\n      content: none;\n    }\n  }\n}\n\n.body-loading {\n  min-height: 56px; // some sort of body height so that the animation doesn't glitch out *too* badly\n  text-align: center;\n  opacity: 0.7;\n}\n\n.issue-buttons {\n  text-align: right;\n  margin-top: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{issueStub.title}}                            {{component.name}}                        Loading…                    View Issue chevron_right    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LinkedIssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListId.html":{"url":"interfaces/ListId.html","title":"interface - ListId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a list of items.\nLists are always attached to a specific node.\nFor example, a list of issues may be attached to a project or a component.\nLists that do not have a specific parent node in the backend API are attached to the\nROOT_NODE.\nExamples\nThe list of all issues on a component:\n{ node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }The list of linked issues on an issue:\n{ node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The parent node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ListType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of list.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListParams.html":{"url":"interfaces/ListParams.html","title":"interface - ListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                List cursor and filter.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cursor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            forward\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max number of items to load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cursor:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cursor node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forward:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to look forward from the cursor, or backwards.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the login screen. It gather username and password\nand tries to login the user via the AuthenticationService.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invalidCredentials\n                            \n                            \n                                isLoading\n                            \n                            \n                                returnUrl\n                            \n                            \n                                unknownError\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authService: AuthenticationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:29\n                \n            \n\n\n            \n                \n                    Gather username and password from form and try login via AuthenticationService.\nIf successfull redirect to root url or to the redirectUrl the user originally wanted to access.\nIf login fails, set this.invalidCredentials so that gui shows error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        invalidCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unknownError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthenticationService} from '../auth/authentication.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n/**\n * This component is responsible for the login screen. It gather username and password\n * and tries to login the user via the AuthenticationService.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  validateForm!: FormGroup;\n  returnUrl: string;\n  isLoading = false;\n  invalidCredentials = false;\n  unknownError = false;\n\n  /**\n   * Gather username and password from form and try login via AuthenticationService.\n   * If successfull redirect to root url or to the redirectUrl the user originally wanted to access.\n   * If login fails, set this.invalidCredentials so that gui shows error.\n   */\n  submitForm(): void {\n    Object.keys(this.validateForm.controls).forEach(controlKey => {\n      this.validateForm.controls[controlKey].markAsDirty();\n      this.validateForm.controls[controlKey].updateValueAndValidity();\n    });\n    this.isLoading = true;\n    this.authService.login(this.validateForm.controls.userName.value, this.validateForm.controls.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error: HttpErrorResponse) => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.invalidCredentials = error.status === 401;\n          this.unknownError = error.status === 0;\n        });\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private authService: AuthenticationService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      userName: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Login\n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n      \n      \n      Log in\n      \n      Or register!\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form {\n  max-width: 300px;\n  margin: auto;\n}\n\n.login-form-margin {\n  margin-bottom: 16px;\n}\n\n.login-form-forgot {\n  float: right;\n}\n\n.login-form-button {\n  width: 100%;\n}\n\n.error-message {\n  margin-bottom: 24px;\n}\n\n#register-link {\n  font-size: larger;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Login                                                                                                                                                  Log in            Or register!      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownEditorComponent.html":{"url":"components/MarkdownEditorComponent.html","title":"component - MarkdownEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-editor/markdown-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains a monaco markdown editor with syntax highlighting\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-editor\n            \n\n            \n                styleUrls\n                ./markdown-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editorOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeDidChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                codeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:20\n                            \n                        \n                \n                    \n                        This code is initially displayed in the editor\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        codeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:24\n                            \n                        \n                \n                    \n                        Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        codeDidChange\n                        \n                    \n                \n            \n            \n                \ncodeDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:29\n                \n            \n\n\n            \n                \n                    Send changes in the editor to the parent component over the EventEmitter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {theme: 'vs', language: 'markdown'}\n                    \n                \n                    \n                        \n                                Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:16\n                        \n                    \n\n            \n                \n                    necessary options for usage of ngx-monaco-editor\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * This component contains a monaco markdown editor with syntax highlighting\n */\n@Component({\n  selector: 'app-markdown-editor',\n  templateUrl: './markdown-editor.component.html',\n  styleUrls: ['./markdown-editor.component.scss']\n})\nexport class MarkdownEditorComponent {\n\n  /**\n   * necessary options for usage of ngx-monaco-editor\n   */\n  editorOptions = {theme: 'vs', language: 'markdown'};\n  /**\n   * This code is initially displayed in the editor\n   */\n  @Input() code: string;\n  /**\n   * Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n   */\n  @Output() codeChange = new EventEmitter();\n\n  /**\n   * Send changes in the editor to the parent component over the EventEmitter\n   */\n  codeDidChange() {\n    this.codeChange.emit(this.code);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./markdown-editor.component.scss\n                \n                .editorContainer{\n  margin-bottom: 20px;\n  border-color: #e6e6e6;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 6px;\n\n}\n\n.preview{\n  white-space: pre-wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownPreviewComponent.html":{"url":"components/MarkdownPreviewComponent.html","title":"component - MarkdownPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-preview/markdown-preview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders and displays markdown\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                true\n            \n\n\n\n            \n                selector\n                app-markdown-preview\n            \n\n            \n                styleUrls\n                ./markdown-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayedCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayedCode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-preview/markdown-preview.component.ts:17\n                            \n                        \n                \n                    \n                        The markdown code as a string which will be rendered\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * This component renders and displays markdown\n */\n@Component({\n  selector: 'app-markdown-preview',\n  templateUrl: './markdown-preview.component.html',\n  styleUrls: ['./markdown-preview.component.scss'],\n  preserveWhitespaces: true\n})\nexport class MarkdownPreviewComponent implements OnInit {\n\n  /**\n   * The markdown code as a string which will be rendered\n   */\n  @Input() displayedCode: string;\n\n  /**\n   * @ignore (Keyword for compodoc documentation generator)\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./markdown-preview.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiSourceList.html":{"url":"classes/MultiSourceList.html","title":"class - MultiSourceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiSourceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMore\n                            \n                            \n                                    Public\n                                limit\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                    Optional\n                                results\n                            \n                            \n                                    Public\n                                scoreKeys\n                            \n                            \n                                    Public\n                                    Optional\n                                sourceNodeList\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Public\n                                    Optional\n                                staticSourceNodeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromSingleList\n                            \n                            \n                                isLoading\n                            \n                            \n                                score\n                            \n                            \n                                setFilter\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                update\n                            \n                            \n                                updateResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: SetMultiSource, scoreKeys: string[], dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        SetMultiSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreKeys\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:54\n                        \n                    \n\n            \n                \n                    If true, there are more than limit items in the source data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:50\n                        \n                    \n\n            \n                \n                    Max number of items in results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:59\n                        \n                    \n\n            \n                \n                    Current search query. Used to rank results by relevance.\nThe filters are computed separately! Use #setFilter to set both simultaneously.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:52\n                        \n                    \n\n            \n                \n                    Current results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scoreKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A DataList that loads the value of sourceNodes, if it's a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:46\n                        \n                    \n\n            \n                \n                    List of all sources that will be included in the results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SetMultiSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        staticSourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:44\n                        \n                    \n\n            \n                \n                    The list of nodes specified in sourceNodes, if it's a NodeId[].\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromSingleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:72\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Creates a new MultiSourceList that actually just loads a single list.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataService\n                                    \n                                                DataService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MultiSourceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n            \n                \nisLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:159\n                \n            \n\n\n            \n                \n                    If true, something is loading somewhere.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n            \n                \nscore(item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:116\n                \n            \n\n\n            \n                \n                    Scores an item for ranking in results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(query: string, filter: F)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:108\n                \n            \n\n\n            \n                \n                    Sets a filter on all lists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:173\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions. This object should no longer be used afterwards.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:77\n                \n            \n\n\n            \n                \n                    Updates lists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResults\n                        \n                    \n                \n            \n            \n                \nupdateResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:135\n                \n            \n\n\n            \n                \n                    Updates the results array from loaded data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeCache.html":{"url":"classes/NodeCache.html","title":"class - NodeCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNode\n                            \n                            \n                                getNode\n                            \n                            \n                                insertNodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/query.ts:588\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:588\n                        \n                    \n\n            \n                \n                    Internal node storage. Do not use directly.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:593\n                \n            \n\n\n            \n                \n                    Creates a new node.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:599\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertNodes\n                        \n                    \n                \n            \n            \n                \ninsertNodes(nodes: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:613\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Inserts nodes into the cache and returns them as a map (in the same order).\nNote: the ID parameter of the node is only optional for type compatibility with the GQL schema.\nNodes without an ID will be ignored.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /** @ignore */\n  protected currentData?: T;\n  /** @ignore */\n  protected lastLoadTime = 0;\n  /** @ignore */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /** @ignore */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /** @ignore */\n  protected subscribers: Set> = new Set();\n  /** @ignore */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /** @ignore */\n  protected innerMapFn: (r: R) => T;\n  /** @ignore */\n  protected stateLock = 0;\n  /** @ignore */\n  protected loadTimeout = null;\n  /** @ignore */\n  protected hydrated = false;\n  /** @ignore */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /** @ignore */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** @ignore */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /** @ignore */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /** @ignore */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /** @ignore */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/** @ignore */\nconst identity = id => id;\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), identity);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n  /** @ignore */\n  private pageInfo?: PageInfo;\n  /** @ignore */\n  private pTotalCount?: number;\n  /** @ignore */\n  private previouslyHadPageContents = false;\n  /** @ignore */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsComponent.html":{"url":"components/NodeDetailsComponent.html","title":"component - NodeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details/node-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows details of components or interfaces\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-node-details\n            \n\n            \n                styleUrls\n                ./node-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                editMode\n                            \n                            \n                                interface\n                            \n                            \n                                issueListId\n                            \n                            \n                                placeholder\n                            \n                            \n                                showName\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationType\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNodeName\n                            \n                            \n                                    Public\n                                getNodeTypeString\n                            \n                            \n                                    Public\n                                node\n                            \n                            \n                                    Public\n                                onCancelClick\n                            \n                            \n                                    Public\n                                onDeleteClick\n                            \n                            \n                                    Public\n                                onEditClick\n                            \n                            \n                                    Public\n                                onSaveClick\n                            \n                            \n                                    Private\n                                resetValues\n                            \n                            \n                                    Private\n                                showDeleteDialog\n                            \n                            \n                                    Private\n                                updateComponent\n                            \n                            \n                                    Private\n                                updateInterface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, componentStoreService: ComponentStoreService, interfaceStoreService: InterfaceStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details/node-details.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStoreService\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :         NodeUpdatedCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:55\n                            \n                        \n                \n                    \n                        Function to be called if a node was updated or deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:47\n                            \n                        \n                \n                    \n                        Id of the node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeType\n                    \n                \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:51\n                            \n                        \n                \n                    \n                        Either component or interface\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:43\n                            \n                        \n                \n                    \n                        The project that contains the node\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:130\n                \n            \n\n\n            \n                \n                    Get the name of the node, or an empty string if it has not been fetched yet\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeTypeString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeTypeString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:145\n                \n            \n\n\n            \n                \n                    Get the type of the node as a formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        node\n                        \n                    \n                \n            \n            \n                \n                    \n                    node()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:152\n                \n            \n\n\n            \n                \n                    Access the node\n\n\n                    \n                        Returns :     GetComponentQuery | GetInterfaceQuery\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSaveClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showDeleteDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDeleteDialog(affected: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    affected\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetBasicComponentQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetInterfaceQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {\n  GetBasicComponentQuery,\n  GetComponentQuery,\n  GetInterfaceQuery,\n  UpdateComponentInput,\n  UpdateComponentInterfaceInput\n} from '../../generated/graphql';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport {Router} from '@angular/router';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n/**\n * A node shown in the details component can either be a component or an interface\n */\nexport enum NodeDetailsType {\n  Component,\n  Interface\n}\n\nexport declare type NodeUpdatedCallbackFn = (nodeDeleted: boolean) => void;\n\n/**\n * This component shows details of components or interfaces\n */\n@Component({\n  selector: 'app-node-details',\n  templateUrl: './node-details.component.html',\n  styleUrls: ['./node-details.component.scss']\n})\nexport class NodeDetailsComponent implements OnInit, AfterViewInit {\n\n  /**\n   * The project that contains the node\n   */\n  @Input() projectId: string;\n  /**\n   * Id of the node\n   */\n  @Input() nodeId: string;\n  /**\n   * Either component or interface\n   */\n  @Input() nodeType: NodeDetailsType;\n  /**\n   * Function to be called if a node was updated or deleted\n   */\n  @Input() callback?: NodeUpdatedCallbackFn;\n  /** @ignore */\n  @ViewChild('nodeQuery') nodeQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('deleteQuery') deleteQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('updateQuery') updateQuery: QueryComponent;\n\n  /** @ignore */\n  Type = NodeDetailsType;\n\n  issueListId: ListId;\n  component: GetBasicComponentQuery;\n  interface: GetInterfaceQuery;\n  editMode: boolean;\n  showName = false;\n  placeholder = 'placeholder';\n\n  // TODO: Validators\n  validationProvider = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationName = new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator]);\n  validationUrl = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationIMS = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationType = new FormControl('');\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(private router: Router,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.editMode = false;\n\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.issueListId = {node: {type: NodeType.Component, id: this.nodeId}, type: ListType.Issues};\n    } else {\n      this.issueListId = {\n        node: {type: NodeType.ComponentInterface, id: this.nodeId},\n        type: ListType.IssuesOnLocation\n      };\n    }\n\n\n    this.validationIMS.setValue('?');\n    this.validationUrl.setValue('?');\n  }\n\n  ngAfterViewInit() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.nodeQuery.listenTo(this.componentStoreService.getBasicComponent(this.nodeId), component => {\n        if (component.node) {\n          this.component = component;\n          this.validationIMS.setValue('This is a placeholder');\n          this.validationUrl.setValue(component.node.repositoryURL);\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.nodeQuery.listenTo(this.interfaceStoreService.getInterface(this.nodeId), int => {\n        if (int.node) {\n          this.interface = int;\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the name of the node, or an empty string if it has not been fetched yet\n   */\n  public getNodeName(): string {\n    if (!this.nodeQuery) {\n      return '';\n    }\n\n    if (this.nodeQuery.ready()) {\n      return this.node().node.name;\n    }\n\n    return '';\n  }\n\n  /**\n   * Get the type of the node as a formatted string\n   */\n  public getNodeTypeString(): string {\n    return (this.nodeType === NodeDetailsType.Interface ? 'Interface' : 'Component');\n  }\n\n  /**\n   * Access the node\n   */\n  public node(): GetComponentQuery | GetInterfaceQuery {\n    if (this.nodeType === NodeDetailsType.Component) {\n      return this.component;\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      return this.interface;\n    }\n  }\n\n  public onCancelClick() {\n    this.resetValues();\n    this.editMode = false;\n  }\n\n  public onEditClick() {\n    this.editMode = true;\n  }\n\n  public onDeleteClick(): void {\n    const affected: string[] = [];\n    // Collect affected interfaces and components, then show the delete dialog\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.deleteQuery.listenTo(this.componentStoreService.getComponentInterfaces(this.nodeId), interfaces => {\n        for (const i of interfaces.node.interfaces.nodes) {\n          let affectedInterface = 'Interface \"' + i.name + '\" will be deleted';\n          if (i.consumedBy.nodes.length > 0) {\n            affectedInterface += ', which will affect the following component(s):';\n          }\n\n          affected.push(affectedInterface);\n          for (const component of i.consumedBy.nodes) {\n            affected.push(' ' + component.name);\n          }\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.deleteQuery.listenTo(this.interfaceStoreService.getConsumingComponents(this.nodeId), components => {\n        affected.push('Deleting this interface will affect the following component(s):');\n        affected.push(' ' + components.node.component.name);\n        for (const c of components.node.consumedBy.nodes) {\n          affected.push(' ' + c.name);\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    }\n  }\n\n  private showDeleteDialog(affected: string[]): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete component \\\"' + this.component.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the component \\\"' + this.component.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.component.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.componentStoreService.deleteComponent(this.nodeId), () => {\n              this.notify.notifyInfo('Successfully deleted component \\\"' + this.component.node.name + '\\\"\"');\n              if (this.callback) {\n                this.callback(true);\n              }\n            }\n          );\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete interface \\\"' + this.interface.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the interface \\\"' + this.interface.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.interface.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        // dialog returns if the deleting was successful\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.interfaceStoreService.delete(this.nodeId), () => {\n            this.notify.notifyInfo('Successfully deleted interface \\\"' + this.interface.node.name + '\\\"');\n            if (this.callback) {\n              this.callback(true);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  public onSaveClick(): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.component.node.name = this.validationName.value;\n      // FIXME\n      // this.component.node.ims.imsType = this.validationProvider.value;\n      this.component.node.description = this.validationDescription.value;\n      this.updateComponent();\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.interface.node.name = this.validationName.value;\n      this.interface.node.description = this.validationDescription.value;\n      this.updateInterface();\n    }\n  }\n\n  private resetValues() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.validationName.setValue(this.component.node.name);\n      this.validationIMS.setValue('http://example.ims.com');\n      // FIXME\n      // this.validationProvider.setValue(this.component.node.ims.imsType);\n      this.validationUrl.setValue('http://example.repo.com');\n      this.validationDescription.setValue(this.component.node.description);\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.validationName.setValue(this.interface.node.name);\n      this.validationDescription.setValue(this.interface.node.description);\n    }\n  }\n\n  private updateComponent(): void {\n    const input: UpdateComponentInput = {\n      component: this.component.node.id,\n      name: this.component.node.name,\n      description: this.component.node.description\n    };\n\n    this.updateQuery.listenTo(this.componentStoreService.updateComponent(input), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n\n  private updateInterface(): void {\n    const MutationinputData: UpdateComponentInterfaceInput = {\n      componentInterface: this.interface.node.id,\n      name: this.interface.node.name,\n      description: this.interface.node.description\n    };\n\n    this.updateQuery.listenTo(this.interfaceStoreService.update(MutationinputData), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n      \n\n      \n        \n          \n            \n              \n                Name\n                \n                \n                  Invalid component name\n                \n              \n              \n                Repository-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Provider Type\n                \n                \n                  Enter a valid URL\n                \n              \n              \n                Provider Type (IMS)\n                \n                  GitHub\n                \n                \n                  Select the Provider\n                \n              \n\n              \n                IMS-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n          \n            \n              \n                Name\n                \n                \n                  Name your Interface\n                \n              \n\n              \n                Interface Type\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n\n          \n            \n              edit\n              Edit {{getNodeTypeString().toLowerCase()}}\n            \n\n            \n              \n                \n                  save\n                  Save changes\n                \n              \n            \n\n            \n              cancel\n              Discard changes\n            \n\n            \n              \n                delete\n                Delete {{getNodeTypeString().toLowerCase()}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./node-details.component.scss\n                \n                .description-field {\n  min-height: 50px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.row > * {\n  margin-right: 4px;\n  flex-grow: 1;\n}\n\n.row > *:last-child {\n  margin-right: 0;\n  flex-grow: 1;\n}\n\n:host ::ng-deep .mat-tab-body-wrapper {\n  height: 100%;\n}\n\n:host ::ng-deep .mat-tab-body.mat-tab-body-active {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                              Name                                                  Invalid component name                                                            Repository-URL                                                  Enter a valid URL                                                                                    Provider Type                                                  Enter a valid URL                                                            Provider Type (IMS)                                  GitHub                                                  Select the Provider                                                            IMS-URL                                                  Enter a valid URL                                                                                    Description                                                                                                        Name                                                  Name your Interface                                                            Interface Type                                                  Enter a valid URL                                                                                    Description                                                                                        edit              Edit {{getNodeTypeString().toLowerCase()}}                                                                        save                  Save changes                                                                    cancel              Discard changes                                                      delete                Delete {{getNodeTypeString().toLowerCase()}}                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsPageComponent.html":{"url":"components/NodeDetailsPageComponent.html","title":"component - NodeDetailsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details-page/node-details-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./node-details-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNodeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, changeDetector: ChangeDetectorRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeUpdate\n                        \n                    \n                \n            \n            \n                \nonNodeUpdate(deleted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details-page/node-details-page.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\n\n@Component({\n  templateUrl: './node-details-page.component.html',\n  styleUrls: ['./node-details-page.component.scss']\n})\nexport class NodeDetailsPageComponent implements OnInit {\n  nodeType: NodeDetailsType = null;\n  nodeId: string = null;\n  projectId: string = null;\n\n  constructor(private route: ActivatedRoute,\n              private changeDetector: ChangeDetectorRef,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const componentId = this.route.snapshot.paramMap.get('componentId');\n    const interfaceId = this.route.snapshot.paramMap.get('interfaceId');\n\n    if (componentId !== null) {\n      this.nodeId = componentId;\n      this.nodeType = NodeDetailsType.Component;\n    } else if (interfaceId !== null) {\n      this.nodeId = interfaceId;\n      this.nodeType = NodeDetailsType.Interface;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  onNodeUpdate(deleted: boolean): void {\n    if (deleted) {\n      this.router.navigate(['/projects/' + this.projectId + '/graph']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./node-details-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeId.html":{"url":"interfaces/NodeId.html","title":"interface - NodeId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NodeId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a node.\nNode IDs are composed of a #type and an #id.\nThe #id corresponds to the ID used in the backend API.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this node. This is the same as the node ID in the backend API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Positions.html":{"url":"interfaces/Positions.html","title":"interface - Positions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Positions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the content of the graph component local storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroups\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroups:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions (north, south, east, west) of the issue groups\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions of the nodes as the user arranged them\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DraggedEdge, Edge, Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Rect} from '@ustutt/grapheditor-webcomponent/lib/util';\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {IssueGroupContainerBehaviour, IssueGroupContainerParentBehaviour} from './group-behaviours';\nimport {CreateInterfaceDialogComponent} from '@app/dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {StateService} from '@app/state.service';\nimport {CreateInterfaceData} from '../../dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {GraphData} from '../../data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport * as issueGraphNodes from './issue-graph-nodes';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CreateComponentDialogComponent} from '@app/dialogs/create-component-dialog/create-component-dialog.component';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport * as componentContextMenuComponent from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\nimport {doGraphLayout, LayoutNode} from '@app/graphs/automatic-layout';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { IssueGraphClassSettersService } from './class-setters/issue-graph-class-setters.service';\nimport { IssueGraphLinkHandlesService } from './link-handles/issue-graph-link-handles.service';\nimport { IssueGraphDynamicTemplateRegistryService } from './dynamic-template-registry/issue-graph-dynamic-template-registry.service';\n\n/**\n * Interface specifying the content of the graph component local storage\n */\ninterface Positions {\n  /** Positions of the nodes as the user arranged them */\n  nodes: { [prop: string]: Point; };\n  /** Positions (north, south, east, west) of the issue groups */\n  issueGroups: { [node: string]: string };\n}\n\n/**\n * This component creates nodes and edges in the embedded MICO GraphEditor\n * (html tag: ) to reflect the data for the current project.\n * This data consists of the project's interfaces, components, issues and their relations and\n * is stored in this.graphData. The key method for this purpose is drawGraph().\n * This component is also responsible for registering event listeners with the GraphEditor.\n */\n@Component({\n  selector: 'app-issue-graph',\n  templateUrl: './issue-graph.component.html',\n  styleUrls: ['./issue-graph.component.css'],\n})\nexport class IssueGraphComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  constructor(private dialog: MatDialog,\n              private gs: IssueGraphStateService,\n              private ss: StateService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private componentContextMenuService: componentContextMenuComponent.ComponentContextMenuService,\n              private breakPointObserver: BreakpointObserver,\n              private issueGraphClassSettersService: IssueGraphClassSettersService,\n              private issueGraphLinkHandlesService: IssueGraphLinkHandlesService,\n              private issueGraphDynamicTemplateRegistryService: IssueGraphDynamicTemplateRegistryService) {\n  }\n\n  // references the graph template\n  @ViewChild('graph', {static: true}) graphWrapper: { nativeElement: GraphEditor; };\n\n  // references the minimap template\n  @ViewChild('minimap', {static: true}) minimap: { nativeElement: GraphEditor; };\n\n  currentVisibleArea: Rect = {x: 0, y: 0, width: 1, height: 1};\n  @Input() projectId: string;\n\n  readonly zeroPosition = {x: 0, y: 0};\n\n  private componentContextMenu: componentContextMenuComponent.ComponentContextMenuComponent;\n  private componentContextMenuNodeId: number | string;\n  private destroy$ = new ReplaySubject(1);\n\n  // reference to the GraphEditor instance of the graph\n  private graph: GraphEditor;\n\n  // contains all data about the projects interfaces, components, issues and their relations\n  // that is needed in order to create nodes and edges in the grapheditor to visualize the project\n  public graphData: GraphData;\n  private graphFirstRender = true;\n\n  // indicates whether graph is initialized\n  private graphInitialized = false;\n  private isHandset = false;\n\n  // contains nodes representing interfaces and components which utilize node groups for display of issue folders\n  private issueGroupParents: Node[] = [];\n\n  // local storage key for positions of graph elements\n  private projectStorageKey: string;\n\n  // The component details page moves the graph sometimes a bit,\n  // so dont move back when closing the component details page\n  private redrawByCloseOfComponentDetails = false;\n\n  // when a new graph state arrives it is passed to the graph\n  // and a graph redraw is issued\n  // (check IssueGraphControlsComponents ngAfterViewInit for more information)\n  public reload$: BehaviorSubject = new BehaviorSubject(null);\n  private reloadOnMouseUp = false;\n\n  // Saved positions of the nodes and the issue groups\n  private savedPositions: Positions = {nodes: {}, issueGroups: {}};\n  // Responsible for saving the node positions to local storage\n  private savePositionsSubject = new Subject();\n\n  // used in the drawGraph method true on first draw and after component creation, effects a zoom to bounding box\n  private zoomOnRedraw = true;\n\n  /**\n   * Gets reference to the MICO GraphEditor instance of the graph and initializes it.\n   */\n  ngAfterViewInit(): void {\n    this.graph = this.graphWrapper.nativeElement;\n    this.initGraph();\n  }\n\n  /**\n   * Sets up a local storage key for graph element positions.\n   */\n  ngOnInit() {\n    this.projectStorageKey = `CCIMS-Project_${this.projectId}`;\n    this.breakPointObserver.observe(Breakpoints.Handset)\n      .subscribe(r => this.isHandset = r.matches);\n  }\n\n  /**\n   * Cancels all subscriptions on component destruction.\n   */\n  ngOnDestroy() {\n    // saves the current zoom details of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomTransform_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentZoomTransform));\n\n    // saves the current bounding box of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomBoundingBox_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentViewWindow));\n\n    this.destroy$.next();\n    this.closeComponentActions();\n  }\n\n  /**\n   * 1) Sets up a subscription for node positions\n   * 2) and initializes the graph.\n   * Also manages:\n   * 3) class setters with the graph editor\n   * that apply css classes based on the edge and node types,\n   * 4) the link handle calculation,\n   * 5) the edge drag behaviour,\n   * 6) the dynamic template registry.\n   * 7) and various event listeners on the graph.\n   */\n  initGraph() {\n    // case: graph already initialized\n    if (this.graphInitialized) {\n      return;\n    }\n\n    // loads saved positions\n    this.savedPositions = this.loadSavedPositions();\n\n    // 1) subscribes to the subject emitting node positions\n    this.subscribeToSubject();\n\n    // 2) initializes the graph\n    this.graphInitialized = true;\n\n    // references to the GraphEditor instance of the graph / minimap\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const minimap: GraphEditor = this.minimap.nativeElement;\n\n    // 3) manages the node / edge class setters\n    this.issueGraphClassSettersService.manageClassSetters(graph, minimap);\n\n    // 4) manages the edge link handles\n    this.issueGraphLinkHandlesService.manageLinkHandles(graph, minimap);\n\n    // 5) manages the edge drag behaviour\n    this.manageDragBehaviour(graph);\n\n    // 6) manages the dynamic template registry\n    this.issueGraphDynamicTemplateRegistryService.manageDynamicTemplateRegistry(graph);\n\n    // 7) manages the event listeners\n    this.manageEventListeners(graph, minimap);\n  }\n\n  /**\n   * Loads positions of graph elements from the local storage.\n   * @returns Parsed positions\n   */\n  private loadSavedPositions(): Positions {\n    // gets data from the local storage\n    const data = localStorage.getItem(this.projectStorageKey);\n\n    // case: there is no data\n    if (data == null) {\n      return {nodes: {}, issueGroups: {}};\n    }\n\n    return JSON.parse(data);\n  }\n\n  /**\n   * Subscribes to the subject emitting node positions.\n   */\n  private subscribeToSubject() {\n    this.savePositionsSubject\n      .pipe(takeUntil(this.destroy$), debounceTime(300))\n      .subscribe(() => {\n        console.log('Setting: ', this.projectStorageKey);\n\n        // case: there are saved positions\n        if (this.savedPositions != null) {\n          const newData = JSON.stringify(this.savedPositions);\n          localStorage.setItem(this.projectStorageKey, newData);\n        }\n      });\n  }\n\n  /**\n   * Manages the edge drag behaviour of given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   */\n  private manageDragBehaviour(graph: GraphEditor) {\n    // applies functionality for when an edge is created\n    graph.onCreateDraggedEdge = this.onCreateEdge;\n\n    // applies functionality for when an edge is dragged (and its target is changed)\n    graph.onDraggedEdgeTargetChange = this.onDraggedEdgeTargetChanged;\n\n    // applies functionality for when an edge is added\n    graph.addEventListener('edgeadd', this.onEdgeAdd);\n\n    // applies functionality for when an edge is removed\n    graph.addEventListener('edgeremove', this.onEdgeRemove);\n\n    // applies functionality for when an edge is dropped\n    graph.addEventListener('edgedrop', this.onEdgeDrop);\n  }\n\n  /**\n   * Method gets triggered after an edge gets created,\n   * it can either be of type provider or consumer.\n   * @param edge Edge that is handled.\n   */\n  private onCreateEdge = (edge: DraggedEdge) => {\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const sourceNode = graph.getNode(edge.source);\n\n    // case: edge created from an existing edge\n    // => allows deletion or dropping at the same node\n    if (edge.createdFrom != null) {\n      const original = graph.getEdge(edge.createdFrom);\n      edge.validTargets.clear();\n      edge.validTargets.add(original.target.toString());\n      return edge;\n    }\n\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // updates edge properties (no drag handles)\n      edge.type = issueGraphNodes.NodeType.Interface;\n      edge.dragHandles = [];\n\n      // updates valid targets\n      edge.validTargets.clear();\n\n      // updates marker at the end of the edge\n      edge.markerEnd = {\n        template: 'interface-connector-initial',\n        relativeRotation: 0,\n        absoluteRotation: 0\n      };\n\n      // allows only interfaces as targets\n      graph.nodeList.forEach((node) => {\n        if (node.type === issueGraphNodes.NodeType.Interface) {\n          edge.validTargets.add(node.id.toString());\n        }\n      });\n\n      // allows only new targets\n      graph.getEdgesBySource(sourceNode.id).forEach((existingEdge) => {\n        edge.validTargets.delete(existingEdge.target.toString());\n      });\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets dragged\n   * and its target is changed:\n   * ex. consumer edge gets moved away from the provider edge.\n   * @param edge Edge that is handled.\n   * @param sourceNode Source of the handled edge.\n   * @param targetNode Target of the handled edge.\n   * @returns Edge that is handled.\n   */\n  private onDraggedEdgeTargetChanged = (\n    edge: DraggedEdge,\n    sourceNode: Node,\n    targetNode: Node\n  ) => {\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // case: target of edge is an interface\n      // => handles edge as of type consumer\n      if (targetNode?.type === issueGraphNodes.NodeType.Interface) {\n\n        // updates edge properties (default drag handle)\n        edge.type = issueGraphNodes.NodeType.InterfaceConsumer;\n        delete edge.dragHandles;\n\n        // updates marker at the end of the edge\n        edge.markerEnd = {\n          template: 'interface-connector',\n          relativeRotation: 0,\n        };\n      }\n      // case: target of edge is not an interface (aka. null)\n      // => handles edge as of type provider\n      else {\n        // updates edge properties (no drag handles)\n        edge.type = issueGraphNodes.NodeType.Interface;\n        edge.dragHandles = [];\n\n        // updates marker at the end of the edge\n        // ? delete edge.markerEnd; ?\n        edge.markerEnd = {\n          template: 'interface-connector-initial',\n          relativeRotation: 0,\n          absoluteRotation: 0\n        };\n      }\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets added.\n   * @param event Event that is handled.\n   */\n  private onEdgeAdd = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge creation\n      event.preventDefault();\n\n      // updates the graph via the API\n      const sourceNode = this.graph.getNode(edge.source);\n      const targetNode = this.graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => adds edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.addConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Method gets triggered after an edge gets dropped.\n   * @param event Event that is handled.\n   */\n  private onEdgeDrop = (event: CustomEvent) => {\n    const edge: DraggedEdge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge created from an existing edge\n    if (edge.createdFrom != null) {\n      return;\n    }\n\n    // case: edge of type interface\n    // => opens the interface creation dialog\n    if (edge.type === issueGraphNodes.NodeType.Interface) {\n      this.addInterfaceToComponent(event.detail.sourceNode.id, event.detail.dropPosition);\n    }\n  }\n\n  /**\n   * Opens the interface creation dialog. If the user actually creates the interface\n   * it is added to the providing component at the position\n   * where the dragged edge was dropped by the user (before opening the interface creation dialog).\n   * @param offeredById Id of the component that will provide the interface.\n   * @param position Position of the interface.\n   */\n  private addInterfaceToComponent(offeredById: string, position: issueGraphNodes.Position) {\n    // interface data\n    const data: CreateInterfaceData = {\n      position,\n      offeredById\n    };\n\n    // interface dialog reference\n    const createInterfaceDialogRef = this.dialog.open(CreateInterfaceDialogComponent, {\n      data\n    });\n\n    // subscribes ...\n    createInterfaceDialogRef.afterClosed().subscribe((interfaceId) => {\n      this.savedPositions.nodes[interfaceId] = {\n        x: position.x,\n        y: position.y\n      };\n      this.savePositionsSubject.next();\n      this.reload$.next(null);\n    });\n  }\n\n  /**\n   * Method gets triggered after an edge gets removed.\n   * @param event Event that is handled.\n   */\n  private onEdgeRemove = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge deletion\n      event.preventDefault();\n\n      // updates the graph via the API\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const sourceNode = graph.getNode(edge.source);\n      const targetNode = graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => removes edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.removeConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Adds event listeners to a given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   * @param minimap Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  private manageEventListeners(graph: GraphEditor, minimap: GraphEditor) {\n    // applies functionality for when a node is clicked\n    graph.addEventListener('nodeclick', this.onNodeClick);\n\n    // applies functionality for when the position of a node is changed\n    graph.addEventListener('nodepositionchange', (e: CustomEvent) => {\n      if (this.closeComponentActions(false)) {\n        this.reloadOnMouseUp = true;\n      }\n    });\n\n    // TODO: document and extract\n    graph.addEventListener('nodedragend', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        this.savedPositions.issueGroups[node.id] = node.position;\n      }\n\n      // store node positioning information\n      this.savedPositions.nodes[node.id] = {\n        x: node.x,\n        y: node.y,\n      };\n      this.savePositionsSubject.next();\n      if (this.reloadOnMouseUp) {\n        this.reloadOnMouseUp = false;\n        this.zoomOnRedraw = false;\n        this.reload();\n      }\n    });\n\n    // applies functionality for when a node is added to the minimap\n    graph.addEventListener('nodeadd', (event: CustomEvent) => {\n      if (event.detail.node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        return;\n      }\n      const node = event.detail.node;\n      minimap.addNode(node);\n    });\n\n    // applies functionality for when a node is removed from the minimap\n    graph.addEventListener('noderemove', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (event.detail.node.type !== issueGraphNodes.NodeType.IssueGroupContainer) {\n        minimap.removeNode(node);\n      }\n    });\n\n    // applies functionality for when an edge is added to the minimap\n    graph.addEventListener('edgeadd', (event: CustomEvent) => {\n      minimap.addEdge(event.detail.edge);\n    });\n\n    // applies functionality for when an edge is removed from the minimap\n    graph.addEventListener('edgeremove', (event: CustomEvent) => {\n      minimap.removeEdge(event.detail.edge);\n    });\n\n    // applies functionality for when the minimap is rendered\n    graph.addEventListener('render', this.onMinimapRender(minimap));\n\n    // Close the component context menu when clicking anywhere in the graph\n    graph.addEventListener('click', (e) => this.closeComponentActions());\n\n    // applies functionality for when the zoom is changed\n    graph.addEventListener('zoomchange', (event: CustomEvent) => {\n      this.currentVisibleArea = event.detail.currentViewWindow;\n      if (!this.componentContextMenu) {\n        return;\n      }\n\n      // Update component context menu position when zoom changed\n      const node = this.graph.getNode(this.componentContextMenuNodeId);\n      const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n      this.componentContextMenu.updatePosition(Math.max(x, 0), Math.max(y, 0));\n    });\n  }\n\n  /**\n   * Method gets triggered after a node is clicked.\n   * @param event Event that is handled.\n   */\n  private onNodeClick = (event: CustomEvent) => {\n    // cancels node selection\n    event.preventDefault();\n\n    const node: Node = event.detail.node;\n\n    // Close existing context menu if the user clicked twice on the same node\n    if (this.componentContextMenu && this.componentContextMenu.data.nodeId === node.id) {\n      this.closeComponentActions();\n      return;\n    }\n\n    // Close context menu if one is already open\n    this.closeComponentActions();\n\n    // doesn't allow the view of the graph to change after the Details page has been closed\n    this.redrawByCloseOfComponentDetails = true;\n\n    // Open the details in a new page if a phone is used or if shift is pressed\n    if (event.detail.sourceEvent.shiftKey || this.isHandset) {\n      // case: node of type Component\n      // => opens View Component page\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        this.router.navigate(['./component/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n\n      // case: node of type Interface\n      // => opens View Interface page\n      if (node.type === issueGraphNodes.NodeType.Interface) {\n        this.router.navigate(['./interface/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n    } else {\n      // sets the context menu type\n      const contextMenuType = this.contextMenuTypeForNodeType(node);\n\n      // case: context menu has a type\n      if (contextMenuType != null) {\n        this.nodeClickContextMenuHasType(node, event, contextMenuType);\n        return;\n      }\n    }\n\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    this.nodeClickIssueFolder(node);\n  }\n\n  /**\n   * Sets the context menu type.\n   * @param node Node that is handled.\n   */\n  private contextMenuTypeForNodeType(node: Node): NodeDetailsType {\n    // case: node of type Component\n    // => sets the context menu type as Component\n    if (node.type === issueGraphNodes.NodeType.Component) {\n      return NodeDetailsType.Component;\n    }\n\n    // case: node of type Interface\n    // => sets the context menu type as Interface\n    if (node.type === issueGraphNodes.NodeType.Interface) {\n      return NodeDetailsType.Interface;\n    }\n\n    return null;\n  }\n\n  /**\n   * Open the component context menu\n   * @param node Node that is handled\n   * @param event Event that is handled\n   * @param contextMenuType Type of the context menu that is handled\n   */\n  private nodeClickContextMenuHasType(node: Node, event: CustomEvent, contextMenuType: NodeDetailsType) {\n    // Transform the node graph coordinates to screen coordinates\n    const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n\n    // Only open the dialog if it will fit into view\n    if (x >= 0 && y >= 0) {\n      this.componentContextMenuNodeId = node.id;\n\n      // Cancel the click event that would otherwise close the dialog again\n      event.detail.sourceEvent.stopImmediatePropagation();\n\n      this.componentContextMenu =\n        this.componentContextMenuService.open(\n          this.graphWrapper.nativeElement,\n          x,\n          y,\n          this.projectId,\n          node.id.toString(),\n          contextMenuType,\n          this);\n\n      // Make sure that the context menu is visible if it extends over the right/bottom edge\n      const visible = this.graph.currentViewWindow;\n      const scale = this.graph.currentZoomTransform.k;\n      // FIXME: this isn't ideal, as the padding is somewhat dependent on the aspect ratio\n      const padding = 85 / scale;\n      const edgeX = visible.width * scale;\n      const edgeY = visible.height * scale;\n      const moveX = Math.max(0, this.componentContextMenu.width + x - edgeX) / scale;\n      const moveY = Math.max(0, this.componentContextMenu.height + y - edgeY) / scale;\n\n      // case: Zoom has to change to make overlay visible\n      if (moveX || moveY) {\n        this.graph.zoomToBox({\n          x: visible.x + moveX + padding, y: visible.y + moveY + padding,\n          width: visible.width - 2 * padding, height: visible.height - 2 * padding\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which an issue folder is clicked.\n   * Determines the number of issues in the issue folder\n   * and opens the corresponding issue page.\n   * @param node Issue folder that is handled.\n   */\n  private nodeClickIssueFolder(node: Node) {\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    if (node.type === 'BUG' || node.type === 'UNCLASSIFIED' || node.type === 'FEATURE_REQUEST') {\n\n      // reference to the GraphEditor instance of the graph, the root ID and the root node\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const rootId = graph.groupingManager.getTreeRootOf(node.id);\n      const rootNode = graph.getNode(rootId);\n\n      // case: only one issue inside the clicked issue folder\n      // => opens Issue Details page\n      if (node.issueCount === 1) {\n        this.nodeClickOneIssue(rootId, rootNode, node);\n        return;\n      }\n\n      // case: many issues inside the clicked issue folder\n      // => opens Component Issues / Interface Issues page\n      else {\n        this.nodeClickManyIssues(rootNode);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains only one issues.\n   * @param rootNode Root node that is handled.\n   * @param rootId Root id that is handled.\n   * @param node Clicked node that is handled.\n   */\n  private nodeClickOneIssue(rootId: string, rootNode: Node, node: Node) {\n    // case: root node of type Component\n    // => handles a single component issue, opens its Issue Details page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.componentStoreService.getFullComponent(rootId).subscribe(component => {\n        const currentIssueId = this.extractIssueId(component.node.issues.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n\n    // case: root node of type Interface\n    // => handles a single interface issue, opens its Issue Details page\n    else if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.interfaceStoreService.getInterface(rootId).subscribe(interfaceComponent => {\n        const currentIssueId = this.extractIssueId(interfaceComponent.node.issuesOnLocation.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n  }\n\n  /**\n   * Extracts the id of an issue in a given issue list.\n   * @param issueList Ids of the issues that are handled.\n   * @param category Category of issues that are handled.\n   * @returns Id of the first issue (in the issue list) with matching category.\n   */\n  private extractIssueId(issueList, category: string): string {\n    for (const issue of issueList) {\n      if (issue.category === category) {\n        return issue.id;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains many issues.\n   * @param rootNode Root node that is handled.\n   */\n  private nodeClickManyIssues(rootNode: Node) {\n    // case: root node of type Component\n    // => handles many component issues, opens their Component Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.router.navigate(['./component/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n\n    // case: root node of type Interface\n    // => handles many interface issues, opens their Interface Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.router.navigate(['./interface/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  /**\n   * Closes the component context menu, if one is open\n   * @param reload If true, reloads the graph if a context menu was closed\n   */\n  private closeComponentActions(reload: boolean = true): boolean {\n    // case: there are actions to close\n    if (this.componentContextMenu) {\n      // case: redraw of the graph needed\n      // => issues redraw\n      if (reload) {\n        this.reload();\n      }\n\n      // cancels component actions\n      this.componentContextMenu.close();\n      this.componentContextMenu = null;\n      this.componentContextMenuNodeId = null;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Issues a redraw of the graph. ?\n   */\n  public reload(): void {\n    this.reload$.next(null);\n  }\n\n  /**\n   * Method gets triggered when the minimap renders.\n   * @param minimap Minimap that is handled.\n   */\n  private onMinimapRender(minimap: GraphEditor): EventListenerOrEventListenerObject {\n    return (event: CustomEvent) => {\n      // case: renders the minimap completely\n      if (event.detail.rendered === 'complete') {\n        minimap.completeRender();\n        minimap.zoomToBoundingBox();\n      }\n\n      // case: renders texts\n      else if (event.detail.rendered === 'text') {\n        // irrelevant for the minimap\n      }\n\n      // case: renders node classes\n      else if (event.detail.rendered === 'classes') {\n        minimap.updateNodeClasses();\n      }\n\n      // case: renders node positions\n      else if (event.detail.rendered === 'positions') {\n        minimap.updateGraphPositions();\n        minimap.zoomToBoundingBox();\n      }\n    };\n  }\n\n  /**\n   * Responsible for drawing the graph based on this.graphData.\n   * Takes care of adding interfaces and components, and their connections.\n   * Additionally adds issue folders attached to each component and the dashed edges\n   * between them based on this.graphData.relatedFolders\n   */\n  drawGraph() {\n    const boundingBox = this.calculateBoundingBox();\n    // reset graph and remove all elements, gives us clean slate\n    this.resetGraph();\n\n    const layoutGraph = Object.keys(this.savedPositions.nodes).length === 0;\n    // create nodes corresponding to the components and interfaces of the project\n    const componentNodes = Array.from(this.graphData.components.values()).map(component =>\n      issueGraphNodes.createComponentNode(component, this.findIdealComponentPosition(component.id, boundingBox)));\n    const interfaceNodes = Array.from(this.graphData.interfaces.values()).map(\n      intrface => issueGraphNodes.createInterfaceNode(intrface, this.savedPositions.nodes[intrface.id]));\n    // issueNodes contains BOTH componentNodes and interfaceNodes\n    const issueNodes = (componentNodes as issueGraphNodes.IssueNode[]).concat(interfaceNodes as issueGraphNodes.IssueNode[]);\n    // For components AND interfaces: add the edges, issue folders and relations between folders\n    issueNodes.forEach(node => {\n      this.graph.addNode(node);\n      this.addIssueFolders(node);\n      this.drawFolderRelations(node);\n    });\n    // ONLY for interfaces: create edges connecting interface to offering component and consuming components to interface\n    interfaceNodes.forEach(interfaceNode => {\n      this.connectToOfferingComponent(interfaceNode);\n      this.connectConsumingComponents(interfaceNode);\n    });\n\n    // render all changes\n    this.graph.completeRender();\n    this.setGraphToLastView();\n    if (layoutGraph && issueNodes.length > 0) {\n      this.layoutGraph();\n      this.drawGraph();\n    }\n  }\n\n  /**\n   * Resets graph state. Called at start of draw(). Enables logic in draw()\n   * to assume a 'blank sheet' state avoiding complex updating logic.\n   */\n  resetGraph() {\n    this.graph.edgeList = [];\n    this.graph.nodeList = [];\n    this.issueGroupParents = [];\n    this.graph.groupingManager.clearAllGroups();\n  }\n\n  /**\n   * Finds the ideal component position if none is saved.\n   * @param id Id of component that is handled.\n   * @param boundingBox Bounding box of the component that is handled.\n   */\n  findIdealComponentPosition(id: string, boundingBox: Rect): Point {\n\n    // saved position\n    const saved = this.savedPositions.nodes[id];\n\n    // case: there is a saved position\n    // => return it\n    if (saved) {\n      return saved;\n    }\n\n    // calculates the ideal position\n    const point = {x: 0, y: 0};\n    if (boundingBox) {\n      point.x = boundingBox.x + boundingBox.width + 60;\n      point.y = boundingBox.y + boundingBox.height / 2;\n    }\n\n    // saves the ideal position\n    this.savedPositions.nodes[id] = point;\n\n    return point;\n  }\n\n  /**\n   * Creates and adds an edge between the node representing a component\n   * an the node representing the interface itself.\n   * @param node - Interface that is handled.\n   */\n  connectToOfferingComponent(node: issueGraphNodes.InterfaceNode) {\n    this.graph.addEdge(issueGraphNodes.createInterfaceProvisionEdge(node.offeredById, node.id));\n  }\n\n  /**\n   * Adds an edge from each connected component to the interface.\n   * @param interfaceNode - Interface (visualized by lollipop notation) that is handled.\n   */\n  connectConsumingComponents(interfaceNode: issueGraphNodes.InterfaceNode) {\n    for (const consumerId of this.graphData.interfaces.get(interfaceNode.id).consumedBy) {\n      this.graph.addEdge(issueGraphNodes.createConsumptionEdge(consumerId, interfaceNode.id));\n    }\n  }\n\n  /**\n   * Adds the issue folders with counts for each IssueCategory (currently 3)\n   * to the component or interface represented by node. The first methods call\n   * sets up invisible nodes in the graph to make the folders display properly.\n   * The second method takes care of actually adding the visible folders with\n   * the correct counts.\n   * @param node - Interface / component that is handled.\n   */\n  private addIssueFolders(node: issueGraphNodes.IssueNode) {\n    this.addIssueGroupContainer(node);\n    this.addIssueFolderNodes(node);\n  }\n\n  /**\n   * Creates the node groups necessary for displaying issue folders attached to a node.\n   * A Node represents a component or an interface.\n   * It also gets an issue group of IssueGroupContainerParentBehaviour,\n   * issueGroupContainerNode with IssueGroupContainerBehaviour gets added to it.\n   * This corresponds to the 4 'Grouping Manager' object\n   * on the upper two levels in the graph_structure_documentation.png.\n   * @param node - Node (component or interface) which can have issue folders attached.\n   */\n  private addIssueGroupContainer(node: issueGraphNodes.IssueNode) {\n    const gm = this.graph.groupingManager;\n    gm.markAsTreeRoot(node.id);\n    const issueGroupContainerNode = issueGraphNodes.createIssueGroupContainerNode(node);\n    const initialPosition = this.savedPositions.issueGroups[issueGroupContainerNode.id];\n    gm.setGroupBehaviourOf(\n      node.id,\n      new IssueGroupContainerParentBehaviour(initialPosition)\n    );\n\n    // the issueGroupContainerNode has no visual representation but contains the visible issue folders\n    node.issueGroupContainer = issueGroupContainerNode;\n    this.graph.addNode(issueGroupContainerNode);\n    gm.addNodeToGroup(node.id, issueGroupContainerNode.id);\n    gm.setGroupBehaviourOf(\n      issueGroupContainerNode.id,\n      new IssueGroupContainerBehaviour()\n    );\n    this.issueGroupParents.push(node);\n  }\n\n  /**\n   * This method presumes that node has the 4 'Grouping Manager Objects'\n   * depicted on the the upper levels in the graph_structure_documentation.png.\n   * correctly setup.\n   * @param node Interface / component that is handled.\n   */\n  private addIssueFolderNodes(node: issueGraphNodes.IssueNode) {\n    // get mapping from IssueCategory to number for the component or interface represented by node\n    const issueCounts = this.graphData.graphLocations.get(node.id).issues;\n    // iterate over issue categories and create a node if there is at least one issue of it\n    Object.keys(IssueCategory).forEach(key => {\n      const issueCategory = IssueCategory[key];\n      if (issueCounts.has(issueCategory)) {\n        const count = issueCounts.get(issueCategory);\n        // only show folders for issue categories with at least one issue\n        if (count > 0) {\n          const issueFolderNode = issueGraphNodes.createIssueFolderNode(node, issueCategory, count.toString());\n          this.graph.addNode(issueFolderNode);\n          this.graph.groupingManager.addNodeToGroup(node.issueGroupContainer.id, issueFolderNode.id);\n        }\n      }\n    });\n  }\n\n  /**\n   * Draws folder relations originating from the issue folder represented by node.\n   * @param node - Issue folder (for issues of a certain type) that is handled.\n   */\n  private drawFolderRelations(node: issueGraphNodes.IssueNode) {\n    // @ts-ignore\n    const folderNodes: IssueFolderNode[] = Array.from(node.issueGroupContainer.issueGroupNodeIds).map(\n      (id: string) => this.graph.getNode(id));\n    for (const folderNode of folderNodes) {\n      const relatedFolders = this.graphData.relatedFolders.getValue([node.id.toString(), folderNode.type]);\n      for (const relatedFolder of relatedFolders) {\n        const [issueNodeId, category] = relatedFolder;\n        const edge = issueGraphNodes.createRelationEdge(folderNode.id, issueGraphNodes.getIssueFolderId(issueNodeId, category));\n        this.graph.addEdge(edge);\n      }\n    }\n  }\n\n  /**\n   * Sets the view and the bounding box of the graph to how it was when the user left the graph with the help of localStorage.\n   * When theres no previous session available set the view to the optimized bounding box for the graph.\n   */\n  private setGraphToLastView() {\n    // The previous currentViewWindow of the graph as JSON string\n    const previousBoundingBoxAsString = localStorage.getItem(`zoomBoundingBox_${this.projectStorageKey}`);\n    // The previous zoomTransform of the graph as JSON string\n    const zoomTransformAsString = localStorage.getItem(`zoomTransform_${this.projectStorageKey}`);\n    // Only set the bounding box to the optimized bounding box for the graph when creating the first component\n    const firstComponent = this.graphData.components.size === 1 ? true : false;\n\n    // Set the bounding box to the bounding box of the last session or to the optimized bounding box if there wasnt a last session\n    if ((JSON.parse(previousBoundingBoxAsString) !== null) && (JSON.parse(zoomTransformAsString) !== null) && this.graphFirstRender\n      && !this.redrawByCloseOfComponentDetails && !firstComponent) {\n      const previousBoundingBox = JSON.parse(previousBoundingBoxAsString);\n      /* These calculations are necessary because of how GraphEditor.zoomToBox(box: Rect) works. GraphEditor.zoomToBox zooms to\n      the given box and adds some padding.These calculations get rid of the padding. Otherwise the padding would be added to the graph\n       with every execution of the setGraphToLastView() method. */\n      previousBoundingBox.width = previousBoundingBox.width * 0.9;\n      previousBoundingBox.height = previousBoundingBox.height * 0.9;\n      // Difference between Rect.x that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.x\n      const paddingX = 57.75 / JSON.parse(zoomTransformAsString).k;\n      // Difference between Rect.y that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.y\n      const paddingY = 17.2 / JSON.parse(zoomTransformAsString).k;\n      previousBoundingBox.x = previousBoundingBox.x + paddingX;\n      previousBoundingBox.y = previousBoundingBox.y + paddingY;\n      this.graph.zoomToBox(previousBoundingBox);\n      this.graphFirstRender = false;\n    }\n    // Zoom to the optimized bounding box if no graph view is stored from the last session or when the first component is created\n    else if ((this.zoomOnRedraw && !this.redrawByCloseOfComponentDetails) || firstComponent) {\n      this.fitGraphInView();\n      this.zoomOnRedraw = false;\n    }\n  }\n\n  /**\n   * Fits the graph into view.\n   */\n  fitGraphInView(): void {\n    // calculates the bounding box of the view\n    const rect = this.calculateBoundingBox();\n\n    // case: bounding box is calculated\n    // => zoom to bounding box\n    if (rect) {\n      this.graph.zoomToBox(rect);\n    }\n  }\n\n  /**\n   * Calculates the bounding box of the view.\n   * @returns The calculated bounding box.\n   */\n  calculateBoundingBox(): Rect {\n    const componentSize = {width: 100, height: 60};\n    const interfaceSize = {width: 14, height: 14};\n    const issueContainerSize = {width: 40, height: 30};\n\n    // calculates bounding box\n    let rect = null;\n    for (const node of this.graph.nodeList) {\n      let size;\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        size = componentSize;\n      } else if (node.type === issueGraphNodes.NodeType.Interface || node.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n        size = interfaceSize;\n      } else if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        if (node.issueGroupNodeIds.size === 0) {\n          // irrelevant for empty issue group containers\n          continue;\n        }\n\n        size = issueContainerSize;\n      } else {\n        continue;\n      }\n\n      const nodeX = node.x - size.width / 2;\n      const nodeY = node.y - size.height / 2;\n\n      if (rect === null) {\n        rect = {xMin: nodeX, yMin: nodeY, xMax: nodeX + size.width, yMax: nodeY + size.height};\n      } else {\n        rect.xMin = Math.min(nodeX, rect.xMin);\n        rect.yMin = Math.min(nodeY, rect.yMin);\n\n        rect.xMax = Math.max(nodeX + size.width, rect.xMax);\n        rect.yMax = Math.max(nodeY + size.height, rect.yMax);\n      }\n    }\n\n    return rect ? {x: rect.xMin, y: rect.yMin, width: rect.xMax - rect.xMin, height: rect.yMax - rect.yMin} : null;\n  }\n\n  /**\n   * Handles the layour graph.\n   */\n  layoutGraph(): void {\n    const nodes = new Map();\n\n    for (const node of this.graph.nodeList) {\n      if (node.type === issueGraphNodes.NodeType.Component || node.type === issueGraphNodes.NodeType.Interface) {\n        nodes.set(node.id, new LayoutNode(node.id, node.x, node.y, node.type));\n      }\n    }\n\n    for (const edge of this.graph.edgeList) {\n      if (nodes.has(edge.source) && nodes.has(edge.target)) {\n        nodes.get(edge.source).connectTo(nodes.get(edge.target));\n        nodes.get(edge.target).connectTo(nodes.get(edge.source));\n      }\n    }\n\n    const nodeList = Array.from(nodes.values());\n    doGraphLayout(nodeList);\n\n    for (const node of nodeList) {\n      const layoutNode = nodes.get(node.id);\n      this.savedPositions.nodes[layoutNode.id] = {x: layoutNode.position.x, y: layoutNode.position.y};\n    }\n\n    this.savePositionsSubject.next();\n  }\n\n  /**\n   * Sets --show-relations css variable to initial or none. It is the value\n   * of the display attribute of the edges. If we set it to none the edges disappear.\n   * @param showRelations - Boolean derived from the setting of the switch slider for relation edges above the graph.\n   */\n  setRelationVisibility(showRelations: boolean) {\n    this.graph.getSVG().style('--show-relations', showRelations ? 'initial' : 'none');\n  }\n\n  /**\n   * Opens create component dialog and triggers reload of data after the dialog is closed.\n   */\n  public openCreateComponentDialog(): void {\n    const createComponentDialogRef = this.dialog.open(CreateComponentDialogComponent, {\n      data: {projectId: this.projectId}\n    });\n    createComponentDialogRef.afterClosed().subscribe(componentInformation => {\n      this.zoomOnRedraw = false;\n      this.reload$.next(null);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileSettingsDialogComponent.html":{"url":"components/ProfileSettingsDialogComponent.html","title":"component - ProfileSettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileSettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-settings-dialog\n            \n\n            \n                styleUrls\n                ./profile-settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                hide\n                            \n                            \n                                updatePasswordFieldsShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                projectNameEdited\n                            \n                            \n                                    Public\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordFieldsShown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-profile-settings-dialog',\n  templateUrl: './profile-settings-dialog.component.html',\n  styleUrls: ['./profile-settings-dialog.component.scss']\n})\nexport class ProfileSettingsDialogComponent implements OnInit {\n\n  hide = true;\n  updatePasswordFieldsShown = false;\n  description = '';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //close profile settings dialog\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n\n  //TODO\n  public changePassword() {\n    this.updatePasswordFieldsShown = true;\n  }\n\n  //TODO\n  public cancel() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  //TODO\n  public updatePassword() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n}\n\n    \n\n    \n        \n\n    \n        close_ios\n    \n    Profile Settings\n    \n    \n\n    \n    \n    \n\n    \n        Change Password\n    \n\n    \n\n    \n    \n\n        \n        \n            Enter old password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n        \n            Enter new password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n            Update Password\n        \n\n        \n            Cancel\n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./profile-settings-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n\n.new-item-button{\n    float: right;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close_ios        Profile Settings                                Change Password                                            Enter old password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                                Enter new password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                        Update Password                            Cancel            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileSettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectHeaderComponent.html":{"url":"components/ProjectHeaderComponent.html","title":"component - ProjectHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-header/project-header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the name and the id of a project\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-header\n            \n\n            \n                styleUrls\n                ./project-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * This component displays the name and the id of a project\n */\n@Component({\n  selector: 'app-project-header',\n  templateUrl: './project-header.component.html',\n  styleUrls: ['./project-header.component.scss']\n})\nexport class ProjectHeaderComponent {\n  @Input() projectName: string;\n  @Input() projectId: string;\n}\n\n\n    \n\n    \n        \n  \n  \n\n  \n    {{projectName}}\n    Project ID: {{projectId}}\n  \n\n\n    \n\n    \n                \n                    ./project-header.component.scss\n                \n                .project-title-row {\n  align-items: center;\n  width: fit-content;\n}\n\n.icon {\n  float: left;\n  vertical-align: top;\n  margin-right: 5px;\n  max-height: 64px;\n  max-width: 64px;\n}\n\n.content {\n  float: left;\n}\n\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{projectName}}    Project ID: {{projectId}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectIssueListComponent.html":{"url":"components/ProjectIssueListComponent.html","title":"component - ProjectIssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectIssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-issue-list/project-issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is displayed when clicking on issues on the sidebar.\nIt contains the IssueHeaderComponent and the IssueListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-issue-list\n            \n\n            \n                styleUrls\n                ./project-issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                issueListId\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for retrieving the id of the project through the url\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for connection to API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the list which is shown in the IssueListComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Project } from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\n\n/**\n * This component is displayed when clicking on issues on the sidebar.\n * It contains the IssueHeaderComponent and the IssueListComponent.\n */\n@Component({\n  selector: 'app-project-issue-list',\n  templateUrl: './project-issue-list.component.html',\n  styleUrls: ['./project-issue-list.component.scss']\n})\nexport class ProjectIssueListComponent implements OnInit {\n\n  public projectId: string;\n  public project$: DataNode;\n  /**\n   * ID of the list which is shown in the IssueListComponent\n   */\n  public issueListId: ListId;\n\n  /**\n   * @param route for retrieving the id of the project through the url\n   * @param dataService for connection to API\n   */\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const node = { type: NodeType.Project, id: this.projectId };\n    this.project$ = this.dataService.getNode(node);\n    this.issueListId = { node, type: ListType.Issues };\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./project-issue-list.component.scss\n                \n                .center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n.project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectIssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-list-component/project-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is the landing page for the user after loggin in to the system\nIt shows a list of all projects the user can access\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n            \n                styleUrls\n                ./project-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastQueriedProjectName\n                            \n                            \n                                loading\n                            \n                            \n                                pendingCreate\n                            \n                            \n                                projectName\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeColour\n                            \n                            \n                                    Public\n                                nothing\n                            \n                            \n                                    Public\n                                openCreateProjectDialog\n                            \n                            \n                                    Public\n                                reloadProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectStore: ProjectStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        changeColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeColour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nothing\n                        \n                    \n                \n            \n            \n                \n                    \n                    nothing(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateProjectDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateProjectDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reloadProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastQueriedProjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pick[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {Project} from 'src/generated/graphql';\nimport {ProjectStoreService} from '../data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component is the landing page for the user after loggin in to the system\n * It shows a list of all projects the user can access\n */\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss']\n})\nexport class ProjectListComponent implements OnInit {\n  pendingCreate = false;\n  projectName = '';\n  lastQueriedProjectName: string;\n  projects: Pick[] = [];\n  loading: boolean;\n\n  constructor(private projectStore: ProjectStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    // get all projects from the database\n    this.reloadProjects();\n  }\n\n  public reloadProjects(): void {\n    if (this.lastQueriedProjectName === this.projectName && this.lastQueriedProjectName) {\n      return;\n    }\n\n    this.loading = true;\n    this.projectStore.getAll(this.projectName).subscribe(projects => {\n      this.loading = false;\n      this.projects = projects;\n      this.lastQueriedProjectName = this.projectName;\n    }, error => {\n      this.loading = false;\n      this.notify.notifyError('Failed to load projects', error);\n    });\n  }\n\n  public openCreateProjectDialog(): void {\n    const createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent);\n    createProjectDialogRef.afterClosed().subscribe(result => {\n      this.changeColour();\n      if (result?.createdProjectId) {\n        this.projectName = '';\n        this.reloadProjects();\n      }\n    });\n  }\n\n  // remove the focus from the create project button after the project is created\n  private changeColour(): void {\n    const b = document.querySelector('#buttonCreateProject') as HTMLElement;\n    b.blur();\n  }\n\n  // if the shortcut icon to the graph view of a project is clicked the list view fires a event that a row was clicked\n  // and the user jumps to the project overview. This method prevents the default event and enable the shortcut button\n  // to perform its action\n  public nothing(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n}\n\n\n    \n\n    \n        \n  My Projects\n\n\n  Project-List\n  Create Project\n  \n  \n  Create Demo Project-->\n  -->\n\n\n\n\n\n  \n    \n  \n  \n  \n    \n      \n    \n  \n\n  \n  \n  \n    \n\n      \n      {{ project.name }}\n      \n        account_tree\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-list.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n@import 'src/styles/spinner';\n\nspan[matLine] {\n  padding-left: 16px;\n}\n\n.nz-input-group{\nmax-width: 100%;\n}\n.nz-input-group{\n  max-width: 100%;\n}\n.listWrapper{\n  max-width: 50%;\n  //background-color: black;\n  -webkit-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\n-moz-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nbox-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nmargin-top: 15px;\nmargin-left: auto;\nmargin-right: auto;\n}\n.centered-headline{\n  margin: auto;\n}\n\n\n\n.mat-nav-list-padding-removed{\n  padding-top: 0;\n}\n.floating-button{\nfloat: right;\n}\n.list-header{\nmax-width: 50%;\nmargin-left: auto;\nmargin-right: auto;\nheight: 36px;\nmargin-bottom: 5px;\n}\n.list-h2{\n  max-width: 50%;\n  float: left;\n  margin-bottom: 0;\n}\n\n.graph-icon {\n  color: $icon-gray;\n}\n\n#buttonDeleteProject{\n  margin: 5px;\n}\n\n#buttonCreateProject{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My Projects  Project-List  Create Project      Create Demo Project-->  -->                                                  {{ project.name }}              account_tree                  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is an example for the manage members view\nAll users are displayed in a paginated list. The list can be filtered.\nThe members are hardcoded\nIf the backend offers an interface to get all users the mockUsers list schould be replaced\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addableUsers\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                dataSource\n                            \n                            \n                                mockUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                paginatorModule\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                onAddClick\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, projectStore: ProjectStoreService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(rowData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addableUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Name', 'Role', 'email']\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatorModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginatorModule\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginatorModule)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetFullProjectQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n      \n        add\n      \n\n      \n        remove\n      \n\n\n      \n        \n          Filter\n          \n        \n      \n\n\n      \n\n        \n        \n\n          \n          \n             Name \n             {{element.displayName}} \n          \n\n          \n          \n             Role \n             Administrator \n          \n\n          \n          \n             Email \n             {{element.email}} \n          \n\n\n          \n          \n        \n\n      \n\n      \n      \n      \n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./project-members.component.scss\n                \n                .project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n}\n.text-left {\n  text-align: left;\n}\n.mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201,195,201,1);\n  cursor: pointer;\n}\n.button-add {\n  margin: 10px 5px 10px 10px;\n  float: left;\n}\n\n.button-remove {\n  margin: 10px 15px 10px 5px;\n  float: left;\n}\n\n.table-container {\n  max-height: 500px;\n  overflow: auto;\n}\n.center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            add                    remove                              Filter                                                                               Name              {{element.displayName}}                                            Role              Administrator                                            Email              {{element.email}}                                                                         '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectOverviewComponent.html":{"url":"components/ProjectOverviewComponent.html","title":"component - ProjectOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-overview/project-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component offers a view showing the project name,\nowner, id and description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-overview\n            \n\n            \n                styleUrls\n                ./project-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                queryComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                projectNameEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, projectStore: ProjectStoreService, route: ActivatedRoute, router: Router, changeDetector: ChangeDetectorRef, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Project} from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\nimport {NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component offers a view showing the project name,\n * owner, id and description.\n */\n@Component({\n  selector: 'app-project-overview',\n  templateUrl: './project-overview.component.html',\n  styleUrls: ['./project-overview.component.scss']\n})\nexport class ProjectOverviewComponent implements OnInit, AfterViewInit {\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  public projectId: string;\n  public project: DataNode;\n  description = '';\n\n  constructor(private dataService: DataService,\n              private projectStore: ProjectStoreService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private changeDetector: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = this.dataService.getNode({type: NodeType.Project, id: this.projectId});\n  }\n\n  ngAfterViewInit() {\n    this.queryComponent.listenTo(this.project, project => this.description = project.description);\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n\n  deleteProject(): void {\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete project \\\"' + this.project.current.name + '\\\"?',\n          messages: ['Are you sure you want to delete the project \\\"' + this.project.current.name + '\\\"?',\n            'This action cannot be undone!'],\n          verificationName: this.project.current.name\n        }\n      });\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        this.projectStore.delete(this.projectId).subscribe(() => {\n            this.notify.notifyInfo('Successfully deleted project \\\"' + this.project.current.name + '\\\"');\n            this.router.navigate(['/']);\n          },\n          error => this.notify.notifyError('Failed to delete project!', error));\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n\n        \n        \n          Delete\n        \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-overview.component.scss\n                \n                .delete-button-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.project-overview-container {\n  margin: 4px;\n}\n\n#button{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Delete                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectStoreService.html":{"url":"injectables/ProjectStoreService.html","title":"injectable - ProjectStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/project/project-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides get, create and delete operations for projects\nWith the get-method only the id and name of one project, specified by the id, will be fetched\nThe getFulProject method fetches all the information of a project the database provides\nThe getAll method fetches the name and id for all projects. This is used to reduce\ntransfered data while showing the projects list\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBasicProject\n                            \n                            \n                                getFullProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, getAllQuery: GetAllProjectsGQL, getBasicProjectQuery: GetBasicProjectGQL, getFullQuery: GetFullProjectGQL, createProject: CreateProjectGQL, deleteProject: DeleteProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/project/project-store.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllQuery\n                                                  \n                                                        \n                                                                    GetAllProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicProjectQuery\n                                                  \n                                                        \n                                                                    GetBasicProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullQuery\n                                                  \n                                                        \n                                                                    GetFullProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createProject\n                                                  \n                                                        \n                                                                    CreateProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteProject\n                                                  \n                                                        \n                                                                    DeleteProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filterText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicProject\n                        \n                    \n                \n            \n            \n                \ngetBasicProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullProject\n                        \n                    \n                \n            \n            \n                \ngetFullProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateProjectGQL,\n  CreateProjectInput,\n  DeleteProjectGQL,\n  DeleteProjectInput,\n  GetAllProjectsGQL,\n  GetBasicProjectGQL,\n  GetBasicProjectQuery,\n  GetFullProjectGQL,\n  GetFullProjectQuery,\n  Project,\n  ProjectFilter\n} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '@app/auth/authentication.service';\n\n/**\n * This service provides get, create and delete operations for projects\n * With the get-method only the id and name of one project, specified by the id, will be fetched\n * The getFulProject method fetches all the information of a project the database provides\n * The getAll method fetches the name and id for all projects. This is used to reduce\n * transfered data while showing the projects list\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectStoreService {\n\n  constructor(private authService: AuthenticationService, private getAllQuery: GetAllProjectsGQL,\n              private getBasicProjectQuery: GetBasicProjectGQL, private getFullQuery: GetFullProjectGQL,\n              private createProject: CreateProjectGQL, private deleteProject: DeleteProjectGQL) {\n  }\n\n  create(name: string, description: string) {\n    const input: CreateProjectInput = {\n      name,\n      description\n    };\n    return this.createProject.mutate({input});\n  }\n\n  delete(id: string) {\n    const input: DeleteProjectInput = {\n      project: id\n    };\n    return this.deleteProject.mutate({input});\n  }\n\n  getBasicProject(id: string): Observable {\n    return this.getBasicProjectQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullProject(id: string): Observable {\n    return this.getFullQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getAll(filterText: string): Observable[]> {\n    const filter: ProjectFilter = {\n      name: filterText\n    };\n    return this.getAllQuery.fetch({filter}).pipe(\n      map(({data}) => data.projects.edges.map(edge => edge.node))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProject\n                            \n                            \n                                listProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjects: ListProjectsGQL, qGetProject: GetProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/projects.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjects\n                                                  \n                                                        \n                                                                    ListProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetProject\n                                                  \n                                                        \n                                                                    GetProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProject\n                        \n                    \n                \n            \n            \n                \ngetProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjects\n                        \n                    \n                \n            \n            \n                \nlistProjects(list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GetProjectGQL,\n  ListProjectsGQL,\n  ProjectFilter,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  constructor(\n    private qListProjects: ListProjectsGQL,\n    private qGetProject: GetProjectGQL,\n  ) {}\n\n  listProjects(list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjects.fetch({ ...list }));\n  }\n\n  getProject(id: string) {\n    return promisifyApolloFetch(this.qGetProject.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueriesService.html":{"url":"injectables/QueriesService.html","title":"injectable - QueriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/queries.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                issues\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(components: ComponentsService, issues: IssuesService, projects: ProjectsService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/queries.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        ComponentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issues\n                                                  \n                                                        \n                                                                        IssuesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projects\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssuesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IssuesService } from './issues.service';\nimport { ProjectsService } from './projects.service';\nimport { ComponentsService } from './components.service';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueriesService {\n  constructor(\n    public components: ComponentsService,\n    public issues: IssuesService,\n    public projects: ProjectsService,\n    public users: UsersService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBodyDirective.html":{"url":"directives/QueryBodyDirective.html","title":"directive - QueryBodyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBodyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on an ng-template, to indicate that the contents of it should be shown once\nthe query finished successfully\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryBody]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonDirective.html":{"url":"directives/QueryButtonDirective.html","title":"directive - QueryButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on a button, to inidcate that the QueryComponent should manage the state of this\nbutton\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: MatButton)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    MatButton\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryComponent.html":{"url":"components/QueryComponent.html","title":"component - QueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/query-component/query.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is intended to be used in combination with an Observable.\nThe component expects that either an ng-template or a MatButton is in the body and that the appropriate directive\nis used on it (QueryBodyDirective with ng-template, QueryButtonDirective with button).\nOnce the appropriate function is called, the component subscribes to the observable, showing the user a loading\nindication and, if applicable, disables the button.\nOnce the query finished, the content in the ng-template is shown or the button is enabled again.\nIf the subscription yielded an error, a message is shown instead of the ng-template, or the button is re-enabled.\nNote that no verification has to be made if the query was successful, when using an ng-template.\nThe content of the ng-template is only executed once the #queryState is Ready.\nExample 1: Using ng-template\nThis example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n\n  \n    This will only be shown if the query was successful!\n     Not required! -->\n    Result is: {{this.data}}\n     -->\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nngAfterViewInit() {\n  // Have to use ngAfterViewInit, otherwise query will be undefined!\n\n  this.query.listenTo(this.someObservable,\n    result => {\n      this.data = result;\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}Example 2: Using button\nThis example will subscribe to the observable as soon as the button is clicked.\nThe button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n\n  \n    Do something that takes a while...\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nonClick() {\n  this.query.listenTo(this.somethingThatTakesAWhile,\n    result => {\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-query-component\n            \n\n            \n                styleUrls\n                query.component.scss\n            \n\n\n\n            \n                templateUrl\n                query.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                button\n                            \n                            \n                                buttonMode\n                            \n                            \n                                queryState\n                            \n                            \n                                    Private\n                                    Optional\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                listenTo\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                setError\n                            \n                            \n                                    Private\n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: UserNotifyService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Failed to run query!'\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/query-component/query.component.ts:134\n                            \n                        \n                \n                    \n                        Error message to be shown if the subscription failed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listenTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    listenTo(query: Observable, success?: (value?: T) => void, error?: (error?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:173\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribe the query component to the observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observable\n\n                                    \n                                \n                                \n                                    success\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query was successful\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query had an error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ready\n                        \n                    \n                \n            \n            \n                \n                    \n                    ready()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:163\n                \n            \n\n\n            \n                \n                    Quick way of checking if this.query.queryState === QueryComponentState.Ready\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setError\n                        \n                    \n                \n            \n            \n                \n                    \n                    setError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:206\n                \n            \n\n\n            \n                \n                    Manually sets this query component to the error state.\nThis may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryBodyDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryBodyDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryButtonDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryButtonDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                        \n                    \n\n            \n                \n                    If true, a button is in the query body, not a template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponentState\n\n                    \n                \n                \n                    \n                        Default value : QueryComponentState.Loading\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:141\n                        \n                    \n\n            \n                \n                    The current state of the query\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:142\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n  \n    \n      {{errorMessage}}\n    \n  \n\n  \n    \n      \n      Loading...\n    \n  \n\n\n\n\n    \n\n    \n                \n                    query.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 10px;\n}\n\n.error {\n  border: red 1px solid;\n  border-radius: 10px;\n  padding: 18px;\n  width: fit-content;\n  background-color: rgba(255, 0, 0, 0.1);\n}\n\n.load-container{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n  height: fit-content;\n  background-color: #ababab;\n  padding: 10px 16px 10px 16px;\n  border-radius: 100px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-weight: 500;\n  color: whitesmoke;\n}\n\n.error-text {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{errorMessage}}                        Loading...      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryListParams.html":{"url":"interfaces/QueryListParams.html","title":"interface - QueryListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/util.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterBy:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n// FIXME: why is this an observable? during runtime, we only ever observe one update emitted from\n//  the observable, yet the Apollo API uses this everywhere\n// TODO: investigate\nexport function promisifyApolloFetch(f: Observable): Promise {\n  return new Promise((resolve, reject) => {\n    f.subscribe(({ data }) => resolve(data), error => reject(error));\n  });\n}\n\nexport interface QueryListParams {\n  after?: string;\n  before?: string;\n  filterBy?: F;\n  first?: number;\n  last?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Allows the user to register for a Gropius account.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmValidator\n                            \n                            \n                                isLoading\n                            \n                            \n                                publicClientName\n                            \n                            \n                                userNameAsyncValidator\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToLogin\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitForm\n                            \n                            \n                                validateConfirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apollo: Apollo, router: Router, registerUserMutation: RegisterUserGQL, userAvailablyQuery: CheckUsernameGQL, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registerUserMutation\n                                                  \n                                                        \n                                                                        RegisterUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAvailablyQuery\n                                                  \n                                                        \n                                                                        CheckUsernameGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToLogin\n                        \n                    \n                \n            \n            \n                \nbackToLogin(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:131\n                \n            \n\n\n            \n                \n                    Loads the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:118\n                \n            \n\n\n            \n                \n                    Resets form fields and marks all controls as pristine.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:95\n                \n            \n\n\n            \n                \n                    Given data needed for account creation\nand carries out the creation by issuing a mutation to the backend.\nIf successfull, the user is redirected to the Login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData (from the register form) that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateConfirmPassword\n                        \n                    \n                \n            \n            \n                \nvalidateConfirmPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    Recalculates the value and validation status of the password confirmation field.\nThis is triggered whenever the user changes the password in the register form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:67\n                        \n                    \n\n            \n                \n                    Checks that the password in the Confirm Password field\nmatches the password in the Password field.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            Password that is handled.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicClientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.publicClientName\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNameAsyncValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:44\n                        \n                    \n\n            \n                \n                    Checks with backend to ensure that entered username is valid.\nA username is invalid when its taken or contains symbols like '*', etc.\ncontrol is not a valid username. Emits null when username is valid\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            \nUsername that is handled.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Apollo} from 'apollo-angular';\nimport {Observable, Observer} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {CheckUsernameGQL, RegisterUserGQL, RegisterUserInput} from 'src/generated/public-graphql';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * Allows the user to register for a Gropius account.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  validateForm: FormGroup;\n  isLoading = false;\n  publicClientName = environment.publicClientName;\n\n  constructor(private fb: FormBuilder, private apollo: Apollo, private router: Router,\n              private registerUserMutation: RegisterUserGQL, private userAvailablyQuery: CheckUsernameGQL,\n              private notify: UserNotifyService) {\n    this.registerUserMutation.client = this.publicClientName;\n    this.userAvailablyQuery.client = this.publicClientName;\n    this.validateForm = this.fb.group({\n      username: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]],\n    });\n  }\n\n  /**\n   * Checks with backend to ensure that entered username is valid.\n   * A username is invalid when its taken or contains symbols like '*', etc.\n   * @param control - Username that is handled.\n   * @returns Observable emitting values indicating error when string entered in\n   * control is not a valid username. Emits null when username is valid\n   */\n  userNameAsyncValidator = (control: FormControl) =>\n   new Observable((observer: Observer) => {\n     this.userAvailablyQuery.fetch({username: control.value}).subscribe(({data}) => {\n\n       // case: username already taken\n       // => marks event as error\n       if (!data.checkUsername) {\n         // returns `{error: true}` to mark event as an error\n         observer.next({error: true, duplicated: true});\n       } else {\n         observer.next(null);\n       }\n       observer.complete();\n     }, (error) => {\n       this.notify.notifyError('Failed to verify user name!', error);\n     });\n   });\n\n  /**\n   * Checks that the password in the Confirm Password field \n   * matches the password in the Password field.\n   * @param control Password that is handled.\n   */\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n\n    // case: no password given\n    if (!control.value) {\n      return {error: true, required: true};\n    }\n    \n    // case: password does not match\n    else if (control.value !== this.validateForm.controls.password.value) {\n      return {confirm: true, error: true};\n    }\n    return {};\n  };\n\n  /**\n   * Recalculates the value and validation status of the password confirmation field.\n   * This is triggered whenever the user changes the password in the register form.\n   */\n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  /**\n   * Given data needed for account creation\n   * and carries out the creation by issuing a mutation to the backend. \n   * If successfull, the user is redirected to the Login page.\n   * @param value - Data (from the register form) that is handled.\n   */\n  submitForm(value: { username: string; email: string; password: string; confirm: string }): void {\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    const input: RegisterUserInput = {\n      username: value.username,\n      displayName: value.username,\n      password: value.password,\n      email: value.email\n    };\n\n    this.registerUserMutation.mutate({input}).subscribe(({data}) => {\n      this.router.navigate(['login']);\n    }, (error) => {\n      this.notify.notifyError('Failed to register the user!', error);\n    });\n  }\n\n  /**\n   * Resets form fields and marks all controls as pristine.\n   * @param e - Event affecting the form reset.\n   */\n  resetForm(e: MouseEvent): void {\n    e.preventDefault();\n    this.validateForm.reset();\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n  \n  /**\n   * Loads the login page.\n   * @param e - Event affecting the form reset.\n   */\n  backToLogin(e: MouseEvent): void {\n    e.preventDefault();\n    this.router.navigate(['login']);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n      \n        \n      \n\n      \n      \n        Register\n      \n\n    \n\n    \n\n      \n      \n\n        \n        \n          Username\n        \n\n        \n        \n          \n          \n            \n              Please enter a Username!\n            \n            \n              This Username is taken!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Email\n        \n\n        \n        \n          \n          \n            \n              Please enter a valid Email!\n            \n            \n              Please enter your Email!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Password\n        \n\n        \n        \n          \n        \n      \n\n      \n      \n\n        \n        \n          Confirm Password\n        \n\n        \n        \n          \n          \n            \n              Please enter your Password!\n            \n            \n              Passwords do not match!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n\n          \n          Register\n\n          \n          Reset\n\n          \n          Back\n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n      [nz-form] {\n        max-width: 600px;\n      }\n\n      button {\n        margin-left: 8px;\n      }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Register                                                    Username                                                                      Please enter a Username!                                      This Username is taken!                                                                          Email                                                                      Please enter a valid Email!                                      Please enter your Email!                                                                          Password                                                                                      Confirm Password                                                                      Please enter your Password!                                      Passwords do not match!                                                                                    Register                    Reset                    Back                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationEdge.html":{"url":"interfaces/RelationEdge.html","title":"interface - RelationEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Edge\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sourceIssues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceIssues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveDialogComponent.html":{"url":"components/RemoveDialogComponent.html","title":"component - RemoveDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-dialog/remove-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is a confirmation dialog for anything that involves deleting\nExample\n// ...\n\nconstructor(private dialog: MatDialog, ...)\n\n// ...\n\nconst dialogRef = this.dialog.open(RemoveDialogComponent,\n{\n  data: {\n    title: 'This is the title of the dialog',\n    messages: ['Every entry is a new line',\n               'This is the next line',\n               ' Lines beginning with a space will be indented'],\n    verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n    confirmButtonText: 'This is the text of the confirm button'\n  }\n});\n\ndialogRef.afterClosed().subscribe(confirm => {\n  if (confirm) {\n    console.log('Deleted!');\n  } else {\n    console.log('Not deleted!');\n  }\n});\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-dialog\n            \n\n            \n                styleUrls\n                ./remove-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                matchValidator\n                            \n                            \n                                verificationNameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationNameInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', this.matchValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n    \n        \n  delete\n  {{data.title}}\n\n\n\n  \n    \n      &nbsp;&nbsp;&nbsp;&nbsp;\n      {{message.startsWith(' ') ? message.substring(1) : message}}\n    \n  \n  \n    \n      Type &quot;{{data.verificationName}}&quot; to confirm:\n      \n        Confirm name\n        \n        Names don't match!\n      \n    \n\n    \n      \n    \n  \n\n\n\n  Cancel\n  \n    {{this.data.confirmButtonText ? this.data.confirmButtonText : 'Delete'}}\n  \n\n\n    \n\n    \n                \n                    ./remove-dialog.component.scss\n                \n                .mat-dialog-content{\n  display: flex;\n  flex-direction: column;\n}\n\n.content {\n  display: inline-block;\n  align-self: center;\n  place-self: center;\n  vertical-align: middle;\n  border-top: lightgray;\n  border-top-style: solid;\n  border-bottom: lightgray;\n  border-bottom-style: solid;\n  font-weight: bold;\n  font-size: 1.1em;\n  padding: 8px;\n  margin: 0;\n  width: 100%;\n  overflow: auto;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n.title{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.delete-icon {\n  flex: 0 0 auto;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  delete  {{data.title}}                      {{message.startsWith(\\' \\') ? message.substring(1) : message}}                  Type \"{{data.verificationName}}\" to confirm:              Confirm name                Names don\\'t match!                            Cancel      {{this.data.confirmButtonText ? this.data.confirmButtonText : \\'Delete\\'}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveProjectMemberComponentComponent.html":{"url":"components/RemoveProjectMemberComponentComponent.html","title":"component - RemoveProjectMemberComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveProjectMemberComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-project-member-component\n            \n\n            \n                styleUrls\n                ./remove-project-member-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-project-member-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-project-member-component',\n  templateUrl: './remove-project-member-component.component.html',\n  styleUrls: ['./remove-project-member-component.component.scss']\n})\nexport class RemoveProjectMemberComponentComponent implements OnInit {\n\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) { }\n\n  //users selected in the dialog to be deleted\n  selectedUsers = [];\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onDeleteClick() {\n    const data = {usersToDelete: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n\n}\n\n    \n\n    \n        Remove Project Member\n\n\n  \n    \n    \n    \n\n      {{user.displayName}}\n    \n  \n\n\n\n  Cancel\n  Delete User \n\n\n    \n\n    \n                \n                    ./remove-project-member-component.component.scss\n                \n                .dialog-content {\n    min-height: 400px;\n    min-width: 400px;\n    max-width: 600px;\n  }\n  .actions {\n    float:right\n  }\n  .stretch {\n    width: 100%;\n  }\n\n  .mat-success {\n    background-color: green;\n    color: #fff;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Remove Project Member                    {{user.displayName}}        Cancel  Delete User '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveProjectMemberComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorComponent.html":{"url":"components/SetEditorComponent.html","title":"component - SetEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        The set editor displays and edits a list of items (used in the issue detail sidebar).\n\nThe list of selected items listSet may be either a local array of IDs or a ListId.\nWhen editing, items may be selected from a list of all available items #listAll.\nThe list of items may be searched using a search box (#makeFilter and #scoreKeys).\nUpon closing the edit dialog, a changeset of additions and deletions is passed to a callback (#applyChangeset).\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor\n            \n\n            \n                styleUrls\n                ./set-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyChangeset\n                            \n                            \n                                createItem\n                            \n                            \n                                editable\n                            \n                            \n                                emptyResultsLabel\n                            \n                            \n                                emptySuggestionsLabel\n                            \n                            \n                                hydrate\n                            \n                            \n                                itemOps\n                            \n                            \n                                listAll\n                            \n                            \n                                listSet\n                            \n                            \n                                makeFilter\n                            \n                            \n                                scoreKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialogService: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyChangeset\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:42\n                            \n                        \n                \n                    \n                        Callback for applying a changeset to the listSet.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createItem\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:59\n                            \n                        \n                \n                    \n                        Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:48\n                            \n                        \n                \n                    \n                        Set editable to false to just display items in the set, without being able to edit them.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyResultsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No results'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:52\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears when there is a search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptySuggestionsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No suggestions'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:50\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears only when there is no search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hydrate\n                    \n                \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:54\n                            \n                        \n                \n                    \n                        Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemOps\n                    \n                \n                \n                    \n                        Type :         ItemOps\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:56\n                            \n                        \n                \n                    \n                        Additional operations available from the set editor.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listAll\n                    \n                \n                \n                    \n                        Type :     ListId | SetMultiSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:40\n                            \n                        \n                \n                    \n                        The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listSet\n                    \n                \n                \n                    \n                        Type :     ListId | NodeId[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:38\n                            \n                        \n                \n                    \n                        The list that contains all nodes that are part of the set. string[] is treated as local state.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        makeFilter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:44\n                            \n                        \n                \n                    \n                        Callback for making a filter for the given search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreKeys\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:46\n                            \n                        \n                \n                    \n                        Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:63\n                            \n                        \n                \n                    \n                        Callback to delete an item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:61\n                            \n                        \n                \n                    \n                        Callback to edit an item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor.component.ts:147\n                \n            \n\n\n            \n                \n                    Opens the editor dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  ElementRef, EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ListId, NodeId } from '@app/data-dgql/id';\nimport { DataList, HydrateList } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { Subscription } from 'rxjs';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SetEditorDialogComponent, SetEditorDialogData, SetMultiSource } from './set-editor-dialog.component';\n\ntype ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\n/**\n * The set editor displays and edits a list of items (used in the issue detail sidebar).\n *\n * - The list of selected items {@link listSet} may be either a local array of IDs or a {@link ListId}.\n * - When editing, items may be selected from a list of all available items {@link #listAll}.\n * - The list of items may be searched using a search box ({@link #makeFilter} and {@link #scoreKeys}).\n * - Upon closing the edit dialog, a changeset of additions and deletions is passed to a callback ({@link #applyChangeset}).\n */\n@Component({\n  selector: 'app-set-editor',\n  templateUrl: './set-editor.component.html',\n  styleUrls: ['./set-editor.component.scss']\n})\nexport class SetEditorComponent implements OnInit, OnChanges, OnDestroy {\n  /** The list that contains all nodes that are part of the set. string[] is treated as local state. */\n  @Input() listSet: ListId | NodeId[];\n  /** The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items. */\n  @Input() listAll: ListId | SetMultiSource;\n  /** Callback for applying a changeset to the listSet. */\n  @Input() applyChangeset: (additions: NodeId[], deletions: NodeId[]) => Promise;\n  /** Callback for making a filter for the given search query. */\n  @Input() makeFilter: (searchQuery: string) => F;\n  /** Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter. */\n  @Input() scoreKeys: string[];\n  /** Set editable to false to just display items in the set, without being able to edit them. */\n  @Input() editable = true;\n  /** Set to override the “no results” text in the dialog. Appears only when there is no search query. */\n  @Input() emptySuggestionsLabel = 'No suggestions';\n  /** Set to override the “no results” text in the dialog. Appears when there is a search query. */\n  @Input() emptyResultsLabel = 'No results';\n  /** Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server. */\n  @Input() hydrate: Promise>;\n  /** Additional operations available from the set editor. */\n  @Input() itemOps: ItemOps = 'none';\n\n  /** Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set. */\n  @Input() createItem: () => Promise;\n  /** Callback to edit an item. */\n  @Output() editItem = new EventEmitter();\n  /** Callback to delete an item. */\n  @Output() deleteItem = new EventEmitter();\n\n  /** @ignore */\n  @ViewChild('titleText') titleText: ElementRef;\n  /** @ignore */\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  /** @ignore */\n  public listSet$: DataList;\n  /** @ignore */\n  private listSetSub: Subscription;\n\n  /**\n   * @ignore\n   * If true, the listSet$ variable is null and listSet contains an array of node IDs.\n   */\n  public isLocalSet = false;\n\n  constructor(\n    private dataService: DataService,\n    private dialogService: MatDialog\n  ) {}\n\n  /** @ignore */\n  reloadListSet() {\n    if (Array.isArray(this.listSet)) {\n      this.isLocalSet = true;\n      if (this.listSet$) {\n        this.listSetSub.unsubscribe();\n        this.listSet$ = null;\n      }\n    } else {\n      this.isLocalSet = false;\n      this.listSet$ = this.dataService.getList(this.listSet);\n      this.listSetSub = this.listSet$.subscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.reloadListSet();\n    if (this.hydrate && this.listSet$) {\n      this.listSet$.hydrateInitial(this.hydrate);\n    }\n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.listSet) {\n      const newValue = changes.listSet.currentValue;\n      if (this.isLocalSet !== (typeof newValue !== 'string')) {\n        this.reloadListSet();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n  }\n\n  /**\n   * @ignore\n   * This method is needed to satisfy static type checking bounds\n   */\n  getListSetLength(): number {\n    if (this.isLocalSet) {\n      return (this.listSet as NodeId[]).length;\n    }\n    throw new Error('bad state');\n  }\n\n  /** @ignore */\n  private onDialogApplyChangeset = (additions: NodeId[], deletions: NodeId[]): Promise => {\n    return this.applyChangeset(additions, deletions);\n  }\n\n  /** @ignore */\n  private onDialogCreateItem = () => this.createItem();\n  /** @ignore */\n  private onDialogEditItem = (item) => this.editItem.emit(item);\n  /** @ignore */\n  private onDialogDeleteItem = (item) => this.deleteItem.emit(item);\n\n  /**\n   * @internal\n   * Opens the editor dialog.\n   */\n  beginEditing() {\n    this.dialogService.open>(SetEditorDialogComponent, {\n      width: '400px',\n      data: {\n        title: this.titleText?.nativeElement.textContent || '',\n        listSet: this.listSet,\n        listAll: this.listAll,\n        itemTemplate: this.itemTemplate,\n        applyChangeset: this.onDialogApplyChangeset,\n        makeFilter: this.makeFilter,\n        scoreKeys: this.scoreKeys,\n        emptySuggestionsLabel: this.emptySuggestionsLabel,\n        emptyResultsLabel: this.emptyResultsLabel,\n        createItem: this.itemOps.includes('create') ? this.onDialogCreateItem : null,\n        editItem: this.itemOps.includes('edit') ? this.onDialogEditItem : null,\n        deleteItem: this.itemOps.includes('delete') ? this.onDialogDeleteItem : null\n      } as SetEditorDialogData\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            settings\n        \n    \n    \n        \n            \n                \n                    \n                        \n                    \n                \n            \n        \n        \n            \n                \n            \n            \n                ...\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor.component.scss\n                \n                :host {\n  display: block;\n}\n\n.app-set-editor {\n  .set-editor-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-height: 36px;\n\n    .title-text-container {\n      font-weight: bold;\n      line-height: 1.5;\n    }\n  }\n\n  .items-empty {\n    opacity: 0.5;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    settings                                                                                                                                                                                                                                    ...                                                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorDialogComponent.html":{"url":"components/SetEditorDialogComponent.html","title":"component - SetEditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is an internal component used in the set editor.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor-dialog\n            \n\n            \n                styleUrls\n                ./set-editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                additions\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                deletions\n                            \n                            \n                                    Public\n                                isLocalSet\n                            \n                            \n                                    Public\n                                listAll\n                            \n                            \n                                    Public\n                                listSet$\n                            \n                            \n                                    Private\n                                listSetSub\n                            \n                            \n                                    Public\n                                localSet\n                            \n                            \n                                    Public\n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                createItem\n                            \n                            \n                                getEncodedId\n                            \n                            \n                                getNodeId\n                            \n                            \n                                isInSet\n                            \n                            \n                                searchQueryDidChange\n                            \n                            \n                                toggleInSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, notifyService: UserNotifyService, dialogRef: MatDialogRef>, data: SetEditorDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:211\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    SetEditorDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createItem\n                        \n                    \n                \n            \n            \n                \ncreateItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncodedId\n                        \n                    \n                \n            \n            \n                \ngetEncodedId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeIdEnc\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNodeId\n                        \n                    \n                \n            \n            \n                \ngetNodeId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInSet\n                        \n                    \n                \n            \n            \n                \nisInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQueryDidChange\n                        \n                    \n                \n            \n            \n                \nsearchQueryDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInSet\n                        \n                    \n                \n            \n            \n                \ntoggleInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        additions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:209\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SetEditorDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deletions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLocalSet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:204\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultiSourceList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:207\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listSet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listSetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:208\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeIdEnc[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:205\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:211\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    {{data.title}}\n    \n        \n            \n                Search\n                search\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n\n                    \n                        \n                            \n                                \n                                    Edit\n                                \n                                \n                                    Delete\n                                \n                            \n                        \n                        \n                            more_vert\n                        \n                    \n                \n            \n            \n                \n                    \n                    \n                    \n                    \n                \n                Use search to find more items\n            \n            \n                \n                    {{data.emptyResultsLabel}}\n                \n                \n                    {{data.emptySuggestionsLabel}}\n                \n            \n            \n                \n                    add\n                    Create new\n                \n            \n        \n    \n    \n        \n            Cancel\n        \n        \n            Apply\n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor-dialog.component.scss\n                \n                .set-editor-dialog {\n  .dialog-search {\n    .search-field {\n      width: 100%;\n    }\n  }\n\n  .dialog-items {\n    margin-bottom: 16px;\n\n    .selectable-item {\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\n      display: flex;\n\n      &:first-child {\n        border-top: none;\n      }\n\n      .inner-checkbox {\n        display: block;\n        flex: 1;\n        padding: 8px 16px;\n      }\n    }\n\n    .items-more {\n      text-align: center;\n      opacity: 0.7;\n      font-size: smaller;\n\n      .more-dots {\n        display: block;\n        margin-bottom: 4px;\n\n        .dot {\n          display: block;\n          width: 4px;\n          height: 4px;\n          border-radius: 2px;\n          background: currentColor;\n          margin: 0 auto 3px auto;\n\n          &:nth-child(2) { opacity: 0.6; }\n          &:nth-child(3) { opacity: 0.27; }\n          &:nth-child(4) { opacity: 0.08; }\n        }\n      }\n    }\n\n    .items-empty {\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    .items-create {\n      text-align: center;\n      margin-top: 16px;\n      margin-bottom: 8px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{data.title}}                                        Search                search                                                                                                                                                                                                                                                                                    Edit                                                                                                    Delete                                                                                                                                        more_vert                                                                                                                                                                                                                    Use search to find more items                                                            {{data.emptyResultsLabel}}                                                    {{data.emptySuggestionsLabel}}                                                                            add                    Create new                                                                Cancel                            Apply            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetEditorDialogData.html":{"url":"interfaces/SetEditorDialogData.html","title":"interface - SetEditorDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetEditorDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applyChangeset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleteItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editItem\n                                        \n                                \n                                \n                                        \n                                            emptyResultsLabel\n                                        \n                                \n                                \n                                        \n                                            emptySuggestionsLabel\n                                        \n                                \n                                \n                                        \n                                            itemTemplate\n                                        \n                                \n                                \n                                        \n                                            listAll\n                                        \n                                \n                                \n                                        \n                                            listSet\n                                        \n                                \n                                \n                                        \n                                            makeFilter\n                                        \n                                \n                                \n                                        \n                                            scoreKeys\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applyChangeset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applyChangeset:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyResultsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptyResultsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptySuggestionsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptySuggestionsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemTemplate:     TemplateRef<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listAll:     ListId | SetMultiSource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | SetMultiSource\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listSet:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makeFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        makeFilter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scoreKeys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetMultiSource.html":{"url":"interfaces/SetMultiSource.html","title":"interface - SetMultiSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetMultiSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is used to source items from multiple sources in the set editor.\nstaticSources specifies lists whose items will always be loaded.\nsourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            listFromNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceNodes\n                                        \n                                \n                                \n                                        \n                                            staticSources\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listFromNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listFromNode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maps nodes from sourceNodes to lists from which items will be sourced.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceNodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceNodes:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of nodes that will be passed to listFromNode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticSources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticSources:         ListId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListId[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A static list of source lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /** @ignore */\n  public sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /** @ignore */\n  public sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsDialogComponent.html":{"url":"components/SettingsDialogComponent.html","title":"component - SettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/settings-dialog/settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-dialog\n            \n\n            \n                styleUrls\n                ./settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                mode\n                            \n                            \n                                modeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openAccessTokenSettings\n                            \n                            \n                                    Public\n                                openProfileSettings\n                            \n                            \n                                    Public\n                                switchTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openAccessTokenSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAccessTokenSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfileSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        switchTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    switchTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Dark Mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"dark_mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProfileSettingsDialogComponent } from '../profile-settings-dialog/profile-settings-dialog.component';\nimport { AccessTokenDialogComponent } from '../access-token-dialog/access-token-dialog.component';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.scss']\n})\nexport class SettingsDialogComponent implements OnInit {\n\n  mode = \"Dark Mode\"\n  modeIcon = \"dark_mode\"\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //open the dialog with profile settings\n  public openProfileSettings() {\n    this.dialogRef.close();\n    this.dialog.open(ProfileSettingsDialogComponent);\n  }\n\n  //open the dialog with access token settings\n  public openAccessTokenSettings() {\n    this.dialogRef.close();\n    this.dialog.open(AccessTokenDialogComponent);\n  }\n\n  //switch to dark mode / light mode (TODO)\n  public switchTheme() {\n\n    if(this.mode === 'Light Mode') { \n      this.mode = 'Dark Mode'\n    } else {\n      this.mode = 'Light Mode'\n    }\n\n    if(this.modeIcon === 'light_mode') { \n      this.modeIcon = 'dark_mode'\n    } else {\n      this.modeIcon = 'light_mode'\n    }\n\n    console.log('dark mode / light mode');\n  }\n\n}\n\n    \n\n    \n        \nSettings\n\n      \n        account_circle\n          Profile Settings\n      \n        token\n         Access Token\n      \n        {{modeIcon}}\n         {{mode}} \n\n    \n\n    \n                \n                    ./settings-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Settings              account_circle          Profile Settings              token         Access Token              {{modeIcon}}         {{mode}} '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/side-nav/side-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays and manages the sidemenu showing\nthe name of the current project at the top. Beneath it\nnavigation points e.g. 'Graph' are displayed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                defaultMenuTitle\n                            \n                            \n                                graphLink\n                            \n                            \n                                issuesLink\n                            \n                            \n                                membersLink\n                            \n                            \n                                    Public\n                                menuTitle\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                overviewLink\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ss: StateService, router: Router, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        defaultMenuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Menu'\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuesLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.defaultMenuTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserNotifyService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overviewLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {StateService} from '@app/state.service';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays and manages the sidemenu showing\n * the name of the current project at the top. Beneath it\n * navigation points e.g. 'Graph' are displayed.\n */\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent {\n  readonly defaultMenuTitle = 'Menu';\n  public menuTitle = this.defaultMenuTitle;\n  overviewLink = ['/'];\n  graphLink = ['/'];\n  issuesLink = ['/'];\n  membersLink = ['/'];\n\n  constructor(public ss: StateService,\n              public router: Router,\n              public notify: UserNotifyService) {\n    ss.state$.subscribe(appState => {\n      if (!appState.project) {\n        return;\n      }\n\n      if (appState.project.node) {\n        this.menuTitle = appState.project.node.name;\n        this.overviewLink = ['/projects', appState.project.node.id];\n        this.graphLink = ['/projects', appState.project.node.id, 'graph'];\n        this.issuesLink = ['/projects', appState.project.node.id, 'issues'];\n        this.membersLink = ['/projects', appState.project.node.id, 'members'];\n      } else {\n        this.router.navigate(['/']);\n        notify.notifyError('The specified project does not exist!');\n      }\n    });\n  }\n\n\n}\n\n    \n\n    \n        {{menuTitle}}\n\n    \n        info\n        Overview\n    \n    \n        account_tree\n        Graph\n    \n    \n        bug_report\n        Issues\n    \n    \n        group\n        Members\n    \n\n\n    \n\n    \n                \n                    ./side-nav.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\nmat-icon {\n  color: rgba(0, 0, 0, 0.54);\n  margin-right: 20px;\n  padding-left: 4px;\n}\n\n.list-item-active {\n  font-weight: bold;\n  background-color: mat-color($accent, 300) !important;\n}\n\nmat-nav-list {\n  padding-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{menuTitle}}            info        Overview                account_tree        Graph                bug_report        Issues                group        Members    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service exposes an observable of the name and id of the current project.\nIt determines the current project by listening for url changes and parsing the url.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isProjectURL\n                            \n                            \n                                syncStateWithUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, ps: ProjectStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isProjectURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProjectURL(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:57\n                \n            \n\n\n            \n                \n                    Caution:\nIf you change the routing you might have to change this function too.\nThat is if it has the form 'projects/:id' + further stuff.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff url is a route pertaining to a project\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncStateWithUrl\n                        \n                    \n                \n            \n            \n                \nsyncStateWithUrl(router: Router, ps: ProjectStoreService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\nurl referring to a project or not. If we are at a project we retrieve information about it\nfrom the backend and make it available in the state observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        allows to listen for routing events\n\n                                    \n                                \n                                \n                                    ps\n                                    \n                                                ProjectStoreService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDisplayComponent.html":{"url":"components/TextDisplayComponent.html","title":"component - TextDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/text-display/text-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\ntext\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-display\n            \n\n            \n                styleUrls\n                ./text-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editText\n                            \n                            \n                                showPlaceholder\n                            \n                            \n                                    Private\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishEditing\n                            \n                            \n                                startEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelText\n                            \n                            \n                                onEditFinished\n                            \n                            \n                                placeholder\n                            \n                            \n                                readonly\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:23\n                            \n                        \n                \n                    \n                        The title text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditFinished\n                    \n                \n                \n                    \n                        Type :         TextDisplayEditCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:21\n                            \n                        \n                \n                    \n                        A callback function.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:37\n                            \n                        \n                \n                    \n                        The placeholder will be shown if the content is empty\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:35\n                            \n                        \n                \n                    \n                        If true, the edit button is not shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                            \n                        \n                \n                    \n                        Sets the content of the text display, and shows the placeholder if the text is empty\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        finishEditing\n                        \n                    \n                \n            \n            \n                \nfinishEditing(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        value\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:30\n                                \n                            \n\n                \n                    \n                        settext(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                                \n                            \n                    \n                        \n                                Sets the content of the text display, and shows the placeholder if the text is empty\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * A callback function that is called once the user finishes editing the text.\n * @param saved true if the user clicked save, false if the user cancelled the editing\n */\nexport type TextDisplayEditCallbackFn = (saved: boolean) => void;\n\n\n/**\n * The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\n * text\n */\n@Component({\n  selector: 'app-text-display',\n  templateUrl: './text-display.component.html',\n  styleUrls: ['./text-display.component.scss']\n})\nexport class TextDisplayComponent {\n  /** A callback function. */\n  @Input() onEditFinished: TextDisplayEditCallbackFn;\n  /** The title text. */\n  @Input() labelText: string;\n  /** Sets the content of the text display, and shows the placeholder if the text is empty */\n  @Input() set text(value: string) {\n    this.value = value;\n    this.showPlaceholder = !value || value.length === 0;\n  }\n\n  get text() {\n    return this.value;\n  }\n\n  /** If true, the edit button is not shown */\n  @Input() readonly: boolean;\n  /** The placeholder will be shown if the content is empty */\n  @Input() placeholder = '';\n\n  private value;\n  editMode = false;\n  editText = '';\n  showPlaceholder = false;\n\n  finishEditing(saved: boolean): void {\n    this.editMode = false;\n    if (saved) {\n      this.text = this.editText;\n    }\n\n    if (this.onEditFinished) {\n      this.onEditFinished(saved);\n    }\n  }\n\n  startEditing() {\n    this.editText = this.text;\n    this.editMode = true;\n  }\n}\n\n    \n\n    \n        \n    \n        {{labelText}}\n        \n        \n            \n                save\n            \n            \n                cancel\n            \n        \n    \n\n\n\n    \n        \n            {{labelText}}\n        \n        \n            edit\n        \n        \n            \n                {{line.replace('\\n', '')}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./text-display.component.scss\n                \n                @import \"src/styles/variables\";\n\n.text-display-label-container {\n  position: relative;\n  width: fit-content;\n  height: .8em;\n  line-height: .8em;\n  padding: 0 2px 0 2px;\n  top: -.5em;\n  left: -1px;\n  background-color: #fafafa; // FIXME: Hardcoded background color\n  color: rgba(0, 0, 0, .6);\n  text-align: center;\n}\n\n.text-display-label {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: .8em;\n}\n\n.text-display-container {\n  margin-top: 10px;\n  padding: 0 8px 16px 8px;\n  width: 100%;\n  height: 100%;\n  border: 1px rgba(0, 0, 0, .2) solid;\n  border-radius: 4px;\n  word-break: break-all;\n  min-height: 60px;\n}\n\n.text-content-container {\n  padding-top: 8px;\n}\n\n.text-content-container-placeholder {\n  padding-top: 8px;\n  color: gray;\n  font-style: italic;\n}\n\n.text-edit-container{\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{labelText}}                                            save                                        cancel                                                {{labelText}}                            edit                                            {{line.replace(\\'\\n\\', \\'\\')}}                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextFragment.html":{"url":"interfaces/TextFragment.html","title":"interface - TextFragment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextFragment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeFormatter.html":{"url":"classes/TimeFormatter.html","title":"class - TimeFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/time-formatter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class contains functionality for time formatting which is needed for correct time representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                formatTimeDifference\n                            \n                            \n                                pluralize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:11\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-10-01T19:44:04.813Z) to\n(Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimeDifference\n                        \n                    \n                \n            \n            \n                \nformatTimeDifference(dateString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:19\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(n: number, singular: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:48\n                \n            \n\n\n            \n                \n                    Change singular form of a word into pluralized form if necessary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of entities\n\n                                    \n                                \n                                \n                                    singular\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        singular form of the word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TimeFormatter {\n\n  /**\n   * E.g. converts (2021-10-01T19:44:04.813Z) to\n   * (Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n   * @param time any string that can be parsed by `Date`\n   */\n  formatTime(time: string): string {\n    return new Date(time).toString();\n  }\n\n  /**\n   * E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n   * @param dateString any string that can be parsed by `Date`\n   */\n  formatTimeDifference(dateString: string): string {\n    const now = new Date();\n    const pastTime = new Date(dateString);\n\n    const months = (now.getMonth() - pastTime.getMonth()) + (now.getFullYear() - pastTime.getFullYear()) * 12;\n    const minutes = Math.round((+now - +pastTime) / 1000 / 60);\n    const hours = Math.round(minutes / 60);\n    const days = Math.round(hours / 24);\n\n    if (months >= 12) {\n      return this.pluralize(months / 12, 'year') + ' ago';\n    } else if (days >= 31) {\n      return this.pluralize(months, 'month') + ' ago';\n    } else if (hours >= 24) {\n      return this.pluralize(days, 'day') + ' ago';\n    } else if (minutes >= 60) {\n      return this.pluralize(hours, 'hour') + ' ago';\n    } else if (minutes >= 1) {\n      return this.pluralize(minutes, 'minute') + ' ago';\n    }\n\n    return 'just now';\n  }\n\n  /**\n   * Change singular form of a word into pluralized form if necessary.\n   * @param n number of entities\n   * @param singular singular form of the word\n   */\n  pluralize(n: number, singular: string): string {\n    return (n === 1 ? n + ' ' + singular : n + ' ' + singular + 's');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineCoalescedItemsDirective.html":{"url":"directives/TimelineCoalescedItemsDirective.html","title":"directive - TimelineCoalescedItemsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineCoalescedItemsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appCoalescedTimelineItems]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineItemComponent.html":{"url":"components/TimelineItemComponent.html","title":"component - TimelineItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelineItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides an easy method to switch between the different possible content types of a timeline item,\nsuch as single, coalesced or deleted.\nAdditionally, the formatted time is shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline-item\n            \n\n            \n                styleUrls\n                ../timeline.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timeline-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemContent\n                            \n                            \n                                timeFormatter\n                            \n                            \n                                timelineItemContent\n                            \n                            \n                                timelineItemDeletedContent\n                            \n                            \n                                timelineItemsContent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showDeleted\n                            \n                            \n                                timelineItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showDeleted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:56\n                            \n                        \n                \n                    \n                        If this option is set to true, the template with the appTimelineItemDeleted directive is shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        timelineItem\n                    \n                \n                \n                    \n                        Type :         CoalescedTimelineItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:54\n                            \n                        \n                \n                    \n                        The timeline item to show\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeFormatter\n\n                    \n                \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineSingleItemDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineSingleItemDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:59\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was not coalesced\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemDeletedContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineItemDeletedDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineItemDeletedDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:63\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item contains deleted data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemsContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineCoalescedItemsDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineCoalescedItemsDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:61\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was coalesced\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}\n    \n  \n\n\n    \n\n    \n                \n                    ../timeline.component.scss\n                \n                .timeline {\n  list-style: none;\n  margin: 0;\n  padding: 20px 0 20px;\n  position: relative;\n\n  &::before {\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    content: \" \";\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n    left: 35px;\n  }\n\n  & > li {\n    margin-bottom: 20px;\n    position: relative;\n    display: flex;\n    align-items: flex-start;\n\n    & > .timeline-badge {\n      color: #fff;\n      $size: 50px;\n      width: $size;\n      height: $size;\n      line-height: 50px;\n      font-size: 2.5em;\n      text-align: center;\n      position: relative;\n      top: 16px;\n      margin-left: calc(36px - (#{$size} / 2));\n      margin-right: 12px;\n      background-color: #999999;\n      z-index: 100;\n      border-radius: 50%;\n    }\n\n    & > .timeline-panel {\n      flex: 1;\n      border: 1px solid #d4d4d4;\n      border-radius: 2px;\n      padding: 20px;\n      position: relative;\n      -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n\n      &::before {\n        position: absolute;\n        top: 26px;\n        display: inline-block;\n        border-top: 15px solid transparent;\n        border-left: 15px solid #ccc;\n        border-right: 0 solid #ccc;\n        border-bottom: 15px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 15px;\n        left: -15px;\n        right: auto;\n      }\n\n      &::after {\n        position: absolute;\n        top: 27px;\n        display: inline-block;\n        border-top: 14px solid transparent;\n        border-left: 14px solid #fafafa;\n        border-right: 0 solid #fafafa;\n        border-bottom: 14px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 14px;\n        left: -14px;\n        right: auto;\n      }\n    }\n\n    & > .commentContainer {\n      flex: 1;\n      left: -36px;\n      z-index: 100;\n\n      ::ng-deep .timeline-item::before {\n        display: none; // hide duplicate line\n      }\n    }\n  }\n}\n.timeline-badge.warning {\n  background-color: #f0ad4e !important;\n}\n\n.timeline-badge.closed {\n  background-color: #ff0036 !important;\n}\n\n.timeline-badge.reopened {\n  background-color: #00ba39 !important;\n}\n\n.timeline-title {\n  margin-top: 0;\n  color: inherit;\n}\n\n.timeline-body > p,\n.timeline-body > ul {\n  margin-bottom: 0;\n}\n\n.timeline-body > p + p {\n  margin-top: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineItemDeletedDirective.html":{"url":"directives/TimelineItemDeletedDirective.html","title":"directive - TimelineItemDeletedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineItemDeletedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if the attribute showDeleted of the\nTimelineItemComponent is set to true.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTimelineItemDeleted]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineSingleItemDirective.html":{"url":"directives/TimelineSingleItemDirective.html","title":"directive - TimelineSingleItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineSingleItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was not coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appSingleTimelineItem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for showing the top bar containing the home icon\non the left-hand side and the mock settings and user icon as well as the functional\nlog out button on the right-hand side. It does NOT determine whether to show the sandwich\nmenu icon itself, but gets this information passed from FrameComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleClick\n                            \n                            \n                                    Public\n                                openSettingsDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showMenuButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showMenuButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSettingsDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSettingsDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '@app/dialogs/settings-dialog/settings-dialog.component';\n\n/**\n * This component is responsible for showing the top bar containing the home icon\n * on the left-hand side and the mock settings and user icon as well as the functional\n * log out button on the right-hand side. It does NOT determine whether to show the sandwich\n * menu icon itself, but gets this information passed from FrameComponent.\n */\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent {\n  @Input()\n  showMenuButton = false;\n\n  @Output()\n  public menuClick = new EventEmitter();\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthenticationService, private dialog: MatDialog) { }\n  \n  public handleClick() {\n    this.menuClick.emit();\n  }\n\n  public openSettingsDialog() {\n    this.dialog.open(SettingsDialogComponent);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n    home\n  \n  \n  \n  \n    \n      settings\n    \n    \n      account_circle\n    \n    \n      logout\n    \n  \n\n\n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                mat-toolbar {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n.mat-toolbar {\n  justify-content: space-between;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n#current-project {\n  font-size: 12px;\n  border: 3px solid white;\n  border-radius: 0.5em;\n  padding: 0 4px 0 4px;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu        home                  settings              account_circle              logout      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserItemComponent.html":{"url":"components/UserItemComponent.html","title":"component - UserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-item/user-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-item\n            \n\n            \n                styleUrls\n                ./user-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                noDisplay\n                            \n                            \n                                short\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        noDisplay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:16\n                            \n                        \n                \n                    \n                        Hides the display name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        short\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:14\n                            \n                        \n                \n                    \n                        Will show only the display name or username.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:12\n                            \n                        \n                \n                    \n                        The user data.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { User } from 'src/generated/graphql-dgql';\n\n/** This component displays a user. */\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.scss']\n})\nexport class UserItemComponent {\n  /** The user data. */\n  @Input() user: User;\n  /** Will show only the display name or username. */\n  @Input() short = false;\n  /** Hides the display name. */\n  @Input() noDisplay = false;\n}\n\n    \n\n    \n        \n  \n    {{user.displayName}}\n  \n    \n    {{user.username}}\n  \n\n\n    \n\n    \n                \n                    ./user-item.component.scss\n                \n                .display-name {\n  font-weight: 500;\n}\n.username {\n  &.has-display-name {\n    opacity: 0.7;\n  }\n  &:not(.has-display-name) {\n    font-weight: 500;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{user.displayName}}          {{user.username}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserNotifyService.html":{"url":"injectables/UserNotifyService.html","title":"injectable - UserNotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserNotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-notify/user-notify.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides functions for user notification\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifyError\n                            \n                            \n                                notifyInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-notify/user-notify.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notifyError\n                        \n                    \n                \n            \n            \n                \nnotifyError(message: string, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:33\n                \n            \n\n\n            \n                \n                    Notify the user that an error occurred\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optionally, the error. This will be logged in the console, if defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyInfo\n                        \n                    \n                \n            \n            \n                \nnotifyInfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:45\n                \n            \n\n\n            \n                \n                    Notify the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IndividualConfig, ToastrService} from 'ngx-toastr';\n\n/**\n * This service provides functions for user notification\n */\n@Injectable({providedIn: 'root'})\nexport class UserNotifyService {\n  /** @ignore */\n  private errorConfig: Partial = {\n    timeOut: 10000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  /** @ignore */\n  private infoConfig: Partial = {\n    timeOut: 4000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  constructor(private toastr: ToastrService) {\n  }\n\n  /**\n   * Notify the user that an error occurred\n   * @param message The message to be shown\n   * @param error Optionally, the error. This will be logged in the console, if defined.\n   */\n  notifyError(message: string, error?: Error) {\n    if (error !== undefined) {\n      console.log('Error:', error);\n    }\n\n    this.toastr.error(message, 'Error!', this.errorConfig);\n  }\n\n  /**\n   * Notify the user\n   * @param message The message to be shown\n   */\n  notifyInfo(message: string) {\n    this.toastr.info(message, 'Info', this.infoConfig);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qSearchUsers: SearchUsersGQL, qCurrentUser: CurrentUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qSearchUsers\n                                                  \n                                                        \n                                                                        SearchUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qCurrentUser\n                                                  \n                                                        \n                                                                        CurrentUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n            \n                \ncurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(filter: string | literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            string | literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  CurrentUserGQL,\n  SearchUsersGQL\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(\n    private qSearchUsers: SearchUsersGQL,\n    private qCurrentUser: CurrentUserGQL,\n  ) {}\n\n  searchUsers(filter: string | { username: string }) {\n    let query = '';\n    // filter accepts an object for compatibility with UserFilter\n    // FIXME: this is not very elegant of a solution\n    if (typeof filter === 'string') {\n      query = filter;\n    } else if (filter) {\n      query = filter.username;\n    }\n\n    if (!query) {\n      // searchUser does not work without a search string\n      return Promise.resolve([]);\n    }\n\n    return promisifyApolloFetch(this.qSearchUsers.fetch({ query })).then(data => data.searchUser);\n  }\n\n  currentUser() {\n    return promisifyApolloFetch(this.qCurrentUser.fetch());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vector.html":{"url":"classes/Vector.html","title":"class - Vector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple 2D vector class.\nThe value of this vector is essentially immutable, every operation returns a new vector!\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addSelf\n                            \n                            \n                                    Public\n                                distanceToLine\n                            \n                            \n                                    Public\n                                dot\n                            \n                            \n                                    Static\n                                isBehind\n                            \n                            \n                                    Public\n                                isZero\n                            \n                            \n                                    Public\n                                length\n                            \n                            \n                                    Public\n                                normalize\n                            \n                            \n                                    Public\n                                perpendicularClockwise\n                            \n                            \n                                    Public\n                                perpendicularCounterClockwise\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Public\n                                subtract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                            \n                        \n\n                \n                    \n                            Vector constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                X component, 0 by default\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Y component, 0 by default\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:64\n                \n            \n\n\n            \n                \n                    Add this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the sum of this vector and the other vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSelf(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:73\n                \n            \n\n\n            \n                \n                    Add another vector on this vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        This vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        distanceToLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    distanceToLine(sourcePoint: Vector, targetPoint: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:123\n                \n            \n\n\n            \n                \n                    Calculate the distance of a point, as represented by this vector, to a line, as defined by two other points.\nNote that the length of the line is infinite, and that this function calculates the distance to this infinitely\nlong line.\nIf this is not desired, the #isBehind function can be used to determine if a point is outside the defined\nline segment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourcePoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point of the line\n\n                                    \n                                \n                                \n                                    targetPoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point of the line\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The distance to the infinitely long line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:109\n                \n            \n\n\n            \n                \n                    Calculate the dot product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        dot(this, other)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBehind\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBehind(source: Vector, target: Vector, point: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:29\n                \n            \n\n\n            \n                \n                    Check if the vector pointing from source to point is pointing away more than 90 degrees to the vector pointing\nfrom the source to the target.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point, as a vector\n\n                                    \n                                \n                                \n                                    target\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point, as a vector\n\n                                    \n                                \n                                \n                                    point\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The point to check, as a vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        dot(target - source, point - source) \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isZero\n                        \n                    \n                \n            \n            \n                \n                    \n                    isZero()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:133\n                \n            \n\n\n            \n                \n                    Check if both components of this vector are zero\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is zero\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:47\n                \n            \n\n\n            \n                \n                    Length of the vector\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        normalize\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:55\n                \n            \n\n\n            \n                \n                    Normalize the vector\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, normalized vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:92\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularCounterClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularCounterClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:100\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the counter-clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        scale\n                        \n                    \n                \n            \n            \n                \n                    \n                    scale(factor: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:40\n                \n            \n\n\n            \n                \n                    Scale the vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    factor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scalar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, scaled vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        subtract\n                        \n                    \n                \n            \n            \n                \n                    \n                    subtract(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:84\n                \n            \n\n\n            \n                \n                    Subtract this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the difference of this vector and the other vector\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            antDesignIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            toasterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cache-node.component.ts\n            \n            component\n            CacheNodeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/cursor-paginator/cursor-paginator.component.ts\n            \n            component\n            CursorPaginatorComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-category/issue-category.component.ts\n            \n            component\n            IssueCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/issue-icon/issue-icon.component.ts\n            \n            component\n            IssueIconComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-item/issue-item.component.ts\n            \n            component\n            IssueItemComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            component\n            IssueLabelComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-location/issue-location.component.ts\n            \n            component\n            IssueLocationComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/item.directive.ts\n            \n            directive\n            ItemDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            component\n            SetEditorDialogComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            class\n            MultiSourceList\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetEditorDialogData\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetMultiSource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor.component.ts\n            \n            component\n            SetEditorComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/user-item/user-item.component.ts\n            \n            component\n            UserItemComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            NodeId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            nodeTypeFromTypename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            CURRENT_USER_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            ROOT_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/index.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            function\n            listParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            listQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            nodeQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryNode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/mutate.ts\n            \n            class\n            Mutations\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/components.service.ts\n            \n            injectable\n            ComponentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/issues.service.ts\n            \n            injectable\n            IssuesService\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/queries.service.ts\n            \n            injectable\n            QueriesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            interface\n            QueryListParams\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            function\n            promisifyApolloFetch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataList\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataNode\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataQuery\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            NodeCache\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_FAST_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_STALE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/component/component-store.service.ts\n            \n            injectable\n            ComponentStoreService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/data/interface/interface-store.service.ts\n            \n            injectable\n            InterfaceStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphDataFactory\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphIssue\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            interface\n            GraphData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            computeRelatedFolders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            issueCounts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            removeOfferingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-api.service.ts\n            \n            injectable\n            IssueGraphApiService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-state.service.ts\n            \n            injectable\n            IssueGraphStateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/data/issue/issue-store.service.ts\n            \n            injectable\n            IssueStoreService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            injectable\n            LabelStoreService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            function\n            isFilterLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/project/project-store.service.ts\n            \n            injectable\n            ProjectStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n            \n            component\n            AccessTokenDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n            \n            component\n            AddProjectMemberDialogComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            component\n            CreateComponentDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            interface\n            CreateComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            component\n            CreateInterfaceDialogComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            interface\n            CreateInterfaceData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            component\n            CreateIssueDialogComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            component\n            CreateEditLabelDialogComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            interface\n            CreateEditLabelDialogData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n            \n            component\n            CreateProjectDialogComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n            \n            component\n            ProfileSettingsDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            component\n            RemoveDialogComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n            \n            component\n            RemoveProjectMemberComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/settings-dialog/settings-dialog.component.ts\n            \n            component\n            SettingsDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createErrorLink\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            provideDefaultApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            providePublicApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            basic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            defaultOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            networkErrorToast\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            LayoutNode\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            Vector\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            function\n            doGraphLayout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            component\n            ComponentContextMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            injectable\n            ComponentContextMenuService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            interface\n            ComponentContextMenuData\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            variable\n            COMPONENT_CONTEXT_MENU_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n            \n            component\n            IssueGraphControlsComponent\n            \n                23 %\n                (4/17)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n            \n            injectable\n            IssueGraphClassSettersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n            \n            injectable\n            IssueGraphDynamicTemplateRegistryService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerBehaviour\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerParentBehaviour\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            function\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            ComponentNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            InterfaceNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueFolderNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueGroupContainerNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            Position\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            RelationEdge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createComponentNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createConsumptionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceProvisionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueFolderNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueGroupContainerNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createRelationEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            getIssueFolderId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            variable\n            zeroPosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            component\n            IssueGraphComponent\n            \n                62 %\n                (37/59)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            interface\n            Positions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n            \n            injectable\n            IssueGraphLinkHandlesService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            component\n            LabelSearchComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            FilterSelection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            TextFragment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/shared.ts\n            \n            interface\n            FilterState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-contents.component.ts\n            \n            component\n            IssueContentsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-detail.component.ts\n            \n            component\n            IssueDetailComponent\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-sidebar.component.ts\n            \n            component\n            IssueSidebarComponent\n            \n                2 %\n                (1/39)\n            \n        \n        \n            \n                \n                src/app/issue-detail/linked-issue-item.component.ts\n            \n            component\n            LinkedIssueItemComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/issue-detail/time-formatter.ts\n            \n            class\n            TimeFormatter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            component\n            TimelineItemComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineCoalescedItemsDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineItemDeletedDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineSingleItemDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            interface\n            CoalescedTimelineItem\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            component\n            IssueFilterComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            convertValueForFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            getDefaultForType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            listAllIssues\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            PREDICATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-list.component.ts\n            \n            component\n            IssueListComponent\n            \n                29 %\n                (8/27)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-editor/markdown-editor.component.ts\n            \n            component\n            MarkdownEditorComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-preview/markdown-preview.component.ts\n            \n            component\n            MarkdownPreviewComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/node-details-page/node-details-page.component.ts\n            \n            component\n            NodeDetailsPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/node-details/node-details.component.ts\n            \n            component\n            NodeDetailsComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/app/project-header/project-header.component.ts\n            \n            component\n            ProjectHeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/project-issue-list/project-issue-list.component.ts\n            \n            component\n            ProjectIssueListComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/project-list-component/project-list.component.ts\n            \n            component\n            ProjectListComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            interface\n            userMock\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/project-overview/project-overview.component.ts\n            \n            component\n            ProjectOverviewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            function\n            slideTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            variable\n            slider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            injectable\n            StateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/text-display/text-display.component.ts\n            \n            component\n            TextDisplayComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/user-notify/user-notify.service.ts\n            \n            injectable\n            UserNotifyService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            component\n            QueryComponent\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryBodyDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryButtonDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/validators.ts\n            \n            class\n            CCIMSValidators\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.13\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.13\n        \n            @angular/compiler : ^9.1.13\n        \n            @angular/core : ^9.1.13\n        \n            @angular/forms : ^9.1.13\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.13\n        \n            @angular/platform-browser-dynamic : ^9.1.13\n        \n            @angular/router : ^9.1.13\n        \n            @apollo/client : ^3.5.5\n        \n            @apollo/link-context : ^2.0.0-beta.3\n        \n            @clr/ui : ^4.0.16\n        \n            @github/time-elements : ^3.1.2\n        \n            @ng-select/ng-option-highlight : 0.0.5\n        \n            @ng-select/ng-select : ^4.0.4\n        \n            @primer/css : ^15.2.0\n        \n            @ustutt/grapheditor-webcomponent : ^0.6.2\n        \n            apollo-angular : ^2.6.0\n        \n            graphql : ^15.7.2\n        \n            monaco-editor : ^0.27.0\n        \n            ng-zorro-antd : ^9.3.0\n        \n            ngx-color-picker : ^10.1.0\n        \n            ngx-markdown : ^8.2.2\n        \n            ngx-monaco-editor : ^9.0.0\n        \n            ngx-toastr : ^13.2.1\n        \n            quick-score : ^0.0.12\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.14.1\n        \n            typescript-collections : ^1.3.3\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderEdgeTypes   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            ListType   (src/.../id.ts)\n                        \n                        \n                            NodeDetailsType   (src/.../node-details.component.ts)\n                        \n                        \n                            NodeType   (src/.../id.ts)\n                        \n                        \n                            NodeType   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            QueryComponentState   (src/.../query.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n            \n                \n                    \n                        \n                        folderEdgeTypes\n                    \n                \n                        \n                            \n                                 RelatedTo\n                            \n                        \n                        \n                            \n                                Value : relatedTo\n                            \n                        \n                        \n                            \n                                 Depends\n                            \n                        \n                        \n                            \n                                Value : dependency\n                            \n                        \n                        \n                            \n                                 Duplicates\n                            \n                        \n                        \n                            \n                                Value : duplicate\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                Value : component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n                        \n                            \n                                 InterfaceConsumer\n                            \n                        \n                        \n                            \n                                Value : interface-connect\n                            \n                        \n                        \n                            \n                                 IssueGroupContainer\n                            \n                        \n                        \n                            \n                                Value : issue-group-container\n                            \n                        \n            \n        \n\n    src/app/data-dgql/id.ts\n    \n        \n            \n                \n                    \n                        \n                        ListType\n                    \n                \n                    \n                        \n                            All list types represent their respective list queries in the backend API.\n\n                        \n                    \n                        \n                            \n                                 Projects\n                            \n                        \n                        \n                            \n                                 Components\n                            \n                        \n                        \n                            \n                                 ComponentInterfaces\n                            \n                        \n                        \n                            \n                                 Issues\n                            \n                        \n                        \n                            \n                                 IssuesOnLocation\n                            \n                        \n                        \n                            \n                                 IssueLocations\n                            \n                        \n                        \n                            \n                                 TimelineItems\n                            \n                        \n                        \n                            \n                                 Labels\n                            \n                        \n                        \n                            \n                                 Artifacts\n                            \n                        \n                        \n                            \n                                 Participants\n                            \n                        \n                        \n                            \n                                 Assignees\n                            \n                        \n                        \n                            \n                                 SearchUsers\n                            \n                        \n                        \n                            \n                                 LinkedIssues\n                            \n                        \n                        \n                            \n                                 LinkedByIssues\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                    \n                        \n                            Backend API node types.\nThe names should match the respective value of __typename in the GraphQL data for any given node.\n\n                        \n                    \n                        \n                            \n                                 Root\n                            \n                        \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 ComponentInterface\n                            \n                        \n                        \n                            \n                                 Issue\n                            \n                        \n                        \n                            \n                                 IssueTimelineItem\n                            \n                        \n                        \n                            \n                                 Label\n                            \n                        \n                        \n                            \n                                 Project\n                            \n                        \n                        \n                            \n                                 Artifact\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                 IssueComment\n                            \n                        \n            \n        \n\n    src/app/node-details/node-details.component.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeDetailsType\n                    \n                \n                    \n                        \n                            A node shown in the details component can either be a component or an interface\n\n                        \n                    \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n            \n        \n\n    src/app/utils/query-component/query.component.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryComponentState\n                    \n                \n                    \n                        \n                            The current state of the query\n\n                        \n                    \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                 Loading\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend for the Gropius system\nIntroduction to Gropius\nSoftware systems are usually built as component-based architectures. The whole idea behind this type of architecture is to decompose functionality into autonomous services. This results into components that are (almost) entirely self-contained and reusable, thus making the whole software developing process much easier.\nEven though component-based architectures have many benefits like ease of deployment, reusability and independence, there are also challenges that need to be resolved. One of the most critical occurs when different components are managed in different issue management systems (IMS). This can lead to issues (in one group of components) not having a direct link to the root issues (in another group of components) that caused them in the first place. Dependencies between components can thus cause bugs to propagate through the components along the call chain.\nGropius is a cross component issue management system (CCIMS) that solves the described problem by enabling direct dependency links over issues which are managed in different issue management systems.\nThe frontend\nAs already mentioned, the idea behind Gropius is to manage cross-component issues for component-based architectures. The system graphically models cross-component problems along with the system architecture. The graphical representation is similar to that of an UML component diagram.\nThe system consists of two different parts: 1. the frontend and 2. the backend.\nThe frontend is responsible for visualizing the part of the system the user can interact with aka. the graphical representation of components and issues and also different methods of managing them. Said methods include 1. creating components, interfaces and issues, 2. editing them, 3. analysing the current status of given issues and their propagation, etc. More about this can be found in the next point of this file.\nHere is a shot of the way Gropius visualizes a project:(TODO: put a picture that presents more features of Gropius at once...)\n\nAbout the documentation\n\nDevelopment server:run npm start and navigate to http://localhost:4200/.\n\n\nCode generation from .graphql files:run npm run generate.\n\n\nDocumentation:can be found on http://ccims.github.io/ccims-frontend.\n\n\nDocumentation generation:run npm run compodoc.p.s. If folder Additional documentation is not visible below Getting started, run compodoc -p tsconfig.doc.json --includes additional and then npm run compodoc.\n\n\nGropius features:can be found on Using Gropius.p.s. If running the documentation locally, then click here.\n\n\nProject structure, used technologies, mocked members page and more:can be found on Managing Gropius.p.s. If running the documentation locally, then click here.\n\n\nBackend:can be found on https://github.com/ccims/ccims-backend-gql.\n\n\nContributors:can be found on Contributors.p.s. If running the documentation locally, then click here.\n\n\nCredits\nFurther information regarding the members who have worked on the frontend of the system can be found on page Contributors located in the documentation.\nLicense\nThis part still needs to be specified.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumDictionary   (src/.../shared.ts)\n                        \n                        \n                            FilterElement   (src/.../label-search.component.ts)\n                        \n                        \n                            FilterLabel   (src/.../label-store.service.ts)\n                        \n                        \n                            GQLGraphComponent   (src/.../graph-data.ts)\n                        \n                        \n                            GQLInterface   (src/.../graph-data.ts)\n                        \n                        \n                            GQLIssue   (src/.../graph-data.ts)\n                        \n                        \n                            GraphFolder   (src/.../graph-data.ts)\n                        \n                        \n                            GraphLocation   (src/.../graph-data.ts)\n                        \n                        \n                            HydrateList   (src/.../query.ts)\n                        \n                        \n                            IssueListParams   (src/.../issues.service.ts)\n                        \n                        \n                            ItemFilterFunction   (src/.../timeline.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor-dialog.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor.component.ts)\n                        \n                        \n                            ListIdEnc   (src/.../id.ts)\n                        \n                        \n                            ListQueries   (src/.../load.ts)\n                        \n                        \n                            ListQueryInput   (src/.../load.ts)\n                        \n                        \n                            ListResult   (src/.../load.ts)\n                        \n                        \n                            LocalIssueData   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            LocationId   (src/.../graph-data.ts)\n                        \n                        \n                            MaybeLocalList   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            NodeIdEnc   (src/.../id.ts)\n                        \n                        \n                            NodeQueries   (src/.../load.ts)\n                        \n                        \n                            NodeQueryInput   (src/.../load.ts)\n                        \n                        \n                            NodeUpdatedCallbackFn   (src/.../node-details.component.ts)\n                        \n                        \n                            SelectedCategories   (src/.../shared.ts)\n                        \n                        \n                            TextDisplayEditCallbackFn   (src/.../text-display.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/shared.ts\n    \n    \n        \n            \n                \n                    \n                    EnumDictionary\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedCategories\n                \n            \n            \n                \n                            EnumDictionary\n\n                \n            \n        \n    \n    src/app/graphs/label-search/label-search.component.ts\n    \n    \n        \n            \n                \n                    \n                    FilterElement\n                \n            \n            \n                \n                    The bar can contain elements standing for labels and elements for text fragments.\n\n                \n            \n            \n                \n                            TextFragment | FilterLabel\n\n                \n            \n        \n    \n    src/app/data/label/label-store.service.ts\n    \n    \n        \n            \n                \n                    \n                    FilterLabel\n                \n            \n            \n                \n                        Pick\n\n                \n            \n        \n    \n    src/app/data/issue-graph/graph-data.ts\n    \n    \n        \n            \n                \n                    \n                    GQLGraphComponent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLInterface\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLIssue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphFolder\n                \n            \n            \n                \n                            [LocationId, IssueCategory]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphLocation\n                \n            \n            \n                \n                        GraphInterface | GraphComponent\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationId\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/data-dgql/query.ts\n    \n    \n        \n            \n                \n                    \n                    HydrateList\n                \n            \n            \n                \n                    List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/data-dgql/queries/issues.service.ts\n    \n    \n        \n            \n                \n                    \n                    IssueListParams\n                \n            \n            \n                \n                        QueryListParams\n\n                \n            \n        \n    \n    src/app/issue-detail/timeline/timeline.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemFilterFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor-dialog.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                    Types of item operations that may be made available.\n\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/data-dgql/id.ts\n    \n    \n        \n            \n                \n                    \n                    ListIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/data-dgql/load.ts\n    \n    \n        \n            \n                \n                    \n                    ListQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/issue-detail/issue-sidebar.component.ts\n    \n    \n        \n            \n                \n                    \n                    LocalIssueData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeLocalList\n                \n            \n            \n                \n                            ListId | T[]\n\n                \n            \n        \n    \n    src/app/node-details/node-details.component.ts\n    \n    \n        \n            \n                \n                    \n                    NodeUpdatedCallbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/text-display/text-display.component.ts\n    \n    \n        \n            \n                \n                    \n                    TextDisplayEditCallbackFn\n                \n            \n            \n                \n                    A callback function that is called once the user finishes editing the text.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userMock.html":{"url":"interfaces/userMock.html","title":"interface - userMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project-members/project-members.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            antDesignIcons   (src/.../app.module.ts)\n                        \n                        \n                            basic   (src/.../graphql.module.ts)\n                        \n                        \n                            CACHE_FAST_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_STALE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            COMPONENT_CONTEXT_MENU_DATA   (src/.../component-context-menu.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            CURRENT_USER_NODE   (src/.../id.ts)\n                        \n                        \n                            defaultOptions   (src/.../graphql.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            host   (src/.../environment.prod.ts)\n                        \n                        \n                            host   (src/.../environment.ts)\n                        \n                        \n                            icons   (src/.../app.module.ts)\n                        \n                        \n                            listAllIssues   (src/.../issue-filter.component.ts)\n                        \n                        \n                            listQueries   (src/.../load.ts)\n                        \n                        \n                            networkErrorToast   (src/.../graphql.module.ts)\n                        \n                        \n                            nodeQueries   (src/.../load.ts)\n                        \n                        \n                            PREDICATES   (src/.../issue-filter.component.ts)\n                        \n                        \n                            queryList   (src/.../load.ts)\n                        \n                        \n                            queryNode   (src/.../load.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROOT_NODE   (src/.../id.ts)\n                        \n                        \n                            slider   (src/.../route-animations.ts)\n                        \n                        \n                            toasterConfig   (src/.../app.module.ts)\n                        \n                        \n                            zeroPosition   (src/.../issue-graph-nodes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        antDesignIcons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AllIcons as {\n  [key: string]: IconDefinition;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(antDesignIcons).map(key => antDesignIcons[key])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toasterConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  maxOpened: 4,\n  autoDismiss: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n}\n                    \n                \n\n            \n                \n                    This modules purpose is to provide define functions returning configurations\nfor the automatic creation of ApolloClients for graphql communication with the backend.\nThe key functions are providePublicApollo and provideDefaultApollo. The apollo instance\nconstructed from providePublicApollo is only used for registering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networkErrorToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n}\n                    \n                \n\n            \n                \n                    Congiuration for network error toast on register page.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_FAST_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests until actually sending a request, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests, if the undefined flag is set, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_STALE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n            \n                \n                    Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added.\n\n                \n            \n\n        \n    \n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPONENT_CONTEXT_MENU_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('COMPONENT_CONTEXT_MENU_DATA')\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/data-dgql/id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.User, id: 'self' }\n                    \n                \n\n            \n                \n                    The special ID of the current user node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROOT_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.Root, id: '' }\n                    \n                \n\n            \n                \n                    The ID of the root node.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: `${host}/api`,\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: `${host}/api`,\n  // url for public api endpoint offering signup\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/app/issue-list/issue-filter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listAllIssues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n})\n                    \n                \n\n            \n                \n                    Returns the ListId for listing all project issues.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n}\n                    \n                \n\n            \n                \n                    List of all possible issue filter predicates.\nKeyed by their name, each predicate has a type, label,\nand possibly additional options depending on their type.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ListType.Projects]: {\n    [NodeType.Root]: (i, list, params) => i.q.projects.listProjects(listParams(params)).then(data => ({\n      totalCount: data.projects.totalCount,\n      pageInfo: data.projects.pageInfo,\n      items: i.c.insertNodes(data.projects.nodes),\n    })),\n  },\n  [ListType.Components]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Label]: (i, list, params) => i.q.issues.listLabelComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    }))\n  },\n  [ListType.ComponentInterfaces]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectInterfaces(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.interfaces.totalCount,\n      pageInfo: data.node.interfaces.pageInfo,\n      items: i.c.insertNodes(data.node.interfaces.nodes),\n    })),\n  },\n  [ListType.Issues]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n  },\n  [ListType.IssuesOnLocation]: {\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n    [NodeType.ComponentInterface]: (i, list, params) => i.q.issues.listComponentInterfaceIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n  },\n  [ListType.TimelineItems]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueTimelineItems(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.timeline.totalCount,\n        pageInfo: data.node.timeline.pageInfo,\n        items: i.c.insertNodes(data.node.timeline.nodes),\n      })),\n  },\n  [ListType.IssueLocations]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLocations(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.locations.totalCount,\n        pageInfo: data.node.locations.pageInfo,\n        items: i.c.insertNodes(data.node.locations.nodes),\n      }))\n  },\n  [ListType.Labels]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      }))\n  },\n  [ListType.Assignees]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueAssignees(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.assignees.totalCount,\n        pageInfo: data.node.assignees.pageInfo,\n        items: i.c.insertNodes(data.node.assignees.nodes)\n      }))\n  },\n  [ListType.LinkedIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinksToIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linksToIssues.totalCount,\n        pageInfo: data.node.linksToIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linksToIssues.nodes)\n      }))\n  },\n  [ListType.LinkedByIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinkedByIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linkedByIssues.totalCount,\n        pageInfo: data.node.linkedByIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linkedByIssues.nodes)\n      }))\n  },\n  [ListType.SearchUsers]: {\n    [NodeType.Root]: (i, list, params) => i.q.users.searchUsers(params.filter as (string | { username: string }))\n      .then(data => ({\n        totalCount: data.length,\n        pageInfo: {\n          startCursor: data[0]?.id || null,\n          endCursor: data[data.length - 1]?.id || null,\n          hasNextPage: false,\n          hasPreviousPage: false,\n        },\n        items: i.c.insertNodes(data)\n      }))\n  }\n}\n                    \n                \n\n            \n                \n                    Available list queries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [NodeType.Project]: (i, id) => i.q.projects.getProject(id).then(data => data.node),\n  [NodeType.Component]: (i, id) => i.q.components.getComponent(id).then(data => data.node),\n  [NodeType.ComponentInterface]: (i, id) => i.q.components.getInterface(id).then(data => data.node),\n  [NodeType.Issue]: (i, id) => i.q.issues.getIssueHeader(id).then(data => data.node),\n  [NodeType.User]: (i, id) => id === CURRENT_USER_NODE.id\n    ? i.q.users.currentUser().then(data => data.currentUser)\n    : Promise.reject(new Error('not implemented')),\n  [NodeType.Label]: (i, id) => i.q.issues.getLabel(id).then(data => data.node)\n}\n                    \n                \n\n            \n                \n                    Types of nodes that can be loaded directly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService, c: NodeCache) => async (\n  listId: ListId,\n  params: ListParams\n): Promise> => {\n  const { node, type } = listId;\n\n  if (!listQueries[type] || !listQueries[type][node.type]) {\n    throw new Error(`${NodeType[node.type]} has no list ${ListType[type]}`);\n  }\n\n  const i = { q, c };\n  return (await listQueries[type][node.type](i, { node, type }, params)) as ListResult;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryNode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService) => async (nodeId: NodeId): Promise => {\n  const { type, id } = nodeId;\n\n  if (!nodeQueries[type]) {\n    throw new Error(`${NodeType[type]} cannot be loaded directly`);\n  }\n\n  const i = { q };\n  return (await nodeQueries[type](i, id)) as T;\n}\n                    \n                \n\n            \n                \n                    Loads a node.\n\n                \n            \n\n        \n    \n\n    src/app/route-animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('routeAnimations', [\n    transition('* => isRight', slideTo('right')),\n  ])\n                    \n                \n\n            \n                \n                    Describes an animation of sliding to to the right, used for the entry of the ComponentDetails component\n\n                \n            \n\n        \n    \n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zeroPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {x: 0, y: 0}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-gropius.html":{"url":"additional-documentation/using-gropius.html","title":"additional-page - Using Gropius","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the Project\nThis page lists all the features of the Gropius system and provides a description of how they can be used. In addition, the use of the features is visualized with pictures.\nCreating, Filtering and Deleting Projects\nThe main page contains a list of projects. To create a new project, click the \"Create Project\" button and enter a name and description (optional) for the project. \nThe search field above the project list allows to search for projects and filter the list. \nOnce a project is selected, the project overview is opened. After clicking on \"Delete project\" a confirmation is expected. \nA direct link to the project's component diagram is provided on the right side of each project item in the project list.\n\n\n\n\nProject Overview\nThe \"Project Overview\" view contains the name and ID of the current project, the description that can be edited as well as the \"Delete Project\" button.\n\n\n\n\nGraph and Components\nThe graph of the project represents all components, issues (bugs, feature requests and unclassified issues), interfaces and relations between entities. \nIn the upper left corner there are filters that allow the user to hide different types of issues (bugs, feature requests and unclassified issues) or issue connections to get a better visualization of the components and interfaces. \nIn the upper right corner there is a button to create new components. The user is required to provide a name, repository URL, provider type (IMS), IMS-URL, and description (optional) for the component to be created.   \n\n\n\n\nA new interface is created by connecting two components. The user is expected to provide a name, a type, and optionally a description of the interface.\n \nClicking on a component displays a popup window with a list of issues and details associated with the current component. There, new issues can be created for this component (\"Create issue\" button), issues can be filtered, the details can be edited and the component can be deleted. \nClicking on an interface displays a pop-up window with the interface details and the issues associated with that interface. The \"Create Issue\" button can be used to create new issues associated with this interface.  \n\n\n\n\nIssues (Component Issues and Inteface Issues)\nAn issue can be a bug, a feature request, and an unclassified issue. Issues can be created for interfaces and for components in the component / interface pop-up. The user is expected to specify the issue title, type (bug, feature request, or unclassified), associated components, issue location, labels, assignees (not yet functional), and linked issues. Each of these fields is optional, except for the issue title. New labels for the issues can also be created.\n\n\n\n\n\nThe issues are also displayed as a list in a separate view. Said view is either displayed as a component / interface pop-up, or it is shown in page \"Issues\". Each issue has a title, author, assignees, labels and a category. The list of issues can be filtered so that specific ones will be targeted. After selecting an issue, its details are displayed on its own issue details page. There the issue can be edited, commented and closed. What's more, the details page for each issue includes a timeline, more about which can be found in section Timeline. \n\n\n\n\n\nTimeline\nAfter an issue is selected in page \"Issues\", the issue details page for the corresponding issue opens. There the issue can be managed. All changes made to the issue are reflected on its own timeline. In a way, the timeline visualizes the whole lifecycle of an issue, including: a) when it has been created, b) who and how has edited it, c) who has commented it, d) what labels have been assigned to it, e) which user has been assigned to it, f) to which other issue / component / interface it has been linked and finally g) who has closed it.\n\n\n\n\n\nAuthentication\nTo use the app, the user must first sign up (if no account has been created yet) and then log in to the corresponding account. The sign up form requires a username, email and password. More details about the user's account can be managed in the settings menu once the user has logged in.  \n\n\n\n\nMocked Members Page\nEvery project offers a mocked \"Members\" page. It shows a list of users in the project and\noffers a dialog to add users. However, this area is purely a mock, changes are not persistent\nand there are no other users who have access to the currently handled project.\n\n\n\n\nMocked Settings Menu\nThe application contains a mocked settings menu. The menu includes profile settings to update the display name, username, email and password. What's more, there is an option to create an access token and a \"Dark Mode\" option. However, the menu is purely a mock and changes are not persistent, nor are the latter two features functioning.\n \n \n\n\n \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/managing-gropius.html":{"url":"additional-documentation/managing-gropius.html","title":"additional-page - Managing Gropius","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManaging the Project\nDevelopment server\nThis project was generated with Angular CLI version 9.1.12.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nProject structure\nHave a look at the routing module to get a nice overview\nof the primary components of the app.\n\n\n\nAspect\nCode\n\n\n\n\nApp Layout\nFrameComponent\n\n\nGraph\nGraphsModule, look at the declarations\n\n\nProject Context\nStateService\n\n\nAccount Management and Auth with Backend\nLoginComponent, RegisterComponent, AuthenticationService, AuthGuard\n\n\nApollo GraphQL Client Setup\nGraphQLModule\n\n\nType Definitions for Data from Backend  Helper Objects for Queries & Mutations  All of this is output of code generator\ngenerated\n\n\n\nDocumentation generation\nThe documentation is generated with Compodoc. Run npm run compodocfor a documentation server. Navigate to http://localhost:6060/. The documentation will automatically reload if you change any of the source files. The configuration for the documentation is managed in tsconfig.doc.json.\nCode generation from .graphql files\nThe app uses GraphQL instead of REST to communicate with the backend. The graphql files are in the\ndata folder and subdivided by entities they pertain to e.g. label \nWhen you change .graphql files you have to rerun the code generator. It will update the files in\nsrc/generated to match the changes in the .graphql files.:warning: The backend has to be running with debugNoLogin set to true to make the backend schema\ndefinition accessible to the generator via the urls defined in the codegen configuration file.Run npm run generate to execute the codegenerator when this condition is met.\nCode generator explanation\nWe use a codegenerator (https://graphql-code-generator.com/) to create typescript classes from .graphql files\ncontaining queries and mutations. One class per query/mutation. We then use dependency injection to inject objects of theses classes \ninto e.g. services via dependency injection. These objects make it easy to parameterize the mutations and queries and\ninvoke them in typescript code.\nMocked Members Page\nEvery project offers a mocked 'Members' page. It shows a list of users in the project and\noffers a dialog to add users. However this area is purely a mock, changes are not persisted\nand there are no other users who really have access to your project.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributors.html":{"url":"additional-documentation/contributors.html","title":"additional-page - Contributors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributors\nFrontend Team\n\nFabian Danner\n\nJimmy Wagner\n\nKliment Klimentov\n\nKristina Pencheva\n\nMoritz Pfeffer\n\nTill Mayer\n\nVincent Brandt\n\n\nOthers\n...\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
