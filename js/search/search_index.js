var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessTokenDialogComponent.html",[0,0.084,1,0.945]],["body/components/AccessTokenDialogComponent.html",[0,0.143,1,1.613,2,0.85,3,0.105,4,0.096,5,0.785,6,1.093,7,1.071,8,1.028,9,0.087,10,7.418,11,1.882,12,6.321,13,1.935,14,1.305,15,2.01,16,0.947,17,1.434,18,1.367,19,1.832,20,1.465,21,0.972,22,3.112,23,0.972,24,2.75,25,0.114,26,0.567,27,1.465,28,3.423,29,3.968,30,0.85,31,6.896,32,7.782,33,0.705,34,2.696,35,3.388,36,3.423,37,0.738,38,6.424,39,0.52,40,0.008,41,0.542,42,0.16,43,0.421,44,4.22,45,0.719,46,1.099,47,3.383,48,4.22,49,0.363,50,0.872,51,0.736,52,6.424,53,0.19,54,0.352,55,1.464,56,0.123,57,0.012,58,1.674,59,0.72,60,1.317,61,2.154,62,1.538,63,2.511,64,1.986,65,5.693,66,7.782,67,6.424,68,6.312,69,5.693,70,3.507,71,6.424,72,4.563,73,7.71,74,4.563,75,3.94,76,4.851,77,2.826,78,2.363,79,4.851,80,2.99,81,2.429,82,2.803,83,4.763,84,1.887,85,2.311,86,3.596,87,0.546,88,1.059,89,1.887,90,2.921,91,1.713,92,1.071,93,1.278,94,1.252,95,0.819,96,1.715,97,1.071,98,2.005,99,0.967,100,0.837,101,1.023,102,1.332,103,0.987,104,1.071,105,0.987,106,0.947,107,1.071,108,0.987,109,1.071,110,0.928,111,0.947,112,0.978,113,0.967,114,0.928,115,1.082,116,1.635,117,0.947,118,0.079,119,0.967,120,0.96,121,0.987,122,0.987,123,0.891,124,1.071,125,0.947,126,1.071,127,0.987,128,1.071,129,0.987,130,1.071,131,0.967,132,1.071,133,0.967,134,1.071,135,0.689,136,1.071,137,0.967,138,0.469,139,1.071,140,0.987,141,1.071,142,0.987,143,1.635,144,0.987,145,1.071,146,0.987,147,1.635,148,0.987,149,1.071,150,1.008,151,1.071,152,0.947,153,1.071,154,0.987,155,1.071,156,0.947,157,0.909,158,1.071,159,0.987,160,1.387,161,1.445,162,0.987,163,1.071,164,0.947,165,0.533,166,1.071,167,0.967,168,0.987,169,1.05,170,0.987,171,1.071,172,0.967,173,0.967,174,0.947,175,1.071,176,0.967,177,1.071,178,0.909,179,0.769,180,0.947,181,1.071,182,0.947,183,1.252,184,0.967,185,0.987,186,0.633,187,0.928,188,0.752,189,0.987,190,0.987,191,0.967,192,1.071,193,0.987,194,0.909,195,1.071,196,0.987,197,1.071,198,0.928,199,0.967,200,0.987,201,0.909,202,1.071,203,0.987,204,0.659,205,0.928,206,0.967,207,1.071,208,0.947,209,1.071,210,0.947,211,1.071,212,0.928,213,1.071,214,0.928,215,1.071,216,0.928,217,1.008,218,1.071,219,0.005,220,0.005]],["title/components/AddProjectMemberDialogComponent.html",[0,0.084,99,0.926]],["body/components/AddProjectMemberDialogComponent.html",[0,0.151,1,0.931,2,0.816,3,0.099,4,0.091,5,0.74,6,1.031,7,1.01,8,0.97,9,0.082,11,0.893,13,1.825,14,1.253,15,1.95,16,0.893,17,1.431,18,1.364,19,0.893,20,1.279,21,0.933,22,3.019,23,0.933,24,2.643,25,0.107,26,0.545,27,1.341,28,3.34,30,0.816,33,0.664,34,2.543,35,3.166,37,0.791,39,0.49,40,0.008,41,0.532,42,0.155,43,0.397,44,3.98,45,0.691,46,1.067,50,1.391,51,1.174,53,0.208,54,0.332,55,1.381,56,0.116,57,0.011,58,1.578,60,1.241,62,1.306,63,2.368,77,3.102,78,1.991,82,3.632,84,1.779,85,1.616,87,0.871,88,0.74,89,2.446,92,1.01,93,1.228,94,1.203,95,0.772,96,1.674,97,1.01,98,1.982,99,1.542,100,1.605,101,1.125,102,1.975,103,0.931,104,1.01,105,0.931,106,0.893,107,1.01,108,0.931,109,1.01,110,0.875,111,0.893,112,0.959,113,0.912,114,0.875,115,1.039,116,1.586,117,0.893,118,0.074,119,0.912,120,0.953,121,0.931,122,0.931,123,0.84,124,1.01,125,0.893,126,1.01,127,0.931,128,1.01,129,0.931,130,1.01,131,0.912,132,1.01,133,0.912,134,1.01,135,0.65,136,1.01,137,0.912,138,0.442,139,1.01,140,0.931,141,1.01,142,0.931,143,1.586,144,0.931,145,1.01,146,0.931,147,1.586,148,0.931,149,1.01,150,0.95,151,1.01,152,0.893,153,1.01,154,0.931,155,1.01,156,0.893,157,0.857,158,1.01,159,0.931,160,1.333,161,1.388,162,0.931,163,1.01,164,0.893,165,0.503,166,1.01,167,0.912,168,0.931,169,0.99,170,0.931,171,1.01,172,0.912,173,0.912,174,0.893,175,1.01,176,0.912,177,1.01,178,0.857,179,0.725,180,0.893,181,1.01,182,0.893,183,1.203,184,0.912,185,0.931,186,0.608,187,0.875,188,0.709,189,0.931,190,0.931,191,0.912,192,1.01,193,0.931,194,0.857,195,1.01,196,0.931,197,1.01,198,0.875,199,0.912,200,0.931,201,0.857,202,1.01,203,0.931,204,0.622,205,0.875,206,0.912,207,1.01,208,0.893,209,1.01,210,0.893,211,1.01,212,0.875,213,1.01,214,0.875,215,1.01,216,0.875,217,0.95,218,1.01,219,0.005,220,0.005,221,7.808,222,6.259,223,0.375,224,2.574,225,3.753,226,4.661,227,6.173,228,1.939,229,4.385,230,3.369,231,1.19,232,2.794,233,6.25,234,6.25,235,7.053,236,4.299,237,5.734,238,5.47,239,3.19,240,3.98,241,1.975,242,2.09,243,5.47,244,1.36,245,4.491,246,3.408,247,3.753,248,3.643,249,1.873,250,2.09,251,1.694,252,2.031,253,4.491,254,4.491,255,0.541,256,4.491,257,3.98,258,3.98,259,5.007,260,5.007,261,5.47,262,1.654,263,1.654,264,5.007,265,2.88,266,3.391,267,3.98,268,3.98,269,2.09,270,2.88,271,1.975,272,2.386,273,3.391,274,3.19]],["title/components/AppComponent.html",[0,0.084,103,0.945]],["body/components/AppComponent.html",[0,0.146,1,1.031,2,0.875,3,0.109,4,0.1,5,0.82,6,1.142,7,1.119,8,1.074,9,0.091,11,0.99,16,0.99,17,1.436,18,1.369,19,0.99,20,0.838,21,1,23,1,25,0.119,26,0.584,33,0.736,37,0.601,39,0.543,40,0.008,41,0.549,42,0.181,43,0.439,49,0.379,50,0.911,51,1.224,53,0.219,54,0.367,56,0.128,57,0.013,59,0.752,62,1.399,88,0.82,92,1.119,93,1.316,94,1.289,95,0.856,96,1.745,97,1.119,98,2.021,99,1.01,100,1.162,101,1.033,102,1.371,103,1.642,104,1.119,105,1.031,106,0.99,107,1.119,108,1.031,109,1.119,110,0.97,111,0.99,112,0.993,113,1.01,114,0.97,115,1.114,116,1.672,117,0.99,118,0.082,119,1.01,120,0.971,121,1.031,122,1.031,123,0.93,124,1.119,125,0.99,126,1.119,127,1.031,128,1.119,129,1.031,130,1.119,131,1.01,132,1.119,133,1.01,134,1.119,135,0.72,136,1.119,137,1.01,138,0.49,139,1.119,140,1.031,141,1.119,142,1.031,143,1.672,144,1.031,145,1.119,146,1.031,147,1.672,148,1.031,149,1.119,150,1.053,151,1.119,152,0.99,153,1.119,154,1.031,155,1.119,156,0.99,157,0.95,158,1.119,159,1.031,160,1.428,161,1.488,162,1.031,163,1.119,164,0.99,165,0.557,166,1.119,167,1.01,168,1.031,169,1.096,170,1.031,171,1.119,172,1.01,173,1.01,174,0.99,175,1.119,176,1.01,177,1.119,178,0.95,179,0.803,180,0.99,181,1.119,182,0.99,183,1.289,184,1.01,185,1.031,186,0.652,187,0.97,188,0.786,189,1.031,190,1.031,191,1.01,192,1.119,193,1.031,194,0.95,195,1.119,196,1.031,197,1.119,198,0.97,199,1.01,200,1.031,201,0.95,202,1.119,203,1.031,204,0.689,205,0.97,206,1.01,207,1.119,208,0.99,209,1.119,210,0.99,211,1.119,212,0.97,213,1.119,214,0.97,215,1.119,216,0.97,217,1.053,218,1.119,219,0.006,220,0.006,244,1.096,255,1.058,275,4.409,276,1.99,277,7.431,278,6.615,279,2.335,280,4.975,281,8.478,282,8.652,283,6.615,284,4.452,285,4.035,286,3.757,287,3.534,288,0.97,289,4.975,290,4.995,291,2.459,292,4.975,293,4.995,294,3.534,295,4.975,296,3.269,297,4.975,298,4.975,299,4.975,300,4.975,301,4.975,302,3.757,303,4.035,304,5.611,305,3.361,306,2.623,307,2.385,308,3.757,309,7.431,310,0.803,311,4.66,312,2.283,313,2.385,314,4.975,315,4.975,316,4.975,317,4.241,318,4.035,319,6.615,320,5.862,321,4.975,322,4.975,323,4.975]],["title/modules/AppModule.html",[324,3.069,325,3.443]],["body/modules/AppModule.html",[0,0.11,1,1.684,3,0.095,4,0.087,9,0.079,11,1.195,12,3.26,18,0.611,40,0.008,49,0.329,53,0.286,54,0.319,55,1.327,56,0.111,57,0.011,62,1.271,101,0.955,102,1.245,103,1.847,108,1.684,110,1.584,111,1.616,113,1.65,114,0.841,115,1.011,117,1.616,118,0.099,119,1.65,120,0.843,121,1.684,125,1.616,129,1.684,131,1.65,154,1.684,157,1.551,159,1.684,160,0.932,162,1.684,164,1.616,167,1.65,168,1.684,173,1.65,176,1.65,180,1.616,182,1.616,184,1.65,188,0.682,189,1.684,190,1.684,191,0.877,193,1.684,196,1.684,198,1.584,200,1.684,201,0.824,212,1.584,214,1.584,216,1.584,219,0.005,220,0.005,251,1.629,255,0.832,272,1.669,285,3.502,286,4.535,287,3.067,296,2.134,302,4.535,310,0.697,313,2.069,325,7.327,326,2.648,327,4.043,328,3.826,329,3.826,330,3.826,331,3.826,332,5.772,333,5.469,334,5.469,335,4.535,336,2.648,337,3.502,338,4.872,339,4.535,340,6.007,341,5.323,342,6.121,343,5.323,344,4.535,345,4.318,346,4.318,347,5.323,348,3.826,349,6.007,350,3.067,351,5.323,352,3.826,353,5.323,354,4.267,355,5.323,356,3.826,357,5.323,358,5.323,359,3.826,360,5.323,361,3.826,362,4.043,363,5.323,364,5.323,365,3.826,366,0.951,367,3.26,368,3.502,369,3.26,370,3.826,371,3.502,372,4.318,373,3.502,374,4.318,375,4.318,376,5.323,377,3.067,378,3.535,379,3.826,380,4.318,381,5.323,382,5.323,383,6.007,384,3.55,385,6.121,386,4.318,387,6.007,388,6.007,389,4.318,390,6.007,391,3.826,392,5.323,393,6.007,394,6.007,395,4.318,396,6.121,397,2.541,398,5.323,399,4.318,400,3.502,401,4.318,402,4.318,403,3.826,404,3.826,405,3.826,406,2.276,407,3.879,408,4.138,409,5.323,410,3.826,411,5.323,412,3.826,413,2.357,414,5.323,415,3.826,416,6.007,417,4.318,418,4.318,419,3.826,420,5.304,421,3.26,422,6.007,423,2.541,424,6.121,425,5.323,426,4.872,427,2.357,428,5.323,429,2.648,430,3.502,431,6.007,432,3.502,433,3.502,434,3.067,435,3.502,436,6.007,437,3.26,438,3.826,439,3.279,440,2.768,441,3.826,442,3.851,443,2.444,444,2.906,445,4.318,446,3.502,447,6.007,448,3.502,449,3.826,450,4.318,451,3.502,452,4.318,453,3.067,454,4.318,455,2.504,456,3.26,457,3.826,458,4.318,459,3.26,460,4.318,461,5.323,462,3.77,463,3.826,464,3.502,465,4.872,466,3.826,467,3.26,468,4.318,469,3.26,470,4.318,471,2.906,472,4.318,473,3.502,474,3.826,475,3.826,476,3.826,477,4.318,478,3.502,479,3.826,480,4.318,481,3.502,482,2.768,483,3.826,484,2.906,485,3.826,486,4.318,487,4.318,488,4.318,489,3.502,490,3.851,491,5.323]],["title/modules/AppRoutingModule.html",[324,3.069,332,3.239]],["body/modules/AppRoutingModule.html",[0,0.173,3,0.13,4,0.12,9,0.109,40,0.008,53,0.277,54,0.438,56,0.153,57,0.015,86,6.878,101,0.995,120,0.878,125,1.473,131,1.718,137,1.504,138,0.796,157,1.414,167,1.718,172,1.504,173,1.504,174,1.473,176,1.504,180,1.473,219,0.006,220,0.006,255,0.714,326,3.635,332,5.26,339,4.475,344,5.591,366,1.306,367,4.475,368,6.006,369,4.475,370,5.252,378,3.488,379,5.252,403,5.252,404,5.252,405,5.252,442,3.8,455,3.088,456,4.475,457,5.252,492,5.927,493,5.927,494,6.099,495,7.405,496,2.183,497,5.927,498,4.475,499,5.252,500,5.26,501,5.927,502,4.475,503,4.21,504,5.252,505,9.564,506,5.252,507,8.883,508,7.405,509,3.349,510,9.11,511,4.807,512,1.746,513,3.635,514,3.8,515,5.927,516,7.405,517,5.927,518,3.989,519,4.21,520,3.355,521,4.807,522,5.252,523,5.927,524,4.807]],["title/interfaces/AppState.html",[118,0.075,525,3.443]],["body/interfaces/AppState.html",[3,0.133,4,0.122,8,1.305,9,0.111,25,0.144,26,0.662,40,0.008,41,0.391,42,0.133,43,0.662,45,0.677,49,0.461,53,0.264,54,0.446,56,0.193,57,0.015,59,1.134,81,3.084,87,0.86,101,1.102,118,0.1,186,0.596,219,0.006,220,0.006,228,1.899,244,1.332,255,0.981,276,1.819,288,1.178,310,0.976,312,2.162,496,2.226,509,2.734,511,4.903,525,6.153,526,1.603,527,4.903,528,6.911,529,1.793,530,7.55,531,5.357,532,3.961,533,4.294,534,1.57,535,2.828,536,4.069,537,2.521,538,1.743,539,4.614,540,4.903,541,2.734,542,2.659,543,5.357,544,2.518,545,0.914,546,2.305,547,4.069,548,5.357,549,4.553,550,2.588,551,5.357,552,2.659,553,3.187,554,3.584,555,4.565,556,6.911,557,5.357,558,2.813,559,3.707,560,3.084,561,5.357,562,5.357,563,4.069,564,3.3,565,4.565,566,2.659,567,5.357,568,4.903,569,2.456,570,3.3,571,2.898,572,1.99,573,3.187,574,5.357,575,5.661,576,4.565,577,5.357,578,6.643,579,6.643,580,3.953,581,6.643,582,6.643,583,5.357,584,5.357,585,5.357,586,6.643,587,6.643,588,3.876,589,5.357,590,5.357,591,4.244,592,1.603,593,4.565,594,5.357,595,4.903,596,3.3,597,5.357,598,5.357,599,1.446,600,5.357,601,6.081,602,5.357,603,5.357,604,5.357,605,0.739,606,5.357,607,5.357,608,2.395]],["title/guards/AuthGuard.html",[500,3.239,609,3.443]],["body/guards/AuthGuard.html",[3,0.136,4,0.124,9,0.113,14,1.252,25,0.147,30,1.003,33,1.123,37,0.689,39,0.829,40,0.008,41,0.491,42,0.167,43,0.67,45,0.849,53,0.243,54,0.455,56,0.159,57,0.016,59,1.147,204,1.27,219,0.006,220,0.006,223,0.633,244,1.358,255,0.742,276,1.855,310,1.384,397,4.465,496,2.27,500,6.093,506,8.132,518,6.116,521,6.668,529,1.815,532,4.15,549,3.144,552,2.711,554,3.945,572,1.852,575,5.729,576,5.729,595,6.154,596,4.142,599,1.474,605,0.845,609,5.729,610,6.164,611,5.462,612,4.142,613,5.729,614,3.87,615,6.37,616,8.578,617,7.588,618,4.653,619,2.667,620,4.865,621,8.578,622,4.378,623,4.718,624,6.164,625,7.588,626,8.578,627,8.578,628,6.164,629,7.588,630,7.588,631,7.588,632,3.337,633,7.588,634,1.97,635,6.164,636,5.389,637,6.164,638,2.07,639,6.164,640,6.164,641,5.462,642,6.164]],["title/injectables/AuthenticationService.html",[529,1.09,623,2.326]],["body/injectables/AuthenticationService.html",[3,0.119,4,0.109,9,0.099,11,1.685,25,0.129,26,0.617,27,1.378,30,0.925,33,0.801,37,0.821,39,0.846,40,0.008,41,0.6,42,0.191,43,0.684,45,0.949,46,1.171,49,0.689,50,0.991,51,0.837,53,0.256,54,0.4,56,0.139,57,0.014,59,1.238,87,0.621,118,0.089,157,1.562,183,1.362,186,0.689,204,1.324,219,0.006,220,0.006,223,0.583,230,4.467,255,0.842,276,1.629,288,1.055,312,2.016,377,3.845,455,2.257,496,1.994,518,6.022,529,1.295,532,3.993,534,1.406,537,2.257,544,2.965,545,1.379,546,2.149,572,1.707,605,0.806,612,3.816,615,5.5,623,3.566,636,6.018,638,1.818,643,2.257,644,4.391,645,5.279,646,7.508,647,5.67,648,6.195,649,4.816,650,7.824,651,4.083,652,6.862,653,7.252,654,6.638,655,6.991,656,4.966,657,6.862,658,5.414,659,7.252,660,6.991,661,6.195,662,5.414,663,6.195,664,5.703,665,5.414,666,6.195,667,3.816,668,5.196,669,4.797,670,6.195,671,5.67,672,3.958,673,6.179,674,4.227,675,4.287,676,5.414,677,4.705,678,6.195,679,6.195,680,5.414,681,4.557,682,5.414,683,5.414,684,5.414,685,5.414,686,3.644,687,4.088,688,1.594,689,3.644,690,4.797,691,4.797,692,4.391,693,4.797,694,4.797,695,4.797,696,4.797,697,4.797,698,4.797,699,4.797,700,4.391,701,4.797,702,2.145,703,4.797,704,4.797,705,4.797,706,4.797,707,4.797,708,4.797,709,4.797,710,4.797,711,4.797,712,4.797,713,4.797,714,4.391,715,4.797]],["title/classes/CCIMSValidators.html",[57,0.012,716,2.326]],["body/classes/CCIMSValidators.html",[3,0.136,4,0.125,9,0.114,25,0.148,26,0.672,37,0.781,40,0.008,41,0.581,50,1.574,51,1.328,53,0.183,56,0.159,57,0.021,64,2.583,69,5.49,194,1.778,219,0.006,220,0.006,223,0.517,224,3.174,230,4.155,250,3.834,251,2.337,262,2.803,313,2.969,549,4.203,634,2.232,651,4.957,716,3.882,717,2.282,718,5.49,719,7.612,720,5.747,721,6.489,722,2.614,723,1.784,724,4.479,725,4.252,726,8.239,727,8.239,728,7.817,729,8.239,730,8.594,731,6.195,732,9.186,733,6.104,734,7.957,735,7.612,736,6.174,737,7.612,738,6.195,739,4.479,740,7.612,741,6.174,742,4.668,743,7.612,744,5.747,745,7.612,746,6.195,747,6.195,748,5.51,749,4.155,750,1.338,751,5.49,752,6.195,753,6.195,754,4.401,755,6.195]],["title/components/CacheNodeComponent.html",[0,0.084,105,0.945]],["body/components/CacheNodeComponent.html",[0,0.155,1,1.01,2,0.863,3,0.107,4,0.098,5,1.076,7,1.097,8,1.053,9,0.089,11,0.97,14,1.325,15,2.033,16,0.97,17,1.435,18,1.367,19,0.97,20,0.821,25,0.116,26,0.576,33,0.721,37,0.766,39,0.532,40,0.008,41,0.545,42,0.18,43,0.431,50,0.893,51,0.753,53,0.249,54,0.36,56,0.125,57,0.012,60,1.348,62,1.38,87,0.749,88,0.804,92,1.097,93,1.298,94,1.272,95,0.838,96,1.731,97,1.097,98,2.013,99,0.99,100,0.856,101,1.028,102,1.353,103,1.01,104,1.097,105,1.628,106,1.629,107,1.097,108,1.01,109,1.097,110,0.95,111,0.97,112,0.986,113,0.99,114,0.95,115,1.099,116,1.655,117,0.97,118,0.081,119,0.99,120,0.963,121,1.01,122,1.01,123,0.911,124,1.097,125,0.97,126,1.097,127,1.01,128,1.097,129,1.01,130,1.097,131,0.99,132,1.097,133,0.99,134,1.097,135,0.705,136,1.097,137,0.99,138,0.48,139,1.097,140,1.01,141,1.097,142,1.01,143,1.655,144,1.01,145,1.097,146,1.01,147,1.655,148,1.01,149,1.097,150,1.031,151,1.097,152,0.97,153,1.097,154,1.01,155,1.097,156,0.97,157,0.931,158,1.097,159,1.01,160,1.409,161,1.468,162,1.01,163,1.097,164,0.97,165,1.034,166,1.097,167,0.99,168,1.01,169,1.074,170,1.01,171,1.097,172,0.99,173,0.99,174,0.97,175,1.097,176,0.99,177,1.097,178,0.931,179,0.787,180,0.97,181,1.097,182,0.97,183,1.272,184,0.99,185,1.01,186,0.643,187,0.95,188,0.77,189,1.01,190,1.01,191,0.99,192,1.097,193,1.01,194,0.931,195,1.097,196,1.01,197,1.097,198,0.95,199,0.99,200,1.01,201,0.931,202,1.097,203,1.01,204,0.675,205,0.95,206,1.325,207,1.097,208,0.97,209,1.097,210,0.97,211,1.097,212,0.95,213,1.097,214,0.95,215,1.097,216,0.95,217,1.031,218,1.097,219,0.005,220,0.005,223,0.407,231,1.22,241,2.144,288,0.95,310,1.268,534,1.266,599,1.166,723,1.724,756,7.627,757,4.32,758,3.329,759,2.87,760,2.914,761,4.951,762,7.356,763,2.403,764,5.554,765,2.989,766,3.104,767,6.526,768,4.875,769,3.694,770,5.782,771,4.927,772,5.293,773,4.392,774,3.562,775,2.47,776,4.875,777,2.87,778,5.782,779,4.392,780,3.752,781,4.875,782,3.526,783,4.875,784,3.067,785,2.869,786,3.954,787,2.709,788,1.532,789,2.033,790,2.336,791,4.875,792,3.126,793,4.875,794,4.875,795,4.875,796,4.875,797,4.875,798,4.875,799,4.875,800,1.931,801,4.875]],["title/interfaces/CoalescedTimelineItem.html",[118,0.075,802,2.923]],["body/interfaces/CoalescedTimelineItem.html",[0,0.129,3,0.082,4,0.075,9,0.069,14,0.76,17,0.553,18,0.529,21,0.566,23,0.566,25,0.089,26,0.479,27,0.913,40,0.008,41,0.413,42,0.2,45,0.895,46,0.965,49,0.646,51,0.986,53,0.242,54,0.276,56,0.14,57,0.009,59,1.059,61,2.453,75,2.294,80,1.741,86,2.824,87,0.732,88,1.55,101,0.44,115,1.179,118,0.105,120,0.85,165,0.607,178,1.036,179,0.875,194,0.714,196,0.775,199,1.903,204,1.213,219,0.005,220,0.005,223,0.312,224,1.56,244,1.543,255,0.986,288,0.729,303,4.4,304,4.096,310,0.875,312,2.018,366,1.983,462,2.042,465,3.034,496,1.378,513,2.294,526,0.992,532,1.692,535,3.089,542,1.645,544,1.256,545,1.059,546,1.962,547,3.651,566,2.807,572,2.119,576,5.852,580,2.86,599,1.912,605,0.887,608,2.149,632,1.645,634,0.971,651,1.972,688,2.062,723,1.496,725,1.692,748,2.398,750,1.171,759,2.386,766,2.737,774,2.961,775,2.143,784,1.56,787,2.351,788,1.704,789,1.56,790,1.793,802,5.127,803,1.793,804,3.034,805,3.071,806,4.807,807,4.807,808,4.216,809,2.929,810,6.593,811,5.425,812,5.425,813,2.062,814,2.997,815,2.961,816,4.325,817,2.681,818,3.651,819,4.807,820,5.425,821,4.4,822,7.996,823,3.505,824,6.318,825,2.524,826,1.645,827,3.613,828,2.201,829,2.398,830,1.56,831,2.6,832,1.908,833,1.228,834,2.398,835,2.398,836,4.807,837,2.118,838,3.62,839,3.741,840,2.657,841,1.972,842,3.741,843,3.741,844,3.741,845,3.741,846,3.741,847,3.741,848,3.741,849,3.741,850,3.741,851,3.741,852,3.741,853,3.741,854,3.741,855,3.741,856,3.741,857,3.741,858,2.657,859,3.034,860,3.365,861,4.533,862,1.848,863,1.52,864,3.741,865,1.228,866,6.382,867,3.034,868,2.294,869,4.096,870,2.524,871,3.741,872,3.741,873,5.177,874,1.52,875,3.315,876,3.741,877,3.741,878,2.657,879,3.741,880,5.425,881,3.315,882,3.034,883,3.315,884,1.908,885,3.741,886,1.692,887,3.741,888,3.741,889,3.741,890,3.741,891,3.315,892,3.741,893,3.741,894,7.996,895,8.19,896,4.765,897,8.348,898,5.817,899,5.436,900,3.613,901,6.382,902,6.382,903,0.76,904,3.741,905,5.929,906,3.741,907,7.751,908,4.807,909,3.741,910,8.19,911,3.034,912,5.678,913,8.19,914,3.741,915,3.741,916,5.425,917,6.382,918,5.425,919,5.425,920,2.961,921,2.294,922,2.767,923,2.518,924,2.824,925,3.741,926,3.741,927,3.741,928,3.741,929,3.034,930,3.741,931,3.741,932,3.741,933,5.425,934,6.382,935,3.741,936,6.382,937,3.741,938,1.692,939,6.382,940,5.425,941,2.042,942,3.741,943,3.741,944,2.042,945,3.741,946,3.741,947,3.741,948,3.034,949,2.201,950,2.518,951,3.741,952,1.972,953,3.691,954,3.741,955,3.741,956,3.741,957,3.741,958,3.741,959,3.741,960,3.034,961,2.294,962,3.741,963,3.741,964,3.741,965,3.741,966,2.824,967,3.741,968,3.741,969,2.398]],["title/components/CommentComponent.html",[0,0.084,108,0.945]],["body/components/CommentComponent.html",[0,0.154,1,0.844,2,0.762,3,0.09,4,0.082,5,0.671,6,0.934,7,0.916,8,0.879,9,0.075,11,0.81,14,1.17,15,1.849,16,0.81,17,1.425,18,1.358,19,0.81,20,1.225,21,0.872,23,0.872,25,0.097,26,0.509,27,1.517,30,0.762,33,0.602,36,3.2,37,0.774,39,0.629,40,0.008,41,0.53,42,0.169,43,0.509,45,0.645,46,1.1,49,0.51,50,1.225,51,1.034,53,0.258,54,0.301,55,1.251,56,0.105,57,0.01,59,0.872,60,1.125,62,1.219,77,2.535,87,0.835,88,0.671,92,0.916,93,1.146,94,1.123,95,0.7,96,1.604,97,0.916,98,1.943,99,0.826,100,0.715,101,1.001,102,1.194,103,0.844,104,0.916,105,0.844,106,0.81,107,0.916,108,1.508,109,0.916,110,0.793,111,0.81,112,0.925,113,0.826,114,1.304,115,0.97,116,1.505,117,0.81,118,0.067,119,0.826,120,0.973,121,0.844,122,0.844,123,0.761,124,0.916,125,0.81,126,0.916,127,0.844,128,0.916,129,0.844,130,0.916,131,0.826,132,0.916,133,0.826,134,0.916,135,0.589,136,0.916,137,0.826,138,0.401,139,0.916,140,0.844,141,0.916,142,0.844,143,1.505,144,0.844,145,0.916,146,0.844,147,1.505,148,0.844,149,0.916,150,0.861,151,0.916,152,0.81,153,0.916,154,0.844,155,0.916,156,0.81,157,0.777,158,0.916,159,0.844,160,1.244,161,1.296,162,0.844,163,0.916,164,0.81,165,0.645,166,0.916,167,0.826,168,0.844,169,0.897,170,0.844,171,0.916,172,0.826,173,0.826,174,0.81,175,0.916,176,0.826,177,0.916,178,0.777,179,0.657,180,0.81,181,0.916,182,1.146,183,1.123,184,0.826,185,0.844,186,0.717,187,0.793,188,0.643,189,0.844,190,0.844,191,0.826,192,0.916,193,0.844,194,0.777,195,0.916,196,0.844,197,0.916,198,0.793,199,0.826,200,0.844,201,0.777,202,0.916,203,0.844,204,0.798,205,0.793,206,0.826,207,0.916,208,0.81,209,0.916,210,0.81,211,0.916,212,0.793,213,0.916,214,0.793,215,0.916,216,0.793,217,0.861,218,0.916,219,0.005,220,0.005,223,0.665,225,2.011,231,0.834,244,1.757,255,0.49,279,1.279,288,0.793,310,1.375,408,1.951,423,2.395,462,2.222,463,3.607,513,4.103,534,1.057,545,1.1,546,2.452,572,0.994,599,1.378,634,1.497,667,3.146,675,2.496,723,1.705,749,3.146,750,1.244,760,2.651,763,2.122,765,2.496,766,2.937,770,5.107,775,2.579,782,3.207,784,2.79,787,2.464,788,1.811,789,1.697,790,1.951,800,1.613,803,4.139,816,2.94,827,4.514,828,2.395,829,2.61,830,1.697,882,3.301,922,2.076,970,3.607,971,2.606,972,7.615,973,5.763,974,2.535,975,6.691,976,5.763,977,6.691,978,6.691,979,6.447,980,5.763,981,6.691,982,7.276,983,3.026,984,2.812,985,4.07,986,4.07,987,4.07,988,3.263,989,3.391,990,4.094,991,4.823,992,4.07,993,4.351,994,4.07,995,3.879,996,5.763,997,4.07,998,4.094,999,4.07,1000,4.282,1001,5.168,1002,4.07,1003,3.695,1004,4.07,1005,2.891,1006,2.61,1007,1.697,1008,1.613,1009,1.697,1010,4.07,1011,1.892,1012,3.263,1013,4.07,1014,4.07,1015,4.07,1016,4.07,1017,4.07,1018,4.07,1019,5.763,1020,4.07,1021,4.094,1022,5.763,1023,4.07,1024,4.07,1025,2.496,1026,3.301,1027,2.61,1028,2.74,1029,3.202,1030,2.61,1031,2.496,1032,2.304,1033,3.073,1034,3.607,1035,3.607,1036,2.74,1037,4.07,1038,3.301,1039,4.07,1040,3.301,1041,1.892,1042,2.222,1043,5.107,1044,5.763,1045,4.07,1046,5.763]],["title/components/ComponentContextMenuComponent.html",[0,0.084,110,0.889]],["body/components/ComponentContextMenuComponent.html",[0,0.165,1,0.721,2,0.68,3,0.077,4,0.07,5,0.573,6,0.799,7,0.782,8,0.751,9,0.064,11,0.692,14,1.044,16,0.692,17,1.414,18,1.345,19,0.692,20,1.215,21,0.778,23,0.778,25,0.083,26,0.454,27,1.031,30,0.68,33,0.515,37,0.71,39,0.562,40,0.008,41,0.506,42,0.177,43,0.454,45,0.576,46,1.142,49,0.576,50,0.942,51,0.795,53,0.223,54,0.257,56,0.132,57,0.013,59,1.239,61,3.416,62,1.088,64,1.45,70,1.899,78,2.133,85,1.251,87,0.776,88,0.573,92,0.782,93,1.023,94,1.193,95,0.598,96,1.49,97,0.782,98,1.875,99,0.706,100,0.611,101,0.98,102,1.066,103,0.721,104,0.782,105,0.721,106,0.692,107,0.782,108,0.721,109,0.782,110,1.472,111,0.692,112,0.91,113,0.706,114,0.678,115,0.866,116,1.377,117,0.692,118,0.112,119,0.706,120,0.929,121,0.721,122,0.721,123,0.65,124,0.782,125,0.692,126,0.782,127,0.721,128,0.782,129,0.721,130,0.782,131,0.706,132,0.782,133,0.706,134,0.782,135,0.979,136,0.782,137,0.706,138,0.711,139,0.782,140,0.721,141,0.782,142,0.721,143,1.377,144,0.721,145,0.782,146,0.721,147,1.377,148,0.721,149,0.782,150,0.736,151,0.782,152,0.692,153,0.782,154,0.721,155,0.782,156,0.692,157,0.664,158,0.782,159,0.721,160,1.111,161,1.157,162,0.721,163,0.782,164,1.217,165,0.917,166,0.782,167,0.706,168,0.721,169,0.767,170,0.721,171,0.782,172,0.706,173,0.706,174,0.692,175,0.782,176,0.706,177,0.782,178,0.664,179,0.561,180,0.692,181,0.782,182,0.692,183,1.002,184,0.706,185,0.721,186,0.603,187,0.678,188,0.549,189,0.721,190,0.721,191,0.706,192,0.782,193,0.721,194,0.982,195,0.782,196,0.721,197,0.782,198,0.678,199,0.706,200,0.721,201,1.65,202,0.782,203,0.721,204,0.481,205,0.678,206,0.706,207,0.782,208,0.692,209,0.782,210,0.692,211,0.782,212,0.678,213,0.782,214,0.678,215,0.782,216,0.678,217,0.736,218,0.782,219,0.004,220,0.004,223,0.429,231,1.044,241,1.53,244,1.134,249,1.45,255,0.91,262,2.49,263,2.782,271,2.262,272,1.344,276,1.047,279,1.093,288,0.678,293,2.626,294,5.921,310,1.091,312,1.003,437,2.626,439,5.11,440,5.145,442,2.23,443,1.969,444,2.341,455,2.145,529,0.832,542,1.53,545,1.023,546,2.079,572,2,580,1.834,599,1.464,605,0.603,632,1.53,634,1.589,667,1.899,668,2.133,669,1.969,688,1.515,689,2.341,725,3.058,750,0.751,760,2.425,775,2.423,777,2.262,800,1.378,817,1.719,825,2.848,826,1.53,833,2.01,863,1.413,865,2.369,870,1.619,874,1.413,903,1.717,993,2.626,1011,2.776,1047,5.7,1048,2.471,1049,3.154,1050,5.461,1051,2.912,1052,4.964,1053,4.172,1054,4.964,1055,5.144,1056,3.479,1057,5.126,1058,3.227,1059,3.565,1060,3.479,1061,3.479,1062,4.172,1063,2.265,1064,3.525,1065,3.479,1066,2.202,1067,3.33,1068,3.508,1069,4.803,1070,3.387,1071,4.445,1072,4.543,1073,3.479,1074,3.479,1075,4.964,1076,3.479,1077,3.479,1078,4.964,1079,3.479,1080,4.347,1081,2.821,1082,2.821,1083,5.485,1084,4.964,1085,5.126,1086,5.485,1087,2.821,1088,2.821,1089,2.821,1090,2.471,1091,1.312,1092,2.471,1093,3.924,1094,3.654,1095,2.626,1096,1.774,1097,3.462,1098,2.912,1099,4.336,1100,1.117,1101,3.154,1102,2.471,1103,2.626,1104,4.621,1105,2.821,1106,2.821,1107,4.172,1108,2.821,1109,2.808,1110,2.821,1111,2.821,1112,2.821,1113,2.821,1114,2.821,1115,2.821,1116,4.172,1117,2.821,1118,2.821,1119,4.172,1120,2.821,1121,2.23,1122,2.821,1123,2.821,1124,2.821,1125,2.821,1126,2.821,1127,2.821,1128,2.821,1129,2.821,1130,2.821,1131,2.821,1132,2.821,1133,4.964,1134,2.821,1135,4.964,1136,2.821,1137,3.884,1138,2.821,1139,2.821,1140,2.821,1141,4.964,1142,2.821,1143,2.821,1144,2.821,1145,2.821,1146,4.172,1147,2.821,1148,2.821,1149,1.899,1150,4.172,1151,4.172,1152,2.821,1153,3.884,1154,2.821,1155,2.821,1156,2.821,1157,2.821,1158,2.821,1159,2.821,1160,2.821,1161,2.821,1162,2.821,1163,2.821,1164,2.626,1165,2.821,1166,2.821,1167,2.821,1168,2.821,1169,5.144,1170,5.144,1171,3.082,1172,1.281,1173,4.558,1174,1.573,1175,1.719,1176,1.774,1177,1.667,1178,2.471,1179,3.479,1180,2.471,1181,2.821,1182,5.423,1183,2.626,1184,3.479,1185,2.047,1186,2.821,1187,3.479,1188,3.479,1189,1.834,1190,2.821,1191,1.53,1192,1.45,1193,1.142,1194,2.471,1195,1.489,1196,3.479,1197,2.821,1198,2.23,1199,1.834]],["title/interfaces/ComponentContextMenuData.html",[118,0.075,1057,3.239]],["body/interfaces/ComponentContextMenuData.html",[0,0.165,3,0.099,4,0.09,9,0.082,14,0.909,20,1.037,21,0.677,23,0.677,25,0.107,26,0.544,27,0.754,40,0.008,42,0.2,46,1.147,49,0.683,53,0.235,54,0.331,56,0.159,57,0.016,59,1.316,61,2.786,64,1.867,70,3.362,78,1.739,87,0.87,94,0.873,101,0.828,110,1.372,112,0.539,118,0.131,120,0.731,135,1.151,138,0.845,164,1.225,165,0.96,186,0.441,201,1.637,219,0.005,220,0.005,223,0.373,231,1.019,244,1.357,249,1.867,255,0.99,262,2.793,263,2.268,276,1.347,288,0.873,293,3.381,294,5.837,310,1.136,312,1.291,437,3.381,439,5.048,440,2.871,442,2.871,443,2.535,444,3.014,455,1.867,526,1.187,529,1.071,542,1.969,545,1.243,546,1.894,572,2.125,580,2.361,599,1.473,605,0.694,632,2.709,634,2.134,667,2.444,668,2.746,669,2.535,688,1.814,689,3.014,725,3.43,750,0.967,760,2.44,775,2.88,777,1.969,800,1.774,817,3.044,825,2.866,826,1.969,833,2.312,863,2.503,865,2.816,870,2.084,874,1.819,993,3.381,1011,2.92,1047,3.18,1048,3.18,1049,2.746,1050,5.627,1051,2.535,1052,3.632,1053,3.632,1054,3.632,1057,5.002,1058,2.361,1059,3.248,1062,3.632,1063,2.141,1064,3.576,1066,1.917,1067,3.644,1068,3.604,1069,4.375,1070,3.339,1071,4.463,1072,4.652,1075,4.996,1078,4.996,1080,5.002,1081,3.632,1082,3.632,1083,6.152,1084,6.45,1085,5.98,1086,7.059,1087,3.632,1088,3.632,1089,3.632,1090,3.18,1091,1.689,1092,3.18,1093,5.099,1094,4.375,1095,4.651,1096,3.142,1097,4.739,1098,3.986,1099,5.269,1100,1.978,1101,3.777,1102,3.18,1103,3.381,1104,5.317,1105,3.632,1106,3.632,1107,4.996,1108,3.632,1109,3.362,1110,3.632,1111,3.632,1112,3.632,1113,3.632,1114,3.632,1115,3.632,1116,4.996,1117,3.632,1118,3.632,1119,4.996,1120,3.632,1121,2.871,1122,3.632,1123,3.632,1124,3.632,1125,3.632,1126,3.632,1127,3.632,1128,3.632,1129,3.632,1130,3.632,1131,3.632,1132,3.632,1133,5.711,1134,3.632,1135,5.711,1136,3.632,1137,3.381,1138,3.632,1139,3.632,1140,3.632,1141,5.711,1142,3.632,1143,3.632,1144,3.632,1145,3.632,1146,4.996,1147,3.632,1148,3.632,1149,2.444,1150,4.996,1151,4.996,1152,3.632,1153,4.651,1154,3.632,1155,3.632,1156,3.632,1157,3.632,1158,3.632,1159,3.632,1160,3.632,1161,3.632,1162,3.632,1163,3.632,1164,3.381,1165,3.632,1166,3.632,1167,3.632,1168,3.632]],["title/injectables/ComponentContextMenuService.html",[529,1.09,1097,3.069]],["body/injectables/ComponentContextMenuService.html",[0,0.163,3,0.097,4,0.089,9,0.081,14,0.898,20,1.028,21,0.668,23,0.668,25,0.105,27,0.744,30,0.807,33,0.654,37,0.555,39,0.667,40,0.008,41,0.395,42,0.185,43,0.539,45,0.495,46,1.141,49,0.669,53,0.234,54,0.326,56,0.157,57,0.015,59,1.312,61,2.761,64,1.843,70,2.413,78,1.723,87,0.908,94,1.363,101,0.822,110,1.543,112,0.735,118,0.116,120,0.726,135,1.146,138,0.78,164,1.214,165,0.972,186,0.435,201,1.677,219,0.005,220,0.005,223,0.509,231,0.884,244,1.345,249,1.843,255,0.986,262,2.576,263,2.248,276,1.33,288,0.861,293,3.337,294,6.073,310,1.129,312,1.274,437,3.337,439,5.087,440,4.484,442,2.834,443,2.502,444,2.975,455,1.843,529,1.057,542,2.685,545,1.238,546,1.877,572,2.119,580,2.331,599,1.46,605,0.689,632,1.944,634,1.816,643,1.843,667,2.413,668,2.711,669,2.502,688,1.798,689,2.975,725,3.411,750,0.954,760,2.419,775,2.817,777,1.944,800,1.751,817,2.184,825,2.841,826,1.944,833,2.599,863,1.796,865,2.755,870,2.057,874,2.481,993,4.61,1011,2.913,1047,4.968,1048,3.14,1049,2.711,1050,5.591,1051,2.502,1052,3.585,1053,3.585,1054,3.585,1057,4.337,1058,2.331,1059,3.219,1062,3.585,1063,2.413,1064,3.699,1066,1.892,1067,3.569,1068,3.76,1069,4.337,1070,3.474,1071,4.817,1072,4.973,1075,4.952,1078,4.952,1080,4.968,1081,3.585,1082,3.585,1083,6.935,1084,5.673,1085,6.073,1086,6.118,1087,3.585,1088,3.585,1089,3.585,1090,3.14,1091,1.667,1092,3.14,1093,5.075,1094,4.337,1095,3.337,1096,2.255,1097,4.707,1098,4.481,1099,5.248,1100,1.42,1101,2.711,1102,3.14,1103,3.337,1104,5.977,1105,4.952,1106,3.585,1107,4.952,1108,3.585,1109,3.332,1110,3.585,1111,3.585,1112,3.585,1113,3.585,1114,3.585,1115,3.585,1116,4.952,1117,3.585,1118,3.585,1119,4.952,1120,3.585,1121,2.834,1122,3.585,1123,3.585,1124,3.585,1125,3.585,1126,3.585,1127,3.585,1128,3.585,1129,3.585,1130,3.585,1131,3.585,1132,3.585,1133,5.673,1134,3.585,1135,5.673,1136,3.585,1137,3.337,1138,3.585,1139,3.585,1140,3.585,1141,5.673,1142,3.585,1143,3.585,1144,3.585,1145,3.585,1146,4.952,1147,3.585,1148,3.585,1149,2.413,1150,4.952,1151,4.952,1152,3.585,1153,4.61,1154,3.585,1155,3.585,1156,3.585,1157,3.585,1158,3.585,1159,3.585,1160,3.585,1161,3.585,1162,3.585,1163,3.585,1164,3.337,1165,3.585,1166,3.585,1167,3.585,1168,3.585,1200,4.42,1201,4.42,1202,4.42]],["title/interfaces/ComponentNode.html",[118,0.075,1203,2.683]],["body/interfaces/ComponentNode.html",[0,0.15,3,0.117,4,0.164,5,1.141,9,0.127,25,0.127,26,0.611,40,0.008,42,0.202,49,0.709,53,0.24,56,0.178,57,0.018,87,0.882,101,0.627,112,0.642,118,0.152,120,0.718,135,0.771,138,0.682,165,0.967,186,0.831,188,0.842,219,0.006,220,0.006,231,1.273,255,0.642,279,2.415,291,4.166,311,3.136,512,1.57,526,1.413,538,1.537,545,1.307,592,2.364,605,0.879,619,1.873,717,1.963,722,1.831,814,2.282,833,1.75,903,1.811,949,3.136,1063,1.954,1064,3.392,1067,3.695,1068,3.483,1091,2.01,1195,3.29,1203,4.787,1204,2.41,1205,3.017,1206,4.802,1207,5.176,1208,4.041,1209,3.317,1210,2.909,1211,2.555,1212,3.284,1213,3.317,1214,2.719,1215,2.81,1216,4.195,1217,4.289,1218,4.523,1219,3.269,1220,3.269,1221,3.269,1222,3.269,1223,3.269,1224,3.269,1225,3.269,1226,3.269,1227,3.221,1228,3.269,1229,3.269,1230,4.244,1231,3.684,1232,3.136,1233,3.136,1234,2.282,1235,3.778,1236,3.417,1237,3.417,1238,1.79,1239,2.48,1240,2.555,1241,3.269,1242,2.909,1243,2.555,1244,2.909,1245,3.269,1246,3.417,1247,2.01,1248,3.417,1249,2.719,1250,3.417,1251,2.344,1252,3.417,1253,2.909,1254,3.417,1255,3.269,1256,3.417,1257,4.351,1258,2.81,1259,3.017,1260,2.555,1261,3.918,1262,3.417,1263,3.417,1264,3.417,1265,4.073,1266,3.417,1267,4.437,1268,3.417,1269,3.417,1270,3.417,1271,3.269,1272,1.963,1273,3.918,1274,4.928,1275,3.417,1276,3.417,1277,4.437,1278,3.417,1279,4.437,1280,4.437,1281,3.417,1282,3.417,1283,4.195,1284,4.437,1285,3.269,1286,4.244,1287,4.437,1288,3.417,1289,4.606,1290,3.649,1291,3.417,1292,3.269,1293,3.417,1294,3.417,1295,3.417,1296,3.269,1297,4.073,1298,3.269,1299,2.909,1300,3.269,1301,2.81]],["title/injectables/ComponentStoreService.html",[529,1.09,1302,2.796]],["body/injectables/ComponentStoreService.html",[0,0.103,2,0.944,3,0.123,4,0.113,9,0.144,25,0.133,30,0.944,33,0.827,37,0.818,39,0.984,40,0.008,41,0.583,42,0.198,43,0.795,45,0.996,49,0.715,53,0.245,54,0.413,56,0.144,57,0.014,59,1.324,179,1.152,219,0.006,220,0.006,223,0.466,224,2.977,228,2.243,231,1.199,255,0.674,276,1.683,288,1.09,529,1.707,534,1.452,537,2.332,538,1.613,544,3.054,545,1.324,552,2.46,605,0.876,643,2.332,688,1.647,723,1.843,815,3.897,921,4.378,1243,3.422,1302,4.378,1303,8.059,1304,3.586,1305,6.326,1306,5.071,1307,6.326,1308,4.522,1309,8.284,1310,5.791,1311,7.139,1312,5.08,1313,7.341,1314,7.139,1315,4.805,1316,7.139,1317,7.139,1318,7.139,1319,7.139,1320,7.139,1321,7.139,1322,7.139,1323,5.593,1324,8.284,1325,7.864,1326,8.284,1327,7.864,1328,7.341,1329,7.864,1330,8.284,1331,7.864,1332,8.284,1333,7.341,1334,8.284,1335,8.284,1336,8.284,1337,5.593,1338,7.139,1339,6.719,1340,4.956,1341,7.139,1342,4.956,1343,7.139,1344,5.593,1345,7.139,1346,4.956,1347,7.139,1348,5.593,1349,7.139,1350,4.956,1351,7.139,1352,7.341,1353,4.956,1354,7.139,1355,5.593,1356,4.956,1357,5.593,1358,5.593,1359,5.593,1360,5.593,1361,5.593,1362,5.593,1363,5.593]],["title/injectables/ComponentsService.html",[529,1.09,1364,3.443]],["body/injectables/ComponentsService.html",[3,0.138,4,0.127,9,0.115,25,0.15,30,1.016,33,1.136,37,0.805,39,0.967,40,0.008,41,0.573,42,0.195,43,0.782,45,0.967,49,0.718,53,0.245,54,0.464,56,0.162,57,0.016,59,1.306,101,1.015,219,0.006,220,0.006,276,1.892,366,2.03,529,1.837,538,1.813,545,1.306,552,2.765,605,0.851,643,2.621,787,2.315,788,1.975,1328,7.653,1364,5.799,1365,4.193,1366,5.571,1367,7.68,1368,6.805,1369,7.68,1370,7.68,1371,6.287,1372,8.637,1373,8.293,1374,8.637,1375,8.293,1376,8.293,1377,7.653,1378,6.287,1379,7.68,1380,7.68,1381,6.287,1382,6.805,1383,6.287,1384,7.68,1385,6.141,1386,6.287,1387,7.68,1388,6.287,1389,5.099,1390,6.287,1391,4.747,1392,5.099,1393,6.287,1394,6.287,1395,6.287,1396,6.287]],["title/interfaces/CreateComponentData.html",[118,0.075,1397,3.443]],["body/interfaces/CreateComponentData.html",[0,0.17,3,0.137,4,0.125,9,0.114,13,2.522,17,0.918,18,0.878,20,1.283,21,0.938,22,2.657,23,0.938,24,2.657,25,0.148,26,0.673,27,1.045,28,2.73,35,3.177,40,0.008,41,0.402,42,0.137,46,1.152,49,0.71,53,0.271,54,0.458,55,1.908,56,0.16,57,0.016,58,2.181,59,1.247,61,2.806,63,4.017,64,2.588,77,2.73,87,1.013,100,1.09,111,1.235,112,0.993,118,0.103,138,0.611,178,1.574,219,0.006,220,0.006,223,0.635,229,4.408,231,0.898,236,3.513,242,2.888,246,3.846,247,4.249,249,2.588,250,2.888,251,2.341,252,2.806,255,0.747,406,3.272,407,3.067,509,2.806,526,1.645,538,1.789,541,2.806,549,3.887,605,0.611,619,2.181,632,2.73,716,3.166,723,2.015,724,3.652,826,2.73,834,3.979,835,3.979,865,2.898,868,3.806,903,1.26,1091,2.341,1210,3.387,1234,2.657,1302,4.673,1312,3.806,1339,6.18,1397,6.226,1398,4.885,1399,6.752,1400,4.484,1401,3.652,1402,4.686,1403,3.513,1404,3.979,1405,4.177,1406,5.499,1407,5.412,1408,5.499,1409,4.408,1410,4.177,1411,5.034,1412,6.18,1413,5.034,1414,5.034,1415,4.408,1416,3.806,1417,3.272,1418,4.408,1419,5.412,1420,4.177,1421,2.888,1422,2.974,1423,3.979,1424,4.686,1425,5.499,1426,5.499,1427,5.499,1428,5.499,1429,5.499]],["title/components/CreateComponentDialogComponent.html",[0,0.084,111,0.907]],["body/components/CreateComponentDialogComponent.html",[0,0.176,1,0.845,2,0.763,3,0.09,4,0.082,5,0.672,6,0.936,7,0.917,8,0.88,9,0.075,11,0.811,13,1.657,16,0.811,17,1.425,18,1.358,19,0.811,20,1.294,21,0.873,22,2.867,23,0.873,24,2.47,25,0.097,26,0.51,27,1.294,28,3.203,30,0.763,33,0.603,34,2.308,35,3.204,37,0.808,39,0.731,40,0.008,41,0.58,42,0.188,43,0.591,45,0.75,46,1.101,49,0.704,50,1.407,51,1.188,53,0.252,54,0.301,55,1.253,56,0.105,57,0.01,58,1.433,59,1.013,61,1.844,62,1.221,63,3.042,64,1.7,77,2.945,78,1.151,84,1.615,87,0.991,88,0.672,92,0.917,93,1.148,94,1.124,95,0.701,96,1.605,97,0.917,98,1.943,99,0.828,100,1.013,101,0.985,102,1.196,103,0.845,104,0.917,105,0.845,106,0.811,107,0.917,108,0.845,109,0.917,110,0.795,111,1.449,112,1.091,113,0.828,114,0.795,115,0.972,116,1.506,117,0.811,118,0.095,119,0.828,120,0.941,121,0.845,122,0.845,123,0.762,124,0.917,125,0.811,126,0.917,127,0.845,128,0.917,129,0.845,130,0.917,131,0.828,132,0.917,133,0.828,134,0.917,135,0.59,136,0.917,137,0.828,138,0.568,139,0.917,140,0.845,141,0.917,142,0.845,143,1.506,144,0.845,145,0.917,146,0.845,147,1.506,148,0.845,149,0.917,150,0.863,151,0.917,152,0.811,153,0.917,154,0.845,155,0.917,156,0.811,157,0.778,158,0.917,159,0.845,160,1.246,161,1.298,162,0.845,163,0.917,164,0.811,165,0.456,166,0.917,167,0.828,168,0.845,169,0.899,170,0.845,171,0.917,172,0.828,173,0.828,174,0.811,175,0.917,176,0.828,177,0.917,178,1.566,179,0.658,180,0.811,181,0.917,182,0.811,183,1.124,184,0.828,185,0.845,186,0.568,187,0.795,188,0.644,189,0.845,190,0.845,191,0.828,192,0.917,193,0.845,194,0.778,195,0.917,196,0.845,197,0.917,198,0.795,199,0.828,200,0.845,201,0.778,202,0.917,203,0.845,204,0.564,205,0.795,206,0.828,207,0.917,208,0.811,209,0.917,210,0.811,211,0.917,212,0.795,213,0.917,214,0.795,215,0.917,216,0.795,217,0.863,218,0.917,219,0.005,220,0.005,223,0.665,229,2.896,231,1.112,236,4.122,237,4.357,240,3.613,241,2.538,242,2.685,243,3.613,246,3.741,247,4.141,248,4.68,249,1.7,250,1.897,251,1.538,252,1.844,255,0.491,265,2.614,406,4.723,407,4.427,427,3.149,509,1.844,538,1.175,541,1.844,549,4.5,605,0.402,619,1.433,632,1.793,716,2.08,723,1.706,724,2.399,763,2.125,826,1.793,834,2.614,835,2.614,865,2.391,868,3.538,903,0.828,1091,1.538,1210,2.225,1234,1.745,1302,4.465,1312,2.5,1339,4.68,1397,5.802,1398,4.669,1399,5.934,1400,4.285,1401,2.399,1402,3.078,1403,2.308,1404,4.294,1405,4.507,1406,5.934,1407,4.098,1408,3.613,1409,4.757,1410,3.884,1411,5.432,1412,5.906,1413,5.432,1414,5.432,1415,4.757,1416,3.538,1417,2.15,1418,4.098,1419,5.952,1420,5.521,1421,1.897,1422,1.954,1423,2.614,1424,3.078,1425,3.613,1426,3.613,1427,5.113,1428,3.613,1429,3.613,1430,5.77,1431,4.077,1432,4.077,1433,3.078,1434,3.613,1435,3.307,1436,3.307,1437,3.307,1438,3.613,1439,3.307,1440,4.077,1441,3.699,1442,4.68,1443,5.172,1444,4.465,1445,5.113,1446,3.078,1447,2.896]],["title/components/CreateEditLabelDialogComponent.html",[0,0.084,113,0.926]],["body/components/CreateEditLabelDialogComponent.html",[0,0.157,1,0.704,2,1.026,3,0.075,4,0.135,5,0.56,6,0.78,7,0.764,8,0.734,9,0.062,11,0.676,13,1.381,14,1.027,15,1.669,16,0.676,17,1.415,18,1.345,19,0.676,20,1.342,21,0.765,22,2.584,23,0.765,24,2.164,25,0.081,26,0.447,27,1.017,30,0.669,33,0.503,35,2.788,37,0.764,39,0.78,40,0.008,41,0.577,42,0.175,43,0.447,45,0.676,46,1.081,49,0.591,50,1.309,51,1.105,53,0.235,54,0.251,55,1.045,56,0.13,57,0.009,59,0.765,60,0.939,61,2.286,62,1.07,77,2.224,78,0.959,85,1.223,87,0.965,88,1.279,89,1.347,90,2.084,91,1.223,92,0.764,93,1.006,94,0.985,95,0.585,96,1.473,97,0.764,98,1.864,99,0.69,100,0.597,101,0.957,102,1.048,103,0.704,104,0.764,105,0.704,106,0.676,107,0.764,108,0.704,109,0.764,110,0.662,111,0.676,112,1.075,113,1.358,114,1.763,115,1.614,116,1.358,117,0.676,118,0.084,119,0.69,120,0.921,121,0.704,122,0.704,123,0.635,124,0.764,125,0.676,126,0.764,127,0.704,128,0.764,129,0.704,130,0.764,131,0.69,132,0.764,133,0.69,134,0.764,135,0.492,136,0.764,137,0.69,138,0.335,139,0.764,140,0.704,141,0.764,142,0.704,143,1.358,144,0.704,145,0.764,146,0.704,147,1.358,148,0.704,149,0.764,150,0.719,151,0.764,152,0.676,153,0.764,154,0.704,155,0.764,156,0.676,157,0.649,158,0.764,159,0.704,160,1.092,161,1.137,162,0.704,163,0.764,164,0.676,165,0.839,166,0.764,167,0.69,168,0.704,169,0.749,170,0.704,171,0.764,172,0.69,173,0.69,174,0.676,175,0.764,176,0.69,177,0.764,178,0.649,179,0.548,180,0.676,181,0.764,182,0.676,183,0.985,184,0.69,185,0.704,186,0.738,187,0.662,188,0.953,189,0.704,190,0.704,191,0.69,192,0.764,193,0.704,194,0.649,195,0.764,196,0.704,197,0.764,198,0.662,199,0.69,200,0.704,201,0.965,202,0.764,203,0.704,204,0.989,205,0.662,206,0.69,207,0.764,208,0.676,209,0.764,210,0.676,211,0.764,212,0.662,213,0.764,214,0.662,215,0.764,216,0.662,217,0.719,218,0.764,219,0.004,220,0.004,223,0.701,231,1.179,232,2.831,241,1.495,242,2.353,244,1.575,246,3.059,247,2.498,249,1.417,250,1.582,251,1.282,252,1.537,255,0.981,266,2.566,269,1.582,270,2.179,271,2.224,272,3.384,273,2.566,274,2.414,288,0.662,310,1.079,312,1.458,366,1.651,406,4.49,407,4.208,427,1.855,513,2.084,545,0.765,550,2.164,554,2.224,605,0.704,608,2.392,634,1.313,716,1.734,723,0.796,742,2.084,750,0.734,766,2.857,775,2.735,787,1.862,788,1.588,789,1.417,808,1.792,813,1.001,817,1.679,830,1.417,832,1.734,865,1.116,950,3.403,974,2.224,983,2.73,984,2.584,989,3.552,998,3.591,1001,4.749,1007,1.417,1008,1.347,1009,1.417,1011,1.66,1021,3.591,1025,3.702,1041,1.982,1042,2.76,1066,2.584,1070,1.381,1172,1.252,1176,1.734,1193,1.982,1234,2.164,1272,1.252,1389,4.101,1403,1.924,1416,3.1,1424,2.566,1433,2.566,1441,3.242,1448,2.666,1449,5.857,1450,5.349,1451,5.349,1452,5.349,1453,5.349,1454,5.056,1455,5.924,1456,5.924,1457,2.757,1458,4.101,1459,4.48,1460,3.399,1461,4.48,1462,4.48,1463,3.817,1464,1.924,1465,3.399,1466,4.101,1467,3.399,1468,4.48,1469,2.998,1470,4.48,1471,2.566,1472,3.399,1473,2.584,1474,2.224,1475,3.871,1476,2.757,1477,2.757,1478,3.403,1479,5.924,1480,4.48,1481,3.012,1482,1.734,1483,3.012,1484,2.179,1485,2.287,1486,3.012,1487,6.638,1488,5.349,1489,3.817,1490,3.901,1491,3.012,1492,2,1493,3.012,1494,3.012,1495,2.414,1496,3.012,1497,6.333,1498,3.012,1499,3.012,1500,2,1501,3.012,1502,1.455,1503,4.48,1504,3.012,1505,4.48,1506,3.012,1507,3.012,1508,1.537,1509,3.012,1510,2.566,1511,3.871,1512,3.871,1513,3.012,1514,3.012,1515,3.012,1516,2,1517,4.48,1518,3.012,1519,3.012,1520,3.012,1521,3.012,1522,3.591,1523,3.012,1524,3.012,1525,3.012,1526,3.012,1527,3.012,1528,4.48,1529,3.012,1530,3.012,1531,3.012,1532,3.403,1533,5.349,1534,4.558,1535,5.349,1536,3.591,1537,5.056,1538,3.591,1539,5.056,1540,3.242,1541,1.855,1542,2.566,1543,3.399,1544,4.48,1545,1.924,1546,3.399]],["title/interfaces/CreateEditLabelDialogData.html",[118,0.075,1449,3.443]],["body/interfaces/CreateEditLabelDialogData.html",[0,0.154,2,0.966,3,0.106,4,0.147,9,0.088,13,1.953,14,0.976,15,1.787,17,0.711,18,0.68,20,1.372,21,0.727,22,2.058,23,0.727,24,2.058,25,0.115,26,0.571,27,0.809,35,2.695,39,0.798,40,0.008,41,0.527,42,0.179,43,0.69,46,0.978,49,0.493,53,0.258,54,0.355,55,1.478,56,0.166,57,0.012,59,0.978,60,1.329,61,2.174,87,0.963,88,1.384,101,0.76,112,0.941,113,0.976,114,1.636,115,1.586,118,0.079,120,0.671,165,0.874,186,0.827,188,1.021,204,0.895,219,0.005,220,0.005,223,0.7,231,1.13,232,2.561,242,2.237,244,1.721,246,3.127,247,2.375,249,2.004,250,2.237,251,1.813,252,2.174,255,1.064,272,3.019,288,0.937,310,1.179,312,1.386,366,1.61,406,2.534,407,2.375,427,3.529,513,4.79,526,1.274,545,1.105,550,2.058,554,2.114,605,0.72,608,2.894,634,1.679,716,2.452,750,1.038,766,2.69,775,3.081,787,2.381,788,2.031,789,2.004,808,3.408,813,1.416,817,3.194,830,2.004,832,2.452,865,2.565,950,4.351,974,2.114,983,2.174,984,2.498,989,3.804,998,3.414,1001,4.592,1007,2.004,1008,1.904,1009,2.004,1011,2.123,1021,4.592,1025,4.479,1041,2.123,1042,3.529,1066,2.058,1234,2.058,1389,5.243,1403,2.721,1416,2.948,1424,3.63,1448,2.534,1449,5.898,1450,4.26,1451,4.26,1452,4.26,1453,4.26,1455,4.26,1456,4.26,1459,4.26,1461,4.26,1462,4.26,1463,3.63,1466,3.899,1468,4.26,1469,3.019,1470,4.26,1473,2.498,1474,2.114,1475,4.683,1478,3.235,1479,5.728,1480,4.26,1482,2.452,1483,5.728,1484,4.145,1485,4.351,1486,6.922,1487,7.438,1488,6.472,1489,4.881,1490,4.449,1491,4.26,1492,2.829,1493,4.26,1494,4.26,1495,3.414,1496,4.26,1497,7.223,1498,4.26,1499,4.26,1500,2.829,1501,4.26,1502,2.058,1503,5.728,1504,4.26,1505,5.728,1506,4.26,1507,4.26,1508,2.174,1509,4.26,1510,3.63,1511,4.683,1512,4.683,1513,4.26,1514,4.26,1515,4.26,1516,2.829,1517,5.728,1518,4.26,1519,4.26,1520,4.26,1521,4.26,1522,4.592,1523,4.26,1524,4.26,1525,4.26,1526,4.26,1527,4.26,1528,5.728,1529,4.26,1530,4.26,1531,4.26,1532,4.351,1533,6.472,1534,5.515,1535,6.472,1536,4.592]],["title/interfaces/CreateInterfaceData.html",[118,0.075,1547,3.239]],["body/interfaces/CreateInterfaceData.html",[0,0.14,3,0.137,4,0.125,9,0.114,13,2.524,17,0.919,18,0.879,20,1.389,21,0.939,22,2.659,23,0.939,24,2.659,25,0.148,26,0.673,27,1.389,28,2.732,35,3.179,40,0.008,42,0.194,46,1.247,49,0.694,53,0.271,54,0.459,55,1.91,56,0.196,57,0.016,58,2.183,59,1.335,61,2.809,63,3.275,87,0.875,112,1.063,117,1.236,118,0.153,138,0.612,219,0.006,220,0.006,223,0.518,231,0.899,232,2.461,236,3.516,242,2.89,244,1.896,246,3.531,247,3.069,249,2.59,250,2.89,251,2.343,252,2.809,310,1.23,406,3.275,407,3.069,526,1.647,541,2.809,545,0.939,599,1.823,605,0.612,623,3.889,716,3.168,723,1.786,865,2.04,921,3.809,983,2.809,984,2.946,1007,2.59,1008,2.461,1009,2.59,1041,2.503,1042,3.39,1063,2.152,1064,2.59,1067,3.495,1068,2.659,1091,2.343,1210,3.39,1261,4.869,1312,3.809,1398,4.888,1400,4.486,1401,3.655,1403,3.516,1404,3.982,1405,4.181,1409,4.412,1410,4.181,1415,4.412,1416,3.809,1418,4.412,1490,4.695,1547,5.859,1548,4.675,1549,4.412,1550,4.888,1551,4.69,1552,4.412,1553,4.181,1554,5.504,1555,5.504,1556,5.504,1557,5.504,1558,5.038,1559,5.504,1560,5.415,1561,4.412]],["title/components/CreateInterfaceDialogComponent.html",[0,0.084,117,0.907]],["body/components/CreateInterfaceDialogComponent.html",[0,0.136,1,0.884,2,0.787,3,0.094,4,0.086,5,0.703,6,0.979,7,0.959,8,0.921,9,0.078,11,0.848,13,1.733,16,0.848,17,1.428,18,1.361,19,0.848,20,1.363,21,0.901,22,2.937,23,0.901,24,2.549,25,0.102,26,0.526,27,1.484,28,3.267,30,0.787,33,0.631,34,2.414,35,3.258,37,0.801,39,0.65,40,0.008,41,0.575,42,0.196,43,0.526,45,0.768,46,1.224,47,4.23,49,0.678,50,1.091,51,0.92,53,0.254,54,0.315,55,1.311,56,0.153,57,0.011,58,1.499,59,1.182,61,1.928,62,1.26,63,2.248,77,2.619,78,1.204,84,1.689,87,0.852,88,0.703,92,0.959,93,1.185,94,1.16,95,0.733,96,1.637,97,0.959,98,1.962,99,0.866,100,0.749,101,0.996,102,1.234,103,0.884,104,0.959,105,0.884,106,0.848,107,0.959,108,0.884,109,0.959,110,0.831,111,0.848,112,1.107,113,0.866,114,0.831,115,1.003,116,1.543,117,1.477,118,0.158,119,0.866,120,0.946,121,0.884,122,0.884,123,0.797,124,0.959,125,0.848,126,0.959,127,0.884,128,0.959,129,0.884,130,0.959,131,0.866,132,0.959,133,0.866,134,0.959,135,0.617,136,0.959,137,0.866,138,0.587,139,0.959,140,0.884,141,0.959,142,0.884,143,1.543,144,0.884,145,0.959,146,0.884,147,1.543,148,0.884,149,0.959,150,0.902,151,0.959,152,0.848,153,0.959,154,0.884,155,0.959,156,0.848,157,0.814,158,0.959,159,0.884,160,1.286,161,1.339,162,0.884,163,0.959,164,0.848,165,0.477,166,0.959,167,0.866,168,0.884,169,0.94,170,0.884,171,0.959,172,0.866,173,0.866,174,0.848,175,0.959,176,0.866,177,0.959,178,0.814,179,0.688,180,0.848,181,0.959,182,0.848,183,1.16,184,0.866,185,0.884,186,0.587,187,0.831,188,0.673,189,0.884,190,0.884,191,0.866,192,0.959,193,0.884,194,0.814,195,0.959,196,0.884,197,0.959,198,0.831,199,0.866,200,0.884,201,0.814,202,0.959,203,0.884,204,0.59,205,0.831,206,0.866,207,0.959,208,0.848,209,0.959,210,0.848,211,0.959,212,0.831,213,0.959,214,0.831,215,0.959,216,0.831,217,0.902,218,0.959,219,0.005,220,0.005,223,0.652,231,1.131,232,2.718,236,4.205,237,4.496,239,3.029,241,1.876,242,2.771,244,1.637,246,3.345,247,2.943,248,3.459,249,1.778,250,1.984,251,1.608,252,1.928,265,2.734,310,0.961,406,4.689,407,4.394,541,1.928,545,0.645,599,1.776,605,0.42,623,3.788,716,2.175,723,1.395,763,2.193,865,2.253,921,2.615,983,3.103,984,2.871,1007,1.778,1008,1.689,1009,1.778,1041,1.955,1042,2.328,1063,1.681,1064,1.778,1067,1.733,1068,1.825,1091,1.608,1210,2.328,1261,2.414,1312,2.615,1398,4.762,1400,4.37,1401,2.509,1403,2.414,1404,4.399,1405,4.618,1409,4.874,1410,4.008,1415,4.874,1416,3.652,1418,4.23,1433,3.22,1435,3.459,1436,3.459,1441,3.818,1446,3.22,1447,3.029,1477,3.459,1490,4.054,1547,5.55,1549,3.029,1550,4.762,1551,3.22,1552,4.874,1553,4.618,1554,6.08,1555,3.779,1556,3.779,1557,3.779,1558,3.459,1559,3.779,1560,4.23,1561,5.276,1562,4.264,1563,3.779,1564,3.22]],["title/components/CreateIssueDialogComponent.html",[0,0.084,119,0.926]],["body/components/CreateIssueDialogComponent.html",[0,0.141,1,0.755,2,1.097,3,0.08,4,0.073,5,0.601,6,0.837,7,0.82,8,0.787,9,0.067,11,0.725,13,1.481,14,1.081,15,1.738,16,0.725,17,1.419,18,1.35,19,0.725,20,1.369,21,0.805,22,2.692,23,0.805,24,2.279,25,0.087,26,0.47,27,1.481,28,3.042,29,3.432,30,0.704,33,0.539,34,2.063,35,3.067,36,3.042,37,0.792,39,0.581,40,0.008,41,0.513,42,0.169,43,0.47,45,0.774,46,1.2,47,2.589,49,0.278,50,1.347,51,1.137,53,0.255,54,0.269,55,1.121,56,0.137,57,0.009,58,1.281,59,1.162,60,1.007,61,1.648,62,1.126,63,2.807,77,2.341,78,1.503,81,2.715,85,1.915,87,0.793,88,0.601,89,2.109,92,0.82,93,1.059,94,1.037,95,0.627,96,1.524,97,0.82,98,1.896,99,0.74,100,0.64,101,0.956,102,1.103,103,0.755,104,0.82,105,0.755,106,0.725,107,0.82,108,0.755,109,0.82,110,0.71,111,0.725,112,1.09,113,0.74,114,0.71,115,0.896,116,1.414,117,0.725,118,0.104,119,1.404,120,0.997,121,0.755,122,0.755,123,0.681,124,0.82,125,0.725,126,0.82,127,0.755,128,0.82,129,0.755,130,0.82,131,0.74,132,0.82,133,0.74,134,0.82,135,0.527,136,0.82,137,0.74,138,0.359,139,0.82,140,0.755,141,0.82,142,0.755,143,1.414,144,0.755,145,0.82,146,0.755,147,1.414,148,0.755,149,0.82,150,0.771,151,0.82,152,0.725,153,0.82,154,0.755,155,0.82,156,1.059,157,0.696,158,0.82,159,0.755,160,1.149,161,1.197,162,0.755,163,0.82,164,0.725,165,0.408,166,0.82,167,0.74,168,0.755,169,0.803,170,0.755,171,0.82,172,0.74,173,0.74,174,0.725,175,0.82,176,0.74,177,0.82,178,0.696,179,0.588,180,0.725,181,0.82,182,1.059,183,1.037,184,0.74,185,0.755,186,0.524,187,0.71,188,0.576,189,0.755,190,0.755,191,0.74,192,0.82,193,0.755,194,0.696,195,0.82,196,0.755,197,0.82,198,0.71,199,0.74,200,0.755,201,0.696,202,0.82,203,0.755,204,0.504,205,0.71,206,0.74,207,0.82,208,0.725,209,0.82,210,0.725,211,0.82,212,0.71,213,0.82,214,0.71,215,0.82,216,0.71,217,0.771,218,0.82,219,0.004,220,0.004,231,1.148,232,2.491,236,3.014,239,2.589,241,2.341,242,2.477,244,1.748,246,3.149,247,3.417,249,1.52,250,1.696,251,1.375,252,1.648,255,0.925,269,2.477,279,2.606,305,3.474,306,2.807,307,2.551,310,1.015,362,3.583,366,1.173,378,2.145,384,1.648,406,4.637,407,4.346,408,1.747,423,2.145,462,1.989,513,3.264,545,0.551,554,2.766,558,1.696,559,2.235,599,1.504,608,2.109,638,1.787,716,1.859,724,2.145,736,4.317,750,0.787,766,2.921,775,2.112,787,1.96,788,1.672,789,1.52,809,2.02,813,1.568,826,1.603,830,2.219,833,1.197,865,1.197,903,1.404,969,4.434,983,2.844,984,2.673,990,3.781,991,3.915,1006,2.337,1007,1.52,1008,1.444,1009,1.52,1025,2.235,1027,2.337,1028,2.453,1030,2.337,1031,2.235,1032,2.063,1041,1.197,1042,2.906,1101,2.235,1189,1.922,1193,1.197,1212,1.342,1234,1.56,1272,1.342,1290,2.807,1310,2.956,1403,2.063,1434,3.23,1438,3.23,1439,2.956,1441,3.413,1446,2.752,1471,2.752,1473,2.43,1490,2.906,1522,2.589,1552,4.467,1560,4.467,1561,4.912,1563,4.717,1565,6.128,1566,6.128,1567,6.128,1568,4.716,1569,3.645,1570,3.645,1571,4.717,1572,3.645,1573,4.717,1574,3.23,1575,3.878,1576,4.317,1577,4.33,1578,4.717,1579,3.645,1580,5.1,1581,3.7,1582,3.413,1583,4.317,1584,2.956,1585,2.453,1586,3.107,1587,3.23,1588,3.23,1589,3.23,1590,3.23,1591,3.23,1592,4.717,1593,4.717,1594,4.317,1595,2.752,1596,2.589,1597,3.23,1598,3.23,1599,3.23,1600,2.956,1601,3.23,1602,3.23,1603,3.23,1604,3.23,1605,3.23,1606,3.23,1607,3.23,1608,1.989,1609,2.235,1610,3.23,1611,3.23,1612,3.23,1613,3.23,1614,3.23,1615,3.781,1616,3.23,1617,2.337,1618,3.23,1619,2.145,1620,3.23,1621,3.23,1622,3.23,1623,3.23,1624,2.752,1625,3.23,1626,2.752,1627,3.583,1628,1.989,1629,2.715,1630,5.323,1631,2.145,1632,3.23,1633,1.52,1634,1.859,1635,3.23,1636,3.645,1637,2.956,1638,3.23,1639,3.645]],["title/components/CreateProjectDialogComponent.html",[0,0.084,121,0.945]],["body/components/CreateProjectDialogComponent.html",[0,0.15,1,0.906,2,0.801,3,0.096,4,0.088,5,0.72,6,1.003,7,0.983,8,0.943,9,0.08,11,0.869,13,1.775,16,0.869,17,1.429,18,1.362,19,0.869,20,1.327,21,0.916,22,2.976,23,0.916,24,2.593,25,0.104,26,0.535,27,1.436,28,3.301,30,0.801,33,0.646,34,2.474,35,3.287,37,0.804,39,0.661,40,0.008,41,0.594,42,0.184,43,0.535,45,0.778,46,1.233,47,4.302,49,0.668,50,1.109,51,0.936,53,0.247,54,0.323,55,1.343,56,0.112,57,0.011,58,1.536,59,1.051,62,1.281,63,2.304,77,2.664,87,0.861,88,0.72,89,1.731,92,0.983,93,1.205,94,1.18,95,0.751,96,1.654,97,0.983,98,1.971,99,0.887,100,0.767,101,1.131,102,1.255,103,0.906,104,0.983,105,0.906,106,0.869,107,0.983,108,0.906,109,0.983,110,0.851,111,0.869,112,1.111,113,0.887,114,0.851,115,1.02,116,1.564,117,0.869,118,0.072,119,0.887,120,0.949,121,1.556,122,0.906,123,0.817,124,0.983,125,0.869,126,0.983,127,0.906,128,0.983,129,0.906,130,0.983,131,0.887,132,0.983,133,0.887,134,0.983,135,0.632,136,0.983,137,0.887,138,0.43,139,0.983,140,0.906,141,0.983,142,0.906,143,1.564,144,0.906,145,0.983,146,0.906,147,1.564,148,0.906,149,0.983,150,0.924,151,0.983,152,0.869,153,0.983,154,0.906,155,0.983,156,0.869,157,0.834,158,0.983,159,0.906,160,1.308,161,1.362,162,0.906,163,0.983,164,0.869,165,0.489,166,0.983,167,0.887,168,0.906,169,0.963,170,0.906,171,0.983,172,0.887,173,0.887,174,0.869,175,0.983,176,0.887,177,0.983,178,0.834,179,0.705,180,0.869,181,0.983,182,0.869,183,1.18,184,0.887,185,0.906,186,0.739,187,0.851,188,0.69,189,0.906,190,0.906,191,0.887,192,0.983,193,0.906,194,0.834,195,0.983,196,0.906,197,0.983,198,0.851,199,0.887,200,0.906,201,0.834,202,0.983,203,0.906,204,1.039,205,0.851,206,0.887,207,0.983,208,0.869,209,0.983,210,0.869,211,0.983,212,0.851,213,0.983,214,0.851,215,0.983,216,0.851,217,0.924,218,0.983,219,0.005,220,0.005,223,0.75,224,2.525,232,2.754,236,4.249,237,4.573,239,3.104,244,1.654,246,3.375,247,2.993,250,2.033,251,1.648,310,0.977,406,4.709,407,4.413,539,4.249,541,1.976,556,5.638,599,1.795,716,2.229,723,1.629,728,6.16,763,2.231,983,3.144,984,2.901,1007,1.822,1008,1.731,1009,1.822,1041,1.989,1042,2.385,1234,2.976,1312,2.68,1398,4.812,1403,2.474,1404,4.457,1410,4.077,1416,3.714,1418,4.302,1433,3.299,1435,3.544,1436,3.544,1437,3.544,1441,4.812,1446,3.299,1458,3.544,1477,3.544,1481,3.872,1490,4.097,1552,4.938,1558,3.544,1560,4.302,1561,5.331,1564,3.299,1640,6.952,1641,3.299,1642,2.68,1643,4.37,1644,4.37,1645,4.37,1646,4.37]],["title/components/CursorPaginatorComponent.html",[0,0.084,122,0.945]],["body/components/CursorPaginatorComponent.html",[0,0.156,1,1.035,2,0.877,3,0.11,4,0.101,5,0.823,6,1.146,7,1.123,8,1.078,9,0.092,11,0.993,16,0.993,17,1.437,18,1.37,19,0.993,20,0.841,21,1.003,23,1.003,25,0.119,37,0.602,40,0.008,41,0.534,42,0.146,53,0.196,54,0.369,56,0.128,57,0.013,62,1.403,78,1.409,85,2.385,88,0.823,91,2.385,92,1.123,93,1.319,94,1.292,95,0.859,96,1.748,97,1.123,98,2.022,99,1.014,100,0.877,101,1.034,102,1.374,103,1.035,104,1.123,105,1.035,106,0.993,107,1.123,108,1.035,109,1.123,110,0.973,111,0.993,112,0.994,113,1.014,114,0.973,115,1.253,116,1.674,117,0.993,118,0.082,119,1.014,120,0.965,121,1.035,122,1.644,123,1.694,124,1.123,125,0.993,126,1.123,127,1.035,128,1.123,129,1.035,130,1.123,131,1.014,132,1.123,133,1.014,134,1.123,135,0.722,136,1.123,137,1.014,138,0.492,139,1.123,140,1.035,141,1.123,142,1.035,143,1.674,144,1.035,145,1.123,146,1.035,147,1.674,148,1.035,149,1.123,150,1.056,151,1.123,152,0.993,153,1.123,154,1.035,155,1.123,156,0.993,157,0.953,158,1.123,159,1.035,160,1.432,161,1.491,162,1.035,163,1.123,164,0.993,165,0.559,166,1.123,167,1.014,168,1.035,169,1.1,170,1.035,171,1.123,172,1.014,173,1.014,174,0.993,175,1.123,176,1.014,177,1.123,178,0.953,179,0.806,180,0.993,181,1.123,182,0.993,183,1.292,184,1.014,185,1.035,186,0.653,187,0.973,188,0.788,189,1.035,190,1.035,191,1.014,192,1.123,193,1.035,194,0.953,195,1.123,196,1.035,197,1.123,198,0.973,199,1.014,200,1.035,201,0.953,202,1.123,203,1.035,204,0.691,205,0.973,206,1.014,207,1.123,208,0.993,209,1.123,210,0.993,211,1.123,212,0.973,213,1.123,214,0.973,215,1.123,216,0.973,217,1.056,218,1.123,219,0.006,220,0.006,223,0.416,262,1.839,272,1.929,366,1.641,427,2.725,571,3.178,638,2.989,722,2.277,723,1.744,750,1.078,763,2.442,787,1.839,790,2.393,809,2.129,813,1.953,831,4.15,1063,1.872,1100,1.603,1101,4.066,1172,1.839,1189,3.496,1193,2.177,1541,3.619,1633,2.082,1647,6.596,1648,6.038,1649,4.424,1650,3.382,1651,6.63,1652,4.215,1653,5.621,1654,7.444,1655,6.63,1656,7.444,1657,4.992,1658,6.63,1659,4.992,1660,6.63,1661,3.382,1662,4.709,1663,5.875,1664,6.63,1665,6.63,1666,5.875,1667,3.276,1668,3.769,1669,3.769,1670,4.992,1671,4.992,1672,4.424,1673,3.546,1674,3.201,1675,4.424]],["title/classes/DataNode.html",[57,0.012,782,2.185]],["body/classes/DataNode.html",[3,0.076,4,0.042,9,0.039,14,0.898,15,1.223,19,0.88,25,0.05,26,0.501,27,0.864,30,0.459,37,0.685,39,0.787,40,0.008,41,0.332,42,0.174,43,0.501,45,0.932,46,0.924,50,0.81,51,0.877,53,0.168,56,0.146,57,0.016,59,1.313,60,1.223,64,1.446,70,1.893,80,2.641,84,0.833,87,0.848,88,0.729,91,1.247,93,0.69,100,0.609,106,1.129,112,0.418,118,0.035,123,1.262,165,0.874,179,1.089,186,0.757,219,0.004,220,0.003,223,0.289,224,0.877,225,3.019,228,0.661,230,1.148,231,1.364,232,2.675,244,1.849,255,0.986,288,1,310,1.321,312,2.175,336,1.29,366,1.694,455,0.877,482,1.348,520,2.504,534,0.546,535,2.437,542,1.946,544,1.723,545,1.278,546,2.54,554,0.925,560,1.073,564,1.148,566,1.525,569,1.797,570,2.415,571,3.096,572,1.386,592,1.505,599,1.358,605,0.884,613,1.588,614,2.895,618,2.126,619,0.739,620,3.29,634,1.474,638,2.169,656,2.463,669,1.191,672,2.905,688,2.176,702,0.833,717,0.775,721,1.588,722,0.722,723,1.037,748,1.348,749,1.893,750,1.866,754,2.463,758,2.895,759,3.38,760,1.753,764,3.34,766,2.577,769,3.657,771,1.588,773,4.348,774,1.148,775,2.749,777,3.483,779,1.416,782,3.795,784,3.005,788,0.661,792,2.223,800,1.753,808,1.109,809,2.423,813,1.021,814,1.484,815,1.893,816,2.617,817,1.039,823,0.951,830,0.877,831,2.459,838,1.844,841,2.993,862,1.039,874,3.173,884,1.769,886,2,903,0.704,920,1.148,938,2,944,3.098,952,2.332,969,1.348,974,2.841,988,1.963,995,2.334,1000,1.238,1011,2.85,1012,3.458,1029,0.877,1032,3.213,1041,1.139,1051,1.191,1063,1.975,1066,1.484,1071,1.238,1096,2.256,1121,1.348,1206,2.801,1238,2.622,1240,1.008,1242,1.148,1247,0.793,1251,2.257,1308,1.148,1365,1.613,1417,1.109,1423,2.223,1448,1.828,1464,2.905,1469,2.194,1474,0.925,1478,2.334,1482,1.073,1490,3.098,1492,2.603,1495,2.463,1500,2.603,1502,3.661,1516,2.04,1532,4.348,1575,2.332,1608,2.801,1617,2.223,1627,1.416,1629,3.444,1631,1.238,1650,1.769,1661,1.073,1676,1.416,1677,2.812,1678,5.483,1679,4.955,1680,3.34,1681,2.812,1682,5.675,1683,2.812,1684,3.588,1685,3.588,1686,2.812,1687,2.812,1688,2.812,1689,2.812,1690,2.977,1691,2.812,1692,2.812,1693,3.588,1694,3.29,1695,2.812,1696,4.286,1697,4.604,1698,4.604,1699,3.072,1700,4.955,1701,3.072,1702,3.874,1703,4.589,1704,7.207,1705,2.103,1706,2.103,1707,2.812,1708,4.878,1709,3.34,1710,2.103,1711,2.103,1712,2.103,1713,4.35,1714,3.147,1715,3.34,1716,3.588,1717,2.812,1718,2.812,1719,2.812,1720,2.812,1721,2.103,1722,2.812,1723,1.864,1724,2.103,1725,2.103,1726,2.812,1727,2.103,1728,2.618,1729,3.588,1730,2.812,1731,2.812,1732,2.103,1733,2.812,1734,2.812,1735,2.415,1736,2.812,1737,1.864,1738,2.103,1739,5.119,1740,5.098,1741,1.29,1742,1.963,1743,1.148,1744,1.29,1745,3.147,1746,1.588,1747,2.463,1748,1.494,1749,1.494,1750,4.878,1751,2.126,1752,2.618,1753,1.828,1754,2.618,1755,1.494,1756,3.34,1757,2.463,1758,1.706,1759,3.34,1760,2.463,1761,1.348,1762,1.588,1763,1.588,1764,2.618,1765,1.494,1766,3.142,1767,1.494,1768,1.706,1769,1.706,1770,1.706,1771,2.042,1772,2.334,1773,1.494,1774,1.588,1775,1.494,1776,1.109,1777,1.588,1778,1.706,1779,2.812,1780,2.463,1781,2.618,1782,3.588,1783,3.588,1784,1.706,1785,1.588,1786,2.04,1787,2.812,1788,1.348,1789,1.706,1790,1.706,1791,1.588,1792,2.812,1793,1.588,1794,2.618,1795,1.706,1796,1.706,1797,2.223,1798,1.706,1799,1.706,1800,1.706,1801,1.706,1802,1.706,1803,1.416,1804,0.877,1805,5.24,1806,3.651,1807,3.874,1808,4.162,1809,3.588,1810,1.588,1811,1.29,1812,2.812,1813,6.233,1814,1.706,1815,2.223,1816,1.588,1817,1.588,1818,1.706,1819,2.334,1820,1.706,1821,1.706,1822,1.706,1823,4.162,1824,1.706,1825,1.706,1826,2.812,1827,1.706,1828,1.706,1829,4.162,1830,1.706,1831,2.618,1832,2.812,1833,3.588,1834,2.812,1835,3.588,1836,1.706,1837,4.612,1838,3.34,1839,1.706,1840,1.706,1841,1.191,1842,1.706,1843,2.836,1844,1.706,1845,2.04,1846,2.223,1847,1.706,1848,2.334,1849,1.588,1850,1.416,1851,1.416,1852,1.706,1853,4.162,1854,1.416,1855,1.706,1856,2.812,1857,1.706,1858,2.812,1859,1.706,1860,1.706,1861,3.34,1862,2.463,1863,1.706,1864,1.588,1865,1.588,1866,1.494,1867,1.706,1868,1.706,1869,3.588,1870,1.494,1871,1.706,1872,1.706,1873,1.946,1874,4.604,1875,1.706,1876,1.588,1877,1.588,1878,2.504,1879,1.706,1880,1.588,1881,2.223,1882,1.588,1883,1.494,1884,1.706,1885,1.706,1886,1.706,1887,4.162,1888,3.588,1889,1.148,1890,1.588,1891,1.588,1892,2.812,1893,3.588,1894,1.706,1895,1.706,1896,4.604,1897,1.706,1898,1.706,1899,1.706,1900,1.706,1901,3.588,1902,1.588,1903,2.812,1904,1.706,1905,1.706,1906,3.588,1907,1.29,1908,1.706,1909,1.706,1910,1.706,1911,1.706,1912,1.706,1913,2.812,1914,1.706,1915,1.706,1916,2.812,1917,1.706,1918,1.348,1919,1.706,1920,1.706,1921,1.706,1922,1.706,1923,2.618,1924,2.812,1925,1.706,1926,1.29,1927,1.706,1928,1.073,1929,2.812,1930,1.706,1931,1.494,1932,1.348,1933,2.713,1934,2.04,1935,3.192,1936,1.706,1937,1.706,1938,1.706,1939,1.416,1940,1.706,1941,1.706,1942,1.706,1943,1.706,1944,1.706,1945,1.706,1946,1.706,1947,1.706,1948,1.706,1949,1.706,1950,1.706,1951,3.645,1952,1.706,1953,1.706,1954,1.706,1955,1.706,1956,1.416,1957,1.706,1958,2.812,1959,1.706,1960,2.836,1961,1.706,1962,4.604,1963,1.706,1964,2.812,1965,1.706,1966,1.706,1967,1.588,1968,2.618,1969,1.588,1970,1.238,1971,1.494,1972,1.706,1973,1.706,1974,1.706,1975,4.162,1976,3.588,1977,4.162,1978,3.588,1979,1.706,1980,1.706,1981,1.706,1982,4.604,1983,1.706,1984,1.706,1985,3.588,1986,3.588,1987,3.588,1988,3.588,1989,1.494,1990,1.706,1991,1.706,1992,1.588,1993,3.34,1994,1.706,1995,2.334,1996,1.706,1997,1.706,1998,1.706,1999,1.706,2000,2.812,2001,1.706,2002,1.706,2003,1.706,2004,1.348,2005,1.706,2006,1.706,2007,1.706,2008,1.308,2009,1.706,2010,1.706,2011,1.706,2012,3.34,2013,1.706,2014,3.588,2015,3.588,2016,1.494,2017,1.706,2018,1.706,2019,1.706,2020,1.706,2021,1.706,2022,1.706,2023,1.706,2024,1.706,2025,1.706,2026,1.706,2027,1.706,2028,1.706,2029,1.706,2030,1.706,2031,1.588,2032,1.588,2033,1.588,2034,1.29,2035,2.977,2036,1.494,2037,1.706,2038,1.963,2039,1.494,2040,1.494,2041,1.588,2042,1.238,2043,1.588,2044,1.588,2045,1.706,2046,1.588,2047,1.828,2048,1.706,2049,2.618,2050,1.706,2051,1.706,2052,1.588,2053,1.706,2054,1.706,2055,1.706,2056,1.706,2057,1.706,2058,1.706,2059,1.706,2060,1.706,2061,1.706,2062,1.706,2063,1.706,2064,1.963,2065,1.706,2066,1.706,2067,1.191,2068,1.191,2069,1.706,2070,1.706,2071,1.706,2072,1.706,2073,1.706,2074,1.706]],["title/classes/DataQuery.html",[57,0.012,1678,2.923]],["body/classes/DataQuery.html",[3,0.074,4,0.041,9,0.037,14,0.685,15,0.933,19,1.109,25,0.049,26,0.493,27,0.568,30,0.446,37,0.722,39,0.798,40,0.008,41,0.325,42,0.175,43,0.493,45,0.962,46,0.909,50,0.792,51,0.862,53,0.165,56,0.144,57,0.015,59,1.306,60,0.933,64,1.407,70,1.842,80,2.341,84,0.807,87,0.857,88,0.713,91,1.555,93,0.671,100,0.759,106,1.196,112,0.406,118,0.056,123,1.246,165,0.852,179,1.075,186,0.75,219,0.004,220,0.003,223,0.281,224,0.849,225,2.971,228,0.64,230,1.111,231,1.372,232,2.739,244,1.838,255,0.979,288,0.843,310,1.324,312,2.154,336,1.248,366,1.678,455,0.849,482,1.305,520,2.848,534,0.529,535,2.402,542,1.485,544,2.019,545,1.278,546,2.582,554,0.895,560,1.722,564,1.842,566,1.485,569,1.371,570,3.044,571,3.193,572,1.361,592,1.594,599,1.438,605,0.883,613,1.537,614,3.248,618,2.651,619,0.715,620,4.083,634,1.448,638,2.138,656,2.397,669,1.153,672,3.157,688,2.153,702,0.807,717,0.75,721,1.537,722,0.699,723,0.791,748,1.305,749,1.842,750,1.856,754,3.071,758,2.845,759,3.576,760,1.337,764,3.264,766,2.214,769,3.772,771,2.548,773,4.92,774,1.111,775,2.671,777,3.539,779,1.37,782,3.581,784,3.048,788,0.64,792,2.164,800,1.337,808,1.073,809,2.4,813,0.994,814,1.445,815,1.842,816,2.845,817,1.668,823,0.921,830,0.849,831,2.673,838,1.803,841,3.17,862,1.006,874,3.388,884,1.722,886,1.955,903,0.685,920,1.111,938,1.526,944,3.282,952,2.28,969,1.305,974,2.931,988,1.911,995,2.272,1000,1.198,1011,2.836,1012,3.404,1029,1.407,1032,3.404,1041,1.108,1051,1.153,1063,2.064,1066,1.445,1071,1.198,1096,2.205,1121,1.305,1206,2.746,1238,2.557,1240,0.976,1242,1.842,1247,0.768,1251,2.212,1308,1.111,1365,3.702,1417,1.073,1423,2.164,1448,1.78,1464,1.911,1469,2.155,1474,0.895,1478,2.91,1482,1.038,1490,3.044,1492,2.544,1495,2.397,1500,2.544,1502,3.744,1516,1.986,1532,4.286,1575,2.28,1608,2.746,1617,2.164,1627,1.37,1629,3.811,1631,1.198,1650,2.205,1661,1.038,1676,1.37,1677,1.651,1678,5.159,1679,4.08,1680,2.548,1681,1.651,1682,4.523,1683,1.651,1684,2.738,1685,2.738,1686,1.651,1687,1.651,1688,1.651,1689,1.651,1690,2.272,1691,1.651,1692,1.651,1693,2.738,1694,2.772,1695,1.651,1696,4.211,1697,4.523,1698,4.877,1699,2.991,1700,5.404,1701,2.991,1702,4.211,1703,4.733,1707,2.738,1708,5.031,1709,3.264,1713,4.382,1714,3.42,1715,3.264,1716,4.08,1717,2.738,1718,2.738,1719,2.738,1720,2.738,1722,2.738,1723,1.804,1726,2.738,1728,2.548,1729,4.08,1730,2.738,1731,2.738,1733,2.738,1734,2.738,1735,2.746,1736,2.738,1737,1.804,1739,5.408,1740,5.38,1741,1.248,1742,1.911,1743,1.111,1744,1.248,1745,3.085,1746,1.537,1747,2.397,1748,1.446,1749,1.446,1750,4.808,1751,2.07,1752,2.548,1753,1.78,1754,2.548,1755,1.446,1756,3.264,1757,2.397,1758,1.651,1759,3.264,1760,2.397,1761,1.305,1762,1.537,1763,1.537,1764,3.264,1765,1.446,1766,3.071,1767,1.446,1768,2.738,1769,2.738,1770,2.738,1771,2.29,1772,3.385,1773,2.397,1774,2.548,1775,2.397,1776,1.78,1777,2.548,1778,2.738,1779,4.08,1780,3.573,1781,3.264,1782,3.507,1783,3.507,1784,2.738,1785,2.548,1786,2.96,1787,4.523,1788,2.164,1789,2.738,1790,2.738,1791,2.548,1792,3.507,1793,2.548,1794,3.264,1795,2.738,1796,2.738,1797,2.772,1798,2.738,1799,1.651,1800,1.651,1801,2.738,1802,2.738,1803,2.272,1804,1.407,1805,5.165,1806,3.692,1807,3.798,1808,4.08,1809,3.507,1810,1.537,1811,1.248,1812,2.738,1813,6.175,1814,1.651,1815,2.164,1816,1.537,1817,1.537,1818,1.651,1819,2.272,1820,1.651,1821,1.651,1822,1.651,1823,4.08,1824,1.651,1825,1.651,1826,2.738,1827,1.651,1828,1.651,1829,4.08,1830,1.651,1831,3.264,1832,3.507,1833,3.507,1834,2.738,1835,3.507,1836,1.651,1837,4.808,1838,3.264,1839,1.651,1840,1.651,1841,1.153,1842,1.651,1843,2.772,1844,1.651,1845,1.986,1846,2.164,1847,1.651,1848,2.272,1849,1.537,1850,1.37,1851,1.37,1852,1.651,1853,4.08,1854,1.37,1855,1.651,1856,2.738,1857,1.651,1858,2.738,1859,1.651,1860,1.651,1861,3.264,1862,2.397,1863,1.651,1864,1.537,1865,1.537,1866,1.446,1867,1.651,1868,1.651,1869,3.507,1870,1.446,1871,1.651,1872,1.651,1873,1.902,1874,4.523,1875,1.651,1876,1.537,1877,1.537,1878,2.448,1879,1.651,1880,1.537,1881,2.772,1882,1.537,1883,1.446,1884,1.651,1885,1.651,1886,1.651,1887,4.08,1888,3.507,1889,1.111,1890,1.537,1891,1.537,1892,2.738,1893,3.507,1894,1.651,1895,1.651,1896,4.523,1897,1.651,1898,1.651,1899,1.651,1900,2.738,1901,3.507,1902,1.537,1903,2.738,1904,1.651,1905,1.651,1906,3.507,1907,1.248,1908,1.651,1909,1.651,1910,1.651,1911,1.651,1912,1.651,1913,2.738,1914,1.651,1915,1.651,1916,2.738,1917,1.651,1918,1.305,1919,1.651,1920,1.651,1921,3.507,1922,1.651,1923,2.548,1924,2.738,1925,1.651,1926,1.248,1927,1.651,1928,1.038,1929,2.738,1930,1.651,1931,1.446,1932,1.305,1933,2.651,1934,1.986,1935,3.147,1936,1.651,1937,1.651,1938,1.651,1939,1.37,1940,1.651,1941,1.651,1942,1.651,1943,1.651,1944,1.651,1945,1.651,1946,1.651,1947,1.651,1948,1.651,1949,1.651,1950,1.651,1951,3.573,1952,1.651,1953,1.651,1954,1.651,1955,1.651,1956,1.37,1957,1.651,1958,2.738,1959,1.651,1960,2.772,1961,1.651,1962,4.523,1963,1.651,1964,2.738,1965,1.651,1966,1.651,1967,1.537,1968,2.548,1969,1.537,1970,1.198,1971,1.446,1972,1.651,1973,1.651,1974,1.651,1975,4.08,1976,3.507,1977,4.08,1978,3.507,1979,1.651,1980,1.651,1981,1.651,1982,4.523,1983,1.651,1984,1.651,1985,3.507,1986,3.507,1987,3.507,1988,3.507,1989,1.446,1990,1.651,1991,1.651,1992,1.537,1993,3.264,1994,1.651,1995,2.272,1996,1.651,1997,1.651,1998,1.651,1999,1.651,2000,2.738,2001,1.651,2002,1.651,2003,1.651,2004,1.305,2005,1.651,2006,1.651,2007,1.651,2008,1.273,2009,1.651,2010,1.651,2011,1.651,2012,3.264,2013,1.651,2014,3.507,2015,3.507,2016,1.446,2017,1.651,2018,1.651,2019,1.651,2020,1.651,2021,1.651,2022,1.651,2023,1.651,2024,1.651,2025,1.651,2026,1.651,2027,1.651,2028,1.651,2029,1.651,2030,1.651,2031,1.537,2032,1.537,2033,1.537,2034,1.248,2035,2.91,2036,1.446,2037,1.651,2038,1.911,2039,1.446,2040,1.446,2041,1.537,2042,1.198,2043,1.537,2044,1.537,2045,1.651,2046,1.537,2047,1.78,2048,1.651,2049,2.548,2050,1.651,2051,1.651,2052,1.537,2053,1.651,2054,1.651,2055,1.651,2056,1.651,2057,1.651,2058,1.651,2059,1.651,2060,1.651,2061,1.651,2062,1.651,2063,1.651,2064,1.911,2065,1.651,2066,1.651,2067,1.153,2068,1.153,2069,1.651,2070,1.651,2071,1.651,2072,1.651,2073,1.651,2074,1.651,2075,2.036,2076,2.036,2077,2.036,2078,2.036,2079,2.036,2080,2.036,2081,2.036,2082,2.036,2083,2.036,2084,2.036,2085,2.036,2086,2.036,2087,2.036,2088,2.036,2089,2.036,2090,2.036,2091,2.036,2092,2.036,2093,2.036]],["title/injectables/DataService.html",[529,1.09,766,1.679]],["body/injectables/DataService.html",[3,0.117,4,0.107,9,0.098,17,1.136,19,1.375,25,0.127,26,0.61,30,0.914,33,1.022,37,0.765,39,0.943,40,0.008,41,0.526,42,0.198,43,0.718,45,0.984,46,0.804,50,0.974,53,0.249,54,0.393,56,0.137,57,0.013,59,0.804,87,1.009,106,1.058,165,0.595,179,0.858,186,0.524,219,0.006,220,0.006,223,0.444,224,3.389,228,2.171,231,1.333,255,1.059,276,1.6,366,1.938,529,1.653,542,3.04,545,1.348,550,2.277,552,2.339,605,0.756,620,4.431,643,2.217,688,2.035,722,1.827,750,1.898,759,3.575,766,2.545,775,2.9,782,4.038,787,1.959,831,4.038,832,4.146,838,3.601,841,3.644,874,3.509,1011,2.269,1012,3.913,1032,3.011,1096,3.525,1238,1.786,1312,4.238,1365,4.019,1463,5.218,1469,3.482,1575,3.644,1745,4.985,1746,4.016,1753,3.644,1771,1.913,1806,3.415,1923,4.016,1928,4.547,1935,2.628,1960,4.431,2047,3.644,2049,4.016,2052,5.218,2094,4.713,2095,5.606,2096,6.911,2097,6.911,2098,4.652,2099,6.911,2100,6.911,2101,6.124,2102,7.203,2103,8.129,2104,6.863,2105,6.911,2106,6.911,2107,6.911,2108,5.318,2109,5.318,2110,6.911,2111,5.318,2112,6.911,2113,3.579,2114,3.129,2115,3.129,2116,5.318,2117,6.911,2118,7.678,2119,5.318,2120,5.318,2121,5.318,2122,5.318,2123,5.318,2124,3.579,2125,5.318,2126,5.318,2127,5.318,2128,6.911,2129,5.318,2130,5.318,2131,4.314,2132,5.318,2133,5.318,2134,6.911,2135,5.318,2136,5.318,2137,5.318,2138,5.318,2139,5.318,2140,5.318,2141,5.318]],["title/interfaces/DialogData.html",[118,0.075,1568,2.923]],["body/interfaces/DialogData.html",[0,0.148,2,1.174,3,0.115,4,0.105,9,0.096,13,2.12,14,1.06,15,1.887,17,0.772,18,0.739,20,1.41,21,0.789,22,2.234,23,0.789,24,2.234,25,0.125,26,0.603,27,1.359,28,2.295,29,3.726,35,2.846,36,3.003,40,0.008,42,0.178,46,1.151,49,0.58,53,0.27,54,0.385,55,1.604,56,0.176,57,0.013,58,1.834,59,1.22,60,1.443,61,2.36,63,3.599,81,3.482,87,0.783,112,1.009,118,0.126,119,1.06,120,0.953,156,1.038,182,1.038,219,0.006,220,0.006,223,0.435,231,1.168,232,2.068,242,2.429,244,1.846,246,3.257,247,3.373,249,2.176,250,2.429,251,1.969,252,2.36,255,1.035,279,2.39,305,3.441,310,1.228,366,1.504,378,3.071,406,2.752,407,2.579,408,2.501,423,3.071,462,2.849,513,4.186,526,1.384,545,0.789,554,3.346,558,2.429,559,3.2,599,1.248,608,2.068,638,1.752,716,2.662,724,3.071,736,4.233,750,1.127,766,2.802,775,2.939,787,2.514,788,2.145,789,2.176,809,2.192,813,1.537,826,2.295,830,2.846,833,1.714,865,2.65,969,5.174,983,2.36,984,2.638,990,4.849,991,3.865,1006,3.346,1007,2.176,1008,2.068,1009,2.176,1025,3.2,1027,3.346,1028,3.513,1030,3.346,1031,3.2,1032,2.954,1041,1.714,1042,3.726,1101,3.2,1212,1.922,1234,2.234,1290,3.599,1310,5.537,1403,2.954,1473,2.638,1490,3.726,1522,3.707,1552,3.707,1560,5.404,1561,3.707,1565,6.049,1566,4.624,1567,4.624,1568,4.878,1571,4.624,1573,4.624,1575,4.255,1576,4.233,1577,4.846,1578,4.624,1580,5.537,1581,4.017,1582,3.346,1583,5.537,1584,4.233,1585,3.513,1586,2.579,1587,4.624,1588,4.624,1589,4.624,1590,4.624,1591,4.624,1592,6.049,1593,6.049,1594,5.537,1595,3.94,1596,3.707,1597,4.624,1598,4.624,1599,4.624,1600,4.233,1601,4.624,1602,4.624,1603,4.624,1604,4.624,1605,4.624,1606,4.624,1607,4.624,1608,2.849,1609,3.2,1610,4.624,1611,4.624,1612,4.624,1613,4.624,1614,4.624,1615,4.849,1616,4.624,1617,3.346,1618,4.624,1619,3.071,1620,4.624,1621,4.624,1622,4.624,1623,4.624,1624,3.94,1625,4.624,1626,5.154,1627,4.595,1628,2.849]],["title/interfaces/DialogData-1.html",[118,0.063,813,1.119,1568,2.437]],["body/interfaces/DialogData-1.html",[0,0.146,3,0.126,4,0.116,9,0.105,13,2.328,14,1.164,15,2.004,17,0.848,18,0.811,20,1.483,21,0.867,22,2.453,23,0.867,24,2.453,25,0.137,26,0.64,27,0.965,28,3.189,35,3.023,36,2.52,40,0.008,42,0.194,43,0.738,46,1.203,49,0.696,53,0.235,54,0.423,55,1.762,56,0.187,57,0.014,58,2.014,60,1.584,80,2.667,87,0.832,89,3.586,118,0.095,182,1.14,183,1.55,186,0.868,194,1.757,204,1.101,219,0.006,220,0.006,231,1.049,236,3.244,242,2.667,246,3.104,249,2.389,251,2.161,252,2.591,255,0.69,279,2.767,288,1.117,310,0.925,312,1.652,366,1.598,423,3.372,526,1.519,605,0.565,792,3.674,823,3.597,837,4.986,863,2.946,922,2.923,1000,4.266,1027,3.674,1029,3.023,1030,5.528,1177,3.475,1240,2.746,1306,4.07,1421,3.374,1568,5.099,1595,6.51,1596,6.353,1624,4.327,1673,4.07,1873,2.52,1934,4.266,2142,4.327,2143,6.51,2144,7.047,2145,5.401,2146,6.424,2147,5.353,2148,7.047,2149,6.424,2150,5.649,2151,6.424,2152,4.327,2153,5.078,2154,5.078,2155,4.648,2156,5.078,2157,4.07,2158,5.078,2159,5.078,2160,5.078,2161,5.078,2162,4.648,2163,5.078,2164,3.514,2165,5.078,2166,2.923,2167,5.078,2168,5.078,2169,5.078,2170,5.078,2171,3.857]],["title/interfaces/FilterSelection.html",[118,0.075,2172,2.923]],["body/interfaces/FilterSelection.html",[0,0.148,3,0.13,4,0.119,9,0.108,14,1.201,15,2.044,17,0.875,18,0.837,21,0.894,23,0.894,25,0.141,26,0.653,27,0.996,40,0.008,41,0.383,42,0.178,49,0.644,50,1.083,51,0.914,53,0.257,54,0.437,56,0.19,57,0.015,59,1.118,60,1.634,87,0.848,94,1.152,115,1.465,118,0.122,138,0.582,152,1.176,194,1.614,219,0.006,220,0.006,228,2.323,244,1.63,255,0.712,288,1.152,310,0.954,313,2.834,366,1.303,384,2.674,427,3.227,512,1.741,526,1.568,534,1.535,536,3.979,537,2.465,541,2.674,544,2.483,553,3.899,573,3.117,605,0.582,612,3.227,614,3.016,677,4.977,681,3.479,805,3.347,809,1.899,818,3.979,900,3.347,1041,1.941,1100,1.899,1251,2.6,1401,3.479,1473,3.55,1475,3.791,1502,2.531,1508,3.823,1538,4.2,1907,3.626,2157,4.2,2166,3.016,2172,5.42,2173,4.2,2174,3.626,2175,4.2,2176,5.975,2177,6.062,2178,5.997,2179,5.997,2180,5.997,2181,6.544,2182,4.464,2183,4.977,2184,4.795,2185,4.786,2186,3.791,2187,4.2,2188,3.791,2189,5.731,2190,4.795,2191,4.795,2192,4.795,2193,4.795,2194,4.795,2195,4.464,2196,5.583,2197,4.795,2198,3.791,2199,4.795,2200,4.795,2201,3.626,2202,4.795,2203,4.795,2204,4.464,2205,3.979,2206,5.43,2207,4.464,2208,4.795,2209,4.795,2210,4.795,2211,4.795,2212,4.795,2213,4.795,2214,4.464,2215,4.795,2216,4.795,2217,4.795,2218,4.795,2219,5.997,2220,4.795,2221,4.795,2222,4.795,2223,4.2,2224,4.977]],["title/interfaces/FilterState.html",[118,0.075,2225,3.239]],["body/interfaces/FilterState.html",[3,0.157,4,0.144,9,0.131,25,0.17,26,0.731,40,0.008,42,0.198,53,0.244,56,0.213,115,1.199,118,0.118,219,0.007,220,0.007,526,1.888,538,2.053,1212,2.622,1806,3.518,2172,5.77,2174,4.366,2225,5.875,2226,5.775,2227,7.107,2228,7.974,2229,5.775,2230,7.329,2231,7.12,2232,7.12]],["title/components/FrameComponent.html",[0,0.084,125,0.907]],["body/components/FrameComponent.html",[0,0.156,1,0.881,2,0.786,3,0.094,4,0.086,5,1.129,6,0.976,7,0.956,8,0.918,9,0.078,11,0.846,16,0.846,17,1.428,18,1.36,19,0.846,20,0.716,21,0.899,23,0.899,25,0.101,26,0.525,27,1.449,30,0.786,33,0.629,37,0.754,39,0.649,40,0.008,41,0.537,42,0.163,43,0.525,45,0.665,46,0.899,50,1.255,51,1.206,53,0.245,54,0.314,56,0.109,57,0.011,62,1.257,78,1.678,85,2.668,87,0.682,88,0.701,92,0.956,93,1.182,94,1.158,95,0.731,96,1.635,97,0.956,98,1.96,99,0.863,100,0.747,101,1.025,102,1.232,103,0.881,104,0.956,105,0.881,106,0.846,107,0.956,108,0.881,109,0.956,110,0.829,111,0.846,112,0.94,113,0.863,114,0.829,115,1.001,116,1.541,117,0.846,118,0.07,119,0.863,120,0.946,121,0.881,122,0.881,123,0.795,124,0.956,125,1.476,126,0.956,127,0.881,128,0.956,129,0.881,130,0.956,131,0.863,132,0.956,133,0.863,134,0.956,135,0.615,136,0.956,137,0.863,138,0.419,139,0.956,140,0.881,141,0.956,142,0.881,143,1.541,144,0.881,145,0.956,146,0.881,147,1.541,148,0.881,149,0.956,150,0.899,151,0.956,152,0.846,153,0.956,154,0.881,155,0.956,156,0.846,157,0.812,158,0.956,159,0.881,160,1.283,161,1.337,162,0.881,163,0.956,164,0.846,165,0.476,166,0.956,167,0.863,168,0.881,169,0.937,170,0.881,171,0.956,172,0.863,173,0.863,174,0.846,175,0.956,176,0.863,177,0.956,178,0.812,179,0.686,180,0.846,181,0.956,182,0.846,183,1.158,184,0.863,185,0.881,186,0.585,187,0.829,188,0.671,189,0.881,190,0.881,191,1.685,192,0.956,193,0.881,194,0.812,195,0.956,196,0.881,197,0.956,198,0.829,199,0.863,200,0.881,201,1.49,202,0.956,203,0.881,204,1.149,205,0.829,206,0.863,207,0.956,208,0.846,209,0.956,210,0.846,211,0.956,212,0.829,213,0.956,214,0.829,215,0.956,216,0.829,217,0.899,218,0.956,219,0.005,220,0.005,223,0.355,262,1.566,263,2.523,269,1.978,271,1.87,276,1.279,288,0.829,310,0.959,312,1.226,350,3.02,496,1.566,534,1.104,537,1.773,544,2.3,549,3.031,550,2.544,553,4.115,566,2.614,569,2.415,596,2.321,599,1.421,605,0.419,608,2.939,614,3.031,681,2.502,688,1.252,702,2.354,813,2.299,819,5.266,898,4.221,903,1.207,960,6.016,1050,4.959,1064,2.478,1085,4.221,1100,2.382,1137,5.601,1172,1.566,1193,1.396,1195,3.175,1198,3.81,1199,3.612,1243,2.848,1251,2.614,1652,3.555,1667,3.385,1803,4,2185,4.578,2198,5.004,2233,3.767,2234,5.943,2235,5.266,2236,5.943,2237,4.487,2238,5.943,2239,7.418,2240,3.031,2241,7.418,2242,5.943,2243,5.266,2244,5.943,2245,8.087,2246,4.487,2247,5.943,2248,5.943,2249,4.487,2250,4.82,2251,5.943,2252,6.851,2253,5.943,2254,5.557,2255,6.851,2256,6.851,2257,5.943,2258,7.418,2259,3.767,2260,6.106,2261,4.252,2262,5.943,2263,7.418,2264,4.252,2265,5.943,2266,4.252,2267,5.266,2268,4.82,2269,5.266,2270,4.82,2271,5.266,2272,5.173,2273,4.252,2274,5.943,2275,4.252,2276,4.252,2277,4.252,2278,3.21,2279,3.21,2280,4.487,2281,5.943,2282,4.252,2283,4.252,2284,4.252,2285,4.252,2286,4.252,2287,4.252,2288,7.418,2289,8.301,2290,5.173,2291,3.364,2292,2.726,2293,4.252,2294,3.767,2295,3.448,2296,4.252,2297,4.252,2298,5.943,2299,4.252,2300,3.448,2301,3.02]],["title/classes/GraphComponent.html",[57,0.012,1208,2.185]],["body/classes/GraphComponent.html",[0,0.158,2,1.116,3,0.092,4,0.085,9,0.077,25,0.1,26,0.52,30,0.778,37,0.705,39,0.643,40,0.008,41,0.546,42,0.191,43,0.52,45,0.825,49,0.562,53,0.174,56,0.19,57,0.019,87,0.949,118,0.128,120,0.912,135,0.984,138,0.793,186,0.413,219,0.005,220,0.005,223,0.35,228,2.808,231,1.241,255,1.095,305,2.661,307,2.009,512,2.679,526,2.399,538,1.209,545,1.329,569,1.704,572,2.165,592,1.955,605,0.874,632,1.844,688,2.65,702,2.694,717,1.544,725,4.01,749,4.606,750,1.271,805,2.374,860,4.449,862,2.072,886,2.661,953,2.211,971,1.896,1011,1.377,1063,2.273,1208,3.722,1209,3.259,1211,3.859,1212,2.86,1238,2.283,1239,1.951,1247,1.581,1258,2.211,1421,1.951,1474,3.243,1577,4.394,1582,2.688,1586,3.36,1619,2.467,1628,3.212,1753,2.211,1771,1.508,1776,3.585,1811,4.937,1873,1.844,2008,1.581,2067,2.374,2068,3.849,2098,2.822,2302,4.737,2303,2.688,2304,4.773,2305,5.214,2306,4.193,2307,4.193,2308,4.193,2309,4.18,2310,5.773,2311,4.193,2312,4.962,2313,4.865,2314,4.18,2315,4.193,2316,4.193,2317,2.139,2318,2.978,2319,4.18,2320,2.978,2321,2.978,2322,5.515,2323,2.688,2324,2.822,2325,5.226,2326,5.719,2327,4.576,2328,2.822,2329,2.688,2330,2.822,2331,4.394,2332,5.237,2333,2.822,2334,5.226,2335,5.515,2336,5.162,2337,2.571,2338,2.688,2339,5.226,2340,4.17,2341,3.609,2342,2.978,2343,2.688,2344,2.978,2345,3.961,2346,2.822,2347,2.688,2348,2.978,2349,2.978,2350,2.978,2351,2.978,2352,2.978,2353,2.688,2354,2.978,2355,2.571,2356,2.978,2357,2.978,2358,2.978,2359,2.978,2360,2.978,2361,2.978,2362,4.18,2363,5.515,2364,4.576,2365,3.773,2366,3.961,2367,2.978,2368,3.609,2369,2.978,2370,2.978,2371,2.978,2372,2.978,2373,2.978,2374,2.978,2375,2.978,2376,2.978,2377,2.978,2378,4.18,2379,4.359,2380,4.83,2381,4.83,2382,2.467,2383,2.978,2384,2.978,2385,2.374,2386,2.374,2387,2.467,2388,4.576,2389,5.437,2390,3.961,2391,4.83,2392,4.18,2393,2.978,2394,2.978,2395,2.978,2396,2.978,2397,4.18,2398,2.978,2399,2.978,2400,2.978,2401,2.978,2402,2.978,2403,2.978,2404,2.978,2405,2.978,2406,2.978,2407,2.978,2408,2.978,2409,2.978,2410,2.978,2411,2.978,2412,2.978,2413,4.576,2414,2.688,2415,4.18,2416,3.961,2417,2.978,2418,2.978,2419,2.978,2420,2.978,2421,2.978,2422,2.978,2423,2.978,2424,2.978,2425,4.18,2426,2.978,2427,2.978,2428,2.822,2429,2.978,2430,2.822,2431,2.374,2432,4.83,2433,2.978,2434,2.978,2435,2.978,2436,2.978,2437,2.688,2438,2.978,2439,2.978,2440,2.978,2441,2.978,2442,2.978,2443,2.978,2444,2.978,2445,2.978]],["title/interfaces/GraphData.html",[118,0.075,2331,2.489]],["body/interfaces/GraphData.html",[0,0.153,2,1.166,3,0.094,4,0.086,9,0.078,25,0.102,26,0.527,40,0.008,41,0.481,42,0.194,45,0.668,49,0.524,53,0.176,56,0.191,57,0.019,87,0.954,118,0.129,120,0.915,135,1.076,138,0.798,186,0.422,219,0.005,220,0.005,223,0.357,228,2.771,231,1.263,255,1.099,305,2.7,307,2.051,512,2.658,526,2.448,538,1.234,545,1.303,569,1.739,572,2.172,592,1.972,605,0.877,632,1.882,688,2.709,702,2.724,725,3.836,749,4.63,750,1.289,805,2.423,860,4.125,862,2.115,886,2.7,953,2.256,971,1.935,1011,1.405,1063,2.287,1208,3.295,1209,3.295,1211,2.051,1212,2.881,1238,2.308,1239,1.991,1247,1.614,1258,2.256,1421,1.991,1474,3.272,1577,4.423,1582,2.744,1586,3.397,1619,2.518,1628,3.258,1753,2.256,1771,1.539,1776,3.922,1811,4.969,1873,1.882,2008,1.614,2067,2.423,2068,3.892,2098,2.88,2302,2.518,2303,2.744,2309,3.04,2310,5.007,2312,4.627,2313,4.768,2314,3.04,2317,2.183,2318,3.04,2319,4.24,2320,3.04,2321,3.04,2322,5.907,2323,2.744,2324,2.88,2325,5.266,2326,5.756,2327,4.627,2328,2.88,2329,3.827,2330,4.018,2331,4.539,2332,5.907,2333,2.88,2334,5.709,2335,6.025,2336,5.438,2337,2.624,2338,2.744,2339,5.266,2340,4.216,2341,3.661,2342,3.04,2343,2.744,2344,3.04,2345,4.018,2346,2.88,2347,2.744,2348,3.04,2349,3.04,2350,3.04,2351,3.04,2352,3.04,2353,2.744,2354,3.04,2355,2.624,2356,3.04,2357,3.04,2358,3.04,2359,3.04,2360,3.04,2361,3.04,2362,4.24,2363,5.557,2364,4.627,2365,3.827,2366,4.018,2367,3.04,2368,3.661,2369,3.04,2370,3.04,2371,3.04,2372,3.04,2373,3.04,2374,3.04,2375,3.04,2376,3.04,2377,3.04,2378,4.24,2379,4.408,2380,4.883,2381,4.883,2382,2.518,2383,3.04,2384,3.04,2385,2.423,2386,2.423,2387,2.518,2388,4.627,2389,5.457,2390,4.018,2391,4.883,2392,4.24,2393,3.04,2394,3.04,2395,3.04,2396,3.04,2397,4.24,2398,3.04,2399,3.04,2400,3.04,2401,3.04,2402,3.04,2403,3.04,2404,3.04,2405,3.04,2406,3.04,2407,3.04,2408,3.04,2409,3.04,2410,3.04,2411,3.04,2412,3.04,2413,4.627,2414,2.744,2415,4.24,2416,4.018,2417,3.04,2418,3.04,2419,3.04,2420,3.04,2421,3.04,2422,3.04,2423,3.04,2424,3.04,2425,4.24,2426,3.04,2427,3.04,2428,2.88,2429,3.04,2430,2.88,2431,2.423,2432,4.883,2433,3.04,2434,3.04,2435,3.04,2436,3.04,2437,2.744,2438,3.04,2439,3.04,2440,3.04,2441,3.04,2442,3.04,2443,3.04,2444,3.04,2445,3.04]],["title/classes/GraphDataFactory.html",[57,0.012,2337,2.796]],["body/classes/GraphDataFactory.html",[0,0.155,2,1.115,3,0.092,4,0.084,9,0.077,25,0.1,30,0.777,37,0.534,39,0.642,40,0.008,41,0.521,42,0.186,43,0.519,45,0.825,49,0.517,53,0.174,56,0.19,57,0.019,87,0.948,118,0.128,120,0.92,135,1.066,138,0.814,186,0.412,219,0.005,220,0.005,223,0.349,228,2.807,231,1.283,255,1.095,305,2.657,307,2.005,512,2.649,526,2.399,538,1.206,545,1.296,569,1.7,572,2.164,592,1.953,605,0.873,632,2.584,688,2.61,702,2.69,717,1.541,725,4.008,749,4.679,750,1.269,805,2.368,860,4.091,862,2.903,886,2.657,953,2.205,971,1.892,1011,1.374,1063,2.271,1208,3.255,1209,3.255,1211,3.255,1212,3.043,1238,2.28,1239,1.947,1247,1.578,1258,2.205,1421,1.947,1474,3.239,1577,4.391,1582,2.682,1586,3.356,1619,3.457,1628,3.207,1753,2.205,1771,2.113,1776,4.091,1811,4.933,1873,1.84,2008,1.578,2067,3.326,2068,3.844,2098,3.954,2302,3.996,2303,2.682,2309,2.971,2310,4.957,2312,4.571,2313,4.734,2314,2.971,2317,2.134,2318,2.971,2319,5.231,2320,2.971,2321,2.971,2322,5.511,2323,2.682,2324,2.815,2325,5.222,2326,5.714,2327,4.571,2328,2.815,2329,2.682,2330,2.815,2331,4.838,2332,5.231,2333,2.815,2334,5.222,2335,5.511,2336,5.158,2337,3.603,2338,3.767,2339,5.677,2340,4.933,2341,4.516,2342,4.173,2343,3.767,2344,4.173,2345,4.957,2346,3.954,2347,3.767,2348,4.173,2349,2.971,2350,2.971,2351,2.971,2352,2.971,2353,3.767,2354,4.173,2355,3.603,2356,4.173,2357,2.971,2358,2.971,2359,2.971,2360,2.971,2361,2.971,2362,4.173,2363,5.511,2364,4.571,2365,3.767,2366,3.954,2367,2.971,2368,3.603,2369,2.971,2370,2.971,2371,2.971,2372,2.971,2373,2.971,2374,2.971,2375,2.971,2376,2.971,2377,2.971,2378,4.173,2379,4.354,2380,4.824,2381,4.824,2382,2.461,2383,2.971,2384,2.971,2385,2.368,2386,2.368,2387,2.461,2388,4.571,2389,5.435,2390,3.954,2391,4.824,2392,4.173,2393,2.971,2394,2.971,2395,2.971,2396,2.971,2397,4.173,2398,2.971,2399,2.971,2400,2.971,2401,2.971,2402,2.971,2403,2.971,2404,2.971,2405,2.971,2406,2.971,2407,2.971,2408,2.971,2409,2.971,2410,2.971,2411,2.971,2412,2.971,2413,4.571,2414,2.682,2415,4.173,2416,3.954,2417,2.971,2418,2.971,2419,2.971,2420,2.971,2421,2.971,2422,2.971,2423,2.971,2424,2.971,2425,4.173,2426,2.971,2427,2.971,2428,2.815,2429,2.971,2430,2.815,2431,2.368,2432,4.824,2433,2.971,2434,2.971,2435,2.971,2436,2.971,2437,2.682,2438,2.971,2439,2.971,2440,2.971,2441,2.971,2442,2.971,2443,2.971,2444,2.971,2445,2.971,2446,5.875,2447,5.875,2448,4.183,2449,4.183]],["title/classes/GraphInterface.html",[57,0.012,1209,2.185]],["body/classes/GraphInterface.html",[0,0.152,2,1.115,3,0.092,4,0.084,9,0.077,25,0.1,26,0.519,30,0.777,37,0.75,39,0.642,40,0.008,41,0.546,42,0.193,43,0.519,45,0.825,49,0.561,53,0.174,56,0.19,57,0.019,87,0.948,118,0.128,120,0.912,135,0.983,138,0.764,186,0.412,219,0.005,220,0.005,228,2.759,231,1.241,255,1.095,305,2.657,307,2.005,512,2.678,526,2.399,538,1.206,545,1.328,569,1.7,572,2.164,592,1.953,605,0.873,632,1.84,688,2.649,702,2.69,717,1.541,725,4.008,749,4.604,750,1.269,805,2.368,860,4.091,862,2.067,886,2.657,953,2.205,971,1.892,1011,1.374,1063,2.271,1208,3.255,1209,3.718,1211,4.042,1212,2.857,1238,2.28,1239,1.947,1247,1.578,1258,2.205,1421,1.947,1474,3.239,1577,4.391,1582,2.682,1586,3.356,1619,2.461,1628,3.207,1753,2.205,1771,1.505,1776,3.58,1811,4.933,1873,1.84,2008,1.578,2067,2.368,2068,3.844,2098,2.815,2302,4.963,2303,2.682,2304,4.765,2305,5.206,2309,2.971,2310,4.957,2312,4.571,2313,4.734,2314,2.971,2317,2.134,2318,2.971,2319,4.173,2320,2.971,2321,2.971,2322,5.511,2323,2.682,2324,2.815,2325,5.222,2326,5.714,2327,4.571,2328,2.815,2329,2.682,2330,2.815,2331,4.391,2332,5.231,2333,2.815,2334,5.222,2335,5.511,2336,5.158,2337,2.565,2338,2.682,2339,5.222,2340,4.164,2341,3.603,2342,2.971,2343,2.682,2344,2.971,2345,3.954,2346,2.815,2347,2.682,2348,2.971,2349,2.971,2350,2.971,2351,2.971,2352,2.971,2353,2.682,2354,2.971,2355,2.565,2356,2.971,2357,2.971,2358,2.971,2359,2.971,2360,2.971,2361,2.971,2362,4.173,2363,5.511,2364,4.571,2365,3.767,2366,3.954,2367,2.971,2368,3.603,2369,2.971,2370,2.971,2371,2.971,2372,2.971,2373,2.971,2374,2.971,2375,2.971,2376,2.971,2377,2.971,2378,4.173,2379,4.354,2380,4.824,2381,4.824,2382,2.461,2383,2.971,2384,2.971,2385,2.368,2386,2.368,2387,2.461,2388,5.677,2389,5.435,2390,3.954,2391,5.511,2392,5.231,2393,4.173,2394,2.971,2395,2.971,2396,2.971,2397,4.173,2398,2.971,2399,2.971,2400,2.971,2401,4.173,2402,2.971,2403,2.971,2404,2.971,2405,2.971,2406,2.971,2407,2.971,2408,2.971,2409,2.971,2410,2.971,2411,2.971,2412,2.971,2413,4.571,2414,2.682,2415,4.173,2416,3.954,2417,2.971,2418,2.971,2419,2.971,2420,2.971,2421,2.971,2422,2.971,2423,2.971,2424,2.971,2425,4.173,2426,2.971,2427,2.971,2428,2.815,2429,2.971,2430,2.815,2431,2.368,2432,4.824,2433,2.971,2434,2.971,2435,2.971,2436,2.971,2437,2.682,2438,2.971,2439,2.971,2440,2.971,2441,2.971,2442,2.971,2443,2.971,2444,2.971,2445,2.971,2450,4.183,2451,4.183,2452,4.183,2453,4.183,2454,4.183,2455,4.183,2456,4.183,2457,4.183]],["title/classes/GraphIssue.html",[57,0.012,2336,2.923]],["body/classes/GraphIssue.html",[0,0.151,2,1.111,3,0.091,4,0.083,9,0.076,25,0.098,26,0.513,30,0.769,37,0.727,39,0.635,40,0.008,41,0.518,42,0.193,43,0.646,45,0.819,49,0.513,53,0.172,56,0.188,57,0.019,87,0.944,118,0.127,120,0.931,135,0.975,138,0.76,186,0.406,219,0.005,220,0.005,223,0.485,228,2.836,231,1.236,255,1.093,305,3.489,307,1.975,512,2.686,526,2.393,538,1.188,545,1.337,569,1.675,572,2.158,592,1.94,605,0.871,632,1.813,688,2.603,702,3.057,717,1.518,725,3.998,749,4.727,750,1.255,805,2.333,860,4.338,862,2.036,886,2.629,953,2.173,971,1.864,1011,1.353,1063,2.26,1208,3.229,1209,3.229,1211,3.944,1212,2.949,1238,2.262,1239,1.918,1247,1.554,1258,2.173,1421,1.918,1474,3.218,1577,4.663,1582,2.642,1586,3.329,1619,2.425,1628,3.173,1753,2.173,1771,1.482,1776,3.552,1811,4.91,1873,1.813,2008,1.554,2067,2.333,2068,3.814,2098,2.774,2302,4.842,2303,2.642,2304,4.716,2309,2.927,2310,4.924,2312,5.193,2313,4.944,2314,2.927,2317,2.102,2318,2.927,2319,4.13,2320,2.927,2321,2.927,2322,5.48,2323,2.642,2324,2.774,2325,5.389,2326,5.687,2327,4.534,2328,2.774,2329,2.642,2330,2.774,2331,4.37,2332,5.197,2333,2.774,2334,5.193,2335,5.48,2336,5.477,2337,2.527,2338,2.642,2339,5.193,2340,4.131,2341,3.565,2342,2.927,2343,2.642,2344,2.927,2345,3.913,2346,2.774,2347,2.642,2348,2.927,2349,2.927,2350,2.927,2351,2.927,2352,2.927,2353,2.642,2354,2.927,2355,2.527,2356,2.927,2357,2.927,2358,2.927,2359,2.927,2360,2.927,2361,2.927,2362,4.13,2363,5.48,2364,4.534,2365,3.728,2366,3.913,2367,2.927,2368,3.565,2369,2.927,2370,2.927,2371,2.927,2372,2.927,2373,2.927,2374,2.927,2375,2.927,2376,2.927,2377,2.927,2378,4.13,2379,4.319,2380,4.785,2381,4.785,2382,2.425,2383,2.927,2384,2.927,2385,2.333,2386,2.333,2387,2.425,2388,4.534,2389,5.503,2390,3.913,2391,4.785,2392,4.13,2393,2.927,2394,2.927,2395,2.927,2396,2.927,2397,4.13,2398,2.927,2399,2.927,2400,2.927,2401,2.927,2402,2.927,2403,2.927,2404,2.927,2405,2.927,2406,2.927,2407,2.927,2408,2.927,2409,2.927,2410,2.927,2411,2.927,2412,2.927,2413,5.389,2414,4.319,2415,5.197,2416,4.924,2417,4.13,2418,4.13,2419,2.927,2420,2.927,2421,2.927,2422,2.927,2423,4.13,2424,2.927,2425,4.13,2426,2.927,2427,2.927,2428,2.774,2429,2.927,2430,2.774,2431,2.333,2432,4.785,2433,2.927,2434,2.927,2435,2.927,2436,2.927,2437,2.642,2438,2.927,2439,2.927,2440,2.927,2441,2.927,2442,2.927,2443,2.927,2444,2.927,2445,2.927,2458,5.814,2459,4.121,2460,4.121,2461,4.121,2462,4.121,2463,4.121,2464,4.121]],["title/modules/GraphQLModule.html",[324,3.069,333,3.069]],["body/modules/GraphQLModule.html",[3,0.119,4,0.109,9,0.099,11,1.539,27,0.91,40,0.008,53,0.271,54,0.399,56,0.211,57,0.014,87,0.801,106,1.685,112,0.651,179,0.872,201,1.032,204,0.748,219,0.006,220,0.006,228,1.698,255,1.117,296,2.671,310,1.127,326,4.283,333,4.701,339,4.081,344,5.274,376,6.189,377,3.84,397,3.181,419,6.189,420,3.84,421,6.753,439,4.224,478,7.035,482,3.466,489,4.384,490,4.961,519,3.84,524,4.384,572,2.117,592,2.052,605,0.834,623,4.424,634,1.814,638,1.815,668,4.283,669,3.954,673,4.081,686,3.638,687,4.081,750,1.766,779,3.638,806,4.79,924,4.081,1011,1.775,1041,2.686,1192,2.254,1234,2.314,1235,3.812,1407,3.84,1422,3.348,1448,2.85,1553,5.505,1753,2.85,1767,3.84,1775,3.84,1819,3.638,1851,3.638,1873,2.378,1933,3.315,2095,4.384,2431,3.954,2465,4.384,2466,6.985,2467,6.985,2468,6.985,2469,6.015,2470,6.985,2471,6.985,2472,7.738,2473,5.406,2474,8.944,2475,5.406,2476,5.406,2477,4.79,2478,5.406,2479,5.406,2480,4.79,2481,4.79,2482,6.869,2483,5.406,2484,4.384,2485,4.79,2486,4.79,2487,4.79,2488,4.79,2489,6.276,2490,6.276,2491,4.701,2492,4.79,2493,4.384,2494,4.79,2495,4.79,2496,4.79,2497,4.79,2498,5.665,2499,6.276,2500,4.384,2501,4.384,2502,4.384,2503,4.384,2504,4.79,2505,7.504,2506,4.79,2507,4.79,2508,3.638,2509,7.738,2510,8.674,2511,5.406,2512,6.985,2513,5.406,2514,4.478,2515,5.406,2516,5.406,2517,5.406,2518,5.406,2519,5.406,2520,5.406,2521,5.406,2522,4.79,2523,5.406,2524,5.406,2525,5.406,2526,5.406,2527,5.406,2528,7.738,2529,6.189,2530,5.406,2531,4.79,2532,5.406,2533,5.406,2534,6.985,2535,6.985,2536,5.406,2537,4.79,2538,5.406,2539,5.406,2540,5.406,2541,5.406,2542,4.79,2543,6.985,2544,6.985]],["title/modules/GraphsModule.html",[324,3.069,334,3.069]],["body/modules/GraphsModule.html",[3,0.093,4,0.085,9,0.077,18,0.836,40,0.008,53,0.284,54,0.311,55,1.296,56,0.152,57,0.015,81,3.014,99,1.638,101,0.695,102,1.225,105,1.672,115,0.71,120,0.767,122,1.84,127,1.84,133,1.638,135,1.303,137,1.828,138,0.582,140,1.84,142,1.84,144,1.84,146,1.84,148,1.84,150,1.878,152,1.604,170,1.84,172,1.638,174,1.604,178,1.694,185,1.84,187,1.572,188,0.666,203,1.84,206,1.802,208,1.766,210,1.766,219,0.005,220,0.005,222,2.995,223,0.352,251,1.591,285,3.42,286,4.461,287,2.995,313,2.021,324,3.977,326,2.586,327,3.977,334,6.516,335,4.461,336,2.586,338,4.792,339,3.184,341,5.236,342,6.044,343,5.236,344,4.461,347,5.236,348,3.737,351,6.044,352,3.737,353,6.044,354,4.197,355,6.044,356,3.737,357,6.044,358,6.044,359,3.737,360,6.044,361,3.737,362,3.977,363,5.236,364,5.236,365,3.737,368,4.792,378,2.481,381,5.236,382,5.236,384,2.672,398,5.236,400,3.42,408,2.832,409,6.044,410,3.737,411,6.044,412,5.236,413,3.225,414,6.044,415,3.737,425,5.236,426,4.792,427,2.302,428,5.236,429,2.586,430,3.42,449,3.737,461,5.236,462,3.723,465,4.792,489,3.42,490,2.704,491,3.737,498,3.184,499,3.737,502,3.184,503,2.995,504,3.737,524,4.792,786,3.42,834,2.704,835,2.704,1091,1.591,1092,2.995,1213,2.021,1584,3.42,1637,3.42,1648,3.42,1803,3.977,1939,3.977,2174,2.586,2229,3.42,2545,3.737,2546,3.737,2547,3.737,2548,4.217,2549,5.909,2550,5.909,2551,5.909,2552,3.184,2553,4.217,2554,5.909,2555,4.792,2556,3.184,2557,4.197,2558,5.909,2559,4.217,2560,5.909,2561,4.217,2562,5.909,2563,3.184,2564,6.821,2565,4.217,2566,4.217,2567,4.217,2568,5.909,2569,3.623,2570,7.782,2571,3.184,2572,4.217,2573,5.909,2574,4.217,2575,3.42,2576,4.217,2577,3.42,2578,3.42,2579,4.217,2580,5.909,2581,4.217,2582,4.217,2583,4.217,2584,3.42,2585,4.217,2586,4.217,2587,5.909,2588,4.217,2589,5.909,2590,4.217,2591,4.217,2592,3.42,2593,4.217,2594,3.42,2595,4.217,2596,4.217,2597,3.737]],["title/interfaces/InterfaceNode.html",[118,0.075,1216,2.489]],["body/interfaces/InterfaceNode.html",[0,0.15,3,0.117,4,0.164,5,1.141,9,0.127,25,0.127,26,0.611,40,0.008,42,0.202,49,0.714,53,0.24,56,0.178,57,0.018,87,0.882,101,0.627,112,0.642,118,0.152,120,0.718,135,0.771,138,0.682,165,0.967,186,0.831,188,0.842,219,0.006,220,0.006,231,1.177,255,0.642,279,2.415,291,4.166,311,3.136,512,1.57,526,1.413,538,1.537,545,1.307,592,2.364,605,0.879,619,1.873,717,1.963,722,1.831,814,2.282,833,1.75,903,1.811,949,3.136,1063,1.954,1064,3.392,1067,3.695,1068,3.483,1091,2.01,1195,3.29,1203,4.523,1204,2.41,1205,3.017,1206,4.802,1207,5.176,1208,3.684,1209,3.317,1210,2.909,1211,2.555,1212,3.284,1213,3.317,1214,2.719,1215,2.81,1216,4.441,1217,4.289,1218,4.523,1219,3.269,1220,3.269,1221,3.269,1222,3.269,1223,3.269,1224,3.269,1225,3.269,1226,3.269,1227,3.221,1228,3.269,1229,3.269,1230,4.244,1231,3.684,1232,3.136,1233,3.136,1234,2.282,1235,3.778,1236,3.417,1237,3.417,1238,1.79,1239,2.48,1240,2.555,1241,3.269,1242,2.909,1243,2.555,1244,2.909,1245,3.269,1246,3.417,1247,2.01,1248,3.417,1249,2.719,1250,3.417,1251,2.344,1252,3.417,1253,2.909,1254,3.417,1255,3.269,1256,3.417,1257,4.351,1258,2.81,1259,3.017,1260,2.555,1261,4.773,1262,3.417,1263,3.417,1264,3.417,1265,4.073,1266,3.417,1267,4.437,1268,3.417,1269,3.417,1270,3.417,1271,3.269,1272,1.963,1273,3.918,1274,4.928,1275,3.417,1276,3.417,1277,4.437,1278,3.417,1279,4.437,1280,4.437,1281,3.417,1282,3.417,1283,4.195,1284,4.437,1285,3.269,1286,4.244,1287,4.437,1288,3.417,1289,4.606,1290,3.649,1291,3.417,1292,3.269,1293,3.417,1294,3.417,1295,3.417,1296,3.269,1297,4.073,1298,3.269,1299,2.909,1300,3.269,1301,2.81]],["title/injectables/InterfaceStoreService.html",[529,1.09,1550,2.923]],["body/injectables/InterfaceStoreService.html",[0,0.106,2,0.962,3,0.127,4,0.116,9,0.146,25,0.137,27,1.586,30,0.962,33,0.852,37,0.801,39,0.963,40,0.008,41,0.586,42,0.194,43,0.779,45,0.967,49,0.723,53,0.247,54,0.425,56,0.148,57,0.015,59,1.266,112,0.876,219,0.006,220,0.006,223,0.72,224,3.032,231,1.052,255,0.876,276,1.732,288,1.122,526,1.928,529,1.739,534,1.495,537,2.401,542,3.198,544,2.899,545,1.266,552,2.532,605,0.851,643,2.401,688,1.696,723,1.868,815,3.969,830,2.401,1029,3.032,1038,5.898,1066,3.584,1234,3.113,1243,3.485,1304,3.691,1342,5.102,1346,5.102,1350,5.102,1368,6.444,1377,7.419,1382,6.444,1464,3.259,1550,4.662,1771,2.616,2035,4.894,2317,2.937,2598,7.934,2599,7.272,2600,7.272,2601,5.898,2602,4.459,2603,5.49,2604,7.272,2605,6.444,2606,7.272,2607,5.758,2608,8.373,2609,7.971,2610,8.373,2611,7.971,2612,8.373,2613,7.419,2614,8.373,2615,8.373,2616,5.758,2617,7.272,2618,6.444,2619,8.373,2620,5.758,2621,6.444,2622,7.272,2623,5.758,2624,7.272,2625,7.419,2626,7.272,2627,7.272,2628,5.758,2629,5.758,2630,4.347,2631,5.758,2632,5.758,2633,5.758]],["title/components/IssueCategoryComponent.html",[0,0.084,127,0.945]],["body/components/IssueCategoryComponent.html",[0,0.149,1,1.099,2,0.912,3,0.117,4,0.107,5,0.874,6,1.217,7,1.193,8,1.145,9,0.097,11,1.055,16,1.055,17,1.439,18,1.373,19,1.055,20,0.893,21,1.043,23,1.043,25,0.127,37,0.482,40,0.008,41,0.545,42,0.117,53,0.204,54,0.392,56,0.136,57,0.013,62,1.459,88,0.874,92,1.193,93,1.372,94,1.344,95,0.912,96,1.789,97,1.193,98,2.043,99,1.077,100,0.931,101,1.047,102,1.43,103,1.099,104,1.193,105,1.099,106,1.055,107,1.193,108,1.099,109,1.193,110,1.033,111,1.055,112,1.014,113,1.077,114,1.033,115,1.162,116,1.725,117,1.055,118,0.088,119,1.077,120,0.987,121,1.099,122,1.099,123,0.991,124,1.193,125,1.055,126,1.193,127,1.683,128,1.193,129,1.099,130,1.193,131,1.077,132,1.193,133,1.077,134,1.193,135,0.767,136,1.193,137,1.077,138,0.522,139,1.193,140,1.099,141,1.193,142,1.099,143,1.725,144,1.099,145,1.193,146,1.099,147,1.725,148,1.099,149,1.193,150,1.122,151,1.193,152,1.055,153,1.193,154,1.099,155,1.193,156,1.055,157,1.012,158,1.193,159,1.099,160,1.489,161,1.552,162,1.099,163,1.193,164,1.055,165,0.594,166,1.193,167,1.077,168,1.099,169,1.169,170,1.099,171,1.193,172,1.077,173,1.077,174,1.055,175,1.193,176,1.077,177,1.193,178,1.012,179,0.856,180,1.055,181,1.193,182,1.055,183,1.344,184,1.077,185,1.099,186,0.68,187,1.033,188,0.837,189,1.099,190,1.099,191,1.077,192,1.193,193,1.099,194,1.012,195,1.193,196,1.099,197,1.193,198,1.033,199,1.077,200,1.099,201,1.012,202,1.193,203,1.099,204,0.734,205,1.033,206,1.077,207,1.193,208,1.055,209,1.193,210,1.055,211,1.193,212,1.033,213,1.193,214,1.033,215,1.193,216,1.033,217,1.122,218,1.193,219,0.006,220,0.006,271,2.332,305,3.973,306,3.637,307,3.306,308,5.208,723,1.616,763,2.54,788,1.666,809,1.703,830,2.211,903,1.401,1172,1.953,1174,2.398,1175,2.62,1177,2.542,1185,3.12,1189,2.796,1191,3.034,1192,2.211,1193,1.741,1212,2.824,1272,1.953,1545,3.002,1629,3.519,2240,2.705,2594,5.595,2634,4.423,2635,4.699,2636,7.667,2637,6.898,2638,5.303,2639,3.4,2640,4.004,2641,2.894,2642,4.699]],["title/components/IssueContentsComponent.html",[0,0.084,129,0.945]],["body/components/IssueContentsComponent.html",[0,0.145,1,0.81,2,0.74,3,0.086,4,0.079,5,0.644,6,0.897,7,0.879,8,0.843,9,0.072,11,0.777,14,1.136,15,1.808,16,0.777,17,1.423,18,1.357,19,0.777,20,0.658,21,0.846,23,0.846,25,0.093,26,0.494,27,1.517,30,0.74,33,0.578,37,0.753,39,0.427,40,0.008,41,0.509,42,0.157,43,0.345,45,0.732,46,1.19,49,0.426,50,0.715,51,0.604,53,0.245,54,0.288,56,0.101,57,0.01,60,1.08,61,2.531,62,1.184,78,1.103,81,1.992,88,1.391,91,2.352,92,0.879,93,1.113,94,1.091,95,0.672,96,1.574,97,0.879,98,1.925,99,0.793,100,0.686,101,1.006,102,1.16,103,0.81,104,0.879,105,0.81,106,0.777,107,0.879,108,0.81,109,0.879,110,0.761,111,0.777,112,0.91,113,0.793,114,1.091,115,0.942,116,1.471,117,0.777,118,0.065,119,0.793,120,0.992,121,0.81,122,0.81,123,0.73,124,0.879,125,0.777,126,0.879,127,0.81,128,0.879,129,1.48,130,0.879,131,0.793,132,0.879,133,0.793,134,0.879,135,0.565,136,0.879,137,0.793,138,0.385,139,0.879,140,0.81,141,0.879,142,0.81,143,1.471,144,0.81,145,0.879,146,0.81,147,1.471,148,0.81,149,0.879,150,0.826,151,0.879,152,0.777,153,0.879,154,0.81,155,0.879,156,1.301,157,0.746,158,0.879,159,0.81,160,1.542,161,1.259,162,0.81,163,0.879,164,0.777,165,0.627,166,0.879,167,0.793,168,0.81,169,0.861,170,0.81,171,0.879,172,0.793,173,0.793,174,0.777,175,0.879,176,0.793,177,0.879,178,0.746,179,0.63,180,0.777,181,0.879,182,0.777,183,1.091,184,0.793,185,0.81,186,0.551,187,0.761,188,1.194,189,0.81,190,0.81,191,0.793,192,0.879,193,0.81,194,1.248,195,0.879,196,0.81,197,0.879,198,0.761,199,1.45,200,0.81,201,1.363,202,0.879,203,0.81,204,0.774,205,0.761,206,0.793,207,0.879,208,0.777,209,0.879,210,0.777,211,0.879,212,0.761,213,0.879,214,0.761,215,0.879,216,0.761,217,0.826,218,0.879,219,0.005,220,0.005,223,0.326,230,3.055,231,0.81,241,1.718,244,1.441,262,1.438,269,1.818,271,2.876,279,1.227,288,0.761,310,1.055,317,3.588,378,4.964,512,1.648,534,1.014,545,0.846,546,2.196,614,3.643,636,2.774,675,2.395,692,3.168,723,1.532,742,2.395,750,1.208,760,2.591,763,2.061,765,2.395,766,2.897,782,3.423,784,2.727,787,2.408,788,1.758,789,1.629,790,1.872,800,1.547,803,4.043,809,1.254,813,1.15,826,1.718,830,2.333,831,2.682,832,1.992,833,1.282,865,2.147,881,3.461,896,3.588,903,1.861,952,2.059,972,7.306,989,2.298,991,4.043,1000,3.293,1001,2.774,1003,3.588,1011,2.345,1021,2.774,1025,2.395,1067,2.657,1070,2.902,1071,3.293,1100,1.254,1172,2.897,1174,3.23,1175,2.765,1176,3.336,1177,3.623,1185,2.298,1189,3.765,1191,2.876,1192,1.629,1193,2.66,1198,2.504,1272,2.63,1484,3.588,1541,3.57,1545,2.211,1633,2.333,1634,1.992,1652,1.872,1661,2.855,1667,2.765,1674,2.504,1934,2.298,2237,4.225,2240,1.992,2295,4.539,2300,3.168,2301,2.774,2641,3.898,2642,3.461,2643,3.461,2644,4.225,2645,5.073,2646,6.54,2647,5.596,2648,6.54,2649,6.54,2650,7.142,2651,6.328,2652,7.142,2653,5.596,2654,3.906,2655,3.906,2656,3.906,2657,4.959,2658,3.906,2659,3.906,2660,5.596,2661,5.596,2662,3.906,2663,2.629,2664,2.504,2665,3.906,2666,3.906,2667,3.906,2668,6.328,2669,2.774,2670,3.906,2671,3.906,2672,3.906,2673,3.906,2674,3.906,2675,3.906,2676,3.906,2677,3.906,2678,3.906,2679,5.596,2680,3.906,2681,5.596,2682,3.906,2683,5.596,2684,5.596,2685,5.596,2686,4.959,2687,3.168,2688,4.225,2689,2.629,2690,3.461,2691,3.055,2692,2.298,2693,3.461,2694,1.93,2695,3.975,2696,2.774,2697,2.949,2698,4.959]],["title/components/IssueDetailComponent.html",[0,0.084,131,0.926]],["body/components/IssueDetailComponent.html",[0,0.13,1,0.682,2,0.653,3,0.072,4,0.066,5,0.542,6,0.755,7,0.74,8,0.711,9,0.06,11,0.655,14,1.002,15,1.637,16,0.655,17,1.413,18,1.343,19,0.655,20,0.554,21,0.746,23,0.746,25,0.079,26,0.523,27,1.558,30,0.653,33,0.487,37,0.797,39,0.539,40,0.008,41,0.497,42,0.178,43,0.436,45,0.737,46,1.066,49,0.564,50,1.291,51,1.089,53,0.247,54,0.243,56,0.085,57,0.008,59,0.896,60,0.91,62,1.044,77,2.171,78,1.99,81,2.517,84,1.955,85,1.775,87,0.97,88,0.542,89,2.346,91,2.367,92,0.74,93,1.178,94,0.962,95,0.566,96,1.45,97,0.74,98,1.85,99,0.668,100,0.578,101,0.949,102,1.023,103,0.682,104,0.74,105,0.682,106,0.655,107,0.74,108,0.682,109,0.74,110,0.641,111,0.655,112,0.849,113,0.668,114,1.282,115,0.997,116,1.332,117,0.655,118,0.054,119,0.668,120,0.993,121,0.682,122,0.682,123,0.615,124,0.74,125,0.655,126,0.74,127,0.682,128,0.74,129,0.682,130,0.74,131,1.336,132,0.74,133,0.668,134,0.74,135,0.476,136,0.74,137,0.668,138,0.324,139,0.74,140,0.682,141,0.74,142,0.682,143,1.332,144,0.682,145,0.74,146,0.682,147,1.332,148,0.682,149,0.74,150,0.696,151,0.74,152,0.655,153,0.74,154,0.682,155,1.332,156,0.655,157,0.628,158,0.74,159,0.682,160,1.066,161,1.11,162,0.682,163,0.74,164,0.655,165,0.368,166,0.74,167,0.668,168,0.682,169,0.725,170,0.682,171,0.74,172,0.668,173,0.668,174,0.655,175,0.74,176,0.668,177,0.74,178,0.628,179,0.531,180,0.655,181,0.74,182,0.655,183,0.962,184,0.668,185,0.682,186,0.486,187,0.641,188,0.52,189,0.682,190,0.682,191,0.668,192,0.74,193,0.682,194,0.942,195,0.74,196,0.682,197,0.74,198,0.641,199,0.668,200,0.682,201,0.942,202,0.74,203,0.682,204,0.683,205,0.641,206,0.668,207,0.74,208,0.655,209,0.74,210,0.655,211,0.74,212,0.641,213,0.74,214,0.641,215,0.74,216,0.641,217,0.696,218,0.74,219,0.004,220,0.004,223,0.274,224,2.058,232,1.304,241,1.447,244,1.692,246,2.535,247,2.439,250,1.531,251,1.241,255,0.396,265,2.11,269,3.062,271,2.171,272,1.907,279,2.623,288,0.641,304,2.485,305,3.825,306,2.602,307,2.365,310,1.062,313,1.577,317,3.797,318,2.669,362,3.322,378,5.195,384,2.678,413,2.694,455,2.058,462,1.796,496,1.212,513,3.632,534,0.855,538,0.949,545,0.896,546,2.427,550,3.169,558,1.531,559,2.018,566,2.894,569,1.337,572,0.803,599,1.686,605,0.324,608,2.607,634,0.855,638,1.657,645,3.726,667,4.309,723,0.771,742,4.035,760,2.346,765,2.018,766,2.726,782,2.838,784,2.469,787,2.181,788,1.551,789,1.372,790,1.577,800,1.304,803,4.232,809,2.113,813,2.325,816,1.679,826,1.447,827,4.19,828,1.936,829,2.11,833,1.081,859,2.669,865,1.944,882,4.003,884,1.679,899,3.164,903,1.503,948,6.003,971,1.488,972,4.003,989,3.872,1000,1.936,1003,3.797,1021,3.506,1025,2.018,1070,1.337,1080,4.206,1098,3.353,1100,2.535,1172,2.423,1174,2.975,1175,1.626,1176,1.679,1189,3.717,1191,2.894,1192,2.743,1193,2.7,1235,1.796,1272,2.827,1285,3.027,1447,2.337,1464,1.863,1541,4.04,1586,2.439,1600,2.669,1609,2.018,1629,2.517,1631,3.485,1632,2.916,1633,2.058,1634,2.517,1635,2.916,1637,2.669,1667,3.99,1761,2.11,1773,2.337,2240,2.517,2249,3.726,2301,3.506,2597,4.373,2641,2.694,2645,2.337,2668,4.373,2687,2.669,2691,2.694,2692,3.485,2694,2.439,2695,2.337,2699,2.916,2700,5.922,2701,4.935,2702,4.655,2703,5.922,2704,5.922,2705,5.922,2706,5.922,2707,5.922,2708,5.83,2709,4.373,2710,6.58,2711,6.58,2712,4.935,2713,3.291,2714,4.935,2715,4.428,2716,4.935,2717,3.291,2718,3.726,2719,4.373,2720,3.291,2721,3.291,2722,6.246,2723,3.291,2724,4.935,2725,3.291,2726,3.291,2727,3.291,2728,3.291,2729,3.291,2730,3.291,2731,3.291,2732,3.291,2733,3.291,2734,3.291,2735,4.373,2736,4.373,2737,3.291,2738,3.291,2739,2.018,2740,2.916,2741,1.735,2742,3.291,2743,3.291,2744,2.916,2745,3.291,2746,3.291,2747,3.291,2748,3.291,2749,3.291,2750,3.291,2751,3.291,2752,5.83,2753,5.922,2754,3.291,2755,3.291,2756,2.669,2757,4.935,2758,3.291,2759,3.291,2760,3.291,2761,3.291,2762,3.291,2763,2.485,2764,4.373,2765,3.291,2766,4.803,2767,4.935,2768,3.291,2769,4.935,2770,3.291,2771,3.291,2772,2.485,2773,2.916,2774,2.916,2775,2.916,2776,2.916,2777,2.838,2778,3.291,2779,2.916,2780,3.291,2781,5.337,2782,2.694,2783,2.916,2784,3.291,2785,3.291,2786,3.291,2787,3.291,2788,2.669,2789,4.373,2790,2.485,2791,2.916,2792,2.916,2793,3.291]],["title/components/IssueFilterComponent.html",[0,0.084,133,0.926]],["body/components/IssueFilterComponent.html",[0,0.112,1,0.592,2,0.585,3,0.063,4,0.109,5,0.47,6,0.655,7,0.642,8,0.616,9,0.052,11,0.568,16,0.568,17,1.402,18,1.333,19,0.568,20,0.481,21,0.67,23,0.67,25,0.214,26,0.479,29,3.986,30,0.585,37,0.777,39,0.764,40,0.008,41,0.558,42,0.207,43,0.618,45,0.94,46,1,49,0.662,50,1.382,51,1.322,53,0.16,54,0.211,56,0.073,57,0.011,62,0.937,78,1.976,79,2.155,81,2.258,82,1.679,84,1.131,85,1.951,87,0.803,88,1.204,89,1.131,91,1.951,92,0.642,93,0.881,94,0.863,95,0.491,96,1.347,97,0.642,98,1.782,99,0.58,100,1.229,101,0.948,102,0.918,103,0.592,104,0.642,105,0.592,106,0.568,107,0.642,108,0.592,109,0.642,110,0.556,111,0.568,112,0.797,113,0.58,114,0.556,115,1.44,116,1.22,117,0.568,118,0.047,119,0.58,120,0.936,121,0.592,122,0.592,123,0.534,124,0.642,125,0.568,126,0.642,127,0.592,128,0.642,129,0.592,130,0.642,131,0.58,132,0.642,133,1.483,134,0.642,135,0.413,136,0.642,137,0.58,138,0.281,139,0.642,140,0.592,141,0.642,142,0.592,143,1.22,144,0.592,145,0.642,146,0.592,147,1.22,148,0.592,149,0.642,150,0.604,151,0.642,152,0.568,153,0.642,154,0.592,155,0.642,156,1.316,157,0.545,158,0.642,159,0.592,160,0.956,161,0.996,162,0.592,163,0.642,164,0.568,165,0.741,166,0.642,167,0.58,168,0.592,169,0.629,170,0.592,171,0.642,172,0.58,173,0.58,174,0.568,175,0.642,176,0.58,177,0.642,178,0.545,179,1.368,180,0.568,181,0.642,182,0.568,183,1.289,184,0.58,185,0.592,186,0.602,187,0.556,188,0.857,189,0.592,190,0.592,191,0.58,192,0.642,193,0.592,194,1.167,195,0.642,196,0.592,197,0.642,198,0.556,199,0.58,200,0.592,201,1.167,202,0.642,203,0.592,204,0.613,205,0.556,206,0.58,207,0.642,208,0.568,209,0.642,210,0.568,211,0.642,212,0.556,213,0.642,214,0.556,215,0.642,216,0.556,217,0.604,218,0.642,219,0.004,220,0.004,223,0.609,228,0.897,255,0.933,269,2.06,279,2.199,296,1.41,305,2.002,306,1.505,307,1.368,310,0.461,362,1.921,366,1.195,384,1.291,397,1.679,413,2.417,432,3.591,512,2.151,535,3.166,545,1.198,546,1.361,558,2.844,566,1.947,572,1.892,580,2.334,591,2.507,592,1.621,605,0.719,614,3.118,673,2.155,674,2.417,723,1.271,724,1.679,763,1.631,787,1.051,788,0.897,789,1.19,803,4.132,809,1.963,813,1.948,814,2.322,816,2.258,823,3.414,830,1.19,832,1.456,833,0.937,838,2.548,860,1.505,865,1.781,874,1.16,896,2.839,899,3.919,903,1.663,961,3.326,998,3.145,1029,1.19,1032,1.616,1063,2.312,1066,2.617,1070,2.688,1098,1.616,1100,1.742,1109,1.558,1172,2.436,1174,2.764,1175,1.41,1176,2.258,1177,2.122,1189,3.691,1191,2.386,1192,1.19,1193,2.601,1212,1.051,1227,3.257,1247,1.077,1272,1.998,1301,1.505,1447,2.027,1463,3.343,1464,2.507,1469,2.362,1473,2.557,1474,3.212,1484,2.839,1489,2.155,1508,3.414,1510,2.155,1538,4.342,1540,2.839,1541,2.961,1548,1.75,1577,2.961,1586,1.41,1628,1.558,1629,1.456,1631,1.679,1633,1.19,1634,1.456,1667,3.269,1735,2.417,1771,1.593,1791,2.155,1804,1.846,1841,1.616,1918,2.839,1926,1.75,2016,3.145,2164,2.715,2201,1.75,2338,2.839,2353,1.83,2368,3.326,2382,2.605,2385,1.616,2386,1.616,2387,1.679,2414,1.83,2557,6.123,2641,2.417,2664,1.83,2691,2.417,2694,2.188,2695,3.145,2715,2.98,2773,2.529,2777,1.368,2794,2.315,2795,6.689,2796,5.424,2797,4.428,2798,8.621,2799,5.424,2800,6.808,2801,5.424,2802,3.651,2803,4.428,2804,4.428,2805,6.112,2806,4.428,2807,4.428,2808,4.428,2809,4.428,2810,4.806,2811,3.343,2812,5.424,2813,2.854,2814,2.854,2815,3.853,2816,2.854,2817,3.923,2818,4.428,2819,2.854,2820,7.827,2821,4.428,2822,2.854,2823,3.923,2824,2.854,2825,4.428,2826,2.715,2827,4.428,2828,2.854,2829,3.923,2830,4.428,2831,2.854,2832,4.428,2833,7,2834,2.854,2835,4.428,2836,4.428,2837,4.428,2838,4.428,2839,2.854,2840,4.428,2841,2.854,2842,2.854,2843,4.958,2844,4.428,2845,2.854,2846,2.854,2847,2.854,2848,2.854,2849,2.98,2850,2.98,2851,2.529,2852,4.4,2853,4.096,2854,4.806,2855,1.83,2856,2.529,2857,2.529,2858,1.83,2859,3.591,2860,2.315,2861,2.529,2862,6.203,2863,2.529,2864,5.862,2865,4.242,2866,4.242,2867,2.529,2868,4.242,2869,5.862,2870,2.529,2871,1.921,2872,2.98,2873,2.027,2874,2.529,2875,1.75,2876,1.921,2877,2.529,2878,2.854,2879,2.715,2880,2.854,2881,2.854,2882,2.854,2883,2.854,2884,2.854,2885,2.854,2886,2.854,2887,2.854,2888,5.424,2889,4.428,2890,4.699,2891,4.428,2892,4.428,2893,2.854,2894,4.428,2895,2.854,2896,2.854,2897,2.854,2898,2.854,2899,4.428,2900,2.854,2901,2.854,2902,2.854,2903,2.854,2904,2.854,2905,2.854,2906,4.428,2907,4.428,2908,4.428,2909,4.428,2910,4.428,2911,4.428,2912,2.854,2913,2.315,2914,2.155,2915,2.854,2916,1.75,2917,2.529,2918,2.854,2919,6.112,2920,4.428,2921,1.83,2922,4.428,2923,1.616]],["title/interfaces/IssueFolderNode.html",[118,0.075,1273,2.581]],["body/interfaces/IssueFolderNode.html",[0,0.149,3,0.117,4,0.164,5,1.137,9,0.126,25,0.127,26,0.609,40,0.008,42,0.205,49,0.713,53,0.24,56,0.178,57,0.017,87,0.88,101,0.623,112,0.639,118,0.152,120,0.716,135,0.767,138,0.68,165,0.984,186,0.829,188,0.837,219,0.006,220,0.006,231,1.175,255,0.639,279,2.409,291,4.16,311,3.12,512,1.562,526,1.406,538,1.529,545,1.305,592,2.362,605,0.878,619,1.864,717,1.953,722,1.821,814,2.27,833,1.741,903,1.809,949,3.12,1063,1.947,1064,3.385,1067,3.691,1068,3.476,1091,2,1195,3.282,1203,4.512,1204,2.398,1205,3.002,1206,4.796,1207,5.078,1208,3.675,1209,3.306,1210,2.894,1211,2.542,1212,3.346,1213,3.306,1214,2.705,1215,2.796,1216,4.185,1217,4.281,1218,4.512,1219,3.252,1220,3.252,1221,3.252,1222,3.252,1223,3.252,1224,3.252,1225,3.252,1226,3.252,1227,3.21,1228,3.252,1229,3.252,1230,4.23,1231,3.675,1232,3.12,1233,3.12,1234,2.27,1235,3.765,1236,3.4,1237,3.4,1238,1.781,1239,2.468,1240,2.542,1241,3.252,1242,2.894,1243,2.542,1244,2.894,1245,3.252,1246,3.4,1247,2,1248,3.4,1249,2.705,1250,3.4,1251,2.332,1252,3.4,1253,2.894,1254,3.4,1255,3.252,1256,3.4,1257,4.34,1258,2.796,1259,3.002,1260,2.542,1261,3.905,1262,3.4,1263,3.4,1264,3.4,1265,4.059,1266,3.4,1267,4.423,1268,3.4,1269,3.4,1270,3.4,1271,3.252,1272,1.953,1273,4.34,1274,5.532,1275,3.4,1276,3.4,1277,4.423,1278,3.4,1279,4.423,1280,4.423,1281,3.4,1282,3.4,1283,4.185,1284,4.423,1285,3.252,1286,4.23,1287,4.423,1288,3.4,1289,4.597,1290,3.637,1291,3.4,1292,3.252,1293,3.4,1294,3.4,1295,3.4,1296,3.252,1297,4.059,1298,3.252,1299,2.894,1300,3.252,1301,2.796]],["title/injectables/IssueGraphApiService.html",[529,1.09,2924,3.443]],["body/injectables/IssueGraphApiService.html",[0,0.164,3,0.107,4,0.098,9,0.089,25,0.116,30,0.861,33,0.718,37,0.743,39,0.967,40,0.008,41,0.529,42,0.18,43,0.722,45,0.878,49,0.721,53,0.254,54,0.359,56,0.168,57,0.016,59,1.11,80,3.028,118,0.139,120,0.814,138,0.889,179,1.41,183,1.268,194,1.401,204,1.085,219,0.005,220,0.005,223,0.543,228,2.645,231,1.184,255,0.944,276,1.461,288,0.946,296,2.399,306,3.431,313,3.119,366,1.728,512,2.409,526,1.725,529,1.557,534,1.261,537,2.024,538,1.4,541,2.196,544,2.465,545,1.186,552,2.136,569,2.644,570,3.552,572,2.161,605,0.829,612,3.552,619,2.287,643,2.024,688,1.43,722,2.235,749,3.552,838,2.713,865,2.137,903,1.491,944,2.65,1091,3.175,1212,2.704,1289,4.44,1290,4.135,1422,3.119,1448,3.431,1473,3.254,1776,4.135,1891,4.914,2047,3.431,2176,5.882,2177,5.279,2185,4.44,2189,4.623,2195,4.914,2227,5.922,2250,5.279,2270,5.279,2302,4.954,2313,3.83,2317,4.562,2329,4.173,2331,2.65,2333,4.38,2337,2.977,2340,5.163,2345,5.279,2355,3.991,2924,5.543,2925,4.302,2926,6.508,2927,7.843,2928,5.767,2929,5.767,2930,5.767,2931,6.508,2932,4.855,2933,7.843,2934,7.341,2935,7.843,2936,7.341,2937,7.843,2938,7.341,2939,7.843,2940,4.855,2941,6.508,2942,6.508,2943,4.855,2944,6.95,2945,6.508,2946,4.855,2947,5.767,2948,6.508,2949,6.508,2950,6.508,2951,6.508,2952,6.508,2953,6.508,2954,6.508,2955,6.508,2956,6.95,2957,6.508,2958,4.855,2959,6.508,2960,4.855,2961,6.508,2962,6.508,2963,6.508,2964,5.767,2965,6.508,2966,6.508,2967,7.843,2968,4.855,2969,4.855,2970,4.855,2971,4.855,2972,4.855,2973,3.938,2974,4.855,2975,4.855,2976,4.855,2977,4.855,2978,4.855,2979,6.508,2980,4.855,2981,4.855,2982,6.508,2983,4.855,2984,4.855,2985,4.855,2986,4.855,2987,4.855,2988,4.855,2989,4.855,2990,4.855,2991,4.855,2992,4.855]],["title/injectables/IssueGraphClassSettersService.html",[529,1.09,2993,3.443]],["body/injectables/IssueGraphClassSettersService.html",[3,0.126,4,0.115,9,0.105,25,0.136,30,0.957,37,0.519,39,0.624,40,0.008,41,0.514,42,0.126,43,0.505,45,0.64,46,0.865,49,0.552,53,0.247,54,0.422,56,0.147,57,0.024,120,0.593,135,1.048,138,0.867,165,1.042,219,0.006,220,0.006,223,0.604,244,1.595,255,0.872,276,1.72,290,4.316,291,4.574,310,1.42,529,1.731,542,3.184,552,2.514,572,1.767,605,0.891,619,2.544,634,1.88,643,2.384,717,2.666,838,3.482,862,4.127,953,4.403,1049,4.439,1099,5.354,1204,3.274,1213,3.808,1214,2.916,1215,3.014,1238,2.431,1239,3.369,1249,4.827,1297,4.26,1299,3.12,1301,3.014,1889,3.951,2164,5.121,2166,3.693,2491,5.924,2993,5.466,2994,6.415,2995,5.871,2996,5.066,2997,5.871,2998,4.872,2999,7.799,3000,5.466,3001,7.239,3002,7.239,3003,7.139,3004,5.717,3005,6.415,3006,6.415,3007,7.239,3008,3.848,3009,8.351,3010,7.944,3011,8.802,3012,5.066,3013,5.466,3014,5.717,3015,5.717,3016,5.717,3017,7.944,3018,5.066,3019,5.066,3020,7.634,3021,5.717,3022,5.717,3023,5.717]],["title/components/IssueGraphControlsComponent.html",[0,0.084,137,0.926]],["body/components/IssueGraphControlsComponent.html",[0,0.162,1,0.713,2,0.89,3,0.076,4,0.069,5,0.567,6,0.79,7,0.774,8,0.743,9,0.063,11,0.685,14,1.036,16,0.685,17,1.415,18,1.348,19,0.685,20,1.21,21,0.772,23,0.772,25,0.082,26,0.451,27,1.347,29,2.786,30,0.675,33,0.509,36,3.16,37,0.803,39,0.376,40,0.008,41,0.487,42,0.166,43,0.304,45,0.753,46,1.138,49,0.389,50,1.378,51,1.204,53,0.255,54,0.254,55,1.058,56,0.089,57,0.009,58,1.21,59,1.21,62,1.08,77,1.514,78,0.972,85,1.836,87,0.954,88,0.567,89,2.41,91,1.238,92,0.774,93,1.015,94,0.995,95,0.592,96,1.483,97,0.774,98,1.87,99,0.699,100,1.068,101,0.941,102,1.058,103,0.713,104,0.774,105,0.713,106,0.685,107,0.774,108,0.713,109,0.774,110,0.671,111,0.685,112,0.938,113,0.699,114,0.671,115,1.133,116,1.368,117,0.685,118,0.057,119,0.699,120,0.962,121,0.713,122,0.713,123,0.644,124,0.774,125,0.685,126,0.774,127,0.713,128,0.774,129,0.713,130,0.774,131,0.699,132,0.774,133,0.699,134,0.774,135,1.04,136,0.774,137,1.366,138,0.944,139,0.774,140,0.713,141,0.774,142,0.713,143,1.368,144,0.713,145,0.774,146,0.713,147,1.368,148,0.713,149,0.774,150,0.728,151,0.774,152,1.338,153,0.774,154,0.713,155,0.774,156,0.685,157,0.657,158,0.774,159,0.713,160,1.102,161,1.148,162,0.713,163,0.774,164,0.685,165,0.385,166,0.774,167,0.699,168,0.713,169,0.759,170,0.713,171,0.774,172,0.699,173,0.699,174,0.685,175,0.774,176,0.699,177,0.774,178,0.657,179,0.555,180,0.685,181,0.774,182,0.685,183,0.995,184,0.699,185,0.713,186,0.503,187,0.671,188,0.544,189,0.713,190,0.713,191,0.699,192,0.774,193,0.713,194,0.657,195,0.774,196,0.713,197,0.774,198,0.671,199,0.699,200,0.713,201,1.284,202,0.774,203,0.713,204,0.476,205,0.671,206,0.699,207,0.774,208,0.685,209,0.774,210,0.685,211,0.774,212,0.671,213,0.774,214,0.671,215,0.774,216,0.671,217,0.728,218,0.774,219,0.004,220,0.006,223,0.287,231,1.089,241,2.245,263,1.88,271,2.245,272,2.6,290,2.599,291,1.701,305,1.557,306,3.788,307,2.446,310,1.291,362,4.094,496,1.268,498,6.713,533,2.445,534,0.894,535,2.294,537,1.435,538,0.992,544,2.042,554,3.31,555,3.854,558,1.602,559,2.111,564,1.879,566,2.959,596,3.32,605,0.339,672,1.949,681,4.428,688,1.014,760,2.41,769,1.949,784,1.435,800,1.364,813,1.981,818,2.317,825,2.83,826,1.514,841,1.815,865,1.997,870,2.83,878,2.445,903,0.699,929,4.14,974,2.245,1070,2.471,1091,1.925,1092,2.445,1100,1.953,1101,4.615,1104,4.593,1174,2.308,1181,2.792,1193,2.683,1194,4.32,1195,2.185,1199,1.815,1204,4.021,1212,2.24,1251,3.426,1272,1.88,1400,4.428,1401,2.026,1405,4.094,1457,2.792,1473,1.33,1485,3.435,1492,2.026,1508,3.523,1586,3.324,1629,2.603,1667,3.849,1674,2.207,1845,3.003,1883,4.779,1907,3.13,1918,4.607,1970,3.003,2008,2.538,2172,3.272,2174,2.111,2176,2.317,2185,4.26,2225,2.445,2227,6.041,2228,4.523,2229,2.792,2240,3.973,2290,2.599,2291,1.949,2292,2.207,2331,2.786,2340,3.13,2347,4.994,2382,4.428,2385,1.949,2386,1.949,2387,2.026,2390,4.094,2691,1.879,2694,1.701,2702,3.809,2741,1.815,2777,1.65,2782,1.879,2826,3.13,2973,2.792,3024,3.05,3025,3.435,3026,5.104,3027,5.104,3028,5.104,3029,7.526,3030,3.854,3031,4.933,3032,4.933,3033,5.104,3034,6.083,3035,5.104,3036,4.933,3037,6.083,3038,5.39,3039,6.728,3040,5.961,3041,6.728,3042,6.728,3043,5.104,3044,3.442,3045,5.104,3046,6.083,3047,4.523,3048,5.104,3049,5.104,3050,5.104,3051,3.442,3052,3.442,3053,5.104,3054,2.603,3055,4.14,3056,3.442,3057,5.104,3058,5.104,3059,3.442,3060,3.442,3061,3.442,3062,3.442,3063,5.104,3064,3.442,3065,5.104,3066,3.442,3067,3.442,3068,6.728,3069,3.442,3070,3.442,3071,3.442,3072,3.05,3073,3.05,3074,3.05,3075,2.792,3076,3.442,3077,3.442,3078,3.442,3079,2.317,3080,3.442,3081,3.442,3082,3.442,3083,3.442,3084,3.442,3085,5.104,3086,3.442,3087,2.792,3088,3.05,3089,3.05,3090,3.442,3091,3.442,3092,5.104,3093,3.442,3094,3.442,3095,3.442,3096,3.442,3097,3.442,3098,3.442,3099,5.104,3100,3.05,3101,3.05,3102,3.442,3103,3.442,3104,3.442,3105,3.442,3106,2.445,3107,3.442,3108,3.05,3109,5.104,3110,4.523,3111,4.523,3112,5.104,3113,5.104,3114,2.792,3115,2.445,3116,4.523,3117,3.442,3118,3.442,3119,4.313,3120,5.104,3121,3.05,3122,3.442,3123,3.05,3124,3.05]],["title/injectables/IssueGraphDynamicTemplateRegistryService.html",[529,1.09,3125,3.443]],["body/injectables/IssueGraphDynamicTemplateRegistryService.html",[3,0.138,4,0.127,5,1.552,9,0.115,25,0.15,30,1.015,37,0.57,39,0.685,40,0.008,41,0.406,42,0.138,43,0.554,45,0.703,46,1.253,53,0.261,54,0.463,56,0.162,57,0.016,135,1.11,138,0.887,165,0.703,219,0.006,220,0.006,223,0.64,276,1.888,439,4.188,529,1.835,542,3.374,552,2.76,572,1.532,605,0.618,619,2.696,634,1.992,643,2.617,750,1.355,813,1.848,838,3.599,900,4.343,903,1.683,953,4.045,966,4.739,1049,4.705,1099,4.919,1195,2.687,1204,3.469,1213,4.137,1214,3.201,1231,3.008,1249,4.869,1271,3.849,1536,5.449,2491,6.063,2997,6.223,2998,5.164,3000,5.793,3008,4.224,3125,5.793,3126,6.798,3127,6.223,3128,6.801,3129,5.561,3130,7.649,3131,7.672,3132,7.672,3133,6.276,3134,6.276,3135,6.276,3136,6.798,3137,5.561,3138,5.09,3139,6.276,3140,6.276,3141,7.672,3142,6.276,3143,6.276,3144,6.276,3145,6.276,3146,6.276,3147,6.276,3148,6.276,3149,6.276]],["title/injectables/IssueGraphLinkHandlesService.html",[529,1.09,3150,3.443]],["body/injectables/IssueGraphLinkHandlesService.html",[3,0.113,4,0.186,9,0.094,25,0.123,30,0.895,37,0.687,39,0.826,40,0.008,41,0.489,42,0.192,43,0.668,45,0.846,46,1.143,53,0.246,54,0.38,56,0.133,57,0.013,59,1.261,135,0.98,138,0.872,165,1.003,219,0.006,220,0.006,223,0.67,255,0.815,276,1.55,291,4.64,310,1.296,312,1.952,529,1.619,542,2.977,552,2.266,572,2.036,593,5.111,605,0.822,619,2.379,634,1.758,643,2.148,744,5.111,750,1.979,838,3.692,899,5.148,903,1.63,953,4.601,966,7.214,1049,4.151,1064,2.822,1068,2.898,1099,5.148,1204,3.631,1213,3.848,1214,2.628,1215,2.716,1249,4.776,1283,4.833,1548,4.924,2491,5.762,2997,5.49,2998,4.556,3000,5.111,3003,6.944,3005,5.998,3008,3.468,3013,3.89,3136,8.071,3137,4.565,3138,6.132,3150,5.111,3151,7.115,3152,6.513,3153,4.565,3154,6.769,3155,6.769,3156,6.769,3157,6.769,3158,8.854,3159,5.152,3160,6.765,3161,5.152,3162,8.561,3163,5.152,3164,6.769,3165,5.152,3166,6.699,3167,5.998,3168,7.561,3169,5.49,3170,5.152,3171,5.152,3172,5.152,3173,5.152,3174,5.152,3175,5.152,3176,5.152,3177,5.152,3178,5.152,3179,5.152,3180,8.03,3181,6.769,3182,6.769,3183,8.03,3184,5.152,3185,5.152,3186,6.769,3187,5.152,3188,5.152]],["title/injectables/IssueGraphStateService.html",[529,1.09,1400,2.683]],["body/injectables/IssueGraphStateService.html",[0,0.149,2,0.912,3,0.117,4,0.107,9,0.097,25,0.126,26,0.609,30,0.912,33,0.784,37,0.764,39,0.886,40,0.008,41,0.525,42,0.185,43,0.717,45,0.909,49,0.701,51,1.255,53,0.259,54,0.391,56,0.136,57,0.013,59,0.801,87,0.879,118,0.143,120,0.55,138,0.928,183,1.344,219,0.006,220,0.006,223,0.442,228,2.166,231,1.109,276,1.594,288,1.033,312,1.528,526,2.152,529,1.649,533,5.766,534,1.376,535,3.396,536,3.566,537,2.209,544,3.153,545,1.228,552,2.331,553,4.28,554,3.96,570,3.763,572,1.871,605,0.755,632,3.033,634,1.791,643,2.209,672,3.903,681,5.169,722,2.368,898,4.897,923,4.641,929,5.592,1091,3.254,1289,5.211,1290,4.549,1400,4.057,1492,5.345,1508,3.118,1845,4.057,1907,5.161,2047,3.635,2185,4.595,2186,4.421,2198,4.914,2225,4.897,2272,4.001,2279,4.001,2302,5.077,2331,2.892,2347,4.421,2382,5.077,2718,5.206,2826,4.978,2924,6.129,2928,6.11,2929,4.695,2930,6.11,2944,7.193,2973,4.298,3031,4.298,3032,4.298,3036,6.584,3072,4.695,3075,4.298,3088,6.11,3089,6.11,3106,6.327,3189,4.695,3190,5.299,3191,6.895,3192,6.895,3193,6.895,3194,5.299,3195,6.895,3196,5.299,3197,6.895,3198,7.664,3199,8.117,3200,6.895,3201,6.11,3202,8.117,3203,6.895,3204,6.895,3205,6.895,3206,6.895,3207,6.895,3208,5.299,3209,5.299,3210,4.001,3211,6.895,3212,5.299,3213,5.299,3214,5.299,3215,5.299,3216,5.299,3217,5.299,3218,5.299,3219,5.299,3220,5.299,3221,5.299,3222,5.299,3223,5.299,3224,5.299,3225,5.299]],["title/classes/IssueGroupContainerBehaviour.html",[57,0.012,3226,3.443]],["body/classes/IssueGroupContainerBehaviour.html",[3,0.105,4,0.097,9,0.088,14,1.309,25,0.186,26,0.569,30,0.853,37,0.762,39,0.796,40,0.008,41,0.472,42,0.16,43,0.644,45,0.816,46,1.102,49,0.708,50,1.335,51,1.127,53,0.248,56,0.123,57,0.012,74,4.58,75,2.936,78,2.058,85,1.722,87,0.836,91,2.805,120,0.497,138,0.635,165,1.015,186,0.635,191,0.972,201,1.489,219,0.005,220,0.005,255,1.074,263,2.685,288,0.933,310,1.176,312,2.102,366,1.055,538,1.38,560,2.442,592,1.269,605,0.472,608,3.395,688,1.899,717,1.763,744,3.615,750,1.034,813,1.41,833,1.572,903,1.74,911,3.883,974,2.106,1064,3.039,1068,2.76,1070,3.169,1072,2.711,1204,3.875,1212,1.763,1213,3.738,1214,2.442,1215,2.524,1217,4.518,1231,3.494,1238,1.608,1240,3.09,1249,4.791,1265,3.794,1272,2.998,1315,3.223,1661,3.289,1662,4.58,2205,3.223,2355,2.936,2689,4.339,3008,3.223,3169,3.883,3226,3.615,3227,6.95,3228,3.883,3229,6.91,3230,6.447,3231,6.459,3232,6.459,3233,6.447,3234,6.447,3235,6.447,3236,4.788,3237,4.788,3238,4.788,3239,5.713,3240,7.592,3241,8.033,3242,7.821,3243,4.788,3244,5.713,3245,4.788,3246,4.788,3247,4.788,3248,4.243,3249,4.134,3250,4.243,3251,5.713,3252,5.713,3253,3.883,3254,4.243,3255,4.243,3256,4.243,3257,3.401,3258,3.883,3259,4.243,3260,5.713,3261,3.615,3262,4.243,3263,5.713,3264,4.243,3265,4.243,3266,4.243,3267,7.213,3268,4.243,3269,6.91,3270,7.213,3271,7.213,3272,5.713,3273,4.243,3274,4.243,3275,4.243,3276,7.213,3277,7.213,3278,8.199,3279,5.713,3280,5.713,3281,5.713,3282,6.459,3283,4.243,3284,4.243,3285,4.243,3286,5.713,3287,5.713,3288,3.883,3289,4.243,3290,4.243,3291,4.243,3292,4.243,3293,4.243,3294,4.243,3295,5.713,3296,4.243,3297,4.243,3298,5.713,3299,4.243,3300,4.243,3301,4.243,3302,4.243,3303,4.243,3304,4.243,3305,4.243,3306,5.713,3307,4.243,3308,4.243]],["title/interfaces/IssueGroupContainerNode.html",[118,0.075,1217,2.404]],["body/interfaces/IssueGroupContainerNode.html",[0,0.149,3,0.117,4,0.164,5,1.137,9,0.126,25,0.127,26,0.609,40,0.008,42,0.203,49,0.713,53,0.24,56,0.178,57,0.017,87,0.88,101,0.623,112,0.639,118,0.152,120,0.716,135,0.767,138,0.68,165,0.984,186,0.866,188,0.837,219,0.006,220,0.006,231,1.175,255,0.639,279,2.409,291,4.16,311,3.12,512,1.562,526,1.406,538,1.529,545,1.305,592,2.362,605,0.878,619,1.864,717,1.953,722,1.821,814,2.27,833,1.741,903,1.809,949,3.12,1063,1.947,1064,3.385,1067,3.76,1068,3.476,1091,2,1195,3.282,1203,4.512,1204,2.398,1205,3.002,1206,4.796,1207,5.078,1208,3.675,1209,3.306,1210,2.894,1211,2.542,1212,3.281,1213,3.306,1214,2.705,1215,2.796,1216,4.185,1217,4.438,1218,4.512,1219,3.252,1220,3.252,1221,3.252,1222,3.252,1223,3.252,1224,3.252,1225,3.252,1226,3.252,1227,3.21,1228,3.252,1229,3.252,1230,4.23,1231,3.675,1232,3.12,1233,3.12,1234,2.27,1235,3.765,1236,3.4,1237,3.4,1238,1.781,1239,2.468,1240,2.542,1241,3.252,1242,2.894,1243,2.542,1244,2.894,1245,3.252,1246,3.4,1247,2,1248,3.4,1249,2.705,1250,3.4,1251,2.332,1252,3.4,1253,2.894,1254,3.4,1255,3.252,1256,3.4,1257,4.34,1258,2.796,1259,3.002,1260,2.542,1261,3.905,1262,3.4,1263,3.4,1264,3.4,1265,4.059,1266,3.4,1267,5.397,1268,3.4,1269,3.4,1270,3.4,1271,3.252,1272,1.953,1273,3.905,1274,4.916,1275,3.4,1276,3.4,1277,4.423,1278,3.4,1279,4.423,1280,4.423,1281,3.4,1282,3.4,1283,4.185,1284,4.423,1285,3.252,1286,4.23,1287,4.423,1288,3.4,1289,4.597,1290,3.637,1291,3.4,1292,3.252,1293,3.4,1294,3.4,1295,3.4,1296,3.252,1297,4.059,1298,3.252,1299,2.894,1300,3.252,1301,2.796]],["title/classes/IssueGroupContainerParentBehaviour.html",[57,0.012,3257,3.239]],["body/classes/IssueGroupContainerParentBehaviour.html",[3,0.108,4,0.099,9,0.09,14,1.334,25,0.188,26,0.58,30,0.869,33,0.729,37,0.716,39,0.717,40,0.008,41,0.425,42,0.145,43,0.58,45,0.551,46,0.745,49,0.698,50,1.203,51,1.015,53,0.25,56,0.127,57,0.012,74,4.667,75,3.02,78,2.087,85,1.771,87,0.848,91,2.837,120,0.511,138,0.728,165,1.004,186,0.647,191,1,201,1.506,219,0.006,220,0.006,223,0.411,255,1.08,263,2.723,288,0.96,310,1.06,312,2.132,366,1.085,538,1.42,560,3.351,592,1.306,605,0.485,608,3.419,688,1.935,717,1.814,744,3.718,750,1.063,813,1.45,833,1.617,903,1.752,911,3.994,974,2.89,1064,3.083,1068,2.813,1070,3.205,1072,2.788,1204,3.716,1212,1.814,1213,3.78,1214,2.512,1215,2.596,1217,3.898,1231,2.36,1238,1.654,1240,3.149,1249,4.672,1265,3.866,1272,3.026,1315,4.422,1661,3.351,1662,4.667,2205,3.314,2355,3.02,2689,4.422,3008,3.314,3169,3.994,3227,6.665,3228,3.994,3229,7.281,3231,6.551,3232,6.551,3239,4.364,3240,7.281,3241,7.768,3242,7.647,3244,4.364,3248,4.364,3249,5.057,3250,4.364,3251,5.822,3252,5.822,3253,5.329,3254,5.822,3255,5.822,3256,5.822,3257,4.667,3258,5.329,3259,5.822,3260,6.989,3261,3.718,3262,4.364,3263,5.822,3264,4.364,3265,4.364,3266,4.364,3267,7.281,3268,4.364,3269,6.989,3270,7.281,3271,7.281,3272,5.822,3273,4.364,3274,4.364,3275,4.364,3276,7.281,3277,7.281,3278,8.227,3279,5.822,3280,5.822,3281,5.822,3282,6.551,3283,4.364,3284,4.364,3285,4.364,3286,5.822,3287,5.822,3288,3.994,3289,4.364,3290,4.364,3291,4.364,3292,4.364,3293,4.364,3294,4.364,3295,5.822,3296,4.364,3297,4.364,3298,5.822,3299,4.364,3300,4.364,3301,4.364,3302,4.364,3303,4.364,3304,4.364,3305,4.364,3306,5.822,3307,4.364,3308,4.364,3309,6.57,3310,4.925,3311,6.57,3312,4.925,3313,4.925]],["title/components/IssueIconComponent.html",[0,0.084,140,0.945]],["body/components/IssueIconComponent.html",[0,0.155,1,1.008,2,0.861,3,0.107,4,0.098,5,0.801,6,1.116,7,1.094,8,1.05,9,0.089,11,0.967,16,0.967,17,1.435,18,1.368,19,0.967,20,0.819,21,0.985,23,0.985,25,0.116,30,0.861,37,0.667,40,0.008,41,0.529,42,0.107,45,0.729,49,0.37,53,0.192,54,0.359,56,0.125,57,0.012,62,1.378,88,0.801,92,1.094,93,1.296,94,1.269,95,0.836,96,1.729,97,1.094,98,2.012,99,0.987,100,0.854,101,1.028,102,1.35,103,1.008,104,1.094,105,1.008,106,0.967,107,1.094,108,1.008,109,1.094,110,0.947,111,0.967,112,0.985,113,0.987,114,0.947,115,1.097,116,1.652,117,0.967,118,0.08,119,0.987,120,0.993,121,1.008,122,1.008,123,0.909,124,1.094,125,0.967,126,1.094,127,1.008,128,1.094,129,1.008,130,1.094,131,0.987,132,1.094,133,0.987,134,1.094,135,0.704,136,1.094,137,0.987,138,0.479,139,1.094,140,1.626,141,1.094,142,1.008,143,1.652,144,1.008,145,1.094,146,1.008,147,1.652,148,1.008,149,1.094,150,1.029,151,1.094,152,0.967,153,1.094,154,1.008,155,1.094,156,0.967,157,0.928,158,1.094,159,1.008,160,1.406,161,1.465,162,1.008,163,1.094,164,0.967,165,0.544,166,1.094,167,0.987,168,1.008,169,1.071,170,1.008,171,1.094,172,0.987,173,0.987,174,0.967,175,1.094,176,0.987,177,1.094,178,0.928,179,0.785,180,0.967,181,1.094,182,0.967,183,1.269,184,0.987,185,1.008,186,0.642,187,0.947,188,0.768,189,1.008,190,1.008,191,0.987,192,1.094,193,1.008,194,0.928,195,1.094,196,1.008,197,1.094,198,0.947,199,0.987,200,1.008,201,0.928,202,1.094,203,1.008,204,0.673,205,0.947,206,0.987,207,1.094,208,0.967,209,1.094,210,0.967,211,1.094,212,0.947,213,1.094,214,0.947,215,1.094,216,0.947,217,1.029,218,1.094,219,0.005,220,0.005,223,0.405,255,0.985,263,1.79,269,3.031,305,3.953,306,3.434,307,3.122,308,3.671,311,3.833,312,1.402,313,2.33,317,5.031,320,4.308,538,1.402,605,0.642,620,4.176,723,1.526,733,4.627,763,2.399,788,1.528,838,2.716,971,2.946,1098,2.752,1100,2.092,1212,1.79,1272,1.79,2145,2.981,2147,3.272,2240,4.003,2385,3.688,2386,3.688,2578,6.365,2634,5.031,2777,3.122,2782,2.654,3314,4.308,3315,7.346,3316,6.514,3317,7.847,3318,7.847,3319,4.862,3320,4.862,3321,4.862,3322,7.847,3323,6.514,3324,6.514,3325,4.862,3326,6.514,3327,4.862,3328,4.862,3329,3.995,3330,4.308,3331,4.308]],["title/components/IssueItemComponent.html",[0,0.084,142,0.945]],["body/components/IssueItemComponent.html",[0,0.159,1,0.971,2,0.84,3,0.159,4,0.094,5,0.772,6,1.076,7,1.054,8,1.012,9,0.086,11,0.932,16,0.932,17,1.433,18,1.366,19,0.932,20,0.789,21,0.961,23,0.961,25,0.112,30,0.84,33,0.693,37,0.757,39,0.512,40,0.008,41,0.539,42,0.178,43,0.414,45,0.807,49,0.484,50,1.164,51,0.982,53,0.213,54,0.346,56,0.121,57,0.012,62,1.344,88,1.274,91,1.686,92,1.054,93,1.264,94,1.238,95,0.806,96,1.704,97,1.054,98,1.998,99,0.951,100,0.823,101,1.044,102,1.317,103,0.971,104,1.054,105,0.971,106,0.932,107,1.054,108,0.971,109,1.054,110,0.913,111,0.932,112,0.973,113,0.951,114,0.913,115,1.07,116,1.622,117,0.932,118,0.077,119,0.951,120,0.994,121,0.971,122,0.971,123,0.876,124,1.054,125,0.932,126,1.054,127,0.971,128,1.054,129,0.971,130,1.054,131,0.951,132,1.054,133,0.951,134,1.054,135,0.678,136,1.054,137,0.951,138,0.462,139,1.054,140,0.971,141,1.054,142,1.602,143,1.622,144,0.971,145,1.054,146,0.971,147,1.622,148,0.971,149,1.054,150,0.991,151,1.054,152,0.932,153,1.054,154,0.971,155,1.054,156,1.264,157,0.894,158,1.054,159,0.971,160,1.372,161,1.429,162,0.971,163,1.054,164,0.932,165,0.525,166,1.054,167,0.951,168,0.971,169,1.033,170,0.971,171,1.054,172,0.951,173,0.951,174,0.932,175,1.054,176,0.951,177,1.054,178,0.894,179,0.756,180,0.932,181,1.054,182,0.932,183,1.238,184,0.951,185,0.971,186,0.626,187,0.913,188,0.74,189,0.971,190,0.971,191,0.951,192,1.054,193,0.971,194,0.894,195,1.054,196,0.971,197,1.054,198,0.913,199,0.951,200,0.971,201,0.894,202,1.054,203,0.971,204,0.648,205,0.913,206,0.951,207,1.054,208,0.932,209,1.054,210,0.932,211,1.054,212,0.913,213,1.054,214,0.913,215,1.054,216,0.913,217,0.991,218,1.054,219,0.005,220,0.005,223,0.391,244,1.704,263,2.34,271,2.061,288,0.913,303,3.801,310,1.025,366,1.4,496,1.726,509,2.119,512,1.38,532,3.768,538,1.351,545,0.961,549,3.241,566,2.795,599,1.52,605,0.462,622,3.328,722,2.182,723,1.893,750,1.372,763,2.34,788,1.472,865,2.367,874,2.582,903,1.29,971,2.873,990,4.513,1100,2.315,1172,1.726,1174,2.119,1175,2.316,1191,2.061,1193,1.539,1259,3.597,1484,4.074,1577,3.935,1633,2.649,1634,2.39,1652,2.246,1696,5.444,1771,2.286,1843,3.004,2042,3.739,2145,3.897,2240,2.39,2575,6.911,2634,5.463,2639,3.004,2640,3.538,2641,2.558,2691,2.558,2692,4.242,2741,2.471,2764,6.85,2777,2.246,2782,2.558,3054,3.241,3329,2.874,3332,2.874,3333,5.848,3334,4.074,3335,7.73,3336,8.08,3337,6.354,3338,4.686,3339,6.354,3340,4.686,3341,3.597,3342,4.152,3343,3.801,3344,4.152,3345,4.686,3346,4.686,3347,4.686,3348,4.686,3349,4.152]],["title/components/IssueLabelComponent.html",[0,0.084,144,0.945]],["body/components/IssueLabelComponent.html",[0,0.14,1,0.934,2,0.818,3,0.099,4,0.091,5,0.743,6,1.035,7,1.014,8,0.973,9,0.083,11,0.897,16,0.897,17,1.431,18,1.364,19,0.897,20,0.759,21,0.936,23,0.936,25,0.108,26,0.547,27,1.19,30,0.818,37,0.562,39,0.492,40,0.008,41,0.556,42,0.136,43,0.398,45,0.505,49,0.655,51,0.697,53,0.183,54,0.333,56,0.116,57,0.011,62,1.309,88,0.743,92,1.014,93,1.231,94,1.206,95,0.775,96,1.676,97,1.014,98,1.984,99,0.915,100,0.792,101,1.01,102,1.283,103,0.934,104,1.014,105,0.934,106,0.897,107,1.014,108,0.934,109,1.014,110,0.878,111,0.897,112,0.96,113,0.915,114,0.878,115,1.553,116,1.59,117,0.897,118,0.074,119,0.915,120,0.978,121,0.934,122,0.934,123,0.843,124,1.014,125,0.897,126,1.014,127,0.934,128,1.014,129,0.934,130,1.014,131,0.915,132,1.014,133,0.915,134,1.014,135,0.652,136,1.014,137,0.915,138,0.444,139,1.014,140,0.934,141,1.014,142,0.934,143,1.59,144,1.577,145,1.014,146,0.934,147,1.59,148,0.934,149,1.014,150,0.954,151,1.014,152,0.897,153,1.014,154,0.934,155,1.014,156,0.897,157,0.861,158,1.014,159,0.934,160,1.336,161,1.392,162,0.934,163,1.014,164,0.897,165,0.505,166,1.014,167,0.915,168,0.934,169,0.994,170,0.934,171,1.014,172,0.915,173,0.915,174,0.897,175,1.014,176,0.915,177,1.014,178,0.861,179,0.727,180,0.897,181,1.014,182,0.897,183,1.206,184,0.915,185,0.934,186,0.61,187,0.878,188,0.712,189,0.934,190,0.934,191,0.915,192,1.014,193,0.934,194,1.181,195,1.014,196,0.934,197,1.014,198,0.878,199,0.915,200,0.934,201,0.861,202,1.014,203,0.934,204,0.624,205,0.878,206,0.915,207,1.014,208,0.897,209,1.014,210,0.897,211,1.014,212,0.878,213,1.014,214,0.878,215,1.014,216,0.878,217,0.954,218,1.014,219,0.005,220,0.005,223,0.516,244,0.994,255,0.96,272,3.589,538,1.3,547,4.165,566,3.108,572,1.511,592,1.195,599,1.078,605,0.811,723,1.45,742,2.765,763,2.279,788,1.416,813,2.348,903,1.545,944,2.461,950,4.756,1063,1.995,1100,2.443,1172,1.66,1174,3.196,1175,2.228,1176,2.3,1193,1.48,1444,2.765,1464,2.552,1532,4.756,1536,5.02,1650,2.3,1793,3.404,1816,3.404,1817,3.404,1843,2.89,1850,3.034,1993,4.673,2044,3.404,2571,5.336,2634,4.531,2641,2.461,2644,4.673,2691,4.152,2692,2.653,2694,3.058,2777,2.966,2782,3.378,2788,3.656,2789,6.262,3249,2.89,3329,2.765,3350,3.656,3351,7.067,3352,6.189,3353,6.189,3354,4.508,3355,6.189,3356,4.508,3357,6.262,3358,6.169,3359,6.74,3360,3.656,3361,3.995,3362,4.508,3363,4.508,3364,3.656,3365,3.995,3366,4.508,3367,6.189,3368,6.189,3369,4.508,3370,4.508,3371,6.189,3372,3.995,3373,4.508,3374,4.508,3375,4.508,3376,4.508,3377,4.508,3378,4.508,3379,4.508,3380,4.508,3381,4.508,3382,4.508,3383,4.508,3384,4.508,3385,4.508,3386,4.508,3387,6.262,3388,7.606,3389,4.508,3390,4.508,3391,4.508,3392,4.508,3393,4.508,3394,4.508,3395,4.508,3396,4.508,3397,4.508,3398,4.508,3399,4.508,3400,4.508,3401,4.508,3402,4.508,3403,6.189,3404,6.189,3405,3.656]],["title/components/IssueListComponent.html",[0,0.084,146,0.945]],["body/components/IssueListComponent.html",[0,0.164,1,0.576,2,0.99,3,0.061,4,0.056,5,0.458,6,0.638,7,0.625,8,0.6,9,0.051,11,0.553,14,0.881,15,1.475,16,0.553,17,1.399,18,1.329,19,0.553,20,1.26,21,0.656,23,0.656,25,0.066,26,0.383,27,1.482,30,0.574,33,0.642,36,2.651,37,0.821,39,0.714,40,0.008,41,0.509,42,0.197,43,0.745,45,0.861,46,0.988,49,0.654,50,1.104,51,0.932,53,0.247,54,0.205,55,0.855,56,0.072,57,0.007,59,1.287,60,0.769,62,0.918,78,1.225,87,0.795,88,0.458,92,0.625,93,0.863,94,0.845,95,0.478,96,1.328,97,0.625,98,1.769,99,0.565,100,0.488,101,0.88,102,0.899,103,0.576,104,0.625,105,0.576,106,0.553,107,0.625,108,0.576,109,0.625,110,0.542,111,0.553,112,1.005,113,0.565,114,0.542,115,0.898,116,1.2,117,0.553,118,0.139,119,0.881,120,0.988,121,0.576,122,0.576,123,0.811,124,0.625,125,0.553,126,0.625,127,0.576,128,0.625,129,0.576,130,0.625,131,0.565,132,0.625,133,0.565,134,0.625,135,0.402,136,0.625,137,0.565,138,0.274,139,0.625,140,0.576,141,0.625,142,0.576,143,1.2,144,0.576,145,0.625,146,1.249,147,1.2,148,0.576,149,0.625,150,0.588,151,0.625,152,0.553,153,0.625,154,0.576,155,0.625,156,0.553,157,0.531,158,0.625,159,0.576,160,0.937,161,0.976,162,0.576,163,0.625,164,0.553,165,0.732,166,0.625,167,0.565,168,0.576,169,0.613,170,0.576,171,0.625,172,0.565,173,0.565,174,0.553,175,0.625,176,0.565,177,0.625,178,1.151,179,1.207,180,0.553,181,0.625,182,0.553,183,1.04,184,0.565,185,0.576,186,0.682,187,0.542,188,0.439,189,0.576,190,0.576,191,0.565,192,0.625,193,0.576,194,0.531,195,0.625,196,0.576,197,0.625,198,0.542,199,0.565,200,0.576,201,0.531,202,0.625,203,0.576,204,0.904,205,0.542,206,0.565,207,0.625,208,0.553,209,0.625,210,0.553,211,0.625,212,0.542,213,0.625,214,0.542,215,0.625,216,0.542,217,0.588,218,0.625,219,0.004,220,0.005,223,0.641,225,2.144,231,0.772,241,2.347,244,0.956,246,2.284,251,1.049,255,0.726,265,2.782,269,1.294,279,1.894,305,3.68,306,2.813,307,2.557,308,3.276,310,0.7,317,3.421,366,1.695,407,1.374,408,1.333,433,2.255,496,1.024,512,2.507,520,2.456,526,0.737,532,3.271,534,0.722,535,3.237,545,0.911,547,4.399,566,1.223,572,1.827,592,1.15,605,0.737,608,1.719,638,2.195,649,2.553,723,1.25,759,1.223,760,2.114,763,1.598,766,2.664,775,1.791,782,3.132,784,2.725,787,1.965,788,1.363,789,1.159,790,1.333,800,1.102,803,4.321,808,1.466,813,1.571,817,1.374,823,1.962,825,2.483,826,1.223,830,1.159,831,2.557,832,1.418,833,0.913,834,1.783,835,1.783,837,3.921,838,3.627,858,1.975,862,2.144,865,2.146,868,2.661,870,1.294,874,2.168,878,4.281,884,3.334,891,3.845,896,3.421,899,5.041,903,0.881,1109,1.518,1177,1.333,1178,1.975,1195,1.19,1198,1.783,1199,1.466,1212,2.22,1216,1.518,1247,1.637,1260,2.889,1420,1.872,1469,2.892,1473,2.892,1508,3.477,1577,3.567,1581,4.256,1585,2.92,1586,1.374,1629,1.418,1642,3.696,1653,4.028,1662,1.975,1703,1.975,1773,3.082,1956,1.872,2008,1.637,2166,2.213,2240,3.074,2291,2.456,2292,2.782,2317,3.074,2346,2.92,2385,2.456,2386,2.456,2387,2.553,2437,1.783,2552,2.1,2556,2.1,2557,6.404,2563,2.1,2702,3.921,2741,2.813,2795,5.341,2810,4.727,2860,5.617,2879,2.661,3006,3.845,3013,3.276,3341,2.456,3406,2.1,3407,4.642,3408,3.845,3409,4.028,3410,4.327,3411,3.519,3412,5.335,3413,4.327,3414,5.335,3415,5.335,3416,5.335,3417,4.327,3418,5.335,3419,5.335,3420,4.327,3421,3.845,3422,3.845,3423,4.339,3424,4.339,3425,6.027,3426,4.889,3427,6.027,3428,2.781,3429,3.845,3430,2.781,3431,2.464,3432,4.339,3433,2.781,3434,4.339,3435,2.781,3436,3.845,3437,4.339,3438,2.781,3439,4.339,3440,4.339,3441,2.781,3442,2.781,3443,3.845,3444,2.781,3445,4.339,3446,4.339,3447,3.845,3448,6.027,3449,4.339,3450,6.926,3451,3.845,3452,2.781,3453,6.41,3454,4.339,3455,3.845,3456,4.339,3457,2.781,3458,2.781,3459,2.781,3460,2.781,3461,2.781,3462,2.781,3463,2.781,3464,2.781,3465,4.327,3466,2.781,3467,2.781,3468,4.327,3469,3.519,3470,2.781,3471,2.781,3472,2.781,3473,4.327,3474,3.519,3475,2.781,3476,2.781,3477,3.519,3478,2.781,3479,5.335,3480,2.781,3481,2.464,3482,5.335,3483,4.339,3484,2.781,3485,3.845,3486,6.536,3487,4.339,3488,2.464,3489,5.335,3490,2.781,3491,2.781,3492,4.327,3493,2.781,3494,2.781,3495,2.781,3496,2.781,3497,4.339,3498,4.339,3499,2.781,3500,2.255,3501,2.781,3502,2.781,3503,2.781,3504,2.781,3505,2.781,3506,2.255,3507,2.781,3508,2.781,3509,2.255,3510,2.255,3511,2.255,3512,2.255,3513,2.781,3514,2.781,3515,2.255,3516,2.255,3517,2.255,3518,2.781,3519,2.781,3520,2.781,3521,2.781,3522,2.781,3523,6.027,3524,2.781,3525,5.335,3526,2.781,3527,2.781,3528,2.464,3529,2.781,3530,2.781,3531,4.339,3532,2.781,3533,6.536,3534,4.339,3535,4.339,3536,2.781,3537,2.781,3538,4.339,3539,2.781,3540,4.339,3541,2.781,3542,2.781,3543,2.1,3544,2.464,3545,4.339,3546,2.781,3547,2.781,3548,4.339,3549,4.339,3550,4.339,3551,4.339,3552,2.464,3553,2.464,3554,2.464,3555,2.1,3556,2.781,3557,2.781,3558,2.781]],["title/components/IssueLocationComponent.html",[0,0.084,148,0.945]],["body/components/IssueLocationComponent.html",[0,0.163,1,0.969,2,0.839,3,0.103,4,0.094,5,0.77,6,1.073,7,1.051,8,1.009,9,0.086,11,0.93,16,0.93,17,1.433,18,1.366,19,0.93,20,0.787,21,0.959,23,0.959,25,0.112,30,0.839,33,0.691,37,0.733,39,0.51,40,0.008,41,0.539,42,0.158,43,0.413,45,0.864,46,0.959,49,0.483,53,0.213,54,0.345,56,0.12,57,0.012,62,1.342,78,1.791,88,0.77,92,1.051,93,1.262,94,1.236,95,0.804,96,1.702,97,1.051,98,1.997,99,0.949,100,0.821,101,1.044,102,1.315,103,0.969,104,1.051,105,0.969,106,0.93,107,1.051,108,0.969,109,1.051,110,0.911,111,0.93,112,0.972,113,0.949,114,0.911,115,1.068,116,1.62,117,0.93,118,0.119,119,0.949,120,0.981,121,0.969,122,0.969,123,0.874,124,1.051,125,0.93,126,1.051,127,0.969,128,1.051,129,0.969,130,1.051,131,0.949,132,1.051,133,0.949,134,1.051,135,0.676,136,1.051,137,0.949,138,0.46,139,1.051,140,0.969,141,1.051,142,0.969,143,1.62,144,0.969,145,1.051,146,0.969,147,1.62,148,1.6,149,1.051,150,0.989,151,1.051,152,0.93,153,1.051,154,0.969,155,1.62,156,0.93,157,0.892,158,1.051,159,0.969,160,1.37,161,1.427,162,0.969,163,1.051,164,0.93,165,0.523,166,1.051,167,0.949,168,0.969,169,1.03,170,0.969,171,1.051,172,0.949,173,0.949,174,0.93,175,1.051,176,0.949,177,1.051,178,0.892,179,0.754,180,0.93,181,1.051,182,0.93,183,1.236,184,0.949,185,0.969,186,0.625,187,0.911,188,0.738,189,0.969,190,0.969,191,0.949,192,1.051,193,0.969,194,1.474,195,1.051,196,0.969,197,1.051,198,0.911,199,0.949,200,0.969,201,0.892,202,1.051,203,0.969,204,0.647,205,0.911,206,0.949,207,1.051,208,0.93,209,1.051,210,0.93,211,1.051,212,0.911,213,1.051,214,0.911,215,1.051,216,0.911,217,0.989,218,1.051,219,0.005,220,0.005,223,0.39,263,1.721,271,3.167,272,3.12,288,0.911,310,1.024,496,1.721,532,3.765,545,0.959,599,1.517,605,0.46,622,3.32,638,2.13,723,1.687,763,2.336,788,1.468,830,1.949,865,2.364,903,1.288,908,4.141,971,2.868,1100,1.501,1172,1.721,1174,3.765,1175,3.558,1176,3.235,1177,3.04,1182,4.141,1191,2.79,1192,2.645,1193,2.083,1484,4.067,1545,4.57,1628,4.892,1633,2.645,1652,2.24,1771,2.282,2592,6.752,2634,5.338,2692,4.75,2694,2.31,2695,3.32,2697,3.529,2741,3.344,2776,4.141,2777,2.24,2782,2.551,3119,4.067,3341,3.591,3405,5.84,3436,5.621,3559,4.141,3560,7.2,3561,6.343,3562,7.722,3563,7.722,3564,6.343,3565,7.2,3566,4.674,3567,4.674,3568,6.343,3569,4.674,3570,6.343,3571,4.674,3572,4.674,3573,6.343,3574,6.343,3575,7.722,3576,3.791,3577,3.32,3578,4.674,3579,4.674,3580,4.674,3581,3.32,3582,4.674,3583,4.674,3584,6.343,3585,4.674,3586,4.674]],["title/interfaces/IssueNode.html",[118,0.075,1207,2.683]],["body/interfaces/IssueNode.html",[0,0.153,3,0.112,4,0.161,5,1.108,9,0.138,25,0.122,26,0.593,40,0.008,42,0.204,43,0.593,49,0.715,53,0.236,56,0.173,57,0.02,87,0.863,101,0.79,112,0.809,118,0.152,120,0.697,135,0.972,138,0.741,165,1,186,0.819,188,1.061,219,0.006,220,0.006,223,0.425,231,1.203,255,0.613,279,2.681,291,4.217,311,2.998,512,1.5,526,1.351,538,1.469,545,1.351,592,2.342,605,0.87,619,2.361,717,2.475,722,2.308,814,2.876,833,1.673,903,1.793,949,3.954,1063,1.897,1064,3.333,1067,3.666,1068,3.422,1091,1.921,1195,3.219,1203,4.424,1204,2.304,1205,2.884,1206,4.75,1207,5.121,1208,3.604,1209,3.22,1210,2.781,1211,2.442,1212,3.253,1213,3.22,1214,2.598,1215,2.686,1216,4.104,1217,4.5,1218,4.424,1219,3.124,1220,3.124,1221,3.124,1222,3.124,1223,3.124,1224,3.124,1225,3.124,1226,3.124,1227,3.127,1228,3.124,1229,3.124,1230,5.096,1231,3.604,1232,3.954,1233,3.954,1234,2.876,1235,4.364,1236,4.308,1237,4.308,1238,2.256,1239,3.127,1240,3.22,1241,4.12,1242,3.668,1243,3.22,1244,3.668,1245,4.12,1246,4.308,1247,2.534,1248,4.308,1249,3.427,1250,4.308,1251,2.955,1252,4.308,1253,3.668,1254,4.308,1255,4.12,1256,3.266,1257,4.256,1258,2.686,1259,2.884,1260,2.442,1261,3.804,1262,3.266,1263,3.266,1264,3.266,1265,3.954,1266,3.266,1267,4.308,1268,3.266,1269,3.266,1270,3.266,1271,3.124,1272,1.876,1273,3.804,1274,4.821,1275,3.266,1276,3.266,1277,4.308,1278,3.266,1279,4.308,1280,4.308,1281,3.266,1282,3.266,1283,4.104,1284,4.308,1285,3.124,1286,4.12,1287,4.308,1288,3.266,1289,4.526,1290,3.543,1291,3.266,1292,3.124,1293,3.266,1294,3.266,1295,3.266,1296,3.124,1297,3.954,1298,3.124,1299,2.781,1300,3.124,1301,2.686]],["title/injectables/IssueStoreService.html",[529,1.09,3587,3.698]],["body/injectables/IssueStoreService.html",[3,0.105,4,0.097,9,0.134,25,0.114,30,0.853,33,0.708,37,0.837,39,1.006,40,0.008,41,0.596,42,0.203,43,0.814,45,1.027,49,0.639,53,0.23,54,0.354,56,0.123,57,0.012,59,1.38,61,2.916,112,0.776,219,0.005,220,0.005,223,0.399,224,2.688,231,0.933,276,1.441,288,0.933,512,1.899,529,1.542,534,1.243,537,1.996,538,1.38,542,2.836,544,2.733,545,0.975,552,2.106,605,0.904,643,1.996,688,1.41,750,1.392,815,3.519,979,5.713,1233,3.794,1243,3.09,1304,3.07,1315,4.339,1340,4.243,1353,4.243,1422,3.09,1423,4.134,1583,6.325,2104,4.868,2601,5.229,2602,4.782,2603,4.868,2630,4.868,2651,5.713,2686,5.713,3587,5.229,3588,8.199,3589,6.447,3590,3.954,3591,6.447,3592,6.447,3593,6.447,3594,6.447,3595,6.447,3596,6.447,3597,6.447,3598,6.447,3599,6.447,3600,6.447,3601,6.447,3602,4.788,3603,7.799,3604,7.289,3605,7.799,3606,7.289,3607,7.799,3608,7.289,3609,7.799,3610,7.289,3611,7.799,3612,7.289,3613,7.799,3614,7.289,3615,7.799,3616,7.289,3617,7.799,3618,7.289,3619,7.799,3620,7.289,3621,7.799,3622,7.289,3623,7.799,3624,7.289,3625,7.799,3626,7.289,3627,7.799,3628,7.799,3629,7.799,3630,4.788,3631,6.447,3632,6.447,3633,7.799,3634,4.788,3635,6.447,3636,6.447,3637,8.384,3638,4.788,3639,6.447,3640,7.799,3641,4.788,3642,6.447,3643,6.447,3644,7.799,3645,6.447,3646,6.447,3647,4.788,3648,6.447,3649,6.447,3650,8.384,3651,4.788,3652,6.447,3653,4.788,3654,6.447,3655,4.788,3656,6.447,3657,8.384,3658,4.788,3659,6.447,3660,7.799,3661,4.788,3662,6.447,3663,6.447,3664,7.799,3665,4.788,3666,6.447,3667,6.447,3668,7.799,3669,4.788,3670,6.447,3671,6.447,3672,8.384,3673,6.447,3674,8.384,3675,4.788,3676,4.788,3677,4.788,3678,4.788,3679,4.788,3680,4.788,3681,4.788,3682,4.788,3683,4.788,3684,4.788,3685,4.788,3686,4.788,3687,4.788,3688,4.788,3689,4.788,3690,4.788,3691,4.788]],["title/directives/ItemDirective.html",[95,0.784,206,0.926]],["body/directives/ItemDirective.html",[2,1.103,3,0.159,4,0.146,9,0.132,16,1.436,17,1.234,40,0.008,53,0.213,54,0.533,56,0.186,57,0.018,88,1.374,95,1.554,205,1.407,206,1.693,219,0.007,220,0.007,223,0.602,397,4.906,634,2.165,1407,5.922,3692,6.397,3693,7.388,3694,8.338,3695,8.338,3696,7.388]],["title/components/LabelSearchComponent.html",[0,0.084,152,0.907]],["body/components/LabelSearchComponent.html",[0,0.148,1,0.876,2,0.782,3,0.093,4,0.085,5,0.696,6,0.97,7,0.95,8,0.912,9,0.077,11,0.84,14,1.201,15,1.887,16,0.84,17,1.427,18,1.36,19,0.84,20,0.711,21,0.895,23,0.895,25,0.101,26,0.523,27,1.15,30,0.782,33,0.625,37,0.78,39,0.646,40,0.008,41,0.547,42,0.171,43,0.523,45,0.764,46,0.895,49,0.451,50,1.426,51,1.281,53,0.23,54,0.312,56,0.152,57,0.011,59,1.119,60,1.168,62,1.252,82,2.486,87,0.849,88,0.975,92,0.95,93,1.177,94,1.441,95,0.727,96,1.63,97,0.95,98,1.958,99,0.858,100,0.742,101,0.994,102,1.226,103,0.876,104,0.95,105,0.876,106,0.84,107,0.95,108,0.876,109,0.95,110,0.823,111,0.84,112,0.938,113,0.858,114,0.823,115,1.495,116,1.536,117,0.84,118,0.113,119,0.858,120,0.945,121,0.876,122,0.876,123,0.79,124,0.95,125,0.84,126,0.95,127,0.876,128,0.95,129,0.876,130,0.95,131,0.858,132,0.95,133,0.858,134,0.95,135,0.611,136,0.95,137,0.858,138,0.673,139,0.95,140,0.876,141,0.95,142,0.876,143,1.536,144,0.876,145,0.95,146,0.876,147,1.536,148,0.876,149,0.95,150,0.894,151,0.95,152,1.471,153,0.95,154,0.876,155,0.95,156,0.84,157,0.806,158,0.95,159,0.876,160,1.277,161,1.331,162,0.876,163,0.95,164,0.84,165,0.473,166,0.95,167,0.858,168,0.876,169,0.931,170,0.876,171,0.95,172,0.858,173,0.858,174,0.84,175,0.95,176,0.858,177,0.95,178,0.806,179,0.682,180,0.84,181,0.95,182,0.84,183,1.153,184,0.858,185,0.876,186,0.583,187,0.823,188,0.667,189,0.876,190,0.876,191,0.858,192,0.95,193,0.876,194,1.582,195,0.95,196,0.876,197,0.95,198,0.823,199,0.858,200,0.876,201,1.129,202,0.95,203,0.876,204,0.585,205,0.823,206,0.858,207,0.95,208,0.84,209,0.95,210,0.84,211,0.95,212,0.823,213,0.95,214,0.823,215,0.95,216,0.823,217,0.894,218,0.95,219,0.005,220,0.005,223,0.352,228,2.145,244,1.505,255,0.509,263,1.556,288,0.823,310,0.682,313,2.025,366,0.931,384,3.824,427,4.25,512,1.742,534,1.097,536,2.843,537,1.761,541,1.91,544,2.292,553,3.9,573,3.119,605,0.416,612,3.229,614,3.018,677,4.595,681,2.486,805,2.392,809,1.357,818,3.982,900,2.392,903,0.858,1041,1.387,1100,1.9,1174,1.91,1181,3.426,1195,2.533,1251,2.602,1401,2.486,1473,3.364,1475,2.708,1502,2.533,1508,3.747,1538,3.001,1631,3.481,1907,3.628,2157,4.202,2166,3.018,2172,4.992,2173,6.183,2174,5.338,2175,3.001,2176,4.978,2177,5.577,2178,4.798,2179,4.798,2180,4.798,2181,5.537,2182,3.19,2183,4.978,2184,3.426,2185,4.569,2186,3.793,2187,4.202,2188,3.793,2189,5.531,2190,4.798,2191,5.537,2192,4.798,2193,5.537,2194,5.537,2195,5.155,2196,5.155,2197,4.798,2198,4.377,2199,3.426,2200,4.798,2201,2.591,2202,4.798,2203,5.999,2204,3.19,2205,2.843,2206,4.595,2207,3.19,2208,3.426,2209,3.426,2210,3.426,2211,3.426,2212,3.426,2213,3.426,2214,3.19,2215,3.426,2216,5.999,2217,3.426,2218,3.426,2219,4.798,2220,3.426,2221,3.426,2222,3.426,2223,3.001,2224,3.982,2694,2.088,3697,5.916,3698,4.224,3699,5.916,3700,4.224,3701,4.224,3702,4.224,3703,4.224,3704,4.224,3705,4.224,3706,4.224,3707,5.916,3708,3.743]],["title/injectables/LabelStoreService.html",[529,1.09,2183,3.069]],["body/injectables/LabelStoreService.html",[3,0.134,4,0.123,9,0.112,25,0.145,30,0.995,33,0.9,37,0.742,39,0.892,40,0.008,41,0.586,42,0.188,43,0.722,45,0.915,49,0.703,50,1.114,51,0.94,53,0.252,54,0.449,56,0.21,57,0.015,59,1.236,101,1.004,115,1.438,138,0.741,219,0.006,220,0.007,223,0.628,228,2.683,272,2.35,276,1.83,288,1.185,312,2.169,529,1.8,534,1.579,537,2.535,544,3.043,545,1.327,546,2.625,552,2.675,568,6.925,572,1.995,592,1.612,605,0.841,643,2.535,688,1.791,813,1.791,830,2.535,865,2.803,1304,3.899,1308,4.107,1473,3.455,1508,3.403,2008,3.082,2039,5.345,2177,4.093,2183,5.064,2185,4.26,2186,4.824,2214,4.591,2223,5.345,2366,5.5,2389,3.729,2630,4.591,3106,5.345,3709,6.925,3710,7.525,3711,7.525,3712,6.081,3713,8.939,3714,6.081,3715,7.525,3716,5.388,3717,7.525,3718,9.289,3719,6.081,3720,7.525,3721,6.081,3722,6.081,3723,6.081,3724,6.081,3725,6.081,3726,6.081,3727,6.081]],["title/classes/LayoutNode.html",[57,0.012,3728,3.239]],["body/classes/LayoutNode.html",[0,0.129,3,0.098,4,0.169,9,0.081,25,0.106,26,0.541,27,1.508,30,0.81,33,0.907,37,0.824,39,0.766,40,0.008,41,0.454,42,0.199,43,0.62,45,0.846,46,1.061,49,0.576,50,1.61,51,1.343,53,0.131,57,0.018,59,0.927,75,2.726,76,3.356,87,0.982,100,0.781,112,0.91,118,0.073,138,0.691,165,1.06,186,0.781,219,0.005,220,0.005,223,0.585,244,0.979,255,1.012,291,4.052,310,0.989,545,1.199,550,1.903,560,3.578,565,3.356,570,2.426,572,2.051,605,0.691,651,4.854,702,3.329,717,1.637,725,4.05,739,2.615,774,2.426,814,2.624,823,3.172,833,2.811,860,2.343,869,5.296,884,2.267,903,1.706,912,3.605,920,2.426,924,3.356,938,2.771,1031,2.726,1051,3.469,1063,2.639,1064,3.307,1067,3.223,1068,3.237,1069,3.157,1090,3.157,1091,1.676,1172,3.094,1183,3.356,1238,3.048,1239,2.852,1243,2.937,1260,2.13,1283,3.829,1534,4.627,1608,2.426,1619,2.615,1786,3.606,1810,3.356,1848,2.991,1851,2.991,1866,4.353,1870,4.353,1970,4.449,1989,3.157,2040,3.157,2913,6.433,2914,5.709,3030,4.627,3249,5.257,3261,4.627,3500,3.605,3543,5.709,3577,3.157,3728,5.37,3729,7.401,3730,3.605,3731,6.129,3732,6.129,3733,6.129,3734,6.129,3735,6.129,3736,6.129,3737,6.129,3738,6.129,3739,6.129,3740,6.129,3741,6.215,3742,6.7,3743,6.129,3744,4.445,3745,6.65,3746,4.445,3747,4.445,3748,4.445,3749,4.445,3750,6.129,3751,4.445,3752,4.445,3753,4.445,3754,6.7,3755,4.445,3756,4.445,3757,4.445,3758,4.721,3759,4.445,3760,6.889,3761,4.445,3762,5.43,3763,4.445,3764,5.43,3765,6.215,3766,4.971,3767,5.43,3768,5.43,3769,4.445,3770,3.938,3771,3.938,3772,3.938,3773,3.938,3774,3.938,3775,3.938,3776,6.215,3777,5.689,3778,3.938,3779,3.938,3780,5.43,3781,3.938,3782,3.938,3783,3.938,3784,3.938,3785,3.938,3786,3.938,3787,3.938,3788,3.938,3789,3.938,3790,3.938,3791,3.938,3792,3.605,3793,3.157,3794,3.938,3795,3.938,3796,3.938,3797,3.938,3798,6.215,3799,5.43,3800,3.938,3801,3.938,3802,3.938,3803,5.43,3804,3.938,3805,5.689,3806,3.938,3807,3.938,3808,3.938,3809,3.938,3810,3.938,3811,3.605,3812,3.938,3813,3.938,3814,3.938,3815,3.938,3816,3.938,3817,3.356,3818,3.938,3819,3.938,3820,3.938,3821,3.938,3822,3.938,3823,3.938,3824,3.938,3825,3.938,3826,3.938,3827,5.43]],["title/components/LinkedIssueItemComponent.html",[0,0.084,154,0.945]],["body/components/LinkedIssueItemComponent.html",[0,0.145,1,0.908,2,0.92,3,0.096,4,0.088,5,0.722,6,1.006,7,0.985,8,0.946,9,0.08,11,0.871,14,1.232,15,1.924,16,0.871,17,1.429,18,1.362,19,0.871,20,0.738,21,0.917,23,0.917,25,0.105,26,0.536,27,1.265,30,0.802,33,0.648,37,0.717,39,0.478,40,0.008,41,0.528,42,0.174,43,0.387,45,0.49,46,0.662,49,0.573,50,1.111,53,0.247,54,0.323,56,0.113,57,0.011,59,0.917,60,1.211,62,1.283,82,2.577,86,5.673,88,1.147,91,2.182,92,0.985,93,1.207,94,1.182,95,0.753,96,1.656,97,0.985,98,1.972,99,0.889,100,0.769,101,1.031,102,1.257,103,0.908,104,0.985,105,0.908,106,0.871,107,0.985,108,0.908,109,0.985,110,0.854,111,0.871,112,0.95,113,0.889,114,0.854,115,1.022,116,1.566,117,0.871,118,0.072,119,0.889,120,0.998,121,0.908,122,0.908,123,0.819,124,0.985,125,0.871,126,0.985,127,0.908,128,0.985,129,0.908,130,0.985,131,0.889,132,0.985,133,0.889,134,0.985,135,0.634,136,0.985,137,0.889,138,0.432,139,0.985,140,0.908,141,0.985,142,0.908,143,1.566,144,0.908,145,0.985,146,0.908,147,1.566,148,0.908,149,0.985,150,0.927,151,0.985,152,0.871,153,0.985,154,1.557,155,1.566,156,1.802,157,0.836,158,0.985,159,0.908,160,1.31,161,1.365,162,0.908,163,0.985,164,0.871,165,0.49,166,0.985,167,0.889,168,0.908,169,0.965,170,0.908,171,0.985,172,0.889,173,0.889,174,0.871,175,0.985,176,0.889,177,0.985,178,0.836,179,0.707,180,0.871,181,0.985,182,0.871,183,1.182,184,0.889,185,0.908,186,0.598,187,0.854,188,0.692,189,0.908,190,0.908,191,0.889,192,0.985,193,0.908,194,1.434,195,0.985,196,0.908,197,0.985,198,0.854,199,0.889,200,0.908,201,1.158,202,0.985,203,0.908,204,0.963,205,0.854,206,0.889,207,0.985,208,0.871,209,0.985,210,0.871,211,0.985,212,0.854,213,0.985,214,0.854,215,0.985,216,0.854,217,0.927,218,0.985,219,0.005,220,0.005,223,0.365,225,2.998,232,2.758,262,2.234,263,2.234,288,0.854,313,2.099,366,1.337,464,6.621,496,1.613,509,1.981,512,1.29,532,3.785,534,1.137,545,1.053,569,3.053,580,3.199,638,2.037,723,1.631,750,1.503,758,3.095,760,2.758,763,2.234,765,2.686,766,3.006,777,3.305,782,2.908,784,2.53,787,2.563,788,1.906,789,1.826,790,2.099,800,1.735,803,3.912,830,1.826,833,1.438,865,2.285,971,2.744,990,4.309,991,4.254,1011,1.992,1189,2.309,1191,2.668,1192,1.826,1193,1.992,1198,3.89,1259,3.435,1484,3.89,1609,2.686,1666,5.376,1815,2.808,2067,2.48,2300,3.553,2696,3.111,2698,3.881,2741,2.309,2766,4.921,2790,3.307,2923,2.48,3332,2.686,3333,5.645,3334,3.89,3341,3.435,3343,3.553,3344,3.881,3407,3.111,3828,7.89,3829,6.067,3830,7.514,3831,6.067,3832,4.309,3833,6.96,3834,7.514,3835,4.38,3836,6.067,3837,4.38,3838,4.38,3839,5.376,3840,5.376,3841,4.38,3842,4.38,3843,4.38,3844,4.38,3845,6.067,3846,6.067,3847,4.38,3848,4.38,3849,4.38,3850,4.38,3851,6.067,3852,4.38,3853,4.38,3854,4.38,3855,4.38,3856,3.881,3857,4.38,3858,4.38]],["title/interfaces/ListId.html",[118,0.075,1469,1.762]],["body/interfaces/ListId.html",[0,0.149,2,0.631,3,0.105,4,0.096,9,0.088,25,0.114,26,0.568,40,0.008,42,0.208,45,0.535,49,0.652,51,1.125,56,0.236,80,2.995,84,1.892,87,0.738,101,0.856,115,0.804,118,0.12,120,0.756,123,1.457,156,1.28,165,1.064,204,0.891,219,0.005,220,0.005,223,0.398,228,2.632,231,0.931,255,0.938,276,1.936,312,1.377,366,2.046,455,1.991,509,2.16,512,2.522,526,1.266,535,2.746,545,1.437,546,1.468,563,3.214,566,2.1,572,1.985,573,2.518,588,4.995,592,2.156,599,1.142,605,0.801,634,1.671,688,1.406,750,1.88,759,3.685,775,2.923,809,2.338,815,2.607,824,3.392,832,3.974,833,2.39,838,3.248,861,3.392,886,2.16,938,2.16,961,2.928,974,3.202,1005,3.392,1063,1.817,1072,4.41,1227,2.995,1244,2.607,1247,1.801,1260,3.085,1308,2.607,1365,2.222,1422,3.085,1469,3.011,1473,1.846,1474,2.1,1482,3.283,1502,2.044,1581,2.81,1609,3.947,1742,2.703,1743,3.973,1771,1.718,1804,2.683,1854,3.214,1873,2.831,1926,3.947,1928,3.974,1933,3.947,1935,2.36,2004,3.062,2038,3.643,2047,2.518,2114,2.81,2115,4.284,2164,2.928,2166,2.436,2317,2.436,2431,4.743,2663,3.214,2664,3.062,2669,4.571,2850,4.9,2855,4.126,2871,3.214,2872,3.214,3859,3.062,3860,5.904,3861,5.904,3862,5.22,3863,4.859,3864,5.882,3865,3.606,3866,3.392,3867,3.392,3868,3.873,3869,3.873,3870,3.873,3871,3.873,3872,3.606,3873,5.22,3874,3.062,3875,5.22,3876,5.22,3877,4.859,3878,5.22,3879,3.873,3880,3.873,3881,5.22,3882,3.873,3883,3.873,3884,3.873,3885,3.873,3886,3.873,3887,3.873,3888,3.873,3889,3.873,3890,3.873,3891,3.873,3892,3.873,3893,3.606,3894,3.392,3895,3.606,3896,3.606,3897,3.606,3898,3.606,3899,3.606,3900,3.392,3901,3.873,3902,3.873,3903,3.873,3904,3.873,3905,3.873,3906,3.873,3907,3.873,3908,3.873]],["title/interfaces/ListParams.html",[118,0.075,1742,2.581]],["body/interfaces/ListParams.html",[0,0.135,2,0.641,3,0.107,4,0.098,9,0.089,25,0.116,26,0.574,40,0.008,42,0.206,43,0.692,45,0.543,49,0.655,51,1.134,56,0.236,80,2.256,84,2.576,87,0.746,101,0.764,115,0.816,118,0.121,120,0.675,123,1.672,156,0.965,165,1.053,204,0.9,219,0.005,220,0.005,223,0.404,228,2.568,231,0.941,255,0.944,276,1.956,312,1.398,366,2.014,455,2.022,509,2.193,512,2.309,526,1.286,535,3.295,545,1.435,546,1.491,563,4.376,566,2.86,572,1.996,573,2.557,588,4.169,592,2.167,599,1.755,605,0.805,634,1.689,688,1.428,750,1.886,759,3.595,775,2.934,809,2.356,815,2.647,824,3.444,832,3.317,833,2.409,838,3.268,861,3.444,886,3.545,938,2.193,961,2.973,974,3.227,1005,3.444,1063,2.308,1072,3.681,1227,3.026,1244,2.647,1247,1.829,1260,2.324,1308,2.647,1365,2.256,1422,3.116,1469,2.835,1473,1.874,1474,2.133,1482,3.317,1502,2.784,1581,2.853,1609,2.973,1742,3.681,1743,4.004,1771,1.744,1804,2.711,1854,3.264,1873,2.86,1926,3.987,1928,3.317,1933,5.161,1935,3.625,2004,3.109,2038,2.745,2047,2.557,2114,2.853,2115,4.317,2164,2.973,2166,2.473,2317,2.473,2431,4.153,2663,3.264,2664,3.109,2669,3.444,2850,4.376,2855,3.109,2871,3.264,2872,3.264,3859,3.109,3860,5.274,3861,5.274,3862,3.933,3863,4.909,3864,5.919,3865,3.661,3866,3.444,3867,3.444,3868,3.933,3869,3.933,3870,3.933,3871,3.933,3872,3.661,3873,5.274,3874,3.109,3875,5.274,3876,5.274,3877,4.909,3878,5.274,3879,3.933,3880,3.933,3881,5.274,3882,3.933,3883,3.933,3884,3.933,3885,3.933,3886,3.933,3887,3.933,3888,3.933,3889,3.933,3890,3.933,3891,3.933,3892,3.933,3893,3.661,3894,3.444,3895,3.661,3896,3.661,3897,3.661,3898,3.661,3899,3.661,3900,3.444,3901,5.274,3902,3.933,3903,3.933,3904,3.933,3905,3.933,3906,3.933,3907,3.933,3908,3.933]],["title/components/LoginComponent.html",[0,0.084,157,0.87]],["body/components/LoginComponent.html",[0,0.151,1,0.925,2,0.812,3,0.098,4,0.09,5,0.735,6,1.024,7,1.003,8,0.963,9,0.082,11,0.887,14,1.248,15,1.943,16,0.887,17,1.43,18,1.363,19,1.398,20,0.751,21,0.929,23,0.929,25,0.106,26,0.543,30,0.812,33,0.66,37,0.764,39,0.487,40,0.008,41,0.531,42,0.155,43,0.394,45,0.499,46,1.063,49,0.468,50,1.287,51,1.086,53,0.242,54,0.329,56,0.115,57,0.011,59,1.063,60,1.233,62,1.3,78,1.734,81,4.187,84,1.767,85,1.605,88,0.735,89,1.767,90,2.736,91,1.605,92,1.003,93,1.222,94,1.197,95,0.767,96,1.669,97,1.003,98,1.979,99,0.906,100,0.784,101,1.007,102,1.273,103,0.925,104,1.003,105,0.925,106,0.887,107,1.003,108,0.925,109,1.003,110,0.869,111,0.887,112,0.956,113,0.906,114,0.869,115,1.035,116,1.581,117,0.887,118,0.074,119,0.906,120,0.952,121,0.925,122,0.925,123,0.834,124,1.003,125,0.887,126,1.003,127,0.925,128,1.003,129,0.925,130,1.003,131,0.906,132,1.003,133,0.906,134,1.003,135,0.646,136,1.003,137,0.906,138,0.439,139,1.003,140,0.925,141,1.003,142,0.925,143,1.581,144,0.925,145,1.003,146,0.925,147,1.581,148,0.925,149,1.003,150,0.944,151,1.003,152,0.887,153,1.003,154,0.925,155,1.003,156,0.887,157,1.446,158,1.003,159,0.925,160,1.327,161,1.382,162,0.925,163,1.003,164,0.887,165,0.499,166,1.003,167,0.906,168,0.925,169,0.983,170,0.925,171,1.003,172,0.906,173,0.906,174,0.887,175,1.003,176,0.906,177,1.003,178,0.852,179,0.72,180,0.887,181,1.003,182,0.887,183,1.197,184,0.906,185,0.925,186,0.746,187,0.869,188,0.705,189,0.925,190,0.925,191,0.906,192,1.003,193,0.925,194,0.852,195,1.003,196,0.925,197,1.003,198,0.869,199,0.906,200,0.925,201,0.852,202,1.003,203,0.925,204,1.099,205,0.869,206,0.906,207,1.003,208,0.887,209,1.003,210,0.887,211,1.003,212,0.869,213,1.003,214,0.869,215,1.003,216,0.869,217,0.944,218,1.003,219,0.005,220,0.005,223,0.372,231,0.646,244,1.888,247,3.036,250,2.076,251,1.683,276,1.849,288,0.869,310,0.72,312,1.771,377,3.169,496,1.643,518,6.173,519,4.992,521,4.983,532,3.803,537,1.86,549,3.134,596,3.354,612,3.354,623,4.371,641,6.227,664,5.345,671,4.983,674,4.335,750,0.963,769,2.525,837,3.478,903,0.906,952,2.352,1041,2.486,1173,3.953,1193,2.486,1199,2.352,1251,3.331,1272,2.263,1398,4.855,1404,4.506,1541,2.435,1553,4.73,1633,1.86,1652,2.138,2480,3.953,2514,2.86,2522,3.953,2702,4.287,2772,3.368,3372,5.444,3909,3.953,3910,5.444,3911,7.573,3912,6.144,3913,7.028,3914,6.144,3915,7.028,3916,4.73,3917,7.028,3918,6.227,3919,6.71,3920,3.618,3921,4.461,3922,4.461,3923,5.444,3924,6.144,3925,6.144,3926,6.144,3927,7.028,3928,5.444,3929,4.461,3930,4.461,3931,4.461,3932,4.461,3933,6.227,3934,4.461,3935,6.144,3936,4.461,3937,4.461,3938,4.461,3939,7.028,3940,4.461,3941,3.953,3942,4.461,3943,6.144,3944,4.461,3945,6.144,3946,4.461,3947,3.953,3948,3.953,3949,4.461,3950,4.461,3951,4.983,3952,4.461,3953,4.461]],["title/components/MarkdownEditorComponent.html",[0,0.084,159,0.945]],["body/components/MarkdownEditorComponent.html",[0,0.161,1,1.008,2,0.861,3,0.107,4,0.098,5,0.801,6,1.116,7,1.094,8,1.05,9,0.089,11,0.967,16,0.967,17,1.435,18,1.368,19,0.967,20,0.819,21,0.985,23,0.985,25,0.116,26,0.575,30,0.861,37,0.713,40,0.008,41,0.529,42,0.162,45,0.544,46,0.735,49,0.496,50,0.89,51,0.751,53,0.144,54,0.359,56,0.125,57,0.012,62,1.378,78,1.372,87,0.558,88,0.801,92,1.094,93,1.296,94,1.269,95,0.836,96,1.729,97,1.094,98,2.012,99,0.987,100,0.854,101,1.028,102,1.35,103,1.008,104,1.094,105,1.008,106,0.967,107,1.094,108,1.008,109,1.094,110,0.947,111,0.967,112,0.985,113,0.987,114,0.947,115,1.097,116,1.652,117,0.967,118,0.08,119,0.987,120,0.962,121,1.008,122,1.008,123,0.909,124,1.094,125,0.967,126,1.094,127,1.008,128,1.094,129,1.008,130,1.094,131,0.987,132,1.094,133,0.987,134,1.094,135,0.704,136,1.094,137,0.987,138,0.479,139,1.094,140,1.008,141,1.094,142,1.008,143,1.652,144,1.008,145,1.094,146,1.008,147,1.652,148,1.008,149,1.094,150,1.029,151,1.094,152,0.967,153,1.094,154,1.008,155,1.094,156,0.967,157,0.928,158,1.094,159,1.626,160,1.974,161,1.465,162,1.008,163,1.094,164,0.967,165,0.544,166,1.094,167,0.987,168,1.008,169,1.071,170,1.008,171,1.094,172,0.987,173,0.987,174,0.967,175,1.094,176,0.987,177,1.094,178,0.928,179,0.785,180,0.967,181,1.094,182,0.967,183,1.269,184,0.987,185,1.008,186,0.642,187,0.947,188,1.444,189,1.008,190,1.008,191,0.987,192,1.094,193,1.008,194,0.928,195,1.094,196,1.008,197,1.094,198,0.947,199,0.987,200,1.008,201,0.928,202,1.094,203,1.008,204,0.673,205,0.947,206,0.987,207,1.094,208,0.967,209,1.094,210,0.967,211,1.094,212,0.947,213,1.094,214,0.947,215,1.094,216,0.947,217,1.029,218,1.094,219,0.005,220,0.005,223,0.405,272,1.879,420,4.627,446,6.365,448,6.636,550,3.605,723,1.526,742,2.981,763,2.399,1072,4.442,1174,3.549,1175,2.402,1193,1.596,1194,3.453,1245,3.995,1272,1.79,1542,3.671,1771,1.749,1838,4.918,1846,5.031,2008,2.457,2147,3.272,2602,5.275,2691,2.654,2694,2.402,2811,4.918,2815,5.812,2849,4.384,2859,5.283,2964,5.772,3288,3.943,3341,3.688,3581,3.453,3793,4.627,3954,6.636,3955,3.671,3956,6.514,3957,6.514,3958,6.509,3959,5.772,3960,7.346,3961,7.847,3962,7.346,3963,4.862,3964,6.514,3965,4.862,3966,5.772,3967,3.688,3968,4.862,3969,6.514,3970,4.862,3971,6.514,3972,4.862,3973,4.862,3974,4.862,3975,3.272,3976,4.862]],["title/components/MarkdownPreviewComponent.html",[0,0.084,162,0.945]],["body/components/MarkdownPreviewComponent.html",[0,0.158,1,1.089,2,0.907,3,0.116,4,0.106,5,0.867,6,1.207,7,1.182,8,1.135,9,0.096,11,1.046,14,1.393,15,2.11,16,1.046,17,1.438,18,1.372,19,1.046,20,0.885,21,1.037,23,1.037,25,0.125,33,0.778,37,0.477,40,0.008,41,0.543,42,0.116,46,0.795,49,0.617,53,0.155,54,0.388,56,0.135,57,0.013,60,1.453,62,1.451,88,0.867,92,1.182,93,1.364,94,1.337,95,0.904,96,1.783,97,1.182,98,2.04,99,1.067,100,0.923,101,1.045,102,1.422,103,1.089,104,1.182,105,1.089,106,1.046,107,1.182,108,1.089,109,1.182,110,1.024,111,1.046,112,1.011,113,1.067,114,1.024,115,1.155,116,1.717,117,1.046,118,0.087,119,1.067,120,0.971,121,1.089,122,1.089,123,0.983,124,1.182,125,1.046,126,1.182,127,1.089,128,1.182,129,1.089,130,1.182,131,1.067,132,1.182,133,1.067,134,1.182,135,0.761,136,1.182,137,1.067,138,0.518,139,1.182,140,1.089,141,1.182,142,1.089,143,1.717,144,1.089,145,1.182,146,1.089,147,1.717,148,1.089,149,1.182,150,1.112,151,1.182,152,1.046,153,1.182,154,1.089,155,1.182,156,1.046,157,1.003,158,1.182,159,1.089,160,1.996,161,1.543,162,1.677,163,1.182,164,1.046,165,0.588,166,1.182,167,1.067,168,1.089,169,1.158,170,1.089,171,1.182,172,1.067,173,1.067,174,1.046,175,1.182,176,1.067,177,1.182,178,1.003,179,0.848,180,1.046,181,1.182,182,1.046,183,1.337,184,1.067,185,1.089,186,0.676,187,1.024,188,0.83,189,1.089,190,1.089,191,1.067,192,1.182,193,1.089,194,1.003,195,1.182,196,1.089,197,1.182,198,1.024,199,1.067,200,1.089,201,1.003,202,1.182,203,1.089,204,0.727,205,1.024,206,1.067,207,1.182,208,1.046,209,1.182,210,1.046,211,1.182,212,1.024,213,1.182,214,1.024,215,1.182,216,1.024,217,1.112,218,1.182,219,0.006,220,0.006,223,0.438,310,1.107,451,5.563,723,1.607,763,2.526,971,3.102,1011,1.726,1100,1.688,1932,3.37,2237,5.179,2602,4.206,2603,3.969,2644,5.179,2777,2.519,3329,3.224,3443,4.658,3954,5.563,3975,4.616,3977,4.658,3978,6.859,3979,7.635,3980,6.859,3981,7.635,3982,5.257,3983,4.264]],["title/classes/MultiSourceList.html",[57,0.012,3984,3.069]],["body/classes/MultiSourceList.html",[0,0.13,2,0.435,3,0.072,4,0.168,9,0.06,13,1.336,14,0.668,15,1.364,17,0.487,18,0.466,20,0.554,21,0.497,22,1.408,23,0.497,24,1.408,25,0.078,26,0.436,27,1.564,28,1.447,30,0.652,33,0.73,35,2.057,37,0.802,39,0.77,40,0.008,41,0.426,42,0.193,43,0.726,45,0.859,46,1.161,49,0.668,50,1.205,51,1.144,53,0.233,54,0.243,55,1.011,56,0.169,57,0.012,58,1.156,59,1.221,60,0.909,64,1.371,84,1.955,87,0.958,88,1.22,100,0.578,112,0.594,114,1.154,118,0.098,123,1.23,165,0.368,179,1.274,186,0.842,187,0.641,188,1.434,219,0.007,220,0.004,223,0.274,231,1.111,232,1.955,242,1.531,244,1.691,249,1.371,252,1.487,255,1.08,279,1.033,296,1.625,310,1.327,366,1.903,534,0.854,535,2.791,545,1.161,546,2.022,550,1.408,558,2.296,564,3.232,571,1.576,599,1.18,605,0.833,618,4.034,634,2.05,649,2.903,688,2.179,717,1.211,722,1.13,725,2.975,739,2.903,750,0.71,758,3.355,760,1.955,761,2.214,766,3.23,775,2.923,777,3.1,780,2.517,784,2.743,787,2.18,788,1.033,789,1.371,790,1.576,800,1.303,809,2.641,823,2.231,831,3.547,841,1.734,874,2.005,886,1.487,903,0.668,920,1.795,923,3.321,938,2.231,941,2.693,974,2.17,984,1.907,988,2.793,1007,1.371,1008,1.303,1009,1.371,1011,1.62,1012,3.99,1029,1.371,1036,2.214,1041,1.08,1063,1.671,1066,2.816,1238,2.367,1421,2.296,1448,2.601,1469,3.227,1473,1.271,1476,2.668,1482,1.678,1500,1.935,1502,2.112,1508,2.231,1511,2.109,1512,2.109,1516,1.935,1540,3.163,1574,2.915,1575,3.468,1661,3.02,1694,4.218,1713,2.793,1735,1.795,1741,2.017,1743,3.232,1744,2.017,1771,2.13,1804,1.371,1806,3.901,1845,1.935,1878,1.862,1881,2.109,1928,3.915,1935,3.483,2038,1.862,2113,2.214,2114,1.935,2115,1.935,2124,2.214,2188,3.796,2201,2.017,2569,5.446,2802,2.214,2826,3.026,2865,5.272,2866,3.796,2868,2.109,2876,4.427,2890,3.504,2923,1.862,3590,2.017,3832,3.504,3874,2.109,3916,4.427,3967,1.862,3975,3.321,3984,4.981,3985,5.693,3986,6.095,3987,3.725,3988,3.725,3989,5.061,3990,4.47,3991,5.321,3992,4.967,3993,4.967,3994,4.47,3995,4.934,3996,4.205,3997,4.967,3998,4.967,3999,3.289,4000,4.934,4001,3.289,4002,3.725,4003,3.725,4004,3.725,4005,3.504,4006,3.289,4007,4.934,4008,2.915,4009,5.794,4010,2.915,4011,3.504,4012,3.725,4013,3.289,4014,3.289,4015,3.163,4016,3.725,4017,3.725,4018,3.289,4019,3.725,4020,3.725,4021,3.725,4022,3.289,4023,3.289,4024,3.725,4025,3.725,4026,3.289,4027,3.289,4028,2.483,4029,2.017,4030,3.026,4031,4.47,4032,3.725,4033,2.483,4034,2.336,4035,2.483,4036,2.483,4037,2.483,4038,3.725,4039,3.725,4040,2.483,4041,2.483,4042,2.483,4043,2.483,4044,3.725,4045,2.483,4046,3.725,4047,2.483,4048,2.483,4049,2.483,4050,2.483,4051,2.483,4052,2.483,4053,2.483,4054,2.483,4055,2.483,4056,2.483,4057,2.483,4058,2.483,4059,2.483,4060,2.483,4061,3.725,4062,4.47,4063,2.483,4064,2.483,4065,2.336,4066,2.483,4067,2.483,4068,2.483,4069,2.336,4070,2.483,4071,2.483,4072,2.483,4073,4.47,4074,2.483,4075,2.483,4076,2.483,4077,2.483,4078,2.483,4079,2.483,4080,2.483,4081,2.483,4082,2.483,4083,2.483,4084,2.483,4085,2.483,4086,2.483,4087,2.483,4088,2.214,4089,3.163,4090,4.205,4091,2.336,4092,2.336,4093,2.336,4094,3.504,4095,2.336,4096,2.336,4097,2.336,4098,2.483,4099,2.336,4100,2.483,4101,2.483,4102,3.504,4103,2.483,4104,2.483,4105,4.205,4106,2.483,4107,2.336,4108,2.483,4109,2.483,4110,3.725,4111,3.725,4112,2.483,4113,2.336,4114,2.483,4115,2.483,4116,2.483,4117,2.483,4118,2.483,4119,2.483,4120,2.483,4121,2.483,4122,3.725,4123,2.483,4124,2.483,4125,2.483,4126,2.483,4127,2.483,4128,2.483,4129,3.725,4130,2.483,4131,2.483,4132,2.483,4133,2.483,4134,2.483,4135,2.483,4136,2.483,4137,2.483,4138,2.483,4139,2.483,4140,2.483,4141,2.483,4142,3.725,4143,2.483,4144,2.483,4145,2.483,4146,2.483,4147,2.483,4148,2.336,4149,2.483]],["title/classes/NodeCache.html",[57,0.012,1960,2.923]],["body/classes/NodeCache.html",[3,0.079,4,0.044,9,0.04,14,0.73,15,0.994,19,0.908,25,0.052,26,0.513,27,0.606,30,0.476,33,0.325,37,0.567,39,0.818,40,0.008,41,0.341,42,0.185,43,0.551,45,0.907,46,0.333,50,0.403,51,0.705,53,0.172,56,0.15,57,0.016,59,1.332,60,0.994,64,1.499,70,2.491,80,2.123,84,0.871,87,0.893,88,0.752,91,1.294,93,0.715,100,0.632,106,1.31,112,0.265,118,0.036,123,1.285,165,0.896,179,1.109,186,0.766,219,0.004,220,0.003,223,0.183,224,0.917,225,3.084,228,0.691,230,1.2,231,1.353,232,2.303,244,1.837,255,0.986,288,0.889,310,1.321,312,2.204,336,1.348,366,1.715,455,0.917,482,1.41,520,2.036,534,0.571,535,2.484,542,1.582,544,1.77,545,1.296,546,2.541,554,0.967,560,1.122,564,1.2,566,1.582,569,1.461,570,2.491,571,2.786,572,1.419,592,1.541,599,1.39,605,0.886,613,1.66,614,2.965,618,2.205,619,0.773,620,3.38,634,1.509,638,2.211,669,2.036,672,2.984,688,2.358,702,0.871,717,0.81,721,1.66,722,0.755,723,0.843,748,1.41,749,1.963,750,1.878,754,2.554,758,2.327,759,3.363,760,1.425,764,3.445,766,2.298,769,2.984,771,1.66,773,4.2,774,1.2,775,2.86,777,3.422,779,1.48,782,3.786,784,2.746,788,0.691,792,2.306,800,1.425,808,1.896,809,2.455,813,1.059,814,1.54,815,2.491,816,2.327,817,1.087,823,0.994,830,0.917,831,2.526,838,2.198,841,3.065,862,1.087,874,3.21,884,1.834,886,2.063,903,0.73,920,1.2,938,1.626,944,3.173,952,2.406,969,1.41,974,2.745,988,2.036,995,1.48,1000,1.294,1011,2.869,1012,3.728,1029,0.917,1032,2.984,1041,1.181,1051,1.245,1063,2.007,1066,1.54,1071,1.294,1096,2.689,1121,1.41,1206,2.491,1238,2.775,1240,1.724,1242,1.2,1247,1.357,1251,2.318,1308,1.2,1365,2.904,1417,1.159,1423,2.925,1448,2.406,1464,2.036,1469,2.247,1474,0.967,1478,2.42,1482,1.122,1490,3.173,1492,2.116,1495,1.562,1500,2.116,1502,3.597,1516,2.116,1532,4.433,1575,2.406,1608,2.877,1617,1.41,1627,1.48,1629,3.359,1631,1.294,1650,1.834,1661,1.122,1676,1.48,1677,1.783,1678,4.902,1679,4.275,1680,2.715,1681,1.783,1682,4.715,1683,1.783,1684,2.917,1685,2.917,1686,1.783,1687,1.783,1688,1.783,1689,1.783,1690,2.42,1691,1.783,1692,1.783,1693,2.917,1694,2.925,1695,1.783,1696,2.715,1697,2.917,1698,2.917,1700,3.701,1702,2.715,1703,4.129,1707,1.783,1708,4.389,1709,2.715,1713,4.026,1714,3.233,1715,2.715,1716,2.917,1717,1.783,1718,1.783,1719,1.783,1720,1.783,1722,1.783,1726,1.783,1728,1.66,1729,2.917,1730,1.783,1731,1.783,1733,1.783,1734,1.783,1735,1.963,1736,1.783,1739,5.051,1740,5.188,1741,1.348,1742,2.036,1743,1.2,1744,1.348,1745,3.827,1746,1.66,1747,2.554,1748,1.562,1749,1.562,1750,4.973,1751,2.205,1752,2.715,1753,1.896,1754,2.715,1755,1.562,1756,3.445,1757,2.554,1758,1.783,1759,3.445,1760,2.554,1761,1.41,1762,1.66,1763,1.66,1764,2.715,1765,1.562,1766,3.241,1767,1.562,1768,1.783,1769,1.783,1770,1.783,1771,2.091,1772,2.42,1773,1.562,1774,1.66,1775,1.562,1776,1.159,1777,1.66,1778,1.783,1779,2.917,1780,2.554,1781,2.715,1782,3.701,1783,3.701,1784,1.783,1785,1.66,1786,2.116,1787,2.917,1788,1.41,1789,1.783,1790,1.783,1791,1.66,1792,2.917,1793,1.66,1794,2.715,1795,1.783,1796,1.783,1797,2.306,1798,1.783,1799,1.783,1800,1.783,1801,1.783,1802,1.783,1803,1.48,1804,0.917,1805,5.342,1806,3.956,1807,3.98,1808,4.275,1809,4.275,1810,1.66,1811,1.348,1812,2.917,1813,6.31,1814,1.783,1815,2.306,1816,1.66,1817,1.66,1818,1.783,1819,2.42,1820,1.783,1821,1.783,1822,1.783,1823,4.275,1824,1.783,1825,1.783,1826,2.917,1827,1.783,1828,1.783,1829,4.275,1830,1.783,1831,2.715,1832,2.917,1833,3.701,1834,2.917,1835,3.701,1836,1.783,1837,4.712,1838,3.445,1839,1.783,1840,1.783,1841,1.245,1842,1.783,1843,2.925,1844,1.783,1845,2.116,1846,2.306,1847,1.783,1848,2.42,1849,1.66,1850,1.48,1851,1.48,1852,1.783,1853,4.275,1854,1.48,1855,1.783,1856,2.917,1857,1.783,1858,2.917,1859,1.783,1860,1.783,1861,3.445,1862,2.554,1863,1.783,1864,1.66,1865,1.66,1866,1.562,1867,1.783,1868,1.783,1869,3.701,1870,1.562,1871,1.783,1872,1.783,1873,2.007,1874,4.715,1875,1.783,1876,1.66,1877,1.66,1878,2.583,1879,1.783,1880,1.66,1881,2.306,1882,1.66,1883,1.562,1884,1.783,1885,1.783,1886,1.783,1887,4.275,1888,3.701,1889,1.2,1890,1.66,1891,1.66,1892,2.917,1893,3.701,1894,1.783,1895,1.783,1896,4.715,1897,1.783,1898,1.783,1899,1.783,1900,1.783,1901,3.701,1902,1.66,1903,2.917,1904,1.783,1905,1.783,1906,3.701,1907,1.348,1908,1.783,1909,1.783,1910,1.783,1911,1.783,1912,1.783,1913,2.917,1914,1.783,1915,1.783,1916,2.917,1917,1.783,1918,1.41,1919,1.783,1920,1.783,1921,1.783,1922,1.783,1923,3.445,1924,2.917,1925,1.783,1926,1.348,1927,1.783,1928,1.122,1929,2.917,1930,1.783,1931,1.562,1932,1.41,1933,2.798,1934,2.116,1935,3.254,1936,1.783,1937,1.783,1938,1.783,1939,1.48,1940,1.783,1941,1.783,1942,1.783,1943,1.783,1944,1.783,1945,1.783,1946,1.783,1947,1.783,1948,1.783,1949,1.783,1950,1.783,1951,3.744,1952,1.783,1953,1.783,1954,1.783,1955,1.783,1956,1.48,1957,1.783,1958,2.917,1959,1.783,1960,3.38,1961,1.783,1962,4.715,1963,1.783,1964,2.917,1965,1.783,1966,1.783,1967,1.66,1968,2.715,1969,1.66,1970,1.294,1971,1.562,1972,1.783,1973,1.783,1974,1.783,1975,4.275,1976,3.701,1977,4.275,1978,3.701,1979,1.783,1980,1.783,1981,1.783,1982,4.715,1983,1.783,1984,1.783,1985,3.701,1986,3.701,1987,3.701,1988,3.701,1989,1.562,1990,1.783,1991,1.783,1992,1.66,1993,3.445,1994,1.783,1995,2.42,1996,1.783,1997,1.783,1998,1.783,1999,1.783,2000,2.917,2001,1.783,2002,1.783,2003,1.783,2004,1.41,2005,1.783,2006,1.783,2007,1.783,2008,1.357,2009,1.783,2010,1.783,2011,1.783,2012,3.445,2013,1.783,2014,3.701,2015,3.701,2016,1.562,2017,1.783,2018,1.783,2019,1.783,2020,1.783,2021,1.783,2022,1.783,2023,1.783,2024,1.783,2025,1.783,2026,1.783,2027,1.783,2028,1.783,2029,1.783,2030,1.783,2031,1.66,2032,1.66,2033,1.66,2034,1.348,2035,3.548,2036,1.562,2037,1.783,2038,2.036,2039,1.562,2040,2.554,2041,2.715,2042,2.116,2043,2.715,2044,1.66,2045,1.783,2046,1.66,2047,2.406,2048,2.917,2049,2.715,2050,1.783,2051,1.783,2052,2.715,2053,1.783,2054,1.783,2055,1.783,2056,2.917,2057,2.917,2058,2.917,2059,2.917,2060,1.783,2061,1.783,2062,1.783,2063,1.783,2064,2.036,2065,1.783,2066,1.783,2067,1.245,2068,1.245,2069,1.783,2070,1.783,2071,1.783,2072,1.783,2073,1.783,2074,1.783,2102,3.187,4150,3.596,4151,3.596,4152,3.596,4153,2.199,4154,2.199,4155,2.199]],["title/components/NodeDetailsComponent.html",[0,0.084,164,0.907]],["body/components/NodeDetailsComponent.html",[0,0.164,1,0.583,2,0.92,3,0.062,4,0.057,5,0.463,6,0.645,7,0.632,8,0.607,9,0.052,11,0.559,14,0.888,15,1.485,16,0.559,17,1.4,18,1.33,19,1.069,20,1.171,21,0.662,23,0.662,25,0.067,26,0.386,27,1.484,30,0.579,33,0.416,36,2.666,37,0.822,39,0.478,40,0.008,41,0.564,42,0.197,43,0.386,45,0.914,46,1.278,49,0.655,50,1.375,51,1.161,53,0.241,54,0.208,55,0.864,56,0.138,57,0.007,59,1.29,60,0.777,62,0.926,64,1.172,77,1.924,78,0.793,82,1.654,85,1.932,87,0.936,88,0.463,91,1.574,92,0.632,93,0.87,94,0.853,95,0.483,96,1.336,97,0.632,98,1.774,99,0.571,100,0.494,101,0.927,102,0.907,103,0.583,104,0.632,105,0.583,106,0.559,107,0.632,108,0.583,109,0.632,110,0.548,111,0.559,112,0.791,113,0.571,114,1.28,115,0.737,116,1.208,117,0.559,118,0.143,119,0.571,120,0.885,121,0.583,122,0.583,123,0.526,124,0.632,125,0.559,126,0.632,127,0.583,128,0.632,129,0.583,130,0.632,131,0.571,132,0.632,133,0.571,134,0.632,135,0.407,136,0.632,137,0.571,138,0.277,139,0.632,140,0.583,141,0.632,142,0.583,143,1.208,144,0.583,145,0.632,146,0.583,147,1.208,148,0.583,149,0.632,150,0.595,151,0.632,152,0.559,153,0.632,154,0.583,155,0.632,156,0.559,157,0.537,158,0.632,159,0.583,160,0.945,161,0.984,162,0.583,163,0.632,164,1.206,165,1.011,166,0.632,167,0.571,168,0.583,169,0.619,170,0.583,171,0.632,172,0.571,173,0.571,174,0.559,175,0.632,176,0.571,177,0.632,178,1.254,179,0.454,180,0.559,181,0.632,182,0.87,183,0.853,184,0.571,185,0.583,186,0.431,187,0.548,188,0.444,189,0.583,190,0.583,191,0.571,192,0.632,193,0.583,194,0.537,195,0.632,196,0.583,197,0.632,198,0.548,199,0.571,200,0.583,201,0.537,202,0.632,203,0.583,204,0.389,205,0.548,206,0.571,207,0.632,208,0.559,209,0.632,210,0.559,211,0.632,212,0.548,213,0.632,214,0.548,215,0.632,216,0.548,217,0.595,218,0.632,219,0.004,220,0.004,223,0.626,231,0.633,244,1.533,246,3.54,247,3.711,250,2.036,251,1.06,255,0.904,263,1.978,269,2.036,279,1.375,288,0.548,310,0.454,384,1.979,408,1.347,413,1.534,423,1.654,427,2.388,443,5.141,455,2.739,496,1.035,526,1.607,532,3.146,541,1.979,545,0.917,549,4.162,550,2.595,592,1.16,599,1.285,605,0.685,622,1.997,667,3.309,675,1.724,716,1.434,723,1.63,763,1.611,775,1.804,787,1.035,789,1.172,813,1.289,825,2.5,826,1.236,830,1.172,832,1.434,833,1.991,834,1.802,835,1.802,837,2.477,863,1.142,865,1.764,870,1.308,884,2.232,900,2.477,903,0.888,922,3.351,983,2.429,984,2.343,991,2.477,1006,1.802,1007,1.172,1008,1.114,1009,1.172,1011,1.991,1026,3.549,1027,2.805,1028,2.945,1029,3.217,1030,2.805,1031,2.683,1032,2.477,1033,3.304,1040,3.549,1093,3.887,1094,3.816,1100,0.903,1153,2.122,1176,1.434,1193,1.437,1197,2.28,1227,1.308,1259,1.591,1260,1.347,1302,4.454,1306,1.997,1313,5.372,1333,4.76,1352,3.877,1356,4.76,1402,2.122,1403,1.591,1409,3.816,1410,2.945,1411,4.357,1412,5.642,1413,4.357,1414,4.357,1415,3.816,1416,2.683,1417,2.832,1419,4.306,1420,4.682,1441,2.805,1442,3.549,1443,5.335,1444,4.606,1445,3.877,1447,1.997,1469,2.076,1550,4.656,1551,2.122,1594,3.549,1631,2.575,1667,2.996,1774,2.122,1815,1.802,1889,2.388,1931,3.108,1970,1.654,1995,1.892,2008,1.65,2101,4.76,2143,3.304,2171,4.08,2291,3.432,2317,1.434,2613,5.821,2625,3.877,2689,1.892,2843,2.28,2855,1.802,3054,1.434,3116,3.877,3329,2.683,3488,3.877,3492,2.28,4156,6.45,4157,2.122,4158,5.372,4159,4.375,4160,4.76,4161,4.76,4162,6.164,4163,5.372,4164,5.372,4165,6.062,4166,6.062,4167,6.062,4168,6.062,4169,6.062,4170,6.062,4171,4.375,4172,6.062,4173,4.375,4174,2.811,4175,4.375,4176,2.811,4177,2.811,4178,2.811,4179,2.811,4180,3.877,4181,2.811,4182,3.108,4183,2.811,4184,2.811,4185,2.811,4186,2.811,4187,2.811,4188,2.811,4189,4.375,4190,2.811,4191,2.811,4192,2.811,4193,2.811,4194,2.811,4195,2.811,4196,2.811,4197,2.811,4198,2.811,4199,2.811,4200,2.811,4201,2.811,4202,2.811,4203,2.811,4204,2.811,4205,2.811,4206,2.811,4207,2.811,4208,2.811,4209,2.811,4210,5.821,4211,7.414,4212,5.89,4213,3.877,4214,3.877,4215,2.491,4216,2.811,4217,2.811,4218,2.811,4219,2.811,4220,2.811,4221,2.811,4222,4.375,4223,5.89,4224,2.811,4225,4.375,4226,2.811,4227,4.375,4228,2.811,4229,2.811,4230,2.811,4231,2.811,4232,2.811,4233,2.811,4234,2.811,4235,4.375,4236,2.811,4237,2.811,4238,4.375,4239,4.375,4240,2.811,4241,2.811,4242,5.372,4243,4.375,4244,2.811,4245,2.811,4246,2.811,4247,2.811,4248,2.811,4249,6.957,4250,4.375,4251,4.375,4252,4.375,4253,2.811,4254,6.062,4255,4.375,4256,6.957,4257,2.811,4258,4.375,4259,2.811,4260,2.811,4261,4.375,4262,4.375,4263,2.811,4264,4.375,4265,2.811,4266,2.811,4267,2.811,4268,2.811,4269,2.811,4270,2.811,4271,2.811,4272,2.811,4273,2.811,4274,2.811,4275,4.375,4276,2.811,4277,2.811,4278,2.811,4279,6.062,4280,5.372,4281,2.811]],["title/components/NodeDetailsPageComponent.html",[0,0.084,167,0.926]],["body/components/NodeDetailsPageComponent.html",[0,0.144,1,1.006,2,0.861,3,0.107,4,0.098,5,0.8,6,1.115,7,1.092,8,1.048,9,0.089,11,0.966,14,1.321,15,2.029,16,0.966,17,1.434,18,1.367,19,0.966,20,0.818,21,0.984,23,0.984,25,0.116,26,0.575,30,0.861,33,0.718,37,0.743,39,0.711,40,0.008,41,0.556,42,0.18,43,0.575,45,0.544,46,0.984,49,0.598,50,1.344,51,1.135,53,0.217,54,0.359,56,0.125,57,0.012,59,0.984,60,1.342,62,1.377,88,0.8,92,1.092,93,1.295,94,1.268,95,0.835,96,1.728,97,1.092,98,2.012,99,0.986,100,0.853,101,1.027,102,1.349,103,1.006,104,1.092,105,1.006,106,0.966,107,1.092,108,1.006,109,1.092,110,0.946,111,0.966,112,0.985,113,0.986,114,0.946,115,1.096,116,1.651,117,0.966,118,0.08,119,0.986,120,0.962,121,1.006,122,1.006,123,0.908,124,1.092,125,0.966,126,1.092,127,1.006,128,1.092,129,1.006,130,1.092,131,0.986,132,1.092,133,0.986,134,1.092,135,0.703,136,1.092,137,0.986,138,0.641,139,1.092,140,1.006,141,1.092,142,1.006,143,1.651,144,1.006,145,1.092,146,1.006,147,1.651,148,1.006,149,1.092,150,1.027,151,1.092,152,0.966,153,1.092,154,1.006,155,1.092,156,0.966,157,0.927,158,1.092,159,1.006,160,1.405,161,1.464,162,1.006,163,1.092,164,0.966,165,0.942,166,1.092,167,1.593,168,1.006,169,1.07,170,1.006,171,1.092,172,0.986,173,0.986,174,0.966,175,1.092,176,0.986,177,1.092,178,0.927,179,0.783,180,0.966,181,1.092,182,0.966,183,1.268,184,0.986,185,1.006,186,0.641,187,0.946,188,0.767,189,1.006,190,1.006,191,0.986,192,1.092,193,1.006,194,0.927,195,1.092,196,1.006,197,1.092,198,0.946,199,0.986,200,1.006,201,0.927,202,1.092,203,1.006,204,0.672,205,0.946,206,0.986,207,1.092,208,0.966,209,1.092,210,0.966,211,1.092,212,0.946,213,1.092,214,0.946,215,1.092,216,0.946,217,1.027,218,1.092,219,0.005,220,0.005,255,0.784,288,0.946,312,2.52,442,3.113,443,2.749,444,3.268,455,3.878,456,6.356,496,1.788,532,3.889,596,3.552,599,1.756,775,2.465,833,2.41,865,2.41,922,3.32,1058,3.871,1059,4.135,1093,4.707,1149,2.65,1289,4.156,1290,3.871,2702,4.44,2741,3.431,3079,3.268,3528,4.302,3920,3.938,4156,5.98,4211,5.767,4212,3.938,4214,5.767,4223,3.938,4282,4.302,4283,7.341,4284,6.508,4285,6.508,4286,6.508,4287,6.508,4288,4.855,4289,4.855,4290,4.855,4291,4.855,4292,4.855]],["title/interfaces/NodeId.html",[118,0.075,775,1.531]],["body/interfaces/NodeId.html",[0,0.135,2,0.646,3,0.107,4,0.098,9,0.09,25,0.116,26,0.577,40,0.008,42,0.208,45,0.546,49,0.675,51,1.138,56,0.237,80,2.272,84,1.934,87,0.749,101,0.768,115,0.822,118,0.122,120,0.678,123,1.47,156,0.971,165,1.061,204,0.904,219,0.005,220,0.005,223,0.407,228,2.705,231,0.945,255,0.947,276,1.965,312,1.407,366,2.004,455,2.035,509,2.207,512,2.315,526,1.294,535,2.777,545,1.449,546,1.501,563,3.285,566,2.147,572,2,573,2.574,588,4.188,592,2.172,599,1.167,605,0.807,634,1.912,688,1.438,750,1.889,759,3.787,775,2.891,809,2.098,815,3.565,824,3.467,832,3.332,833,2.69,838,3.277,861,3.467,886,2.207,938,2.207,961,2.993,974,3.238,1005,3.467,1063,1.844,1072,3.698,1227,3.039,1244,2.664,1247,1.841,1260,2.34,1308,2.664,1365,2.272,1422,3.13,1469,2.845,1473,1.887,1474,2.873,1482,3.332,1502,2.09,1581,2.872,1609,2.993,1742,2.763,1743,4.018,1771,1.756,1804,2.723,1854,3.285,1873,2.873,1926,4.005,1928,3.332,1933,4.005,1935,2.412,2004,3.13,2038,2.763,2047,2.574,2114,2.872,2115,4.331,2164,2.993,2166,2.49,2317,2.49,2431,4.167,2663,3.285,2664,3.13,2669,3.467,2850,4.396,2855,3.13,2871,3.285,2872,3.285,3859,3.13,3860,5.97,3861,5.97,3862,3.959,3863,4.932,3864,5.935,3865,3.686,3866,3.467,3867,3.467,3868,3.959,3869,3.959,3870,3.959,3871,5.298,3872,4.932,3873,5.298,3874,3.13,3875,5.298,3876,5.298,3877,4.932,3878,5.298,3879,3.959,3880,3.959,3881,5.298,3882,3.959,3883,3.959,3884,3.959,3885,3.959,3886,3.959,3887,3.959,3888,3.959,3889,3.959,3890,3.959,3891,3.959,3892,3.959,3893,3.686,3894,3.467,3895,3.686,3896,3.686,3897,3.686,3898,3.686,3899,3.686,3900,3.467,3901,3.959,3902,3.959,3903,3.959,3904,3.959,3905,3.959,3906,3.959,3907,3.959,3908,3.959]],["title/interfaces/Position.html",[118,0.075,1067,1.853]],["body/interfaces/Position.html",[0,0.149,3,0.117,4,0.164,5,1.138,9,0.127,25,0.127,26,0.61,40,0.008,42,0.203,49,0.708,53,0.24,56,0.178,57,0.017,87,0.88,101,0.624,112,0.639,118,0.152,120,0.717,135,0.769,138,0.68,165,0.966,186,0.83,188,0.839,219,0.006,220,0.006,231,1.176,255,0.639,279,2.411,291,4.162,311,3.125,512,1.564,526,1.408,538,1.531,545,1.305,592,2.363,605,0.878,619,1.866,717,1.956,722,1.824,814,2.273,833,1.744,903,1.809,949,3.125,1063,2.437,1064,3.665,1067,3.719,1068,3.763,1091,2.003,1195,3.285,1203,4.515,1204,2.402,1205,3.006,1206,4.712,1207,5.08,1208,3.677,1209,3.309,1210,2.899,1211,2.545,1212,3.282,1213,3.309,1214,2.709,1215,2.8,1216,4.188,1217,4.283,1218,4.515,1219,3.257,1220,3.257,1221,3.257,1222,3.257,1223,3.257,1224,3.257,1225,3.257,1226,3.257,1227,3.213,1228,3.257,1229,3.257,1230,4.234,1231,3.677,1232,3.125,1233,3.125,1234,2.273,1235,3.769,1236,3.405,1237,3.405,1238,1.783,1239,2.471,1240,2.545,1241,3.257,1242,2.899,1243,2.545,1244,2.899,1245,3.257,1246,3.405,1247,2.003,1248,3.405,1249,2.709,1250,3.405,1251,2.336,1252,3.405,1253,2.899,1254,3.405,1255,3.257,1256,3.405,1257,4.344,1258,2.8,1259,3.006,1260,2.545,1261,3.909,1262,3.405,1263,3.405,1264,3.405,1265,4.063,1266,3.405,1267,4.427,1268,3.405,1269,3.405,1270,3.405,1271,3.257,1272,1.956,1273,3.909,1274,4.919,1275,3.405,1276,3.405,1277,4.427,1278,3.405,1279,4.427,1280,4.427,1281,3.405,1282,3.405,1283,4.188,1284,4.427,1285,3.257,1286,4.234,1287,4.427,1288,3.405,1289,4.599,1290,3.64,1291,3.405,1292,3.257,1293,3.405,1294,3.405,1295,3.405,1296,3.257,1297,4.063,1298,3.257,1299,2.899,1300,3.257,1301,2.8]],["title/interfaces/Positions.html",[118,0.075,4293,3.698]],["body/interfaces/Positions.html",[0,0.162,2,0.729,3,0.033,4,0.111,5,1.007,9,0.028,14,0.307,15,0.724,17,0.223,18,0.214,20,1.029,21,0.228,23,0.228,25,0.036,26,0.414,27,0.697,30,0.2,36,1.152,40,0.008,42,0.182,45,0.463,46,0.708,49,0.539,50,0.276,51,0.233,53,0.242,54,0.112,55,0.464,56,0.039,57,0.012,59,1.341,60,0.417,61,2.118,64,0.629,72,1.86,74,1.072,75,1.606,77,0.664,78,1.449,85,0.543,87,0.729,93,0.3,94,0.294,100,0.265,101,0.408,110,0.294,111,0.3,112,0.564,117,0.3,118,0.146,120,0.916,135,0.218,138,0.892,165,1.029,183,0.294,186,0.408,188,0.238,194,0.288,204,0.807,219,0.002,220,0.003,223,0.126,225,3.138,231,1.001,244,1.447,255,1.11,262,0.964,263,1.89,266,1.977,276,1.838,288,0.294,290,1.14,291,4.514,296,1.714,305,2.492,306,0.796,310,1.09,312,2.176,317,2.223,335,4.16,336,0.926,350,1.072,366,0.577,407,1.714,408,1.662,424,1.338,433,2.124,438,1.338,439,4.001,440,0.968,441,1.338,442,0.968,443,0.855,444,1.016,455,2.431,484,2.786,490,0.968,496,0.556,509,0.683,512,2.25,520,1.483,526,1.62,532,1.568,533,1.072,534,0.392,537,0.629,538,0.435,541,1.184,545,0.882,546,1.066,547,2.334,550,0.646,553,1.381,554,1.525,555,1.14,558,2.843,559,2.127,560,0.77,564,0.824,566,0.664,569,1.064,570,1.893,571,0.724,572,2.08,573,1.828,580,4.414,591,1.483,599,0.99,605,0.816,608,2.183,612,1.893,614,0.77,619,2.485,634,0.68,638,2.42,645,1.14,647,1.225,651,0.796,668,3.379,669,3.119,677,2.786,681,1.541,688,0.445,700,1.225,702,1.855,717,1.277,720,1.14,723,0.614,725,1.184,739,0.888,748,0.968,750,0.894,758,1.336,759,2.565,760,1.038,769,0.855,774,1.429,784,0.629,800,0.598,808,2.706,813,1.511,814,2.359,815,1.429,818,2.334,821,2.813,825,1.219,826,0.664,838,2.14,858,4.915,860,0.796,862,2.045,865,0.86,870,1.219,873,1.225,878,5.287,884,0.77,886,1.872,896,3.533,899,5.589,900,0.855,903,1.551,920,1.429,921,2.872,938,0.683,941,1.429,952,2.469,953,4.414,966,5.225,969,3.29,988,1.483,1003,3.917,1011,0.496,1029,1.092,1031,0.926,1038,2.124,1049,3.379,1050,4.336,1063,0.979,1064,2.885,1066,0.646,1067,2.744,1068,2.962,1070,0.613,1085,1.072,1091,0.988,1093,2.223,1095,1.977,1097,1.016,1098,2.651,1099,3.533,1100,1.114,1109,0.824,1172,2.148,1177,3.617,1186,2.124,1204,0.683,1206,0.824,1211,0.724,1212,1.725,1213,1.984,1214,0.77,1215,0.796,1216,0.824,1217,2.182,1231,1.662,1234,2.005,1238,2.462,1239,2.714,1240,0.724,1241,0.926,1242,1.429,1243,1.662,1247,1.308,1249,4.121,1251,1.152,1255,2.127,1257,0.855,1261,1.483,1273,1.483,1283,3.007,1286,2.127,1292,2.127,1302,2.127,1305,1.338,1308,0.824,1315,4.545,1400,1.541,1401,0.888,1402,1.14,1405,1.016,1420,3.152,1444,0.926,1448,2.182,1466,3.798,1474,0.664,1475,2.223,1485,1.016,1492,2.755,1540,0.968,1547,1.86,1548,2.538,1550,2.223,1551,1.14,1575,3.221,1585,4.759,1586,0.746,1627,2.786,1638,1.338,1642,4.025,1652,1.984,1669,2.618,1709,1.14,1735,0.824,1771,0.543,1776,1.381,1781,1.977,1786,0.888,1804,0.629,1815,2.223,1846,1.679,1862,1.072,1873,0.664,1889,0.824,1890,1.14,1934,0.888,1969,1.14,2008,1.936,2012,1.14,2016,2.463,2067,0.855,2131,1.225,2150,1.072,2176,1.016,2186,0.968,2198,0.968,2204,1.14,2206,2.334,2237,1.14,2246,1.14,2254,1.225,2260,2.618,2268,1.225,2278,1.14,2279,1.14,2280,1.14,2292,2.223,2330,2.334,2331,1.893,2334,1.763,2338,0.968,2339,1.763,2340,1.606,2343,0.968,2364,1.016,2365,0.968,2368,2.538,2428,4.418,2430,1.016,2431,1.963,2437,0.968,2484,1.225,2491,4.112,2493,1.225,2644,3.536,2657,1.338,2702,1.963,2715,3.152,2719,1.338,2722,3.073,2740,1.338,2741,1.381,2744,1.338,2879,0.926,2923,2.343,2947,1.338,2993,2.618,2995,1.225,2999,2.321,3000,1.14,3003,6.268,3008,1.016,3012,6.687,3013,5.225,3018,4.882,3019,4.548,3020,4.548,3025,1.016,3032,1.225,3036,1.225,3038,2.321,3040,3.073,3054,1.769,3055,4.163,3074,2.321,3075,1.225,3087,1.225,3101,3.668,3106,1.86,3108,1.338,3111,1.338,3125,2.618,3127,1.225,3128,3.125,3130,2.321,3138,2.124,3150,2.618,3152,1.225,3160,3.357,3166,1.338,3167,3.668,3201,2.321,3226,2.618,3249,3.29,3253,2.124,3257,1.86,3258,1.225,3330,1.338,3359,2.321,3447,1.338,3455,2.321,3481,2.321,3543,1.14,3693,1.338,3728,1.86,3745,1.225,3758,1.763,3777,1.225,3792,1.225,3793,1.86,3811,4.163,3866,1.072,3872,1.14,3910,1.338,4212,1.225,4223,1.225,4293,6.333,4294,1.338,4295,5.132,4296,2.619,4297,2.619,4298,2.619,4299,2.619,4300,4.683,4301,2.619,4302,6.92,4303,1.51,4304,1.51,4305,1.51,4306,1.51,4307,1.338,4308,1.51,4309,1.51,4310,1.51,4311,1.51,4312,1.51,4313,1.51,4314,2.619,4315,1.51,4316,1.338,4317,1.338,4318,2.619,4319,4.139,4320,1.51,4321,1.51,4322,1.51,4323,3.468,4324,1.51,4325,1.51,4326,2.619,4327,1.51,4328,1.51,4329,1.51,4330,1.51,4331,1.51,4332,1.51,4333,2.619,4334,1.51,4335,1.51,4336,1.51,4337,1.51,4338,1.51,4339,1.51,4340,2.618,4341,1.338,4342,1.51,4343,1.51,4344,1.51,4345,1.51,4346,1.51,4347,1.51,4348,1.51,4349,1.51,4350,7.443,4351,1.51,4352,3.468,4353,1.51,4354,5.132,4355,1.51,4356,2.619,4357,1.51,4358,1.51,4359,2.619,4360,1.51,4361,1.51,4362,2.619,4363,1.51,4364,1.51,4365,1.51,4366,1.51,4367,4.139,4368,5.132,4369,3.468,4370,1.763,4371,2.619,4372,2.619,4373,1.51,4374,2.618,4375,1.51,4376,1.51,4377,1.51,4378,1.51,4379,1.51,4380,1.51,4381,1.51,4382,1.338,4383,1.51,4384,1.51,4385,1.51,4386,1.51,4387,1.51,4388,1.51,4389,1.51,4390,1.51,4391,2.619,4392,1.51,4393,1.51,4394,1.51,4395,1.51,4396,1.51,4397,3.468,4398,1.51,4399,1.51,4400,2.619,4401,1.51,4402,2.619,4403,1.51,4404,3.468,4405,1.51,4406,1.51,4407,4.16,4408,4.683,4409,1.51,4410,2.619,4411,1.51,4412,2.619,4413,1.51,4414,1.51,4415,2.619,4416,1.51,4417,2.619,4418,2.619,4419,5.832,4420,6.564,4421,3.468,4422,3.468,4423,3.468,4424,4.139,4425,2.619,4426,1.51,4427,1.51,4428,1.51,4429,1.51,4430,1.51,4431,1.51,4432,1.51,4433,4.139,4434,1.51,4435,6.92,4436,3.468,4437,3.468,4438,3.468,4439,1.51,4440,1.51,4441,1.51,4442,2.619,4443,4.683,4444,1.51,4445,1.51,4446,1.51,4447,1.51,4448,1.51,4449,1.51,4450,1.51,4451,1.51,4452,1.51,4453,1.51,4454,1.51,4455,1.51,4456,1.51,4457,3.468,4458,1.51,4459,1.51,4460,1.51,4461,1.51,4462,1.51,4463,1.51,4464,1.51,4465,1.977,4466,1.51,4467,3.468,4468,1.51,4469,1.51,4470,1.51,4471,4.139,4472,4.139,4473,1.51,4474,1.51,4475,1.51,4476,1.51,4477,3.468,4478,4.683,4479,4.139,4480,2.619,4481,1.51,4482,2.619,4483,1.51,4484,1.51,4485,1.51,4486,1.51,4487,1.51,4488,1.51,4489,1.51,4490,1.225,4491,1.51,4492,1.51,4493,1.51,4494,1.51,4495,1.51,4496,4.683,4497,1.51,4498,2.619,4499,1.51,4500,1.51,4501,1.51,4502,1.51,4503,3.468,4504,1.51,4505,1.51,4506,1.225,4507,1.51,4508,2.619,4509,5.132,4510,5.132,4511,2.619,4512,5.132,4513,1.51,4514,1.51,4515,1.51,4516,1.51,4517,1.51,4518,2.619,4519,1.14,4520,2.619,4521,1.14,4522,1.51,4523,1.51,4524,1.51,4525,4.149,4526,1.51,4527,1.51,4528,1.51,4529,1.51,4530,4.139,4531,1.51,4532,1.51,4533,1.338,4534,1.51,4535,1.338,4536,2.619,4537,2.619,4538,2.619,4539,2.619,4540,3.468,4541,2.619,4542,1.51,4543,3.468,4544,1.51,4545,1.51,4546,1.51,4547,1.51,4548,1.51,4549,1.51,4550,2.619,4551,1.51,4552,4.683,4553,1.51,4554,1.51,4555,1.51,4556,3.668,4557,1.51,4558,1.51,4559,4.139,4560,1.51,4561,4.139,4562,1.51,4563,2.124,4564,1.51,4565,1.51,4566,1.51,4567,2.619,4568,1.51,4569,1.51,4570,1.51,4571,2.619,4572,1.51,4573,1.51,4574,1.51,4575,1.51,4576,1.51,4577,1.51,4578,4.139,4579,1.51,4580,1.51,4581,2.619,4582,1.51,4583,1.51,4584,1.977,4585,2.619,4586,1.338,4587,1.51,4588,1.51,4589,4.683,4590,2.619,4591,1.51,4592,1.51,4593,1.51,4594,1.51,4595,1.51,4596,3.468,4597,1.51,4598,1.51,4599,1.51,4600,2.619,4601,1.51,4602,1.51,4603,1.51,4604,1.51,4605,2.619,4606,1.51,4607,4.683,4608,1.51,4609,1.51,4610,1.51,4611,1.51,4612,1.338,4613,1.51,4614,1.51,4615,1.51,4616,1.51,4617,1.51,4618,1.51,4619,1.51,4620,1.51,4621,1.51,4622,1.338,4623,1.51,4624,1.338,4625,1.51,4626,1.51,4627,1.51,4628,1.51,4629,1.51,4630,2.619,4631,3.468,4632,1.51,4633,1.51,4634,1.51,4635,1.51,4636,2.619,4637,1.51,4638,1.51,4639,1.51,4640,1.51,4641,1.51,4642,1.51,4643,1.51,4644,2.619,4645,1.51,4646,1.338,4647,1.51,4648,1.51,4649,1.51,4650,1.51,4651,1.51,4652,1.51,4653,1.51,4654,1.51,4655,1.51,4656,1.51,4657,1.51,4658,1.51,4659,1.51,4660,1.51,4661,1.225,4662,2.619,4663,2.619,4664,2.321,4665,2.619,4666,1.51,4667,1.51,4668,1.51,4669,1.51,4670,1.51,4671,1.51,4672,2.619,4673,1.51,4674,1.51,4675,1.51,4676,1.51,4677,1.51,4678,2.619,4679,1.51,4680,1.51,4681,1.51,4682,1.51,4683,1.338,4684,1.51,4685,1.51,4686,1.51,4687,1.51,4688,1.51,4689,1.51,4690,1.51,4691,1.51,4692,1.51,4693,1.51,4694,1.51,4695,1.51,4696,1.51,4697,1.51,4698,2.619,4699,1.51,4700,1.51,4701,1.51,4702,1.51,4703,1.51,4704,2.619,4705,1.51,4706,1.51,4707,1.51,4708,1.51,4709,4.139,4710,4.139,4711,2.619,4712,1.51,4713,2.619,4714,1.51,4715,1.51,4716,1.51,4717,1.51,4718,1.51,4719,3.468,4720,1.51,4721,1.51,4722,2.619,4723,1.51,4724,2.619,4725,1.51,4726,2.619,4727,1.51,4728,1.51,4729,1.51,4730,1.51,4731,1.51,4732,2.619,4733,2.619,4734,2.619,4735,2.321,4736,2.619,4737,2.619,4738,2.619,4739,2.619,4740,1.51,4741,2.619,4742,2.619,4743,2.619,4744,1.51,4745,2.619,4746,2.619,4747,1.51,4748,1.51,4749,1.51,4750,1.51,4751,2.619,4752,1.51,4753,1.51,4754,2.619,4755,2.619,4756,2.619,4757,1.338,4758,1.51,4759,1.51,4760,3.468,4761,3.468,4762,3.468,4763,3.468,4764,1.51,4765,1.51,4766,1.51,4767,1.51,4768,4.139,4769,1.51,4770,4.139,4771,1.51,4772,3.468,4773,1.51,4774,3.468,4775,1.51,4776,1.51,4777,1.51,4778,1.51,4779,1.51,4780,1.51,4781,1.51,4782,1.51,4783,2.619,4784,1.51,4785,1.51,4786,1.51,4787,1.51,4788,1.51,4789,1.51,4790,1.225,4791,1.072,4792,1.51,4793,1.51,4794,1.51,4795,1.51,4796,1.51,4797,1.51,4798,1.51,4799,1.51,4800,1.51,4801,1.51]],["title/components/ProfileSettingsDialogComponent.html",[0,0.084,168,0.945]],["body/components/ProfileSettingsDialogComponent.html",[0,0.14,1,0.933,2,0.818,3,0.099,4,0.091,5,0.742,6,1.034,7,1.013,8,0.972,9,0.083,11,0.896,13,1.829,14,1.256,15,1.952,16,0.896,17,1.431,18,1.364,19,0.896,20,1.446,21,0.935,22,3.023,23,0.935,24,2.647,25,0.107,26,0.546,27,1.531,28,3.344,30,0.818,31,6.737,33,0.666,34,2.549,35,3.322,36,3.344,37,0.801,39,0.675,40,0.008,41,0.546,42,0.167,43,0.546,45,0.892,46,1.275,48,3.99,49,0.343,50,1.293,51,1.091,53,0.183,54,0.333,55,1.384,56,0.116,57,0.011,58,1.582,59,0.681,60,1.245,61,2.036,62,2.017,63,2.374,64,2.945,65,5.479,77,3.621,78,1.271,79,3.4,87,0.81,88,1.019,89,1.784,90,2.761,91,1.62,92,1.013,93,1.23,94,1.205,95,0.774,96,1.675,97,1.013,98,1.983,99,0.914,100,0.791,101,1.01,102,1.282,103,0.933,104,1.013,105,0.933,106,0.896,107,1.013,108,0.933,109,1.013,110,0.877,111,0.896,112,0.96,113,0.914,114,0.877,115,1.041,116,1.588,117,0.896,118,0.074,119,0.914,120,0.953,121,0.933,122,0.933,123,0.842,124,1.013,125,0.896,126,1.013,127,0.933,128,1.013,129,0.933,130,1.013,131,0.914,132,1.013,133,0.914,134,1.013,135,0.652,136,1.013,137,0.914,138,0.444,139,1.013,140,0.933,141,1.013,142,0.933,143,1.588,144,0.933,145,1.013,146,0.933,147,1.588,148,0.933,149,1.013,150,0.953,151,1.013,152,0.896,153,1.013,154,0.933,155,1.013,156,0.896,157,0.859,158,1.013,159,0.933,160,1.335,161,1.391,162,0.933,163,1.013,164,0.896,165,0.504,166,1.013,167,0.914,168,1.576,169,1.962,170,0.933,171,1.013,172,0.914,173,0.914,174,0.896,175,1.013,176,0.914,177,1.013,178,0.859,179,0.727,180,0.896,181,1.013,182,0.896,183,1.205,184,0.914,185,0.933,186,0.609,187,0.877,188,0.711,189,0.933,190,0.933,191,0.914,192,1.013,193,0.933,194,0.859,195,1.013,196,0.933,197,1.013,198,0.877,199,0.914,200,0.933,201,0.859,202,1.013,203,0.933,204,0.623,205,0.877,206,0.914,207,1.013,208,0.896,209,1.013,210,0.896,211,1.013,212,0.877,213,1.013,214,0.877,215,1.013,216,0.877,217,0.953,218,1.013,219,0.005,220,0.005,223,0.589,238,3.99,244,1.675,310,1.14,469,6.722,591,3.501,599,1.689,605,0.444,664,5.78,667,2.458,1003,3.964,1066,2.647,1437,3.652,1443,5.4,1471,3.4,1564,3.4,4008,3.99,4802,7.889,4803,6.839,4804,7.062,4805,7.602,4806,5.479,4807,7.602,4808,6.183,4809,4.503,4810,5.479,4811,4.503,4812,7.062,4813,3.99,4814,6.183,4815,7.602,4816,7.602]],["title/components/ProjectHeaderComponent.html",[0,0.084,170,0.945]],["body/components/ProjectHeaderComponent.html",[0,0.157,1,1.054,2,0.888,3,0.112,4,0.103,5,0.839,6,1.168,7,1.144,8,1.098,9,0.093,11,1.012,16,1.012,17,1.437,18,1.371,19,1.012,20,0.857,21,1.015,23,1.015,25,0.121,37,0.61,40,0.008,41,0.563,42,0.148,49,0.609,53,0.15,54,0.376,56,0.131,57,0.013,62,1.42,78,1.895,84,2.66,88,0.839,90,4.117,91,1.83,92,1.144,93,1.335,94,1.308,95,0.875,96,1.761,97,1.144,98,2.029,99,1.033,100,0.893,101,1.108,102,1.391,103,1.054,104,1.144,105,1.054,106,1.012,107,1.144,108,1.054,109,1.144,110,0.991,111,1.012,112,1,113,1.033,114,0.991,115,1.13,116,1.69,117,1.012,118,0.084,119,1.033,120,0.967,121,1.054,122,1.054,123,0.951,124,1.144,125,1.012,126,1.144,127,1.054,128,1.144,129,1.054,130,1.144,131,1.033,132,1.144,133,1.033,134,1.144,135,0.736,136,1.144,137,1.033,138,0.501,139,1.144,140,1.054,141,1.144,142,1.054,143,1.69,144,1.054,145,1.144,146,1.054,147,1.69,148,1.054,149,1.144,150,1.076,151,1.144,152,1.012,153,1.144,154,1.054,155,1.144,156,1.012,157,0.971,158,1.144,159,1.054,160,1.449,161,1.51,162,1.054,163,1.144,164,1.012,165,0.569,166,1.144,167,1.033,168,1.054,169,1.121,170,1.656,171,1.144,172,1.033,173,1.033,174,1.012,175,1.144,176,1.033,177,1.144,178,0.971,179,0.821,180,1.012,181,1.144,182,1.012,183,1.308,184,1.033,185,1.054,186,0.661,187,0.991,188,0.803,189,1.054,190,1.054,191,1.033,192,1.144,193,1.054,194,0.971,195,1.144,196,1.054,197,1.144,198,0.991,199,1.033,200,1.054,201,1.281,202,1.144,203,1.054,204,0.704,205,0.991,206,1.033,207,1.144,208,1.012,209,1.144,210,1.012,211,1.144,212,0.991,213,1.144,214,0.991,215,1.144,216,0.991,217,1.076,218,1.144,219,0.006,220,0.006,223,0.424,262,2.472,263,1.873,272,1.966,279,2.61,545,1.208,723,1.761,763,2.472,809,1.634,865,2.727,903,1.363,971,3.036,1070,2.728,1172,1.873,1185,3.95,1191,2.953,1192,2.121,1193,2.204,1545,2.88,1633,3.133,1634,3.424,1652,2.438,1675,5.948,1878,3.8,2240,2.595,2291,2.88,2301,4.768,2584,6.094,2639,3.261,2921,4.304,3119,3.261,3555,3.841,4519,3.841,4817,4.817,4818,4.508,4819,7.513,4820,6.713,4821,7.36,4822,5.087,4823,5.087,4824,4.126]],["title/components/ProjectIssueListComponent.html",[0,0.084,172,0.926]],["body/components/ProjectIssueListComponent.html",[0,0.151,1,0.927,2,0.814,3,0.098,4,0.09,5,0.737,6,1.027,7,1.006,8,0.966,9,0.082,11,0.89,14,1.25,15,1.945,16,0.89,17,1.43,18,1.364,19,0.89,20,0.753,21,0.931,23,0.931,25,0.107,26,0.544,27,1.465,33,0.662,37,0.689,39,0.488,40,0.008,41,0.532,42,0.181,43,0.395,46,0.676,49,0.469,53,0.243,54,0.33,56,0.115,57,0.011,59,0.676,60,1.236,62,1.302,78,2.14,85,2.531,88,0.737,90,3.774,91,1.609,92,1.006,93,1.224,94,1.199,95,0.769,96,1.671,97,1.006,98,1.98,99,0.908,100,0.785,101,1.1,102,1.276,103,0.927,104,1.006,105,0.927,106,0.89,107,1.006,108,0.927,109,1.006,110,0.871,111,0.89,112,0.957,113,0.908,114,0.871,115,1.036,116,1.583,117,0.89,118,0.074,119,0.908,120,0.988,121,0.927,122,0.927,123,0.836,124,1.006,125,0.89,126,1.006,127,0.927,128,1.006,129,0.927,130,1.006,131,0.908,132,1.006,133,0.908,134,1.006,135,0.647,136,1.006,137,0.908,138,0.441,139,1.006,140,0.927,141,1.006,142,0.927,143,1.583,144,0.927,145,1.006,146,1.647,147,1.583,148,0.927,149,1.006,150,0.946,151,1.006,152,0.89,153,1.006,154,0.927,155,1.006,156,0.89,157,0.854,158,1.006,159,0.927,160,1.329,161,1.384,162,0.927,163,1.006,164,0.89,165,0.788,166,1.006,167,0.908,168,0.927,169,0.986,170,0.927,171,1.006,172,1.539,173,0.908,174,0.89,175,1.006,176,0.908,177,1.006,178,0.854,179,0.722,180,0.89,181,1.006,182,0.89,183,1.199,184,0.908,185,0.927,186,0.606,187,0.871,188,0.706,189,0.927,190,0.927,191,0.908,192,1.006,193,0.927,194,1.175,195,1.006,196,0.927,197,1.006,198,0.871,199,0.908,200,0.927,201,1.517,202,1.006,203,0.927,204,0.619,205,0.871,206,0.908,207,1.006,208,0.89,209,1.006,210,0.89,211,1.006,212,0.871,213,1.006,214,0.871,215,1.006,216,0.871,217,0.946,218,1.006,219,0.005,220,0.005,223,0.513,255,0.539,262,1.647,263,2.592,272,1.728,279,2.497,288,0.871,366,1.671,496,1.647,502,6.002,512,1.813,545,1.202,549,3.139,572,1.502,596,3.841,649,3.622,759,2.707,766,3.158,782,3.373,787,2.592,788,1.934,789,1.865,790,2.143,809,1.436,830,1.865,832,2.281,833,1.468,863,2.501,865,2.311,869,4.647,903,1.25,1070,3.08,1100,1.977,1172,1.647,1177,2.143,1180,3.176,1185,4.461,1191,3.095,1192,2.934,1193,2.764,1199,2.358,1272,1.647,1307,5.454,1469,2.72,1545,2.532,1633,2.934,1634,3.139,1652,2.143,1674,2.867,1878,3.484,2008,2.321,2249,4.647,2291,2.532,2639,2.867,2702,4.291,2741,3.245,2772,3.377,2777,2.95,2782,3.359,2853,3.377,2855,2.867,2921,3.946,3079,3.01,3119,2.867,3341,3.484,3406,3.377,3410,5.708,3411,4.992,3555,3.377,3920,3.627,4161,6.236,4213,3.963,4490,4.992,4817,5.096,4824,3.627,4825,6.155,4826,6.155,4827,3.963,4828,3.963,4829,3.377,4830,4.472,4831,3.963,4832,5.454,4833,3.963,4834,3.963,4835,3.963]],["title/components/ProjectListComponent.html",[0,0.084,173,0.926]],["body/components/ProjectListComponent.html",[0,0.146,1,0.826,2,0.751,3,0.088,4,0.08,5,0.657,6,0.915,7,0.896,8,0.861,9,0.073,11,0.793,14,1.153,15,1.828,16,0.793,17,1.424,18,1.356,19,1.316,20,1.214,21,0.859,23,0.859,25,0.095,26,0.501,27,1.427,30,0.751,33,0.59,36,3.17,37,0.781,39,0.62,40,0.008,41,0.527,42,0.174,43,0.501,45,0.807,46,1.282,49,0.504,50,1.32,51,1.022,53,0.25,54,0.294,55,1.225,56,0.103,57,0.01,59,1.152,60,1.102,62,1.201,78,2.15,84,3.018,85,2.042,88,0.657,89,2.62,90,3.482,91,2.379,92,0.896,93,1.129,94,1.106,95,0.685,96,1.588,97,0.896,98,1.934,99,0.809,100,0.7,101,1.102,102,1.177,103,0.826,104,0.896,105,0.826,106,0.793,107,0.896,108,0.826,109,0.896,110,0.777,111,0.793,112,1.035,113,0.809,114,0.777,115,0.956,116,1.488,117,0.793,118,0.066,119,0.809,120,0.938,121,1.177,122,0.826,123,0.745,124,0.896,125,0.793,126,0.896,127,0.826,128,0.896,129,0.826,130,0.896,131,0.809,132,0.896,133,0.809,134,0.896,135,0.577,136,0.896,137,0.809,138,0.652,139,0.896,140,0.826,141,0.896,142,0.826,143,1.488,144,0.826,145,0.896,146,0.826,147,1.488,148,0.826,149,0.896,150,0.843,151,0.896,152,0.793,153,0.896,154,0.826,155,0.896,156,0.793,157,0.761,158,0.896,159,0.826,160,1.226,161,1.277,162,0.826,163,0.896,164,0.793,165,0.446,166,0.896,167,0.809,168,0.826,169,0.878,170,0.826,171,0.896,172,0.809,173,1.464,174,0.793,175,0.896,176,0.809,177,0.896,178,0.761,179,0.643,180,0.793,181,0.896,182,0.793,183,1.289,184,0.809,185,0.826,186,0.559,187,0.777,188,0.629,189,0.826,190,0.826,191,0.809,192,0.896,193,0.826,194,0.761,195,0.896,196,0.826,197,0.896,198,0.777,199,0.809,200,0.826,201,1.262,202,0.896,203,0.826,204,1.096,205,0.777,206,0.809,207,0.896,208,0.793,209,0.896,210,0.793,211,0.896,212,0.777,213,0.896,214,0.777,215,0.896,216,0.777,217,0.843,218,0.896,219,0.005,220,0.005,223,0.332,225,2.805,229,2.831,232,2.62,244,1.588,255,0.684,263,1.468,269,1.855,271,1.753,272,2.194,288,0.777,310,0.643,366,2.032,367,6.569,406,2.101,407,1.969,408,1.91,509,3.888,538,1.149,539,4.08,540,3.232,541,1.802,580,4.017,599,1.358,605,0.393,619,1.401,638,1.906,723,1.33,837,3.214,903,1.153,921,2.444,950,2.682,983,2.991,984,2.786,1007,1.662,1008,1.579,1009,1.662,1033,3.009,1041,1.864,1042,2.175,1070,2.929,1172,2.436,1177,3.17,1178,4.697,1180,2.831,1185,3.892,1193,2.823,1199,4.017,1231,2.721,1272,2.091,1490,3.61,1502,1.706,1541,2.175,1542,4.993,1545,3.744,1642,3.482,2240,3.373,2291,2.256,2301,2.831,2368,2.444,2389,3.482,2687,3.232,2688,3.009,2692,3.892,3114,3.232,3115,2.831,3405,3.232,3406,3.009,3410,5.364,3411,4.605,3429,3.531,3431,3.531,3577,4.697,4465,3.009,4817,5.578,4821,5.86,4827,3.531,4828,3.531,4836,5.677,4837,5.677,4838,4.605,4839,6.613,4840,6.613,4841,7.208,4842,5.677,4843,7.208,4844,7.208,4845,3.985,4846,5.677,4847,4.287,4848,5.677,4849,3.985,4850,3.985,4851,3.985,4852,3.985,4853,5.677,4854,6.613,4855,6.613,4856,3.985,4857,3.985,4858,3.985,4859,3.985,4860,3.985,4861,3.985,4862,3.985,4863,3.985,4864,3.985,4865,3.985,4866,3.985,4867,5.677,4868,3.985,4869,3.985,4870,2.555,4871,3.985,4872,3.985,4873,3.985,4874,3.531,4875,3.985,4876,5.677,4877,5.677,4878,5.031,4879,3.985,4880,5.031,4881,3.985,4882,3.531,4883,5.86,4884,6.613,4885,3.985,4886,3.985,4887,3.985,4888,3.531,4889,3.985,4890,3.985,4891,3.531,4892,3.985,4893,3.985]],["title/components/ProjectMembersComponent.html",[0,0.084,174,0.907]],["body/components/ProjectMembersComponent.html",[0,0.136,1,0.686,2,0.656,3,0.073,4,0.067,5,0.546,6,0.76,7,0.745,8,0.715,9,0.061,11,0.659,14,1.007,15,1.643,16,0.659,17,1.412,18,1.343,19,0.659,20,1.001,21,0.75,23,0.75,25,0.079,26,0.438,27,1.362,29,1.808,30,0.656,33,0.49,36,2.903,37,0.803,39,0.721,40,0.008,41,0.559,42,0.188,43,0.583,45,0.791,46,1.122,49,0.616,50,1.209,51,1.02,53,0.25,54,0.245,55,1.018,56,0.128,57,0.008,59,0.75,60,0.915,62,1.049,64,1.381,72,3.522,78,1.863,79,2.501,80,2.308,84,1.312,85,2.138,87,0.757,88,0.546,89,1.965,90,4.048,91,1.191,92,0.745,93,0.986,94,0.966,95,0.57,96,1.558,97,0.745,98,1.853,99,1.007,100,1.159,101,1.088,102,1.538,103,0.686,104,0.745,105,0.686,106,0.659,107,0.745,108,0.686,109,0.745,110,0.645,111,0.659,112,0.851,113,0.672,114,0.645,115,0.835,116,1.337,117,0.659,118,0.109,119,0.672,120,0.911,121,0.686,122,0.686,123,0.927,124,0.745,125,0.659,126,0.745,127,0.686,128,0.745,129,0.686,130,0.745,131,0.672,132,0.745,133,0.672,134,0.745,135,0.479,136,0.745,137,0.672,138,0.326,139,0.745,140,0.686,141,0.745,142,0.686,143,1.337,144,0.686,145,0.745,146,0.686,147,1.337,148,0.686,149,0.745,150,0.701,151,0.745,152,0.659,153,0.745,154,0.686,155,0.745,156,0.659,157,0.632,158,0.745,159,0.686,160,1.071,161,1.115,162,0.686,163,0.745,164,0.659,165,0.371,166,0.745,167,0.672,168,0.686,169,0.73,170,0.686,171,0.745,172,0.672,173,0.672,174,1.313,175,0.745,176,0.672,177,0.745,178,0.632,179,0.534,180,0.659,181,0.745,182,0.659,183,1.446,184,1.007,185,0.686,186,0.489,187,0.645,188,0.523,189,0.686,190,0.686,191,0.672,192,0.745,193,0.686,194,1.26,195,0.745,196,0.686,197,0.745,198,0.645,199,0.672,200,0.686,201,1.349,202,0.745,203,0.686,204,1.119,205,0.645,206,0.672,207,0.745,208,0.659,209,0.745,210,0.659,211,0.745,212,0.645,213,0.745,214,0.645,215,0.745,216,0.645,217,0.701,218,0.745,219,0.004,220,0.004,222,2.352,223,0.276,225,2.45,228,1.558,231,1.074,241,2.615,246,2.545,251,1.249,255,0.795,260,5.354,261,4.394,262,1.22,263,2.431,269,1.541,272,1.28,279,2.221,288,0.645,296,1.636,366,1.815,408,1.587,413,1.808,434,2.352,435,2.686,484,3.338,496,1.22,503,6.314,514,5.071,534,0.86,535,2.242,538,0.955,539,3.737,541,1.498,544,1.996,545,1.351,569,1.346,580,1.746,591,2.807,596,3.245,608,1.965,619,2.089,638,1.112,674,1.808,741,2.686,759,1.457,809,1.064,813,1.46,814,1.418,823,2.985,826,1.457,863,1.346,865,2.321,884,1.689,896,2.123,903,1.435,995,2.229,1006,2.123,1070,3.214,1100,1.593,1109,1.808,1172,1.22,1177,2.377,1178,2.352,1180,3.522,1185,3.884,1191,2.903,1192,2.479,1193,2.656,1195,1.418,1198,2.123,1199,2.615,1272,1.22,1457,2.686,1545,3.365,1626,2.501,1633,2.479,1634,2.53,1641,2.501,1652,1.587,1653,4.984,1669,3.744,1674,2.123,1714,3.041,1878,2.807,1956,2.229,2034,2.031,2171,4.443,2291,1.875,2292,3.179,2341,3.041,2508,3.338,2552,2.501,2555,4.822,2556,2.501,2563,2.501,2602,2.031,2639,2.123,2702,3.737,2741,3.134,2772,2.501,2777,2.377,2782,2.707,2873,6.347,2875,4.717,2921,3.179,3079,2.229,3119,4.757,3341,2.807,3407,4.688,3409,4.984,3413,4.822,3417,4.822,3420,4.822,3421,4.394,3422,4.394,3426,5.354,3465,5.354,3468,4.822,3469,4.022,3473,4.822,3474,4.022,3477,4.022,3506,4.022,3509,2.686,3510,2.686,3511,2.686,3512,2.686,3515,2.686,3516,2.686,3517,2.686,3552,2.935,3553,2.935,3554,2.935,3555,3.744,3758,3.338,4340,3.744,4370,3.338,4407,2.501,4506,2.686,4817,5.699,4824,2.686,4829,3.744,4831,2.935,4832,4.394,4833,2.935,4834,2.935,4835,2.935,4847,4.488,4894,2.686,4895,3.338,4896,4.394,4897,4.822,4898,3.522,4899,6.263,4900,5.268,4901,4.394,4902,5.268,4903,4.394,4904,5.268,4905,5.268,4906,4.959,4907,3.312,4908,4.394,4909,3.312,4910,5.849,4911,4.394,4912,3.312,4913,3.312,4914,3.312,4915,3.312,4916,4.394,4917,5.849,4918,3.312,4919,4.394,4920,6.859,4921,4.394,4922,4.394,4923,4.394,4924,4.022,4925,4.394,4926,4.394,4927,3.312,4928,3.312,4929,3.312,4930,4.394,4931,4.394,4932,4.394,4933,4.394,4934,4.394,4935,4.394,4936,4.394,4937,4.394,4938,4.394,4939,4.394,4940,4.394,4941,4.394,4942,3.312,4943,3.312,4944,4.394,4945,3.312,4946,4.822,4947,3.312,4948,3.312,4949,3.312,4950,3.312,4951,3.312,4952,2.935,4953,2.935,4954,2.935,4955,2.352,4956,2.935,4957,2.935,4958,4.394,4959,4.394,4960,4.394,4961,2.935,4962,2.935,4963,2.935,4964,2.935,4965,2.935,4966,2.935,4967,2.935,4968,2.935,4969,2.935,4970,2.935,4971,2.935,4972,2.935,4973,4.394,4974,2.935,4975,2.935,4976,2.935,4977,2.935,4978,2.935,4979,2.935,4980,2.935,4981,2.935,4982,2.686,4983,2.935,4984,2.501,4985,4.959,4986,4.959,4987,3.312]],["title/components/ProjectOverviewComponent.html",[0,0.084,176,0.926]],["body/components/ProjectOverviewComponent.html",[0,0.15,1,0.906,2,0.801,3,0.096,4,0.088,5,0.72,6,1.003,7,0.983,8,0.943,9,0.08,11,0.869,14,1.23,15,1.922,16,0.869,17,1.429,18,1.362,19,0.869,20,1.264,21,0.916,23,0.916,25,0.104,26,0.535,27,1.373,30,0.801,33,0.646,36,3.301,37,0.76,39,0.661,40,0.008,41,0.56,42,0.18,43,0.535,45,0.678,46,1.192,49,0.53,50,0.8,51,0.675,53,0.261,54,0.323,55,1.343,56,0.112,57,0.011,59,1.233,60,1.208,62,1.281,78,1.233,85,1.572,88,0.72,89,2.4,92,0.983,93,1.205,94,1.18,95,0.751,96,1.654,97,0.983,98,1.971,99,0.887,100,0.767,101,1.108,102,1.255,103,0.906,104,0.983,105,0.906,106,0.869,107,0.983,108,0.906,109,0.983,110,0.851,111,0.869,112,0.949,113,0.887,114,0.851,115,1.02,116,1.564,117,0.869,118,0.072,119,0.887,120,0.949,121,0.906,122,0.906,123,0.817,124,0.983,125,0.869,126,0.983,127,0.906,128,0.983,129,0.906,130,0.983,131,0.887,132,0.983,133,0.887,134,0.983,135,0.632,136,0.983,137,0.887,138,0.43,139,0.983,140,0.906,141,0.983,142,0.906,143,1.564,144,0.906,145,0.983,146,0.906,147,1.564,148,0.906,149,0.983,150,0.924,151,0.983,152,0.869,153,0.983,154,0.906,155,0.983,156,0.869,157,0.834,158,0.983,159,0.906,160,1.308,161,1.362,162,0.906,163,0.983,164,0.869,165,0.489,166,0.983,167,0.887,168,0.906,169,0.963,170,0.906,171,0.983,172,0.887,173,0.887,174,0.869,175,0.983,176,1.524,177,0.983,178,1.597,179,0.705,180,0.869,181,0.983,182,1.205,183,1.18,184,0.887,185,0.906,186,0.597,187,0.851,188,0.69,189,0.906,190,0.906,191,0.887,192,0.983,193,0.906,194,0.834,195,0.983,196,0.906,197,0.983,198,0.851,199,0.887,200,0.906,201,0.834,202,0.983,203,0.906,204,0.605,205,0.851,206,0.887,207,0.983,208,0.869,209,0.983,210,0.869,211,0.983,212,0.851,213,0.983,214,0.851,215,0.983,216,0.851,217,0.924,218,0.983,219,0.005,220,0.005,223,0.68,225,2.993,231,0.632,241,1.922,255,0.526,279,1.373,288,0.851,369,6.437,408,2.094,423,2.571,496,1.609,532,3.782,539,4.249,541,1.976,545,1.051,596,3.794,599,1.663,605,0.43,667,2.385,765,2.68,766,3.004,782,3.332,787,2.56,788,1.903,789,1.822,790,2.094,809,1.403,825,3.235,826,1.922,830,1.822,833,1.435,834,2.802,835,2.802,865,2.283,868,3.714,870,2.033,922,2.229,983,3.144,984,2.901,1003,3.883,1006,2.802,1007,1.822,1008,1.731,1009,1.822,1026,3.544,1027,2.802,1028,2.941,1029,3.401,1030,2.802,1031,2.68,1032,2.474,1033,3.299,1034,3.872,1035,3.872,1036,2.941,1040,3.544,1041,1.989,1042,2.385,1058,3.665,1059,3.957,1100,1.403,1176,2.229,1191,1.922,1192,1.822,1193,1.989,1195,2.593,1545,2.474,1641,3.299,1667,2.159,2143,3.299,2702,4.249,2741,3.193,2853,3.299,2916,3.714,3079,2.941,4563,3.544,4806,5.367,4810,5.367,4813,3.872,4817,5.466,4829,3.299,4847,5.249,4870,4.457,4898,4.302,4988,3.872,4989,6.057,4990,6.952,4991,6.057,4992,6.651,4993,6.057,4994,4.37,4995,4.37,4996,4.37,4997,4.37,4998,4.37,4999,4.37,5000,4.37,5001,4.37,5002,4.37,5003,7.506,5004,4.37]],["title/injectables/ProjectStoreService.html",[529,1.09,539,2.581]],["body/injectables/ProjectStoreService.html",[3,0.123,4,0.113,9,0.103,25,0.134,30,0.946,33,0.83,37,0.796,39,0.957,40,0.008,41,0.603,42,0.193,43,0.774,45,0.959,49,0.721,53,0.253,54,0.414,56,0.144,57,0.014,59,1.296,101,1.03,112,0.999,219,0.006,220,0.006,223,0.714,224,3.458,229,5.081,231,1.2,255,0.948,276,1.688,288,1.093,366,1.576,509,3.961,528,6.727,529,1.711,534,1.457,535,2.116,537,2.339,538,1.618,539,4.05,542,3.146,544,2.989,545,1.387,552,2.468,569,2.907,605,0.844,619,3.078,623,4.231,634,1.858,643,2.339,688,1.652,723,1.676,808,3.772,1029,3.458,1304,3.597,1421,3.329,1549,3.985,1553,4.815,2618,6.339,2621,6.339,2630,4.236,2916,4.387,3590,4.387,3716,4.971,4180,6.339,4946,4.551,4992,6.978,5005,7.888,5006,7.153,5007,7.349,5008,8.294,5009,7.153,5010,7.153,5011,7.153,5012,7.153,5013,5.611,5014,7.875,5015,8.294,5016,8.294,5017,7.875,5018,8.294,5019,7.875,5020,8.294,5021,8.294,5022,5.611,5023,5.611,5024,7.153,5025,5.611,5026,7.153,5027,7.153,5028,5.611,5029,7.153,5030,5.611,5031,7.153,5032,7.153,5033,6.339,5034,5.611,5035,5.611,5036,5.611,5037,5.611,5038,5.611,5039,5.611,5040,5.611]],["title/injectables/ProjectsService.html",[529,1.09,5041,3.443]],["body/injectables/ProjectsService.html",[3,0.149,4,0.136,9,0.124,25,0.161,30,1.06,33,1.186,37,0.777,39,0.934,40,0.008,41,0.553,42,0.188,43,0.755,45,0.897,49,0.652,53,0.253,54,0.498,56,0.174,57,0.017,59,1.212,219,0.007,220,0.007,276,2.031,366,1.766,529,1.917,538,1.946,545,1.212,552,2.968,605,0.79,643,2.814,787,2.486,788,2.12,1365,4.116,1385,5.953,1391,5.096,1392,5.474,5033,5.98,5041,6.052,5042,5.98,5043,8.015,5044,8.015,5045,6.749,5046,8.845,5047,8.55,5048,8.845,5049,6.749,5050,8.015,5051,8.015,5052,6.749,5053,8.015,5054,6.749,5055,6.749,5056,6.749]],["title/injectables/QueriesService.html",[529,1.09,1745,2.796]],["body/injectables/QueriesService.html",[2,1.166,3,0.147,4,0.135,9,0.123,25,0.159,26,0.704,27,1.598,33,1.179,37,0.818,39,0.73,40,0.008,41,0.432,42,0.198,43,0.59,53,0.266,54,0.493,56,0.172,57,0.017,219,0.007,220,0.007,276,2.01,509,4.073,512,2.653,529,1.905,552,2.938,643,2.785,1364,6.801,1365,4.253,1745,4.886,2875,5.524,5041,6.801,5057,5.92,5058,6.681,5059,7.982,5060,6.801,5061,6.681,5062,6.681,5063,6.681,5064,6.681,5065,6.681,5066,6.681,5067,6.681,5068,6.681,5069,6.681]],["title/directives/QueryBodyDirective.html",[95,0.784,208,0.907]],["body/directives/QueryBodyDirective.html",[0,0.158,3,0.099,4,0.091,5,1.498,9,0.082,14,0.912,16,0.893,17,1.124,18,0.636,21,0.679,23,0.679,25,0.107,26,0.545,27,1.341,33,0.664,37,0.561,39,0.49,40,0.008,41,0.291,42,0.136,43,0.397,46,1.204,51,0.694,53,0.224,54,0.332,56,0.195,57,0.018,58,2.169,59,1.067,70,2.452,80,3.534,89,3.525,93,1.228,94,0.875,95,1.449,178,1.45,179,1.513,204,0.622,205,0.875,208,1.511,210,1.403,219,0.005,220,0.005,223,0.375,231,0.65,232,3.009,262,2.597,270,4.522,288,0.875,310,0.725,354,3.19,384,3.938,520,2.543,534,1.166,544,2.829,546,1.898,554,3.618,558,2.09,572,1.722,592,1.87,599,1.476,605,0.695,608,1.779,632,1.975,634,2.067,638,1.508,651,2.368,672,2.543,675,4.325,722,2.12,723,1.446,733,4.385,750,1.64,760,2.446,769,3.495,777,1.975,780,4.061,784,3.43,785,2.643,800,1.779,813,1.323,817,3.05,825,2.872,863,3.424,868,3.785,870,3.282,874,1.825,944,2.452,983,2.031,984,2.386,991,3.993,1007,1.873,1008,1.779,1009,1.873,1011,1.475,1041,2.946,1058,2.368,1059,3.255,1096,2.291,1149,4.145,1227,2.09,1253,2.452,1417,4.197,1444,2.754,1608,4.345,1615,4.385,1642,2.754,1650,3.598,1690,4.155,1751,2.754,1772,3.023,1786,2.643,1788,2.88,1797,2.88,1806,3.05,1873,2.715,1889,3.85,2514,3.958,2645,4.385,2715,3.023,2739,4.882,2763,5.734,2916,2.754,3054,2.291,3210,4.661,3967,2.543,4015,2.88,4029,2.754,4374,3.391,4521,3.391,4584,3.391,4895,3.023,5070,5.01,5071,3.19,5072,6.16,5073,5.007,5074,3.391,5075,4.491,5076,4.491,5077,5.721,5078,5.325,5079,5.325,5080,3.643,5081,3.643,5082,3.643,5083,3.643,5084,3.643,5085,3.643,5086,3.643,5087,3.643,5088,4.661,5089,5.007,5090,3.643,5091,5.007,5092,5.007,5093,4.661,5094,5.007,5095,3.643,5096,5.007,5097,4.661,5098,3.643,5099,3.643,5100,3.643,5101,3.643,5102,3.643,5103,5.007,5104,3.643,5105,3.19,5106,3.643,5107,3.643,5108,5.721,5109,3.643,5110,5.721,5111,3.643,5112,3.643,5113,6.834,5114,6.16,5115,5.007,5116,3.391,5117,3.643,5118,3.643,5119,3.643,5120,5.721,5121,3.643,5122,3.643,5123,3.643,5124,5.007,5125,5.007,5126,3.643,5127,3.643,5128,3.643,5129,3.391,5130,3.643,5131,3.643,5132,3.643]],["title/directives/QueryButtonDirective.html",[95,0.784,210,0.907]],["body/directives/QueryButtonDirective.html",[0,0.158,3,0.099,4,0.091,5,1.453,9,0.083,14,0.914,16,0.895,17,1.124,18,0.637,21,0.68,23,0.68,25,0.107,26,0.546,27,1.341,33,0.666,37,0.561,39,0.491,40,0.008,41,0.291,42,0.136,43,0.397,46,1.205,51,0.695,53,0.224,54,0.332,56,0.196,57,0.018,58,2.172,59,1.068,70,2.456,80,3.537,89,3.581,93,1.229,94,1.481,95,1.45,178,1.521,179,1.51,204,0.623,205,0.877,208,1.404,210,1.512,219,0.005,220,0.005,223,0.375,231,0.651,232,3.011,262,2.6,270,4.526,288,0.877,310,0.726,354,3.196,384,3.883,520,2.547,534,1.169,544,2.831,546,1.9,554,3.708,558,2.094,572,1.723,592,1.872,599,1.478,605,0.696,608,1.783,632,1.979,634,2.069,638,1.511,651,2.372,672,2.547,675,4.329,722,2.123,723,1.448,733,4.39,750,1.641,760,2.449,769,3.499,777,1.979,780,3.153,784,3.432,785,2.648,800,1.783,813,1.325,817,3.054,825,2.876,863,3.344,868,3.79,870,3.285,874,1.828,944,2.456,983,2.035,984,2.389,991,3.997,1007,1.876,1008,1.783,1009,1.876,1011,1.478,1041,2.947,1058,2.372,1059,3.259,1096,2.295,1149,4.149,1227,2.094,1253,2.456,1417,4.2,1444,2.759,1608,4.348,1615,4.39,1642,2.759,1650,3.601,1690,3.029,1751,2.759,1772,3.029,1786,2.648,1788,2.885,1797,2.885,1806,3.054,1873,2.718,1889,3.854,2514,3.963,2645,3.196,2715,3.029,2739,4.661,2763,5.331,2916,2.759,3054,2.295,3210,4.667,3967,2.547,4015,2.885,4029,2.759,4374,3.397,4521,3.397,4584,3.397,4895,4.16,5070,5.015,5071,3.196,5072,5.726,5073,3.65,5077,6.676,5078,5.331,5079,5.331,5080,5.013,5081,5.013,5082,3.65,5083,3.65,5084,3.65,5085,3.65,5086,3.65,5087,3.65,5088,4.667,5089,5.013,5090,3.65,5091,5.013,5092,5.013,5093,4.667,5094,5.013,5095,3.65,5096,5.013,5097,4.667,5098,3.65,5099,3.65,5100,3.65,5101,3.65,5102,3.65,5103,5.013,5104,3.65,5105,3.196,5106,3.65,5107,3.65,5108,5.726,5109,3.65,5110,5.726,5111,3.65,5112,3.65,5113,6.838,5114,6.165,5115,5.013,5116,3.397,5117,3.65,5118,3.65,5119,3.65,5120,5.726,5121,3.65,5122,3.65,5123,3.65,5124,5.013,5125,5.013,5126,3.65,5127,3.65,5128,3.65,5129,3.397,5130,3.65,5131,3.65,5132,3.65,5133,4.5,5134,4.5,5135,4.5]],["title/components/QueryComponent.html",[0,0.084,178,0.87]],["body/components/QueryComponent.html",[0,0.159,1,0.634,2,0.618,3,0.067,4,0.062,5,1.456,6,0.702,7,0.688,8,0.66,9,0.056,11,0.608,14,0.948,16,0.608,17,1.408,18,1.337,19,0.608,20,0.515,21,0.706,23,0.706,25,0.073,26,0.412,27,1.332,30,0.618,33,0.453,37,0.745,39,0.619,40,0.008,41,0.484,42,0.174,43,0.56,45,0.71,46,1.22,49,0.233,50,0.855,51,0.98,53,0.187,54,0.226,56,0.163,57,0.014,58,1.641,59,1.132,62,0.988,70,2.549,78,1.599,80,3.592,85,1.68,88,0.504,89,3.534,92,0.688,93,1.261,94,1.104,95,1.328,96,1.397,97,0.688,98,1.815,99,0.621,100,0.537,101,0.907,102,0.968,103,0.634,104,0.688,105,0.634,106,0.608,107,0.688,108,0.634,109,0.688,110,0.596,111,0.608,112,0.822,113,0.621,114,0.596,115,0.786,116,1.274,117,0.608,118,0.051,119,0.621,120,0.899,121,0.634,122,0.634,123,0.572,124,0.688,125,0.608,126,0.688,127,0.634,128,0.688,129,0.634,130,0.688,131,0.621,132,0.688,133,0.621,134,0.688,135,0.443,136,0.688,137,0.621,138,0.301,139,0.688,140,0.634,141,0.688,142,0.634,143,1.274,144,0.634,145,0.688,146,0.634,147,1.274,148,0.634,149,0.688,150,0.647,151,0.688,152,0.608,153,0.688,154,0.634,155,0.688,156,0.608,157,0.584,158,0.688,159,0.634,160,1.008,161,1.05,162,0.634,163,0.688,164,0.608,165,0.342,166,0.688,167,0.621,168,0.634,169,0.674,170,0.634,171,0.688,172,0.621,173,0.621,174,0.608,175,0.688,176,0.621,177,0.688,178,1.51,179,1.506,180,0.608,181,0.688,182,0.608,183,0.91,184,0.621,185,0.634,186,0.46,187,0.596,188,0.483,189,0.634,190,0.634,191,0.621,192,0.688,193,0.634,194,0.891,195,0.688,196,0.634,197,0.688,198,0.596,199,0.621,200,0.634,201,0.584,202,0.688,203,0.634,204,0.784,205,0.596,206,0.621,207,0.688,208,1.432,209,0.688,210,1.432,211,0.688,212,0.596,213,0.688,214,0.596,215,0.688,216,0.596,217,0.647,218,0.688,219,0.004,220,0.004,223,0.389,231,0.676,232,3.134,241,2.054,262,3.022,263,1.72,270,4.377,271,2.054,272,2.45,288,0.596,310,0.754,354,2.173,384,3.885,520,2.644,534,0.794,544,2.859,546,1.741,554,3.395,558,2.173,572,1.383,592,2.047,599,1.516,605,0.558,608,1.85,632,2.054,634,1.869,638,1.568,651,1.613,672,1.732,675,4.413,722,1.946,723,1.094,733,4.503,750,1.369,760,2.244,763,1.72,769,3.589,777,2.054,780,2.382,784,3.47,785,1.8,800,1.212,809,1.5,813,1.375,817,3.133,825,2.636,863,3.334,868,3.888,870,3.177,874,1.897,903,1.287,944,2.549,983,2.112,984,2.45,991,4.238,1007,1.275,1008,1.212,1009,1.275,1011,1.004,1041,2.954,1058,2.987,1059,3.342,1096,2.382,1100,1.5,1149,3.46,1172,1.72,1174,2.867,1175,2.308,1191,2.054,1192,2.643,1193,1.004,1195,1.999,1227,1.423,1253,2.549,1417,4.171,1444,2.864,1464,2.644,1502,1.309,1541,2.549,1608,4.405,1615,3.317,1633,1.275,1634,1.56,1642,2.864,1650,3.671,1667,3.133,1668,3.526,1690,2.059,1751,2.864,1761,1.961,1772,2.059,1786,1.8,1788,2.994,1797,2.994,1806,3.133,1873,2.054,1889,3.928,1970,2.748,2290,2.31,2291,1.732,2514,4.064,2641,1.67,2645,2.173,2691,2.549,2694,2.308,2695,3.317,2715,2.059,2739,4.591,2763,4.787,2783,2.71,2788,2.481,2916,2.864,3054,2.382,3119,4.064,3121,4.138,3210,4.277,3967,2.644,4015,2.994,4029,2.864,4374,3.526,4519,4.277,4521,3.526,4584,3.526,4883,2.71,4895,2.059,5070,5.912,5071,2.173,5072,5.142,5073,2.481,5077,5.142,5078,4.787,5079,5.653,5080,2.481,5081,2.481,5082,3.788,5083,3.788,5084,3.788,5085,3.788,5086,3.788,5087,3.788,5088,4.787,5089,5.142,5090,3.788,5091,5.538,5092,5.142,5093,4.787,5094,5.142,5095,3.788,5096,5.142,5097,4.787,5098,3.788,5099,3.788,5100,3.788,5101,3.788,5102,4.594,5103,5.142,5104,5.538,5105,3.317,5106,3.788,5107,3.788,5108,5.142,5109,4.594,5110,4.594,5111,2.481,5112,2.481,5113,6.072,5114,5.538,5115,3.788,5116,3.526,5117,3.788,5118,3.788,5119,3.788,5120,4.594,5121,2.481,5122,2.481,5123,2.481,5124,5.538,5125,3.788,5126,2.481,5127,2.481,5128,2.481,5129,3.526,5130,3.788,5131,5.142,5132,2.481,5136,4.67,5137,3.059,5138,4.67,5139,3.059,5140,3.059,5141,3.059,5142,3.059,5143,3.059,5144,3.059,5145,3.059,5146,3.059,5147,3.059,5148,3.059,5149,3.059]],["title/interfaces/QueryListParams.html",[118,0.075,1385,3.069]],["body/interfaces/QueryListParams.html",[3,0.141,4,0.13,9,0.118,25,0.153,26,0.687,39,0.85,40,0.008,42,0.196,43,0.827,45,0.719,49,0.69,53,0.19,56,0.2,87,0.737,118,0.138,219,0.007,220,0.007,223,0.536,228,2.445,231,1.212,366,1.715,526,1.704,534,1.669,544,2.993,572,1.569,592,1.704,605,0.767,619,2.258,750,1.388,772,5.212,808,3.388,860,4.104,949,4.58,952,4.588,974,3.682,1041,2.11,1063,2.557,1066,3.332,1365,2.99,1385,5.238,1422,3.08,1629,3.97,1713,4.74,1742,4.406,1815,5.579,1876,4.852,1877,4.852,1880,4.852,1882,4.852,1883,5.528,1918,4.12,1934,5.121,1935,4.3,1939,4.325,1971,4.564,2312,4.325,2313,4.58,2817,5.694,4661,6.313,5093,4.852,5150,5.694,5151,7.783,5152,7.783,5153,7.783,5154,8.702,5155,6.426,5156,5.212,5157,5.212,5158,6.426,5159,6.426,5160,6.426]],["title/components/RegisterComponent.html",[0,0.084,180,0.907]],["body/components/RegisterComponent.html",[0,0.127,1,0.75,2,0.701,3,0.08,4,0.073,5,0.597,6,0.831,7,0.814,8,0.782,9,0.066,11,0.72,16,0.72,17,1.418,18,1.35,19,0.72,20,0.61,21,0.801,23,0.801,25,0.086,26,0.468,30,0.701,33,0.536,37,0.764,39,0.837,40,0.008,41,0.558,42,0.174,43,0.609,45,0.858,46,1.227,49,0.584,50,1.263,51,1.254,53,0.24,54,0.267,56,0.093,57,0.009,59,1.109,62,1.121,78,1.022,81,4.351,84,1.435,87,0.415,88,0.597,89,1.435,92,0.814,93,1.054,94,1.032,95,0.623,96,1.519,97,0.814,98,1.893,99,0.735,100,0.636,101,0.954,102,1.098,103,0.75,104,0.814,105,0.75,106,0.72,107,0.814,108,0.75,109,0.814,110,0.706,111,0.72,112,0.883,113,0.735,114,0.706,115,0.892,116,1.409,117,0.72,118,0.06,119,0.735,120,0.924,121,0.75,122,0.75,123,0.677,124,0.814,125,0.72,126,0.814,127,0.75,128,0.814,129,0.75,130,0.814,131,0.735,132,0.814,133,0.735,134,0.814,135,0.524,136,0.814,137,0.735,138,0.357,139,0.814,140,0.75,141,0.814,142,0.75,143,1.409,144,0.75,145,0.814,146,0.75,147,1.409,148,0.75,149,0.814,150,0.766,151,0.814,152,0.72,153,0.814,154,0.75,155,0.814,156,0.72,157,0.691,158,0.814,159,0.75,160,1.144,161,1.192,162,0.75,163,0.814,164,0.72,165,0.405,166,0.814,167,0.735,168,0.75,169,0.798,170,0.75,171,0.814,172,0.735,173,0.735,174,0.72,175,0.814,176,0.735,177,0.814,178,0.691,179,0.584,180,1.371,181,0.814,182,0.72,183,1.032,184,0.735,185,0.75,186,0.522,187,0.706,188,0.572,189,0.75,190,0.75,191,0.735,192,0.814,193,0.75,194,0.691,195,0.814,196,0.75,197,0.814,198,0.706,199,0.735,200,0.75,201,0.691,202,0.814,203,0.75,204,1.146,205,0.706,206,0.735,207,0.814,208,0.72,209,0.814,210,0.72,211,0.814,212,0.706,213,0.814,214,0.706,215,0.814,216,0.706,217,0.766,218,0.814,219,0.004,220,0.004,223,0.639,228,2.166,231,0.998,234,4.694,244,1.168,246,2.682,247,3.096,250,1.685,251,1.366,255,0.754,265,2.322,284,3.566,288,0.706,296,2.618,310,1.277,312,1.527,313,2.539,336,4.7,397,2.131,413,4.183,496,1.334,518,4.64,519,6.187,532,3.58,534,0.94,544,1.779,550,2.268,572,1.791,573,2.793,580,4.041,599,0.866,605,0.617,632,1.593,638,2.315,664,6.212,674,4.958,686,2.437,687,2.734,714,4.297,723,0.848,724,3.117,751,3.209,758,2.702,774,1.976,838,2.612,899,4.017,953,4.041,960,5.592,983,2.833,984,2.664,1007,1.51,1008,1.435,1009,1.51,1041,2.763,1042,2.892,1070,1.471,1101,3.249,1164,5.786,1189,1.909,1193,1.189,1234,2.951,1312,3.249,1398,4.42,1404,3.397,1422,1.735,1441,3.397,1443,5.765,1444,4.977,1548,3.249,1596,5.623,1673,5.765,1776,2.793,1902,2.734,1918,3.397,2008,1.998,2152,4,2162,4.297,2166,3.196,2382,2.131,2469,5.765,2735,3.209,2752,5.551,2781,4.297,2829,6.5,2873,2.572,2956,5.551,3031,4.297,3047,3.209,3106,2.572,3916,4.217,3918,5.551,3919,4.694,3923,4.694,3933,5.551,3941,3.209,3947,3.209,3948,3.209,4340,4,4407,4,4465,5.205,4622,4.694,4874,4.694,4880,3.209,4920,6.252,4982,4.297,5161,3.209,5162,5.592,5163,6.265,5164,5.298,5165,6.265,5166,5.551,5167,6.265,5168,5.298,5169,5.298,5170,6.894,5171,3.621,5172,6.265,5173,6.894,5174,6.265,5175,6.894,5176,5.298,5177,5.298,5178,3.621,5179,6.894,5180,5.298,5181,3.621,5182,5.298,5183,5.298,5184,3.621,5185,5.298,5186,5.298,5187,5.298,5188,3.621,5189,5.298,5190,3.621,5191,3.621,5192,5.298,5193,3.621,5194,5.298,5195,5.298,5196,4.297,5197,3.621,5198,3.621,5199,5.298,5200,5.298,5201,3.621,5202,3.621,5203,5.298,5204,3.621,5205,3.621,5206,3.621,5207,3.621,5208,3.621,5209,3.621,5210,3.621,5211,3.621,5212,3.621,5213,3.621,5214,3.621,5215,3.621,5216,3.209,5217,3.621,5218,5.298,5219,3.621,5220,5.298,5221,5.298,5222,3.621,5223,3.621,5224,3.621,5225,3.621,5226,3.621,5227,8.117,5228,5.298]],["title/interfaces/RelationEdge.html",[118,0.075,1218,2.683]],["body/interfaces/RelationEdge.html",[0,0.15,3,0.117,4,0.164,5,1.141,9,0.127,25,0.127,26,0.611,40,0.008,42,0.202,49,0.709,53,0.24,56,0.178,57,0.018,87,0.882,101,0.627,112,0.642,118,0.152,120,0.718,135,0.771,138,0.682,165,0.967,186,0.867,188,0.842,219,0.006,220,0.006,231,1.177,255,0.642,279,2.415,291,4.27,311,3.136,512,1.57,526,1.413,538,1.537,545,1.307,592,2.364,605,0.879,619,1.873,717,1.963,722,1.831,814,2.282,833,1.75,903,1.811,949,3.136,1063,1.954,1064,3.392,1067,3.695,1068,3.483,1091,2.01,1195,3.29,1203,4.523,1204,2.41,1205,3.017,1206,4.802,1207,5.085,1208,3.684,1209,3.317,1210,2.909,1211,2.555,1212,3.284,1213,3.317,1214,2.719,1215,2.81,1216,4.195,1217,4.289,1218,4.787,1219,3.269,1220,3.269,1221,3.269,1222,3.269,1223,3.269,1224,3.269,1225,3.269,1226,3.269,1227,3.221,1228,3.269,1229,3.269,1230,4.244,1231,3.684,1232,3.136,1233,3.136,1234,2.282,1235,3.778,1236,3.417,1237,3.417,1238,1.79,1239,2.48,1240,2.555,1241,3.269,1242,2.909,1243,2.555,1244,2.909,1245,3.269,1246,3.417,1247,2.01,1248,3.417,1249,2.719,1250,3.417,1251,2.344,1252,3.417,1253,2.909,1254,3.417,1255,3.269,1256,3.417,1257,4.351,1258,2.81,1259,3.017,1260,2.555,1261,3.918,1262,3.417,1263,3.417,1264,3.417,1265,4.073,1266,3.417,1267,4.437,1268,3.417,1269,3.417,1270,3.417,1271,3.269,1272,1.963,1273,3.918,1274,4.928,1275,3.417,1276,3.417,1277,5.406,1278,3.417,1279,4.437,1280,4.437,1281,3.417,1282,3.417,1283,4.195,1284,4.437,1285,3.269,1286,4.244,1287,4.437,1288,3.417,1289,4.606,1290,3.649,1291,3.417,1292,3.269,1293,3.417,1294,3.417,1295,3.417,1296,3.269,1297,4.073,1298,3.269,1299,2.909,1300,3.269,1301,2.81]],["title/components/RemoveDialogComponent.html",[0,0.084,182,0.907]],["body/components/RemoveDialogComponent.html",[0,0.146,1,0.83,2,0.753,3,0.088,4,0.081,5,0.66,6,0.919,7,0.9,8,0.864,9,0.073,11,0.796,13,1.626,14,1.156,15,1.833,16,0.796,17,1.424,18,1.357,19,0.796,20,1.466,21,0.861,22,2.838,23,0.861,24,2.438,25,0.096,26,0.503,27,1.285,28,3.488,30,0.753,33,0.592,34,2.266,35,3.182,36,2.505,37,0.741,39,0.437,40,0.008,41,0.54,42,0.18,43,0.354,45,0.638,46,1.154,49,0.505,50,1.043,51,0.88,53,0.196,54,0.296,55,1.231,56,0.147,57,0.01,58,1.407,60,1.106,62,1.205,77,2.505,78,1.13,80,2.65,85,1.44,87,0.829,88,0.66,89,3.233,92,0.9,93,1.133,94,1.11,95,0.688,96,1.592,97,0.9,98,1.936,99,0.813,100,0.703,101,0.98,102,1.18,103,0.83,104,0.9,105,0.83,106,0.796,107,0.9,108,0.83,109,0.9,110,0.78,111,0.796,112,0.919,113,0.813,114,0.78,115,0.959,116,1.491,117,0.796,118,0.094,119,0.813,120,0.938,121,0.83,122,0.83,123,0.748,124,0.9,125,0.796,126,0.9,127,0.83,128,0.9,129,0.83,130,0.9,131,0.813,132,0.9,133,0.813,134,0.9,135,0.579,136,0.9,137,0.813,138,0.394,139,0.9,140,0.83,141,0.9,142,0.83,143,1.491,144,0.83,145,0.9,146,0.83,147,1.491,148,0.83,149,0.9,150,0.847,151,0.9,152,0.796,153,0.9,154,0.83,155,0.9,156,0.796,157,0.764,158,0.9,159,0.83,160,1.23,161,1.281,162,0.83,163,0.9,164,0.796,165,0.448,166,0.9,167,0.813,168,0.83,169,0.882,170,0.83,171,0.9,172,0.813,173,0.813,174,0.796,175,0.9,176,0.813,177,0.9,178,0.764,179,0.646,180,0.796,181,0.9,182,1.437,183,1.654,184,0.813,185,0.83,186,0.752,187,0.78,188,0.632,189,0.83,190,0.83,191,0.813,192,0.9,193,0.83,194,1.62,195,0.9,196,0.83,197,0.9,198,0.78,199,0.813,200,0.83,201,1.265,202,0.9,203,0.83,204,0.999,205,0.78,206,0.813,207,0.9,208,0.796,209,0.9,210,0.796,211,0.9,212,0.78,213,0.9,214,0.78,215,0.9,216,0.78,217,0.847,218,0.9,219,0.005,220,0.005,223,0.334,231,1.181,236,4.088,241,1.761,242,2.65,246,2.838,249,1.669,251,1.51,252,1.81,255,0.686,262,2.097,269,2.65,270,2.566,271,1.761,272,2.201,273,3.022,274,2.843,279,2.492,288,1.11,310,0.646,312,1.154,366,0.882,423,4.907,605,0.394,742,2.455,792,3.651,809,1.286,813,1.677,823,1.81,837,3.753,863,1.626,903,1.346,922,2.905,961,3.493,1000,2.355,1027,3.651,1029,3.307,1030,4.25,1100,2.129,1172,1.474,1174,3.266,1177,1.918,1189,2.11,1191,2.916,1192,2.764,1193,1.314,1198,2.566,1199,3.495,1240,2.73,1272,2.097,1306,4.045,1421,1.863,1458,3.247,1476,4.619,1568,4.893,1595,5.006,1596,6.246,1624,3.022,1633,2.375,1634,2.042,1652,1.918,1667,3.919,1673,2.843,1794,3.022,1873,1.761,1934,2.355,1970,3.351,2142,6.297,2143,5.006,2144,5.874,2145,4.863,2146,3.547,2147,4.861,2148,5.874,2149,3.547,2150,4.709,2151,5.874,2152,4.3,2153,5.047,2154,5.047,2155,4.619,2156,5.047,2157,4.045,2158,5.047,2159,5.047,2160,5.047,2161,5.874,2162,3.247,2163,3.547,2164,4.065,2165,5.047,2166,3.382,2167,5.874,2168,5.047,2169,3.547,2170,3.547,2171,4.861,2240,2.042,2290,3.022,2291,2.266,2514,3.651,2639,2.566,2640,3.022,2694,2.814,2777,1.918,2782,2.185,2921,2.566,3581,4.045,3817,3.022,4010,3.547,5229,4.003,5230,4.003,5231,4.003,5232,5.047,5233,4.003,5234,5.695,5235,5.695,5236,4.003,5237,7.222,5238,5.695,5239,4.003,5240,4.003,5241,4.003]],["title/components/RemoveProjectMemberComponentComponent.html",[0,0.084,184,0.926]],["body/components/RemoveProjectMemberComponentComponent.html",[0,0.154,1,0.986,2,0.849,3,0.105,4,0.096,5,0.784,6,1.092,7,1.07,8,1.027,9,0.087,11,0.946,14,1.303,15,2.008,16,0.946,17,1.434,18,1.367,19,0.946,20,1.223,21,0.971,23,0.971,25,0.114,26,0.567,27,1.368,28,3.421,29,2.596,30,0.849,33,0.704,34,2.693,35,3.386,37,0.76,39,0.519,40,0.008,41,0.541,42,0.16,43,0.42,45,0.719,46,1.099,50,0.871,51,0.735,53,0.215,54,0.474,55,1.462,56,0.122,57,0.012,58,1.672,60,1.315,62,1.358,63,2.508,77,2.823,78,2.051,82,3.777,84,1.884,85,1.711,88,0.784,92,1.07,93,1.277,94,1.251,95,0.818,96,1.714,97,1.07,98,2.004,99,0.966,100,0.835,101,1.121,102,1.961,103,0.986,104,1.07,105,0.986,106,0.946,107,1.07,108,0.986,109,1.07,110,0.927,111,0.946,112,0.978,113,0.966,114,0.927,115,1.081,116,1.634,117,0.946,118,0.079,119,0.966,120,0.96,121,0.986,122,0.986,123,0.889,124,1.07,125,0.946,126,1.07,127,0.986,128,1.07,129,0.986,130,1.07,131,0.966,132,1.07,133,0.966,134,1.07,135,0.688,136,1.07,137,0.966,138,0.469,139,1.07,140,0.986,141,1.07,142,0.986,143,1.634,144,0.986,145,1.07,146,0.986,147,1.634,148,0.986,149,1.07,150,1.006,151,1.07,152,0.946,153,1.07,154,0.986,155,1.07,156,0.946,157,0.908,158,1.07,159,0.986,160,1.386,161,1.444,162,0.986,163,1.07,164,0.946,165,0.533,166,1.07,167,0.966,168,0.986,169,1.048,170,0.986,171,1.07,172,0.966,173,0.966,174,0.946,175,1.07,176,0.966,177,1.07,178,0.908,179,0.768,180,0.946,181,1.07,182,0.946,183,1.752,184,1.579,185,0.986,186,0.632,187,0.927,188,0.751,189,0.986,190,0.986,191,0.966,192,1.07,193,0.986,194,0.908,195,1.07,196,0.986,197,1.07,198,0.927,199,0.966,200,0.986,201,0.908,202,1.07,203,0.986,204,1.005,205,0.927,206,0.966,207,1.07,208,0.946,209,1.07,210,0.946,211,1.07,212,0.927,213,1.07,214,0.927,215,1.07,216,0.927,217,1.006,218,1.07,219,0.005,220,0.005,231,1.211,233,6.438,236,4.403,241,2.092,242,2.987,249,1.983,252,2.151,255,0.573,257,4.215,258,4.215,259,5.206,262,1.752,263,1.752,264,5.206,265,3.05,266,3.591,267,4.215,268,4.215,269,2.213,270,3.05,271,2.092,272,2.481,273,3.591,274,3.379,434,6.076,922,2.426,1029,2.676,2142,6.459,2171,5.235,2875,2.917,5242,4.215,5243,7.265,5244,6.419,5245,4.757,5246,4.757,5247,4.757,5248,6.419,5249,4.757,5250,4.757]],["title/components/SetEditorComponent.html",[0,0.084,185,0.945]],["body/components/SetEditorComponent.html",[0,0.117,1,0.643,2,0.755,3,0.068,4,0.063,5,0.511,6,0.712,7,0.697,8,0.67,9,0.057,11,0.617,14,0.958,15,1.579,16,0.617,17,1.408,18,1.339,19,0.617,20,1.386,21,0.714,23,0.714,25,0.074,27,0.795,29,3.949,30,0.624,33,0.698,36,2.808,37,0.789,39,0.339,40,0.008,41,0.468,42,0.19,43,0.274,45,0.81,46,0.469,49,0.591,50,1.169,51,0.987,53,0.229,54,0.229,55,0.953,56,0.08,57,0.008,59,1.172,60,0.857,62,1.351,78,0.875,82,1.825,87,0.733,88,1.309,92,0.697,93,0.939,94,1.113,95,0.812,96,1.407,97,0.697,98,1.822,99,0.63,100,0.545,101,0.911,102,0.978,103,0.643,104,0.697,105,0.643,106,0.617,107,0.697,108,0.643,109,0.697,110,0.604,111,0.617,112,0.956,113,0.63,114,1.578,115,0.795,116,1.285,117,0.617,118,0.051,119,0.63,120,0.913,121,0.643,122,0.643,123,0.58,124,0.697,125,0.617,126,0.697,127,0.643,128,0.697,129,0.643,130,0.697,131,0.63,132,0.697,133,0.63,134,0.697,135,0.449,136,0.697,137,0.63,138,0.305,139,0.697,140,0.643,141,0.697,142,0.643,143,1.285,144,0.643,145,0.697,146,0.643,147,1.285,148,0.643,149,0.697,150,0.656,151,0.697,152,0.617,153,0.697,154,0.643,155,1.285,156,0.617,157,0.592,158,0.697,159,0.643,160,1.019,161,1.061,162,0.643,163,0.697,164,0.617,165,0.715,166,0.697,167,0.63,168,0.643,169,0.683,170,0.643,171,0.697,172,0.63,173,0.63,174,0.617,175,0.697,176,0.63,177,0.697,178,0.592,179,1.214,180,0.617,181,0.697,182,0.617,183,0.92,184,0.63,185,1.323,186,0.906,187,0.92,188,1.334,189,0.643,190,0.643,191,0.63,192,0.697,193,0.643,194,1.436,195,0.697,196,0.643,197,0.697,198,0.604,199,0.63,200,0.643,201,0.592,202,0.697,203,0.643,204,1.001,205,0.604,206,0.958,207,0.697,208,0.617,209,0.697,210,0.617,211,0.697,212,0.604,213,0.697,214,0.604,215,0.697,216,0.604,217,0.656,218,0.697,219,0.007,220,0.004,223,0.259,230,2.576,231,0.827,244,1.407,255,0.373,262,1.142,263,1.738,264,2.515,279,2.363,310,1.03,312,1.98,366,1.898,397,1.825,408,1.486,520,2.671,534,0.805,535,1.78,545,0.714,554,2.075,571,3.06,591,1.755,592,1.821,599,0.742,605,0.629,634,1.879,656,3.352,668,3.915,702,1.228,722,1.621,723,1.956,724,2.777,750,1.562,758,1.582,760,2.263,761,3.176,763,1.738,765,1.901,766,2.665,775,2.526,777,2.075,778,2.748,779,3.844,780,2.407,784,2.662,785,1.825,786,2.515,787,2.104,788,0.974,789,1.293,790,1.486,800,1.228,809,2.894,814,2.02,817,2.332,823,2.583,826,1.364,831,2.262,838,1.967,867,3.827,900,1.755,952,1.635,971,2.134,989,2.777,998,3.352,1000,2.777,1011,2.659,1012,2.671,1029,2.382,1063,1.802,1080,3.352,1096,2.407,1098,1.755,1100,2.05,1177,2.262,1191,1.364,1192,1.293,1195,1.327,1238,1.584,1417,4.402,1469,2.907,1474,2.512,1475,3.025,1502,2.02,1508,3.663,1511,4.093,1512,4.404,1585,3.176,1608,2.576,1629,2.407,1633,1.293,1634,1.582,1650,3.256,1667,1.532,1668,2.341,1713,4.258,1714,2.894,1735,2.576,1755,3.352,1771,2.296,1780,3.352,1788,1.988,1841,2.671,1933,1.901,1935,1.532,1951,4.057,1956,3.176,2004,3.025,2008,2.155,2036,4.057,2124,2.087,2145,1.901,2147,2.087,2207,3.563,2249,3.563,2569,5.362,2688,2.341,2696,2.202,2697,2.341,2708,5.657,2736,6.087,2774,2.748,2777,1.486,2802,2.087,2811,3.563,2815,4.879,2823,5.657,2849,3.844,2858,3.025,2865,4.639,2866,4.639,2868,4.97,2921,1.988,2923,3.234,3100,5.061,3329,1.901,3387,5.061,3590,2.894,3696,2.748,3840,4.181,3955,2.341,3958,5.061,3959,4.181,3985,5.606,3989,3.662,4065,2.202,4088,5.218,4089,3.025,4090,6.211,4091,5.139,4092,4.535,4093,4.535,4094,4.535,4095,4.535,4096,4.535,4097,2.202,4099,2.202,4102,4.535,4105,5.139,4107,2.202,4113,2.202,4148,3.352,4341,4.181,4790,2.515,5007,2.748,5088,3.563,5251,6.384,5252,5.712,5253,5.712,5254,5.712,5255,3.101,5256,3.101,5257,4.719,5258,3.101,5259,3.101,5260,3.101,5261,6.384,5262,6.384,5263,4.719,5264,3.101,5265,3.101,5266,3.101,5267,3.101,5268,4.719,5269,4.719,5270,3.101,5271,4.181,5272,4.719,5273,3.101,5274,4.181,5275,3.101,5276,4.719,5277,3.101,5278,3.101,5279,3.101,5280,3.101,5281,3.101,5282,4.719,5283,3.101,5284,3.101,5285,3.101,5286,3.101,5287,3.101,5288,3.101,5289,3.101,5290,3.101,5291,3.101,5292,3.101,5293,3.101,5294,4.719,5295,3.101,5296,3.101,5297,3.101,5298,3.101,5299,4.719,5300,3.101,5301,3.101,5302,3.101,5303,3.101,5304,3.101,5305,3.101,5306,3.101,5307,3.101,5308,3.101,5309,3.101,5310,3.101,5311,3.101,5312,3.101,5313,3.101,5314,3.101,5315,3.101,5316,3.101,5317,3.101,5318,3.101,5319,3.101,5320,3.101,5321,3.101,5322,3.101,5323,3.101,5324,3.101,5325,3.101,5326,3.101]],["title/components/SetEditorDialogComponent.html",[0,0.084,187,0.889]],["body/components/SetEditorDialogComponent.html",[0,0.133,1,0.576,2,0.705,3,0.061,4,0.159,5,0.458,6,0.638,7,0.625,8,0.6,9,0.051,11,0.553,13,1.13,14,0.881,15,1.475,16,0.553,17,1.399,18,1.329,19,0.553,20,1.166,21,0.656,22,2.284,23,0.656,24,1.857,25,0.066,26,0.383,27,1.513,28,2.347,30,0.574,33,0.642,35,2.513,37,0.779,39,0.714,40,0.008,41,0.509,42,0.179,43,0.577,45,0.81,46,1.094,49,0.586,50,1.197,51,1.07,53,0.221,54,0.205,55,0.855,56,0.155,57,0.011,58,0.977,59,1.275,60,0.769,62,0.918,64,1.159,77,1.908,78,1.225,84,1.102,85,1,87,0.947,88,1.296,92,0.625,93,0.863,94,0.845,95,0.478,96,1.328,97,0.625,98,1.769,99,0.565,100,1.059,101,0.88,102,0.899,103,0.576,104,0.625,105,0.576,106,0.553,107,0.625,108,0.576,109,0.625,110,0.542,111,0.553,112,0.947,113,0.565,114,1.35,115,0.731,116,1.2,117,0.553,118,0.1,119,0.565,120,0.883,121,0.576,122,0.576,123,1.222,124,0.625,125,0.553,126,0.625,127,0.576,128,0.625,129,0.576,130,0.625,131,0.565,132,0.625,133,0.565,134,0.625,135,0.402,136,0.625,137,0.565,138,0.274,139,0.625,140,0.576,141,0.625,142,0.576,143,1.2,144,0.576,145,0.625,146,0.576,147,1.2,148,0.576,149,0.625,150,0.588,151,0.625,152,0.553,153,0.625,154,0.576,155,0.625,156,0.553,157,0.531,158,0.625,159,0.576,160,0.937,161,0.976,162,0.576,163,0.625,164,0.553,165,0.486,166,0.625,167,0.565,168,0.576,169,0.613,170,0.576,171,0.625,172,0.565,173,0.565,174,0.553,175,0.625,176,0.565,177,0.625,178,0.531,179,1.055,180,0.553,181,0.625,182,0.553,183,0.845,184,0.565,185,0.576,186,0.879,187,1.175,188,1.436,189,0.576,190,0.576,191,0.565,192,0.625,193,0.576,194,1.151,195,0.625,196,0.576,197,0.625,198,0.542,199,0.565,200,0.576,201,1.151,202,0.625,203,0.576,204,0.385,205,0.542,206,0.565,207,0.625,208,0.553,209,0.625,210,0.553,211,0.625,212,0.542,213,0.625,214,0.542,215,0.625,216,0.542,217,0.588,218,0.625,219,0.007,220,0.004,223,0.232,231,1.083,232,1.102,241,1.223,242,2.019,244,1.594,249,1.159,252,1.258,255,1.054,263,1.024,271,1.223,279,0.874,296,1.374,310,1.207,366,1.733,413,1.518,534,0.722,535,2.012,545,1.094,546,1.334,550,1.19,558,1.294,564,2.368,571,1.333,599,1.038,605,0.802,618,2.661,634,1.798,649,1.636,688,1.775,722,0.955,725,1.962,739,1.636,750,0.6,758,2.213,760,2.114,761,1.872,765,1.705,766,2.95,775,2.803,777,2.651,780,2.213,784,2.725,787,1.965,788,0.874,789,1.159,790,1.333,800,1.102,809,2.681,813,0.819,823,1.258,831,3.132,841,1.466,874,2.168,886,1.258,900,1.574,903,1.224,920,1.518,923,1.872,938,2.956,941,1.518,952,1.466,974,1.223,984,2.329,988,1.574,1007,1.159,1008,1.102,1009,1.159,1011,1.425,1012,3.7,1029,2.224,1036,1.872,1041,0.913,1063,0.785,1066,1.19,1100,1.936,1172,1.024,1174,2.413,1175,1.374,1176,2.721,1185,1.636,1189,2.288,1191,2.347,1192,2.224,1193,2.146,1199,2.288,1238,2.024,1272,1.965,1421,1.294,1448,1.466,1469,2.892,1473,1.075,1482,1.418,1500,1.636,1502,1.19,1508,3.477,1511,3.421,1512,3.421,1516,1.636,1540,4.638,1541,2.912,1575,2.288,1633,1.159,1652,1.333,1661,2.213,1667,2.144,1694,1.783,1713,2.456,1735,1.518,1741,1.705,1743,3.567,1744,1.705,1771,1.561,1804,1.159,1806,2.978,1843,1.783,1845,1.636,1878,1.574,1881,1.783,1928,3.334,1935,2.144,2038,1.574,2113,1.872,2114,1.636,2115,1.636,2124,1.872,2188,2.782,2201,1.705,2205,2.92,2569,5.3,2641,1.518,2689,1.872,2691,1.518,2692,1.636,2694,1.374,2696,4.642,2697,2.1,2777,2.557,2790,2.1,2802,3.591,2826,1.705,2865,3.864,2866,4.19,2868,1.783,2876,4.057,2890,3.082,2923,2.456,3349,2.464,3576,2.255,3590,1.705,3832,1.975,3874,1.783,3916,1.872,3967,1.574,3975,2.92,3984,4.057,3985,5.542,3986,4.935,3987,2.1,3988,2.1,3989,3.864,3990,2.1,3991,3.276,3992,3.276,3993,2.1,3994,2.1,3996,1.975,3997,2.1,3998,2.1,4002,2.1,4003,2.1,4004,2.1,4005,1.975,4009,4.935,4011,1.975,4012,2.1,4015,1.783,4016,2.1,4017,2.1,4019,2.1,4020,2.1,4021,2.1,4024,2.1,4025,2.1,4028,2.1,4029,1.705,4030,2.661,4031,4.028,4032,3.276,4033,2.1,4034,1.975,4035,2.1,4036,2.1,4037,2.1,4038,3.276,4039,3.276,4040,2.1,4041,2.1,4042,2.1,4043,2.1,4044,3.276,4045,2.1,4046,3.276,4047,2.1,4048,2.1,4049,2.1,4050,2.1,4051,2.1,4052,2.1,4053,2.1,4054,2.1,4055,2.1,4056,2.1,4057,2.1,4058,2.1,4059,2.1,4060,2.1,4061,3.276,4062,4.028,4063,2.1,4064,2.1,4065,1.975,4066,2.1,4067,2.1,4068,2.1,4069,1.975,4070,2.1,4071,2.1,4072,2.1,4073,4.028,4074,2.1,4075,2.1,4076,2.1,4077,2.1,4078,2.1,4079,2.1,4080,2.1,4081,2.1,4082,2.1,4083,2.1,4084,2.1,4085,2.1,4086,2.1,4087,2.1,4088,1.872,4089,4.19,4090,4.642,4091,1.975,4092,1.975,4093,1.975,4094,4.642,4095,1.975,4096,1.975,4097,3.79,4098,4.028,4099,3.79,4100,4.028,4101,2.1,4102,3.082,4103,2.1,4104,2.1,4105,3.79,4106,2.1,4107,1.975,4108,2.1,4109,2.1,4110,3.276,4111,3.276,4112,2.1,4113,1.975,4114,2.1,4115,2.1,4116,2.1,4117,2.1,4118,2.1,4119,2.1,4120,4.551,4121,2.1,4122,3.276,4123,2.1,4124,3.276,4125,2.1,4126,3.276,4127,2.1,4128,3.276,4129,3.276,4130,2.1,4131,2.1,4132,2.1,4133,2.1,4134,3.276,4135,2.1,4136,2.1,4137,2.1,4138,2.1,4139,2.1,4140,2.1,4141,2.1,4142,3.276,4143,2.1,4144,2.1,4145,2.1,4146,2.1,4147,2.1,4148,1.975,4149,2.1,5232,3.845,5327,4.339,5328,4.339,5329,4.339,5330,4.339,5331,4.339,5332,2.781,5333,2.781,5334,2.781,5335,2.781,5336,2.781,5337,2.781,5338,2.781,5339,2.781,5340,2.781,5341,2.781,5342,2.781,5343,2.781,5344,2.781,5345,2.781,5346,2.781,5347,4.339,5348,4.339,5349,4.339,5350,2.781,5351,2.781,5352,2.781,5353,2.781,5354,2.781,5355,5.335,5356,2.781,5357,2.781,5358,2.781,5359,2.781,5360,2.781,5361,2.781]],["title/interfaces/SetEditorDialogData.html",[118,0.075,4089,2.923]],["body/interfaces/SetEditorDialogData.html",[0,0.128,2,0.493,3,0.082,4,0.171,9,0.068,13,1.516,14,0.758,15,1.497,17,0.552,18,0.528,20,0.628,21,0.564,22,1.597,23,0.564,24,1.597,25,0.089,26,0.478,27,1.487,28,1.641,33,0.552,35,2.258,40,0.008,42,0.196,43,0.684,46,0.964,49,0.682,51,0.577,53,0.242,54,0.276,55,1.147,56,0.18,57,0.014,58,1.311,59,1.262,60,1.031,64,1.556,84,1.478,87,0.957,88,1.153,100,0.655,112,0.652,114,1.242,118,0.105,123,1.307,165,0.418,179,1.128,186,0.855,187,0.727,188,1.223,219,0.007,220,0.005,231,1.012,232,1.478,242,1.736,244,1.707,249,1.556,252,1.687,255,1.098,279,2.197,296,1.844,310,1.321,366,1.867,526,0.989,534,0.969,535,2.404,545,1.208,546,1.665,550,1.597,558,1.736,564,2.955,571,1.788,592,2.246,599,0.892,605,0.855,618,3.32,634,1.928,649,2.195,688,2.059,722,1.281,725,2.449,739,2.195,750,0.806,758,2.762,760,2.145,761,4.706,766,3.014,775,2.986,777,3.075,780,3.567,784,2.915,787,2.347,788,1.172,789,1.556,790,1.788,800,1.478,809,2.628,823,1.687,831,3.351,841,1.967,874,1.516,886,1.687,903,0.758,920,2.036,923,2.511,938,1.687,941,2.036,974,1.641,984,2.093,988,2.112,1007,1.556,1008,1.478,1009,1.556,1011,1.778,1012,3.958,1029,1.556,1036,2.511,1041,1.225,1063,1.053,1066,1.597,1238,2.348,1421,1.736,1448,1.967,1469,3.354,1473,1.442,1482,1.903,1500,2.195,1502,1.597,1508,1.687,1511,2.392,1512,2.392,1516,2.195,1540,3.471,1575,2.855,1661,2.762,1694,2.392,1713,3.065,1735,2.036,1741,2.288,1743,3.479,1744,2.288,1771,1.948,1804,1.556,1806,3.455,1845,2.195,1878,2.112,1881,2.392,1928,3.787,1935,2.676,2038,2.112,2113,2.511,2114,2.195,2115,2.195,2124,2.511,2188,3.471,2201,2.288,2569,2.288,2802,2.511,2826,2.288,2865,5.123,2866,4.965,2868,4.483,2876,4.706,2890,3.846,2923,2.112,3590,2.288,3832,2.65,3874,2.392,3916,2.511,3967,2.112,3975,3.644,3984,4.289,3985,2.392,3986,5.606,3987,2.817,3988,2.817,3989,4.965,3990,2.817,3991,4.088,3992,4.088,3993,2.817,3994,2.817,3996,2.65,3997,2.817,3998,2.817,4002,2.817,4003,2.817,4004,2.817,4005,2.65,4009,5.606,4011,2.65,4012,2.817,4015,2.392,4016,2.817,4017,2.817,4019,2.817,4020,2.817,4021,2.817,4024,2.817,4025,2.817,4028,2.817,4029,2.288,4030,3.32,4031,4.812,4032,4.088,4033,2.817,4034,2.65,4035,2.817,4036,2.817,4037,2.817,4038,4.088,4039,4.088,4040,2.817,4041,2.817,4042,2.817,4043,2.817,4044,4.088,4045,2.817,4046,4.088,4047,2.817,4048,2.817,4049,2.817,4050,2.817,4051,2.817,4052,2.817,4053,2.817,4054,2.817,4055,2.817,4056,2.817,4057,2.817,4058,2.817,4059,2.817,4060,2.817,4061,4.088,4062,4.812,4063,2.817,4064,2.817,4065,2.65,4066,2.817,4067,2.817,4068,2.817,4069,2.65,4070,2.817,4071,2.817,4072,2.817,4073,4.812,4074,2.817,4075,2.817,4076,2.817,4077,2.817,4078,2.817,4079,2.817,4080,2.817,4081,2.817,4082,2.817,4083,2.817,4084,2.817,4085,2.817,4086,2.817,4087,2.817,4088,2.511,4089,4.086,4090,5.501,4091,4.966,4092,4.966,4093,4.966,4094,5.274,4095,4.966,4096,4.966,4097,2.65,4098,2.817,4099,2.65,4100,2.817,4101,2.817,4102,3.846,4103,2.817,4104,2.817,4105,4.527,4106,2.817,4107,2.65,4108,2.817,4109,2.817,4110,4.088,4111,4.088,4112,2.817,4113,2.65,4114,2.817,4115,2.817,4116,2.817,4117,2.817,4118,2.817,4119,2.817,4120,2.817,4121,2.817,4122,4.088,4123,2.817,4124,2.817,4125,2.817,4126,2.817,4127,2.817,4128,2.817,4129,4.088,4130,2.817,4131,2.817,4132,2.817,4133,2.817,4134,2.817,4135,2.817,4136,2.817,4137,2.817,4138,2.817,4139,2.817,4140,2.817,4141,2.817,4142,4.088,4143,2.817,4144,2.817,4145,2.817,4146,2.817,4147,2.817,4148,2.65,4149,2.817]],["title/interfaces/SetMultiSource.html",[118,0.075,3989,2.923]],["body/interfaces/SetMultiSource.html",[0,0.129,2,0.723,3,0.083,4,0.175,9,0.069,13,1.536,14,0.767,15,1.511,17,0.559,18,0.535,20,0.636,21,0.572,22,1.618,23,0.572,24,1.618,25,0.09,26,0.483,27,1.49,28,1.662,33,0.559,35,2.279,40,0.008,42,0.171,43,0.621,46,0.971,49,0.626,51,0.584,53,0.243,54,0.279,55,1.162,56,0.181,57,0.014,58,1.328,59,1.266,60,1.045,64,1.576,84,1.497,87,0.96,88,1.16,100,0.664,112,0.658,114,1.251,118,0.116,123,1.315,165,0.423,179,1.135,186,0.865,187,0.737,188,1.267,219,0.007,220,0.005,223,0.315,231,1.018,232,1.497,242,1.759,244,1.714,249,1.576,252,1.709,255,1.1,279,1.188,296,1.868,310,1.325,366,1.95,526,1.002,534,0.982,535,2.422,545,1.213,546,1.68,550,1.618,558,1.759,564,2.983,571,1.811,592,1.449,599,0.904,605,0.857,618,3.352,634,2.02,649,2.224,688,2.072,722,1.877,725,2.903,739,2.224,750,0.816,758,2.788,760,2.165,761,2.544,766,3.025,775,2.992,777,3.528,780,2.788,784,2.933,787,2.364,788,1.188,789,1.576,790,1.811,800,1.497,809,2.794,823,1.709,831,3.371,841,1.993,874,1.536,886,1.709,903,0.767,920,2.063,923,2.544,938,1.709,941,2.063,974,1.662,984,2.112,988,2.14,1007,1.576,1008,1.497,1009,1.576,1011,1.795,1012,3.982,1029,1.576,1036,2.544,1041,1.241,1063,1.067,1066,1.618,1238,2.693,1421,1.759,1448,1.993,1469,3.362,1473,2.112,1482,1.928,1500,2.224,1502,1.618,1508,1.709,1511,2.423,1512,2.423,1516,2.224,1540,3.504,1575,2.882,1661,2.788,1694,2.423,1713,3.094,1735,2.983,1741,2.318,1743,3.504,1744,2.318,1771,1.966,1804,1.576,1806,3.476,1845,3.216,1878,3.094,1881,2.423,1928,4.189,1935,2.701,2038,3.094,2113,2.544,2114,2.224,2115,2.224,2124,2.544,2188,4.116,2201,2.318,2569,2.318,2802,2.544,2826,2.318,2865,4.51,2866,4.116,2868,2.423,2876,5.528,2890,3.882,2923,2.14,3590,2.318,3832,2.685,3874,2.423,3916,2.544,3967,2.14,3975,3.679,3984,4.321,3985,2.423,3986,5.873,3987,2.854,3988,2.854,3989,4.785,3990,2.854,3991,4.127,3992,4.127,3993,2.854,3994,2.854,3996,2.685,3997,2.854,3998,2.854,4002,2.854,4003,2.854,4004,2.854,4005,2.685,4009,6.416,4011,2.685,4012,2.854,4015,2.423,4016,2.854,4017,2.854,4019,2.854,4020,2.854,4021,2.854,4024,2.854,4025,2.854,4028,2.854,4029,2.318,4030,4.314,4031,5.873,4032,5.873,4033,4.127,4034,2.685,4035,2.854,4036,2.854,4037,2.854,4038,4.127,4039,4.127,4040,2.854,4041,2.854,4042,2.854,4043,2.854,4044,4.127,4045,2.854,4046,4.127,4047,2.854,4048,2.854,4049,2.854,4050,2.854,4051,2.854,4052,2.854,4053,2.854,4054,2.854,4055,2.854,4056,2.854,4057,2.854,4058,2.854,4059,2.854,4060,2.854,4061,4.127,4062,4.847,4063,2.854,4064,2.854,4065,2.685,4066,2.854,4067,2.854,4068,2.854,4069,2.685,4070,2.854,4071,2.854,4072,2.854,4073,4.847,4074,2.854,4075,2.854,4076,2.854,4077,2.854,4078,2.854,4079,2.854,4080,2.854,4081,2.854,4082,2.854,4083,2.854,4084,2.854,4085,2.854,4086,2.854,4087,2.854,4088,2.544,4089,3.504,4090,4.56,4091,2.685,4092,2.685,4093,2.685,4094,3.882,4095,2.685,4096,2.685,4097,2.685,4098,2.854,4099,2.685,4100,2.854,4101,2.854,4102,3.882,4103,2.854,4104,2.854,4105,4.56,4106,2.854,4107,2.685,4108,2.854,4109,2.854,4110,4.127,4111,4.127,4112,2.854,4113,2.685,4114,2.854,4115,2.854,4116,2.854,4117,2.854,4118,2.854,4119,2.854,4120,2.854,4121,2.854,4122,4.127,4123,2.854,4124,2.854,4125,2.854,4126,2.854,4127,2.854,4128,2.854,4129,4.127,4130,2.854,4131,2.854,4132,2.854,4133,2.854,4134,2.854,4135,2.854,4136,2.854,4137,2.854,4138,2.854,4139,2.854,4140,2.854,4141,2.854,4142,4.127,4143,2.854,4144,2.854,4145,2.854,4146,2.854,4147,2.854,4148,2.685,4149,2.854]],["title/components/SettingsDialogComponent.html",[0,0.084,189,0.945]],["body/components/SettingsDialogComponent.html",[0,0.141,1,1.294,2,0.826,3,0.101,4,0.092,5,0.753,6,1.049,7,1.027,8,0.986,9,0.084,11,1.714,12,3.449,13,1.856,14,1.268,15,1.967,16,0.909,17,1.432,18,1.365,19,1.593,20,1.451,21,0.944,22,3.046,23,0.944,24,2.673,25,0.109,26,0.552,27,1.503,28,3.364,30,0.826,33,0.676,34,2.586,35,3.339,36,3.364,37,0.769,39,0.499,40,0.008,41,0.535,42,0.168,43,0.403,45,0.797,46,1.157,47,4.436,49,0.476,50,1.144,51,0.965,53,0.266,54,0.525,55,1.92,56,0.118,57,0.012,58,1.605,59,0.691,60,1.263,62,1.954,63,3.292,64,1.904,88,0.753,92,1.027,93,1.242,94,1.217,95,0.786,96,1.686,97,1.027,98,1.989,99,0.928,100,0.802,101,1.013,102,1.294,103,0.947,104,1.027,105,0.947,106,0.909,107,1.027,108,0.947,109,1.027,110,0.89,111,0.909,112,0.964,113,0.928,114,0.89,115,1.051,116,1.6,117,0.909,118,0.075,119,0.928,120,0.955,121,0.947,122,0.947,123,0.854,124,1.027,125,0.909,126,1.027,127,0.947,128,1.027,129,0.947,130,1.027,131,0.928,132,1.027,133,0.928,134,1.027,135,0.661,136,1.027,137,0.928,138,0.45,139,1.027,140,0.947,141,1.027,142,0.947,143,1.6,144,0.947,145,1.027,146,0.947,147,1.6,148,0.947,149,1.027,150,0.966,151,1.027,152,0.909,153,1.027,154,0.947,155,1.027,156,0.909,157,0.872,158,1.027,159,0.947,160,1.348,161,1.405,162,0.947,163,1.027,164,0.909,165,0.511,166,1.027,167,0.928,168,1.294,169,1.765,170,0.947,171,1.027,172,0.928,173,0.928,174,0.909,175,1.027,176,0.928,177,1.027,178,0.872,179,0.737,180,0.909,181,1.027,182,0.909,183,1.217,184,0.928,185,0.947,186,0.615,187,0.89,188,0.721,189,1.585,190,0.947,191,0.928,192,1.027,193,0.947,194,0.872,195,1.027,196,0.947,197,1.027,198,0.89,199,0.928,200,0.947,201,0.872,202,1.027,203,0.947,204,0.632,205,0.89,206,0.928,207,1.027,208,0.909,209,1.027,210,0.909,211,1.027,212,0.89,213,1.027,214,0.89,215,1.027,216,0.89,217,0.966,218,1.027,219,0.005,220,0.005,239,3.244,246,1.955,249,1.904,250,2.126,251,1.723,252,2.066,350,3.244,408,2.993,467,6.506,469,3.449,534,1.186,537,1.904,544,1.534,623,2.33,688,1.345,723,1.07,1098,3.535,1439,3.705,1471,3.449,1549,3.244,1564,3.449,2260,3.449,2272,3.449,2278,3.449,2815,3.244,2849,3.074,2879,2.801,3357,6.777,3358,6.204,5362,7.636,5363,8.074,5364,8.009,5365,7.649,5366,7.649,5367,7.649,5368,4.568,5369,7.115,5370,4.568,5371,4.568,5372,4.568,5373,6.245,5374,4.568,5375,6.245,5376,6.245,5377,4.568,5378,5.533]],["title/components/SideNavComponent.html",[0,0.084,190,0.945]],["body/components/SideNavComponent.html",[0,0.151,1,0.925,2,0.812,3,0.155,4,0.09,5,0.735,6,1.024,7,1.003,8,0.963,9,0.082,11,0.887,16,0.887,17,1.43,18,1.363,19,0.887,20,0.751,21,0.929,23,0.929,25,0.106,26,0.543,27,1.497,33,0.66,37,0.799,39,0.487,40,0.008,41,0.554,42,0.191,43,0.394,49,0.34,50,1.503,51,1.269,53,0.242,54,0.329,56,0.115,57,0.011,58,1.568,62,1.3,88,1.013,91,1.605,92,1.003,93,1.222,94,1.197,95,0.767,96,1.669,97,1.003,98,1.979,99,0.906,100,0.784,101,1.045,102,1.273,103,0.925,104,1.003,105,0.925,106,0.887,107,1.003,108,0.925,109,1.003,110,0.869,111,0.887,112,0.956,113,0.906,114,0.869,115,1.035,116,1.581,117,0.887,118,0.074,119,0.906,120,0.952,121,0.925,122,0.925,123,0.834,124,1.003,125,0.887,126,1.003,127,0.925,128,1.003,129,0.925,130,1.003,131,0.906,132,1.003,133,0.906,134,1.003,135,0.646,136,1.003,137,0.906,138,0.809,139,1.003,140,0.925,141,1.003,142,0.925,143,1.581,144,0.925,145,1.003,146,0.925,147,1.581,148,0.925,149,1.003,150,0.944,151,1.003,152,0.887,153,1.003,154,0.925,155,1.003,156,0.887,157,0.852,158,1.003,159,0.925,160,1.327,161,1.382,162,0.925,163,1.003,164,0.887,165,0.499,166,1.003,167,0.906,168,0.925,169,0.983,170,0.925,171,1.003,172,0.906,173,0.906,174,0.887,175,1.003,176,0.906,177,1.003,178,0.852,179,0.72,180,0.887,181,1.003,182,0.887,183,1.197,184,0.906,185,0.925,186,0.605,187,0.869,188,0.705,189,0.925,190,1.57,191,1.74,192,1.003,193,0.925,194,0.852,195,1.003,196,0.925,197,1.003,198,0.869,199,0.906,200,0.925,201,1.446,202,1.003,203,0.925,204,0.617,205,0.869,206,0.906,207,1.003,208,0.887,209,1.003,210,0.887,211,1.003,212,0.869,213,1.003,214,0.869,215,1.003,216,0.869,217,0.944,218,1.003,219,0.005,220,0.005,223,0.372,269,3.27,271,1.962,272,2.375,366,1.354,373,7.209,496,1.643,509,3.424,512,2.07,514,4.506,532,3.98,546,1.889,553,4.187,605,0.439,651,3.705,722,2.11,903,1.427,971,2.778,983,3.592,984,3.069,1007,1.86,1008,1.767,1009,1.86,1049,3.768,1050,3.768,1070,1.813,1172,2.263,1176,2.275,1193,1.465,1194,3.169,1231,2.945,1421,2.076,1633,1.86,1634,2.275,1672,3.953,2039,3.169,2198,4.855,2240,2.275,2243,5.444,2279,3.368,2641,2.435,2843,3.618,2916,3.768,2921,2.86,3110,5.444,3114,3.618,3115,3.169,3341,3.478,4563,3.618,4870,3.939,4878,5.444,4888,6.227,5379,7.875,5380,3.953,5381,6.144,5382,6.144,5383,5.444,5384,7.028,5385,6.144,5386,7.028,5387,7.028,5388,7.028,5389,7.028,5390,7.942,5391,7.028,5392,4.461,5393,6.144,5394,4.461,5395,4.461,5396,4.461,5397,6.144,5398,4.461,5399,4.461,5400,4.461,5401,4.461,5402,4.461,5403,4.461,5404,4.461,5405,4.461,5406,4.461,5407,4.461,5408,4.461,5409,7.573,5410,4.461,5411,4.461,5412,4.461,5413,4.461,5414,4.461,5415,4.461,5416,3.953]],["title/injectables/StateService.html",[529,1.09,553,2.404]],["body/injectables/StateService.html",[3,0.12,4,0.11,8,1.182,9,0.1,25,0.131,26,0.622,30,0.931,33,0.81,37,0.772,39,0.85,40,0.008,41,0.55,42,0.181,43,0.688,45,0.872,46,0.828,49,0.593,50,1.29,51,1.088,53,0.257,54,0.404,56,0.181,57,0.014,59,1.243,81,3.592,87,0.893,101,1.097,118,0.09,186,0.539,219,0.006,220,0.006,223,0.587,228,2.213,244,1.207,255,0.937,276,1.647,288,1.067,310,1.136,312,2.03,496,2.016,509,2.476,511,5.712,525,5.878,527,4.441,528,5.712,529,1.684,530,7.282,531,4.851,532,4.159,533,3.889,534,1.422,535,2.937,536,3.685,537,2.283,538,1.578,539,5.011,540,4.441,541,2.476,542,3.097,543,6.24,544,2.76,545,1.065,546,2.527,547,4.74,548,6.24,549,4.691,550,3.015,551,6.24,552,2.408,553,3.713,554,3.944,555,5.317,556,7.273,557,4.851,558,3.277,559,4.319,560,3.592,561,6.24,562,6.24,563,4.74,564,3.844,565,5.317,566,3.097,567,6.24,568,5.712,569,2.861,570,3.844,571,3.375,572,1.901,573,3.713,574,6.24,575,6.205,576,5.317,577,6.24,578,6.24,579,6.24,580,3.713,581,6.24,582,6.24,583,4.851,584,4.851,585,4.851,586,6.24,587,6.24,588,3.51,589,4.851,590,6.24,591,4.653,592,1.867,593,5.317,594,6.24,595,5.712,596,3.844,597,6.24,598,6.24,599,1.684,600,4.851,601,5.712,602,4.851,603,4.851,604,4.851,605,0.694,606,4.851,607,4.851,608,2.169,622,3.889,643,2.283,5417,7.042,5418,7.042,5419,7.042,5420,5.475,5421,5.475,5422,5.475]],["title/components/TextDisplayComponent.html",[0,0.084,193,0.945]],["body/components/TextDisplayComponent.html",[0,0.146,1,0.84,2,0.76,3,0.089,4,0.082,5,0.668,6,0.931,7,0.912,8,0.875,9,0.074,11,0.807,16,0.807,17,1.425,18,1.357,19,0.807,20,0.683,21,0.869,23,0.869,25,0.097,26,0.508,30,0.76,37,0.807,39,0.628,40,0.008,41,0.53,42,0.187,43,0.508,45,0.747,46,1.16,49,0.638,50,1.33,51,1.334,53,0.17,54,0.299,56,0.148,57,0.01,59,1.01,62,1.216,77,2.528,78,1.885,82,2.386,85,2.613,88,0.668,89,2.277,92,0.912,93,1.143,94,1.12,95,0.697,96,1.601,97,0.912,98,1.941,99,0.823,100,0.712,101,0.984,102,1.191,103,0.84,104,0.912,105,0.84,106,0.807,107,0.912,108,0.84,109,0.912,110,0.79,111,0.807,112,0.923,113,0.823,114,1.631,115,1.223,116,1.502,117,0.807,118,0.067,119,0.823,120,0.94,121,0.84,122,0.84,123,0.758,124,0.912,125,0.807,126,0.912,127,0.84,128,0.912,129,0.84,130,0.912,131,0.823,132,0.912,133,0.823,134,0.912,135,0.587,136,0.912,137,0.823,138,0.399,139,0.912,140,0.84,141,0.912,142,0.84,143,1.502,144,0.84,145,0.912,146,0.84,147,1.502,148,0.84,149,0.912,150,0.858,151,0.912,152,0.807,153,0.912,154,0.84,155,0.912,156,0.807,157,0.774,158,0.912,159,0.84,160,1.241,161,1.293,162,0.84,163,0.912,164,0.807,165,0.454,166,0.912,167,0.823,168,0.84,169,0.894,170,0.84,171,0.912,172,0.823,173,0.823,174,0.807,175,0.912,176,0.823,177,0.912,178,0.774,179,0.654,180,0.807,181,0.912,182,0.807,183,1.12,184,0.823,185,0.84,186,0.658,187,0.79,188,0.64,189,0.84,190,0.84,191,0.823,192,0.912,193,1.505,194,1.809,195,0.912,196,0.84,197,0.912,198,0.79,199,0.823,200,0.84,201,1.464,202,0.912,203,0.84,204,1.102,205,0.79,206,0.823,207,0.912,208,0.807,209,0.912,210,0.807,211,0.912,212,0.79,213,0.912,214,0.79,215,0.912,216,0.79,217,0.858,218,0.912,219,0.005,220,0.005,223,0.338,244,1.755,262,3.081,263,2.824,271,2.528,272,2.807,279,1.806,310,1.172,459,6.758,558,3.107,572,0.99,573,3.03,592,1.77,599,1.905,605,0.399,608,1.606,651,3.52,656,4.082,667,4.186,723,1.866,763,2.117,837,4.341,863,2.951,884,2.068,900,4.341,903,1.699,989,3.382,1003,4.657,1067,1.647,1070,1.647,1071,2.386,1100,2.803,1171,3.593,1172,2.675,1174,2.599,1175,2.003,1176,2.068,1177,2.754,1189,3.83,1191,2.528,1192,1.69,1193,1.331,1195,3.283,1417,3.52,1541,2.213,1633,2.396,1642,2.486,1652,1.943,1889,2.213,2068,3.254,2145,2.486,2639,2.599,2640,3.061,2641,3.137,2691,3.137,2692,3.382,2694,2.003,2709,5.093,2718,3.061,2739,2.486,2777,1.943,2782,2.213,3119,2.599,3581,2.88,4069,4.082,4160,5.916,4162,7.542,4210,5.093,4370,2.729,4519,3.061,4891,3.593,4897,3.288,5423,7.259,5424,3.288,5425,5.747,5426,6.676,5427,5.747,5428,6.676,5429,6.676,5430,7.263,5431,8.19,5432,6.676,5433,4.054,5434,5.916,5435,4.054,5436,4.054,5437,4.054,5438,5.747,5439,5.747,5440,4.054,5441,4.054,5442,4.054,5443,4.054,5444,4.054,5445,4.054,5446,4.054,5447,4.054,5448,4.054,5449,4.054,5450,4.054,5451,5.747,5452,4.054,5453,4.054,5454,5.747,5455,5.747,5456,4.054,5457,4.054,5458,4.054,5459,6.676,5460,4.054,5461,3.593,5462,3.593,5463,4.054,5464,4.054,5465,4.054]],["title/interfaces/TextFragment.html",[118,0.075,2224,3.069]],["body/interfaces/TextFragment.html",[0,0.149,3,0.131,4,0.12,9,0.109,14,1.207,15,2.051,17,0.88,18,0.842,21,0.899,23,0.899,25,0.142,26,0.655,27,1.001,40,0.008,41,0.548,42,0.163,49,0.645,50,1.089,51,0.919,53,0.257,54,0.439,56,0.191,57,0.015,59,1.122,60,1.644,87,0.851,94,1.159,115,1.468,118,0.123,138,0.586,152,1.183,194,1.617,219,0.006,220,0.006,228,2.331,244,1.635,255,0.716,288,1.159,310,0.96,313,2.85,366,1.31,384,2.689,427,3.246,512,1.751,526,1.577,534,1.544,536,4.002,537,2.479,541,2.689,544,2.492,553,3.912,573,3.135,605,0.586,612,3.246,614,3.033,677,4.994,681,3.499,805,3.366,809,1.91,818,4.002,900,3.366,1041,1.953,1100,1.91,1251,2.615,1401,3.499,1473,3.436,1475,3.813,1502,2.546,1508,3.831,1538,4.224,1907,3.647,2157,4.224,2166,3.033,2172,5.186,2173,4.224,2174,3.647,2175,4.224,2176,5.444,2177,5.867,2178,6.019,2179,6.019,2180,6.019,2181,6.561,2182,4.49,2183,4.994,2184,4.823,2185,4.795,2186,3.813,2187,4.224,2188,3.813,2189,5.746,2190,4.823,2191,4.823,2192,4.823,2193,4.823,2194,4.823,2195,4.49,2196,5.603,2197,4.823,2198,3.813,2199,4.823,2200,4.823,2201,3.647,2202,4.823,2203,4.823,2204,4.49,2205,4.002,2206,5.444,2207,4.49,2208,4.823,2209,4.823,2210,4.823,2211,4.823,2212,4.823,2213,4.823,2214,4.49,2215,4.823,2216,4.823,2217,4.823,2218,4.823,2219,6.019,2220,4.823,2221,4.823,2222,4.823,2223,4.224,2224,5.444]],["title/classes/TimeFormatter.html",[57,0.012,827,2.581]],["body/classes/TimeFormatter.html",[3,0.124,4,0.113,9,0.103,25,0.134,30,0.948,37,0.716,39,0.861,40,0.008,41,0.51,42,0.174,43,0.697,45,0.883,49,0.723,56,0.145,57,0.018,73,7.358,75,4.836,81,4.472,87,0.905,219,0.006,220,0.006,223,0.692,255,1.056,572,2.027,591,4.058,605,0.888,717,2.073,722,2.852,748,3.608,754,5.091,803,3.98,813,2.111,816,4.235,827,4.058,828,4.886,858,3.998,859,4.565,860,2.967,1063,2.421,1190,6.397,1661,3.656,1776,2.967,1846,4.595,2008,2.123,2353,5.324,2508,4.824,4034,6.091,4382,7.358,5216,4.987,5462,7.358,5466,4.987,5467,7.168,5468,7.168,5469,7.168,5470,7.168,5471,5.628,5472,8.766,5473,7.168,5474,7.168,5475,7.168,5476,7.168,5477,7.168,5478,7.168,5479,7.168,5480,7.168,5481,8.575,5482,7.168,5483,5.628,5484,6.351,5485,7.168,5486,8.908,5487,7.168,5488,7.168,5489,9.176,5490,5.628,5491,7.168,5492,5.813,5493,5.628,5494,7.168,5495,5.628,5496,7.168,5497,5.628,5498,5.628,5499,5.628,5500,5.628,5501,7.887,5502,5.628,5503,5.628,5504,7.168,5505,5.628,5506,5.628,5507,7.168,5508,7.168,5509,5.628,5510,5.628,5511,5.628,5512,5.628,5513,5.628,5514,5.628,5515,5.628,5516,5.628,5517,5.628]],["title/directives/TimelineCoalescedItemsDirective.html",[95,0.784,212,0.889]],["body/directives/TimelineCoalescedItemsDirective.html",[0,0.146,3,0.126,4,0.116,5,1.552,9,0.105,14,1.164,16,1.14,17,1.276,18,0.811,21,0.867,23,0.867,25,0.137,26,0.64,27,1.221,33,0.848,37,0.658,39,0.626,40,0.008,41,0.371,42,0.16,43,0.506,53,0.235,54,0.423,56,0.215,57,0.021,58,2.795,87,0.657,88,1.517,95,1.571,186,0.714,198,1.413,199,1.88,205,1.117,212,1.55,214,1.413,216,1.413,217,1.212,219,0.006,220,0.006,223,0.478,224,2.389,231,0.829,244,1.263,262,3.427,288,1.117,310,1.17,312,1.652,384,4.093,429,3.514,453,4.07,462,3.957,471,5.353,619,2.014,634,2.171,702,2.27,723,1.864,750,1.237,780,4.616,785,3.372,802,4.648,803,3.812,810,6.256,816,2.923,825,3.374,827,4.732,828,3.372,829,3.674,840,4.07,863,3.503,870,2.667,905,4.07,922,3.698,941,3.128,1058,3.021,1059,3.822,1149,3.128,1804,2.389,1841,3.244,2008,2.161,2042,3.372,2064,3.244,2879,3.514,3025,3.857,3054,2.923,3332,3.514,3334,3.674,3343,4.648,4030,5.126,4182,4.07,4791,4.07,5074,4.327,5518,6.311,5519,5.474,5520,5.73,5521,5.474,5522,5.474,5523,4.07,5524,4.327,5525,4.327,5526,4.327,5527,4.327,5528,4.327,5529,4.327,5530,4.327,5531,4.327,5532,6.005,5533,4.327,5534,5.474,5535,4.327,5536,4.327,5537,4.327]],["title/components/TimelineItemComponent.html",[0,0.084,198,0.889]],["body/components/TimelineItemComponent.html",[0,0.141,1,0.751,2,0.701,3,0.08,4,0.073,5,1.422,6,0.832,7,0.815,8,0.782,9,0.066,11,0.721,14,1.076,16,0.721,17,1.42,18,1.35,19,0.721,20,0.61,21,0.801,23,0.801,25,0.15,26,0.468,33,0.536,37,0.737,39,0.396,40,0.008,41,0.496,42,0.179,43,0.32,50,1.148,51,0.969,53,0.185,54,0.268,56,0.177,57,0.017,58,2.202,62,1.121,78,2.164,85,1.906,87,0.608,88,1.468,91,2.848,92,0.815,93,1.054,94,1.033,95,1.447,96,1.52,97,0.815,98,1.893,99,0.736,100,0.636,101,0.954,102,1.098,103,0.751,104,0.815,105,0.751,106,0.721,107,0.815,108,0.751,109,0.815,110,0.706,111,0.721,112,0.884,113,0.736,114,0.706,115,0.892,116,1.41,117,0.721,118,0.06,119,0.736,120,0.925,121,0.751,122,0.751,123,0.677,124,0.815,125,0.721,126,0.815,127,0.751,128,0.815,129,0.751,130,0.815,131,0.736,132,0.815,133,0.736,134,0.815,135,0.524,136,0.815,137,0.736,138,0.357,139,0.815,140,0.751,141,0.815,142,0.751,143,1.41,144,0.751,145,0.815,146,0.751,147,1.41,148,0.751,149,0.815,150,0.766,151,0.815,152,0.721,153,0.815,154,0.751,155,0.815,156,0.721,157,0.692,158,0.815,159,0.751,160,1.144,161,1.192,162,0.751,163,0.815,164,0.721,165,0.406,166,0.815,167,0.736,168,0.751,169,0.798,170,0.751,171,0.815,172,0.736,173,0.736,174,0.721,175,0.815,176,0.736,177,0.815,178,0.692,179,0.585,180,0.721,181,0.815,182,0.721,183,1.033,184,0.736,185,0.751,186,0.723,187,0.706,188,0.572,189,0.751,190,0.751,191,0.736,192,0.815,193,0.751,194,1.012,195,0.815,196,0.751,197,0.815,198,1.43,199,1.891,200,0.751,201,1.581,202,0.815,203,0.751,204,0.501,205,0.706,206,0.736,207,0.815,208,0.721,209,0.815,210,0.721,211,0.815,212,1.344,213,0.815,214,1.344,215,0.815,216,1.344,217,1.121,218,0.815,219,0.004,220,0.004,223,0.302,224,2.21,231,0.767,241,2.756,244,1.168,262,3.299,263,1.952,271,3.227,272,2.962,274,2.573,279,1.138,288,0.706,310,1.011,312,1.528,366,0.798,384,3.58,429,3.25,453,2.573,462,2.893,471,5.573,599,0.866,608,1.435,619,1.863,634,1.627,702,2.1,723,1.468,750,0.782,763,1.952,780,3.91,785,2.132,802,4.018,803,3.969,809,1.164,810,5.766,813,1.561,816,2.703,825,2.916,827,4.596,828,2.132,829,2.323,840,4.451,863,3.42,870,1.686,903,1.828,905,4.451,922,3.517,941,2.893,991,3.548,1058,2.794,1059,3.636,1067,3.217,1070,3.365,1071,4.058,1100,2.215,1109,1.977,1149,1.977,1172,1.952,1174,4.002,1175,2.619,1177,2.54,1178,3.764,1180,5.212,1191,2.331,1192,1.511,1193,2.6,1194,4.898,1197,4.299,1199,2.794,1272,2.702,1301,1.91,1541,1.977,1542,4.002,1545,2.051,1631,2.132,1633,1.511,1652,3.517,1667,3.407,1674,2.323,1739,4.451,1804,2.21,1841,3,1934,3.119,2008,1.999,2042,3.119,2064,3,2145,3.25,2295,2.938,2641,3.421,2688,2.735,2690,5.553,2691,3.421,2692,3.119,2693,3.21,2694,4.092,2777,2.54,2782,2.893,2791,3.21,2792,3.21,2879,3.25,2923,3,3025,3.567,3054,2.703,3332,2.222,3334,3.398,3577,2.573,3581,2.573,3708,6.11,4030,3.843,4182,3.764,4791,2.573,4803,2.938,4882,3.21,5416,5.553,5461,4.696,5518,4.732,5519,2.735,5521,5.206,5522,4.732,5523,3.764,5524,4.002,5525,4.732,5526,4.002,5527,4.732,5528,4.002,5529,4.732,5530,4.732,5531,2.735,5532,4.732,5533,2.735,5534,4.002,5535,2.735,5536,2.735,5537,2.735,5538,3.623,5539,5.3,5540,3.623,5541,3.623,5542,3.623,5543,3.623,5544,3.623,5545,3.623,5546,5.3,5547,3.623,5548,3.623,5549,3.623,5550,3.623,5551,3.623,5552,3.623,5553,4.696,5554,3.623,5555,3.623,5556,5.3,5557,3.623,5558,5.3,5559,3.623,5560,7.338,5561,3.623,5562,3.623,5563,3.623,5564,3.623,5565,3.623,5566,3.623,5567,3.623]],["title/directives/TimelineItemDeletedDirective.html",[95,0.784,214,0.889]],["body/directives/TimelineItemDeletedDirective.html",[0,0.146,3,0.126,4,0.115,5,1.551,9,0.105,14,1.16,16,1.136,17,1.274,18,0.808,21,0.864,23,0.864,25,0.136,26,0.639,27,1.218,33,0.845,37,0.657,39,0.624,40,0.008,41,0.37,42,0.159,43,0.505,53,0.235,54,0.422,56,0.215,57,0.021,58,2.791,87,0.655,88,1.516,95,1.57,186,0.782,198,1.548,199,1.879,205,1.113,212,1.41,214,1.548,216,1.41,217,1.208,219,0.006,220,0.006,223,0.476,224,2.382,231,0.827,244,1.259,262,3.426,288,1.113,310,1.281,312,1.647,384,4.09,429,3.503,453,4.057,462,3.949,471,5.345,619,2.007,634,2.168,702,2.263,723,1.861,750,1.233,780,4.613,785,3.361,802,4.639,803,3.806,810,6.118,816,2.914,825,3.367,827,4.726,828,3.361,829,3.662,840,4.057,863,3.5,870,2.658,905,4.057,922,3.691,941,3.118,1058,3.012,1059,3.815,1149,3.118,1804,2.382,1841,3.234,2008,2.155,2042,3.361,2064,3.234,2879,3.503,3025,3.845,3054,2.914,3332,3.503,3334,3.662,4030,5.12,4182,4.057,4791,5.139,5074,4.313,5518,6.304,5519,4.313,5521,5.996,5522,5.996,5523,4.057,5524,4.313,5525,4.313,5526,4.313,5527,4.313,5528,4.313,5529,4.313,5530,4.313,5531,4.313,5532,5.996,5533,4.313,5534,5.463,5535,4.313,5536,4.313,5537,4.313,5568,5.712,5569,5.712]],["title/directives/TimelineSingleItemDirective.html",[95,0.784,216,0.889]],["body/directives/TimelineSingleItemDirective.html",[0,0.146,3,0.126,4,0.116,5,1.552,9,0.105,14,1.164,16,1.14,17,1.276,18,0.811,21,0.867,23,0.867,25,0.137,26,0.64,27,1.221,33,0.848,37,0.658,39,0.626,40,0.008,41,0.371,42,0.16,43,0.506,53,0.235,54,0.423,56,0.215,57,0.021,58,2.795,87,0.657,88,1.517,95,1.571,186,0.714,198,1.413,199,1.88,205,1.117,212,1.413,214,1.413,216,1.55,217,1.534,219,0.006,220,0.006,223,0.478,224,2.389,231,0.829,244,1.263,262,3.427,288,1.117,310,1.17,312,1.652,384,4.093,429,3.514,453,4.07,462,3.957,471,5.353,619,2.014,634,2.171,702,2.27,723,1.864,750,1.237,780,4.616,785,3.372,802,4.648,803,3.812,810,6.256,816,2.923,825,3.374,827,4.732,828,3.372,829,3.674,840,4.07,863,3.503,870,2.667,905,4.07,922,3.698,941,3.128,1058,3.021,1059,3.822,1149,3.128,1804,2.389,1841,3.244,2008,2.161,2042,3.372,2064,3.244,2879,3.514,3025,3.857,3054,2.923,3332,3.514,3334,3.674,3342,5.078,4030,5.126,4182,4.07,4791,4.07,5074,4.327,5518,6.311,5519,4.327,5521,5.474,5522,5.474,5523,4.07,5524,4.327,5525,4.327,5526,4.327,5527,4.327,5528,4.327,5529,4.327,5530,4.327,5531,4.327,5532,6.005,5533,4.327,5534,5.474,5535,4.327,5536,4.327,5537,4.327,5570,5.078]],["title/components/TopToolbarComponent.html",[0,0.084,200,0.945]],["body/components/TopToolbarComponent.html",[0,0.15,1,0.916,2,0.807,3,0.097,4,0.089,5,0.729,6,1.015,7,0.994,8,0.954,9,0.081,11,0.879,16,0.879,17,1.43,18,1.363,19,0.879,20,1.27,21,0.923,23,0.923,25,0.146,26,0.539,27,1.479,30,0.807,33,0.654,36,3.318,37,0.762,39,0.483,40,0.008,41,0.53,42,0.174,43,0.39,45,0.683,46,0.923,50,1.118,51,0.944,53,0.248,54,0.326,55,1.359,56,0.114,57,0.011,59,0.668,62,1.732,87,0.507,88,0.729,89,2.419,91,2.196,92,0.994,93,1.214,94,1.19,95,0.76,96,1.662,97,0.994,98,1.976,99,0.898,100,0.776,101,1.02,102,1.265,103,0.916,104,0.994,105,0.916,106,0.879,107,0.994,108,0.916,109,0.994,110,0.861,111,0.879,112,0.953,113,0.898,114,0.861,115,1.028,116,1.573,117,0.879,118,0.073,119,0.898,120,0.951,121,0.916,122,0.916,123,0.826,124,0.994,125,1.391,126,0.994,127,0.916,128,0.994,129,0.916,130,0.994,131,0.898,132,0.994,133,0.898,134,0.994,135,0.64,136,0.994,137,0.898,138,0.435,139,0.994,140,0.916,141,0.994,142,0.916,143,1.573,144,0.916,145,0.994,146,0.916,147,1.573,148,0.916,149,0.994,150,0.935,151,0.994,152,0.879,153,0.994,154,0.916,155,0.994,156,0.879,157,0.844,158,0.994,159,0.916,160,1.318,161,1.373,162,0.916,163,0.994,164,0.879,165,0.495,166,0.994,167,0.898,168,0.916,169,0.974,170,0.916,171,0.994,172,0.898,173,0.898,174,0.879,175,0.994,176,0.898,177,0.994,178,0.844,179,0.713,180,0.879,181,0.994,182,0.879,183,1.19,184,0.898,185,0.916,186,0.601,187,0.861,188,0.698,189,1.265,190,0.916,191,1.607,192,0.994,193,0.916,194,0.844,195,0.994,196,0.916,197,0.994,198,0.861,199,0.898,200,1.563,201,1.694,202,0.994,203,0.916,204,0.968,205,0.861,206,0.898,207,0.994,208,0.879,209,0.994,210,0.879,211,0.994,212,0.861,213,0.994,214,0.861,215,0.994,216,0.861,217,0.935,218,0.994,219,0.005,220,0.005,223,0.369,244,1.345,262,1.628,269,2.841,288,0.861,313,2.926,350,3.14,371,6.935,408,2.119,466,3.917,467,3.337,522,6.684,534,1.148,537,1.843,544,2.349,546,1.359,566,2.685,569,2.481,599,1.057,612,3.332,623,4.038,654,4.952,688,1.302,702,1.751,723,1.431,742,2.711,763,2.248,813,2.331,878,4.337,898,4.337,903,1.42,1050,4.626,1051,3.456,1067,1.796,1070,2.481,1172,1.628,1174,2.761,1175,2.184,1176,3.114,1185,2.601,1193,1.451,1199,3.688,1549,3.14,1553,5.328,1633,1.843,1652,2.119,1667,3.017,1668,3.337,1674,2.834,1735,3.332,1850,4.109,2147,2.975,2185,3.456,2240,4.175,2246,4.61,2254,5.673,2259,3.917,2260,6.181,2267,5.41,2268,4.952,2269,5.41,2270,4.952,2271,5.41,2272,5.281,2278,3.337,2294,7.253,2694,2.184,2779,3.917,2811,4.61,2815,4.968,2849,4.109,2916,3.744,3054,3.114,3124,5.41,3951,4.952,4955,4.337,5378,5.41,5553,3.917,5571,7.576,5572,3.917,5573,7.543,5574,5.41,5575,6.994,5576,6.105,5577,7.543,5578,7.543,5579,6.994,5580,6.994,5581,4.42,5582,4.42,5583,4.42,5584,4.42,5585,4.42,5586,4.42,5587,4.42,5588,4.42,5589,4.42,5590,4.42]],["title/interfaces/User.html",[118,0.075,204,0.631]],["body/interfaces/User.html",[3,0.134,4,0.123,9,0.112,11,1.627,25,0.145,26,0.666,27,1.269,40,0.008,41,0.597,42,0.166,45,0.683,46,0.922,49,0.698,53,0.264,54,0.45,56,0.157,57,0.015,59,1.14,87,0.7,118,0.101,157,1.439,183,1.188,186,0.601,204,1.315,219,0.006,220,0.006,230,4.114,255,0.908,276,1.834,288,1.188,312,1.758,377,4.33,455,2.542,496,2.245,518,5.506,526,1.616,529,1.458,532,3.699,534,1.583,537,2.542,544,2.869,545,1.396,546,1.874,572,1.84,605,0.842,612,3.328,615,5.353,623,3.11,636,5.353,638,2.047,644,4.945,645,4.603,646,7.249,647,4.945,648,5.402,649,4.435,650,7.249,651,3.214,652,5.402,653,5.402,654,4.945,657,5.402,659,6.678,661,5.402,663,5.402,664,5.506,666,5.402,667,3.328,668,5.016,669,4.631,670,5.402,671,4.945,672,3.451,673,5.69,674,4.114,675,3.739,677,4.103,678,5.402,679,5.402,681,4.435,686,4.103,687,4.603,688,1.795,689,4.103,690,5.402,691,5.402,692,4.945,693,5.402,694,5.402,695,5.402,696,5.402,697,5.402,698,5.402,699,5.402,700,4.945,701,5.402,702,2.415,703,5.402,704,5.402,705,5.402,706,5.402,707,5.402,708,5.402,709,5.402,710,5.402,711,5.402,712,5.402,713,5.402,714,4.945,715,5.402]],["title/components/UserItemComponent.html",[0,0.084,203,0.945]],["body/components/UserItemComponent.html",[0,0.157,1,1.05,2,0.885,3,0.111,4,0.102,5,0.835,6,1.163,7,1.139,8,1.094,9,0.093,11,1.008,16,1.008,17,1.437,18,1.37,19,1.008,20,0.853,21,1.012,23,1.012,25,0.121,37,0.681,40,0.008,41,0.592,42,0.165,50,1.226,51,1.035,53,0.198,54,0.374,56,0.13,57,0.013,62,1.416,88,1.236,92,1.139,93,1.332,94,1.305,95,0.871,96,1.758,97,1.139,98,2.027,99,1.029,100,0.89,101,1.037,102,1.387,103,1.05,104,1.139,105,1.05,106,1.008,107,1.139,108,1.05,109,1.139,110,0.987,111,1.008,112,0.999,113,1.029,114,0.987,115,1.127,116,1.687,117,1.008,118,0.084,119,1.029,120,0.967,121,1.05,122,1.05,123,0.947,124,1.139,125,1.008,126,1.139,127,1.05,128,1.139,129,1.05,130,1.139,131,1.029,132,1.139,133,1.029,134,1.139,135,0.733,136,1.139,137,1.029,138,0.499,139,1.139,140,1.05,141,1.139,142,1.05,143,1.687,144,1.05,145,1.139,146,1.05,147,1.687,148,1.05,149,1.139,150,1.072,151,1.139,152,1.008,153,1.139,154,1.05,155,1.139,156,1.008,157,0.967,158,1.139,159,1.05,160,1.445,161,1.506,162,1.05,163,1.139,164,1.008,165,0.567,166,1.139,167,1.029,168,1.05,169,1.116,170,1.05,171,1.139,172,1.029,173,1.029,174,1.008,175,1.139,176,1.029,177,1.139,178,0.967,179,0.817,180,1.008,181,1.139,182,1.008,183,1.305,184,1.029,185,1.05,186,0.66,187,0.987,188,0.8,189,1.05,190,1.05,191,1.029,192,1.139,193,1.05,194,0.967,195,1.139,196,1.05,197,1.139,198,0.987,199,1.029,200,1.05,201,0.967,202,1.139,203,1.653,204,1.297,205,0.987,206,1.029,207,1.139,208,1.008,209,1.139,210,1.008,211,1.139,212,0.987,213,1.139,214,0.987,215,1.139,216,0.987,217,1.072,218,1.139,219,0.006,220,0.006,223,0.422,231,0.969,244,1.758,259,5.43,538,1.46,599,1.601,674,4.093,723,1.869,763,2.465,788,1.592,971,3.027,1100,2.791,1633,2.791,1634,3.415,1728,5.661,1761,4.292,2577,6.47,2696,3.598,2790,3.825,3054,3.415,3332,3.106,3333,6.081,3334,4.292,5570,4.489,5591,7.068,5592,7.498,5593,5.066,5594,6.694,5595,5.066,5596,6.694,5597,5.066]],["title/injectables/UserNotifyService.html",[529,1.09,984,1.762]],["body/injectables/UserNotifyService.html",[3,0.168,4,0.125,9,0.114,25,0.148,30,1.007,33,0.917,37,0.801,39,0.9,40,0.008,41,0.533,42,0.181,43,0.728,45,0.853,46,1.152,49,0.684,53,0.225,54,0.458,56,0.16,57,0.016,59,1.152,201,1.454,204,1.243,219,0.006,220,0.006,223,0.687,224,3.175,276,1.866,288,1.208,310,1.387,420,4.404,421,6.223,478,6.972,482,4.883,529,1.483,542,3.35,572,2.012,615,5.409,643,2.585,689,4.173,863,3.493,944,3.385,983,3.887,984,2.943,1008,3.406,1011,2.501,1041,3.108,1192,3.175,1235,4.157,1464,3.51,1819,5.126,2481,5.494,2498,6.177,2500,6.177,2501,6.177,2502,6.177,2514,5.891,3123,6.748,5097,4.682,5598,7.617,5599,5.494,5600,7.616,5601,7.616,5602,6.201,5603,6.201,5604,7.616,5605,6.201,5606,7.616,5607,6.748,5608,7.616,5609,7.616,5610,6.201,5611,6.201,5612,6.201,5613,6.201,5614,6.201,5615,6.201,5616,6.201,5617,6.201,5618,6.201]],["title/injectables/UsersService.html",[529,1.09,5060,3.443]],["body/injectables/UsersService.html",[3,0.142,4,0.13,9,0.119,25,0.154,30,1.033,33,1.156,37,0.762,39,0.853,40,0.008,41,0.543,42,0.192,43,0.69,45,0.875,49,0.595,53,0.248,54,0.478,56,0.166,57,0.016,59,1.181,120,0.671,179,1.441,219,0.007,220,0.007,276,1.946,413,3.529,529,1.868,535,3.167,538,1.864,552,2.844,592,1.714,605,0.827,636,6.194,643,2.696,674,4.264,722,2.221,759,2.844,787,2.381,788,2.032,874,2.627,1100,2.077,1365,4.058,1391,4.882,1392,5.245,1508,3.796,1548,4.791,1581,3.805,1714,3.965,1771,2.326,1971,4.593,3894,4.593,3900,5.963,5060,5.899,5156,5.245,5157,5.245,5619,5.73,5620,6.466,5621,8.72,5622,8.395,5623,8.72,5624,6.466,5625,7.812,5626,6.466,5627,7.812,5628,6.466,5629,7.812,5630,6.466,5631,6.466,5632,6.923,5633,6.466,5634,6.466,5635,6.466,5636,6.466,5637,6.466,5638,6.466,5639,6.466,5640,5.73,5641,6.466,5642,6.466]],["title/classes/Vector.html",[57,0.012,3760,3.443]],["body/classes/Vector.html",[0,0.136,2,0.555,3,0.092,4,0.181,9,0.077,25,0.1,26,0.52,27,1.59,30,0.779,33,1.007,37,0.83,39,0.922,40,0.008,41,0.546,42,0.191,43,0.746,45,1.013,46,0.891,49,0.32,50,1.351,51,0.91,53,0.124,57,0.017,70,2.291,76,5.569,87,1.032,100,1.364,112,0.709,138,0.58,165,0.993,186,0.58,219,0.005,220,0.005,223,0.715,255,0.996,291,2.074,310,0.95,545,0.635,550,1.797,560,2.141,565,3.169,570,2.291,572,2.019,592,1.561,599,1.409,605,0.67,634,1.09,651,2.213,702,2.333,717,1.546,725,2.663,734,6.884,739,3.466,774,2.291,814,1.797,821,3.405,823,1.898,833,2.422,869,4.447,884,2.141,903,1.742,912,3.405,920,2.291,924,3.169,938,3.077,1031,2.574,1051,2.376,1063,2.6,1064,3.624,1067,2.393,1068,3.614,1069,2.982,1090,2.982,1091,1.583,1172,2.169,1238,2.881,1239,1.953,1243,2.012,1260,2.012,1283,4.608,1534,4.447,1608,2.291,1619,2.47,1751,3.612,1786,4.571,1848,3.964,1849,3.169,1850,2.825,1851,3.964,1866,2.982,1870,4.183,1970,4.34,1989,2.982,2040,2.982,2046,4.447,2068,2.376,2145,5.072,2913,3.405,2914,3.169,3030,5.569,3160,3.405,3249,5.86,3261,5.137,3500,3.405,3543,4.447,3576,5.518,3728,2.982,3729,7.38,3730,3.405,3741,3.719,3742,5.219,3745,4.777,3754,3.719,3758,3.964,3760,7.32,3762,3.719,3764,3.719,3765,5.219,3766,3.405,3767,3.719,3768,3.719,3770,5.219,3771,5.219,3772,5.219,3773,5.219,3774,3.719,3775,3.719,3776,7.137,3777,5.983,3778,6.536,3779,5.219,3780,5.219,3781,3.719,3782,3.719,3783,3.719,3784,3.719,3785,3.719,3786,3.719,3787,3.719,3788,3.719,3789,3.719,3790,3.719,3791,3.719,3792,3.405,3793,2.982,3794,3.719,3795,3.719,3796,3.719,3797,3.719,3798,6.029,3799,5.219,3800,3.719,3801,3.719,3802,3.719,3803,5.219,3804,3.719,3805,6.532,3806,3.719,3807,3.719,3808,3.719,3809,3.719,3810,3.719,3811,5.983,3812,3.719,3813,3.719,3814,3.719,3815,3.719,3816,3.719,3817,3.169,3818,3.719,3819,3.719,3820,3.719,3821,3.719,3822,3.719,3823,3.719,3824,3.719,3825,3.719,3826,3.719,3827,5.219,4735,3.719,5383,3.719,5643,5.89,5644,5.89,5645,6.804,5646,6.804,5647,7.376,5648,6.804,5649,6.804,5650,6.804,5651,5.89,5652,4.198,5653,4.198,5654,4.198,5655,4.198,5656,4.198,5657,4.198,5658,4.198,5659,5.89,5660,4.198,5661,4.198,5662,5.89,5663,4.198,5664,4.198,5665,4.198,5666,4.198,5667,4.198,5668,4.198,5669,4.198,5670,4.198,5671,4.198,5672,4.198,5673,4.198,5674,4.198,5675,4.198,5676,4.198,5677,5.89,5678,5.89,5679,5.89,5680,4.198,5681,4.198,5682,4.198,5683,4.198,5684,4.198,5685,4.198,5686,4.198,5687,4.198]],["title/coverage.html",[5688,5.527]],["body/coverage.html",[0,0.174,1,0.633,5,0.769,9,0.056,10,2.708,11,0.928,12,2.308,13,3.588,40,0.008,42,0.067,57,0.022,62,0.987,72,2.171,74,2.171,75,1.874,76,3.524,85,3.388,87,0.351,95,1.237,99,0.621,101,0.846,102,1.313,103,0.633,105,0.633,108,0.633,110,0.596,111,0.608,113,0.621,114,0.909,115,1.067,117,0.608,118,0.152,119,0.621,120,0.777,121,0.633,122,0.633,125,0.608,127,0.633,129,0.633,131,0.621,133,0.621,135,0.442,137,0.621,138,0.886,140,0.633,142,0.633,144,0.633,146,0.633,148,0.633,150,0.647,152,0.608,154,0.633,157,0.583,159,0.633,162,0.633,164,0.608,167,0.621,168,0.633,170,0.633,172,0.621,173,0.621,174,0.608,176,0.621,178,0.583,180,0.608,182,0.608,184,0.621,185,0.633,187,0.596,188,1.001,189,0.633,190,0.633,193,0.633,196,0.633,198,0.596,200,0.633,203,0.633,204,0.423,206,0.621,208,0.608,210,0.608,212,0.596,214,0.596,216,0.596,219,0.004,220,0.004,221,2.708,222,2.171,275,2.708,302,2.308,337,4.592,366,0.674,367,2.308,369,2.308,371,2.479,373,2.479,378,3.331,406,4.17,407,3.908,423,2.746,434,2.171,439,4.317,440,4.063,443,1.73,448,2.479,451,2.479,455,1.946,456,2.308,459,2.308,464,2.479,467,2.308,469,2.308,471,4.265,473,2.479,481,2.479,498,2.308,500,2.171,502,2.308,503,3.315,525,2.308,527,3.785,529,2.123,539,1.73,553,1.611,592,2.423,608,1.211,609,2.308,611,2.708,623,1.559,644,3.785,686,3.141,716,1.559,718,2.708,750,0.66,756,2.708,757,2.708,766,1.126,775,1.026,782,1.465,802,1.96,803,4.208,804,3.785,827,1.73,828,1.798,831,1.465,903,1.931,970,2.708,984,1.181,1008,1.211,1047,4.501,1048,4.501,1057,2.171,1067,1.242,1091,3.349,1097,2.057,1102,2.171,1183,2.308,1186,4.592,1190,4.592,1203,1.798,1204,4.097,1205,4.903,1207,1.798,1208,1.465,1209,1.465,1211,3.699,1216,1.668,1217,1.611,1218,1.798,1219,1.874,1220,1.874,1221,1.874,1222,1.874,1223,1.874,1224,1.874,1225,1.874,1226,1.874,1257,1.73,1273,1.73,1302,1.874,1303,2.708,1304,4.613,1364,2.308,1365,4.283,1366,2.708,1385,2.057,1391,2.308,1397,2.308,1400,1.798,1449,2.308,1469,1.181,1482,1.559,1544,2.708,1547,2.171,1550,1.96,1568,2.992,1647,2.708,1648,2.479,1649,2.708,1661,1.559,1662,4.848,1676,5.037,1678,1.96,1741,1.874,1742,2.642,1744,1.874,1745,1.874,1748,2.171,1749,2.171,1757,2.171,1760,2.171,1766,2.171,1865,2.308,1932,1.96,1960,1.96,2094,2.708,2104,2.308,2113,2.057,2114,1.798,2142,4.275,2172,1.96,2173,4.021,2174,3.472,2175,4.021,2182,2.308,2183,2.057,2224,2.057,2225,2.171,2226,2.479,2233,2.708,2280,2.308,2302,4.748,2303,4.948,2331,1.668,2336,1.96,2337,1.874,2465,5.835,2482,2.479,2489,2.479,2490,2.479,2499,2.479,2503,2.479,2508,2.057,2557,5.11,2569,4.185,2571,4.784,2575,2.479,2577,2.479,2578,2.479,2584,2.479,2592,2.479,2594,2.479,2598,2.708,2634,4.948,2635,2.708,2643,2.708,2663,2.057,2699,2.708,2794,5.536,2800,2.479,2850,2.057,2852,2.479,2924,2.308,2925,2.708,2993,2.308,2994,2.708,2995,2.479,2996,2.708,3024,2.708,3125,2.308,3126,2.708,3127,2.479,3128,2.308,3129,2.708,3150,2.308,3151,2.708,3152,2.479,3153,2.708,3189,2.708,3226,2.308,3227,4.592,3228,4.592,3257,2.171,3314,2.708,3329,2.862,3332,4.59,3350,5.14,3360,2.479,3364,2.479,3406,4.275,3409,2.308,3559,2.708,3577,4.501,3587,2.479,3588,2.708,3692,2.708,3709,3.785,3728,2.171,3729,4.592,3730,4.592,3758,3.141,3760,2.308,3805,2.479,3859,5.173,3909,2.708,3954,3.785,3955,3.524,3977,2.708,3984,2.057,3985,4.376,3989,1.96,4089,1.96,4156,3.315,4157,2.308,4282,2.708,4293,2.479,4294,4.135,4307,2.708,4370,2.057,4535,2.708,4683,2.708,4757,2.708,4790,7.413,4802,2.708,4817,4.613,4818,2.708,4894,3.785,4924,3.785,4984,2.308,4988,2.708,5005,2.708,5041,2.308,5042,2.708,5057,2.708,5059,2.708,5060,2.308,5070,4.021,5071,4.021,5150,4.135,5161,2.708,5242,2.708,5362,2.708,5379,2.708,5380,2.708,5423,2.479,5424,2.479,5466,2.708,5484,2.708,5571,2.708,5572,2.708,5591,2.708,5598,2.708,5599,2.708,5619,2.708,5688,2.708,5689,3.056,5690,7.717,5691,9.139,5692,6.337,5693,5.661,5694,7.484,5695,3.056,5696,3.056,5697,3.056,5698,6.825,5699,7.484,5700,5.661,5701,3.056,5702,3.056,5703,9.163,5704,7.484,5705,6.825,5706,4.667,5707,3.056,5708,3.056,5709,6.825,5710,4.667,5711,3.056,5712,5.661,5713,5.536,5714,2.479,5715,2.479,5716,3.056,5717,3.056,5718,6.337,5719,2.708,5720,3.056,5721,4.667,5722,5.615,5723,6.337,5724,3.056,5725,3.056,5726,3.056,5727,3.056,5728,3.056,5729,3.056,5730,4.667,5731,4.667,5732,2.708,5733,3.056,5734,3.056,5735,3.056,5736,4.667,5737,3.056,5738,3.056,5739,3.056,5740,3.056,5741,3.056,5742,3.056,5743,3.056,5744,3.056,5745,3.056,5746,5.661,5747,3.056,5748,4.667,5749,4.667,5750,3.056,5751,3.056,5752,3.056,5753,3.056,5754,4.667,5755,3.056,5756,3.056,5757,3.056,5758,3.056,5759,5.661,5760,3.056,5761,3.056,5762,3.056,5763,3.056,5764,3.056,5765,4.667,5766,3.056,5767,3.056,5768,3.056,5769,2.708,5770,3.056,5771,3.056,5772,7.195,5773,3.056,5774,3.056,5775,3.056,5776,3.056,5777,3.056,5778,3.056,5779,3.056,5780,3.056,5781,3.056,5782,4.667,5783,3.056,5784,3.056,5785,3.056,5786,4.135,5787,4.135,5788,3.056,5789,3.056,5790,3.056,5791,3.056,5792,4.135,5793,4.135,5794,4.135,5795,2.708,5796,3.056]],["title/dependencies.html",[327,3.693,5797,3.801]],["body/dependencies.html",[40,0.008,54,0.496,160,1.451,188,1.262,219,0.007,220,0.007,251,2.534,272,2.596,286,6.035,287,5.678,327,4.521,384,3.859,385,5.953,391,5.953,397,3.953,400,5.449,420,6.273,421,5.072,426,6.483,427,3.667,429,4.12,430,5.449,432,5.449,439,3.667,446,6.483,496,2.474,534,1.745,1213,3.22,1422,3.22,2206,4.521,2323,4.307,2324,4.521,2469,4.772,2477,5.953,3128,5.072,3996,4.772,4029,4.12,5798,6.718,5799,9.321,5800,6.718,5801,7.993,5802,6.718,5803,6.718,5804,6.718,5805,6.718,5806,6.718,5807,6.718,5808,6.718,5809,6.718,5810,6.718,5811,6.718,5812,6.718,5813,6.718,5814,6.718,5815,6.718,5816,6.718,5817,6.718,5818,6.718,5819,6.718,5820,6.718,5821,6.718,5822,6.718,5823,6.718,5824,6.718,5825,6.718,5826,6.718,5827,6.718,5828,6.718,5829,6.718,5830,6.718,5831,6.718,5832,6.718]],["title/miscellaneous/enumerations.html",[5833,2.558,5834,4.863]],["body/miscellaneous/enumerations.html",[0,0.168,2,0.881,25,0.159,40,0.008,51,1.438,101,0.783,115,1.122,118,0.149,120,0.826,138,0.838,165,0.952,179,1.075,204,0.922,219,0.007,220,0.007,228,2.499,231,0.964,232,2.639,276,2.005,366,1.753,443,3.772,455,2.778,509,3.013,512,1.962,546,2.048,554,2.93,759,3.498,824,4.732,832,4.057,833,2.892,838,2.778,861,4.732,863,2.707,1005,4.732,1041,2.188,1091,2.513,1093,5.1,1195,2.852,1204,3.013,1205,4.814,1228,4.086,1229,4.086,1230,4.086,1231,3.193,1244,3.636,1296,4.878,1297,4.68,1298,4.086,1299,3.636,1300,4.086,1301,3.513,1365,3.1,1422,3.193,1473,2.575,1581,3.92,1804,3.316,2047,3.513,2164,4.086,2166,3.398,2317,3.398,2664,4.271,2871,4.484,2872,4.484,3859,4.271,3863,6.005,3864,5.03,3865,5.03,3896,5.03,3897,5.03,3898,5.03,3899,5.03,3900,4.732,4156,4.732,4157,6.005,5070,4.732,5071,4.732,5078,6.005,5079,5.03,5833,4.484,5834,5.903,5835,6.451,5836,6.451,5837,5.903,5838,6.662]],["title/index.html",[25,0.091,2756,3.083,5839,3.368]],["body/index.html",[0,0.165,2,1.201,9,0.107,30,0.971,40,0.006,42,0.129,68,4.741,101,0.687,120,0.833,204,0.809,219,0.007,220,0.006,226,4.414,228,2.307,276,1.759,284,5.838,327,3.934,512,2.646,514,4.707,526,1.55,546,1.797,560,2.982,569,2.375,593,4.414,608,2.909,612,3.191,634,1.518,638,2.465,649,3.44,702,2.316,720,4.414,750,1.262,774,3.191,792,3.748,808,3.871,813,2.162,838,2.437,841,3.082,858,4.152,860,3.871,873,4.741,938,3.32,948,4.741,952,3.082,961,3.585,989,3.44,1109,3.191,1231,3.519,1232,3.44,1243,3.847,1253,3.191,1299,3.191,1315,3.934,1419,4.152,1421,2.72,1422,2.802,1478,3.934,1485,3.934,1617,3.748,1650,2.982,1715,4.414,1739,4.152,1862,4.152,1932,5.76,1939,5.402,2034,3.585,2035,3.934,2064,4.91,2150,5.701,2292,3.748,2313,5.209,2379,3.748,2416,3.934,2602,3.585,2756,4.741,2775,5.18,2781,4.741,2858,4.707,2998,4.941,3030,4.414,3249,3.748,3331,5.18,3451,5.18,3544,5.18,3766,4.741,3793,4.152,3817,4.414,3867,6.381,3877,4.414,3983,5.955,4316,5.18,4525,5.18,4556,5.18,4838,7.287,4895,3.934,5105,5.98,5156,4.741,5157,4.741,5196,4.741,5271,6.506,5274,5.18,5839,5.18,5840,5.18,5841,5.846,5842,7.46,5843,5.18,5844,5.18,5845,5.18,5846,5.846,5847,5.846,5848,5.846,5849,5.846,5850,5.846,5851,5.18,5852,5.18,5853,7.342,5854,7.112,5855,8.026,5856,5.846,5857,5.846,5858,5.846,5859,5.955,5860,5.846,5861,5.846,5862,7.342,5863,8.026,5864,5.846,5865,5.846,5866,8.026,5867,6.506,5868,7.342,5869,7.342,5870,7.342,5871,5.846,5872,5.846,5873,5.846,5874,5.846,5875,7.342,5876,5.846,5877,5.846,5878,5.846,5879,5.846,5880,5.846,5881,5.846,5882,5.846,5883,5.846,5884,5.846,5885,5.846,5886,5.846,5887,5.846,5888,5.955,5889,7.112,5890,6.506,5891,5.846,5892,7.342,5893,5.846,5894,8.026,5895,5.846,5896,5.846,5897,5.846,5898,5.846,5899,5.846,5900,5.846,5901,5.846,5902,5.846,5903,7.342,5904,5.846,5905,5.846,5906,5.18,5907,5.846,5908,5.846,5909,5.846,5910,5.846,5911,5.846,5912,5.846,5913,5.846,5914,5.18,5915,5.846,5916,5.846]],["title/modules.html",[326,3.825]],["body/modules.html",[40,0.007,138,0.833,219,0.007,220,0.007,287,6.005,318,6.857,325,5.584,326,4.536,332,5.254,333,4.978,334,4.978,571,4.052,5917,8.455,5918,9.106]],["title/overview.html",[4870,3.999]],["body/overview.html",[1,1.538,2,0.656,40,0.008,99,1.507,103,1.792,105,1.538,108,1.538,110,1.446,111,1.476,113,1.507,117,1.476,119,1.507,121,1.538,122,1.792,125,1.476,127,1.792,129,1.538,131,1.507,133,1.507,135,1.251,137,1.756,140,1.792,142,1.792,144,1.792,146,1.792,148,1.792,150,1.829,152,1.476,154,1.538,157,1.417,159,1.538,162,1.538,164,1.476,167,1.507,168,1.538,170,1.792,172,1.507,173,1.507,174,1.476,176,1.507,178,1.65,180,1.476,182,1.476,184,1.507,185,1.792,187,1.446,189,1.538,190,1.538,193,1.538,196,1.538,198,1.446,200,1.538,203,1.792,205,0.967,206,1.756,208,1.72,210,1.72,212,1.446,214,1.446,216,1.446,219,0.006,220,0.006,313,2.378,325,7.353,326,3.043,327,4.444,328,4.397,329,4.397,330,4.397,331,4.397,332,5.271,333,4.995,334,6.546,335,4.985,336,3.043,484,3.339,494,3.746,526,1.315,609,3.746,643,2.069,717,1.827,813,1.461,1183,3.746,2545,4.397,2546,4.397,2547,4.397,4370,3.339,4870,3.181,5722,4.397,5732,4.397,5919,4.962,5920,4.962]],["title/routes.html",[494,4.709]],["body/routes.html",[40,0.007,219,0.007,220,0.007,494,5.689]],["title/miscellaneous/typealiases.html",[5833,2.558,5921,5.488]],["body/miscellaneous/typealiases.html",[13,3.08,25,0.147,40,0.008,42,0.202,49,0.578,88,1.014,112,1.032,114,1.747,188,1.197,194,1.447,204,0.852,219,0.006,220,0.006,366,1.356,378,3.621,443,3.484,459,4.646,571,2.949,592,2.273,803,3.633,804,4.991,805,3.484,836,6.716,989,3.621,1029,3.16,1094,5.384,1208,2.949,1209,2.949,1211,2.949,1212,2.266,1304,4.86,1308,3.359,1365,3.989,1385,4.142,1417,3.244,1469,2.378,1473,2.378,1548,5.57,1580,6.148,1676,4.142,1743,4.137,1747,5.384,1771,2.213,1797,3.945,1804,2.566,1806,3.041,1846,3.945,1861,4.646,1889,3.359,2031,4.646,2032,4.646,2033,4.646,2034,3.773,2035,4.142,2036,5.384,2115,4.46,2173,4.371,2174,3.773,2175,5.384,2177,5.529,2185,3.484,2189,4.371,2196,5.723,2206,5.101,2223,4.371,2224,4.142,2226,4.991,2227,5.723,2230,7.279,2302,3.621,2303,5.824,2310,5.101,2325,5.529,2327,5.101,2328,5.101,2388,5.101,2389,3.773,2413,5.101,2569,4.648,2718,4.646,2739,3.773,2923,4.291,3590,3.773,3709,4.991,3859,3.945,3955,5.723,3967,3.484,3985,4.86,4088,5.77,4156,4.371,4157,5.723,5423,4.991,5424,6.148,5434,6.716,5713,4.991,5714,6.148,5715,6.148,5719,5.452,5769,7.279,5833,4.142,5835,6.148,5836,6.148,5837,5.452,5922,6.153,5923,7.58,5924,7.58,5925,8.965,5926,5.452,5927,7.58,5928,6.153,5929,6.153,5930,7.58,5931,7.801,5932,7.58,5933,7.58,5934,7.58,5935,6.153]],["title/interfaces/userMock.html",[118,0.075,4984,3.443]],["body/interfaces/userMock.html",[0,0.138,3,0.112,4,0.103,9,0.093,14,1.034,15,1.857,17,0.754,18,0.721,20,0.858,21,0.77,23,0.77,25,0.122,26,0.593,27,1.266,29,2.781,36,2.955,40,0.008,41,0.435,42,0.176,43,0.754,46,0.77,49,0.705,53,0.27,54,0.376,55,1.566,56,0.173,57,0.013,59,1.016,60,1.408,64,2.124,72,3.618,80,2.37,87,0.863,96,1.123,99,1.034,101,1.082,102,1.657,118,0.111,174,1.013,183,0.993,184,1.034,204,1.222,219,0.006,220,0.006,222,3.618,225,2.517,228,1.601,231,1.235,246,2.876,251,1.921,255,0.963,260,4.132,288,0.993,296,2.517,366,1.918,408,2.442,413,2.781,434,3.618,435,4.132,484,3.429,496,1.876,503,3.618,514,5.328,526,1.351,534,1.323,535,1.921,538,1.469,539,3.804,541,2.304,544,2.256,545,1.392,569,2.07,591,3.804,596,2.781,608,2.018,619,2.642,638,1.711,674,4.364,741,4.132,759,2.241,813,1.5,814,2.181,823,3.039,826,2.241,863,2.07,865,2.469,884,2.598,896,3.266,903,1.034,995,3.429,1006,3.266,1109,2.781,1626,3.846,1641,3.846,1653,5.073,1669,5.073,1714,4.12,2034,3.124,2171,3.429,2292,3.266,2341,3.124,2508,3.429,2552,3.846,2555,5.45,2556,3.846,2563,3.846,2602,3.124,2702,3.804,2741,3.964,2873,6.537,2875,5.096,3079,3.429,3341,2.884,3407,4.773,3409,5.677,3413,4.132,3417,4.132,3420,4.132,3426,4.132,3465,6.098,3468,5.45,3469,4.132,3473,5.45,3474,4.132,3477,5.45,3506,5.45,3509,4.132,3510,4.132,3511,4.132,3512,4.132,3515,4.132,3516,4.132,3517,4.132,3758,3.429,4340,5.073,4370,3.429,4407,3.846,4506,4.132,4817,3.266,4829,5.073,4847,3.846,4894,4.132,4895,3.429,4896,4.514,4897,5.45,4898,3.618,4899,5.954,4900,5.954,4901,4.514,4902,4.514,4903,4.514,4904,4.514,4905,4.514,4908,4.514,4910,6.662,4911,4.514,4916,4.514,4917,5.954,4919,4.514,4920,6.983,4921,4.514,4922,4.514,4923,4.514,4924,4.132,4925,4.514,4926,4.514,4930,4.514,4931,4.514,4932,4.514,4933,4.514,4934,4.514,4935,4.514,4936,4.514,4937,4.514,4938,4.514,4939,4.514,4940,4.514,4941,4.514,4944,4.514,4946,5.45,4952,4.514,4953,4.514,4954,4.514,4955,3.618,4956,4.514,4957,4.514,4958,5.954,4959,5.954,4960,5.954,4961,4.514,4962,4.514,4963,4.514,4964,4.514,4965,4.514,4966,4.514,4967,4.514,4968,4.514,4969,4.514,4970,4.514,4971,4.514,4972,4.514,4973,5.954,4974,4.514,4975,4.514,4976,4.514,4977,4.514,4978,4.514,4979,4.514,4980,4.514,4981,4.514,4982,4.132,4983,4.514,4984,5.073]],["title/miscellaneous/variables.html",[3115,3.898,5833,2.558]],["body/miscellaneous/variables.html",[0,0.063,25,0.081,27,0.574,29,3.905,40,0.008,41,0.433,42,0.208,45,0.382,49,0.621,50,1.688,51,1.425,87,0.768,91,1.226,101,0.401,106,0.678,115,1.435,120,0.628,133,1.228,138,0.499,156,1.332,165,0.912,179,1.358,186,0.336,201,0.651,204,0.701,219,0.004,220,0.004,228,1.071,231,0.493,244,1.333,255,0.806,276,1.025,279,2.248,296,2.504,302,3.825,305,2.291,306,1.797,307,1.634,310,1.155,312,1.461,326,2.09,337,2.764,366,1.994,392,3.02,396,4.489,439,4.093,440,2.185,473,4.109,474,3.02,475,3.02,481,4.109,482,3.248,483,3.02,484,2.294,485,3.02,490,2.185,512,2.287,519,2.421,535,1.286,545,1.334,546,1.048,549,1.738,571,1.634,605,0.499,634,1.316,638,1.144,674,3.301,686,4.506,758,1.738,759,1.499,773,2.294,775,2.031,777,2.228,803,1.634,809,2.867,814,1.459,883,3.02,903,1.029,944,1.86,961,4.106,988,1.929,1041,1.119,1047,2.421,1048,3.599,1063,1.89,1064,1.421,1068,1.459,1091,1.286,1096,2.584,1098,1.929,1102,3.599,1103,2.573,1121,2.185,1192,1.421,1204,1.541,1205,2.868,1227,1.586,1234,1.459,1235,2.765,1238,1.144,1247,1.286,1257,2.868,1260,3.209,1301,1.797,1365,2.814,1407,2.421,1422,1.634,1469,2.588,1473,2.337,1474,3.147,1489,3.825,1510,3.825,1522,3.599,1548,2.09,1577,3.301,1586,1.684,1609,4.892,1628,1.86,1629,2.584,1676,2.294,1678,3.248,1703,6.402,1708,3.825,1713,2.868,1740,2.573,1742,1.929,1745,3.107,1747,2.421,1748,3.599,1749,3.599,1750,6.74,1751,3.107,1752,3.825,1753,2.671,1754,2.573,1755,2.421,1756,4.566,1757,3.599,1759,2.573,1760,3.599,1761,2.185,1762,2.573,1763,2.573,1764,2.573,1765,2.421,1766,3.599,1767,3.599,1771,2.574,1775,2.421,1804,1.421,1806,1.684,1819,2.294,1841,1.929,1926,3.107,1951,6.341,1960,2.185,1967,2.573,1968,2.573,1995,3.41,2047,1.797,2095,2.764,2155,2.764,2280,3.825,2329,2.185,2365,2.185,2385,1.929,2386,1.929,2387,2.006,2414,2.185,2465,2.764,2469,2.421,2482,4.905,2484,2.764,2485,3.02,2486,3.02,2487,3.02,2488,3.02,2489,4.109,2490,2.764,2491,2.294,2492,3.02,2493,2.764,2494,3.02,2495,3.02,2496,3.02,2497,3.02,2498,4.109,2499,4.109,2500,2.764,2501,2.764,2502,2.764,2503,4.109,2504,3.02,2505,3.02,2506,3.02,2507,3.02,2508,2.294,2542,4.489,2557,2.421,2571,2.573,2634,2.185,2663,3.41,2664,2.185,2669,2.421,2794,4.905,2800,4.905,2820,3.02,2850,4.07,2851,3.02,2852,5.43,2853,6.023,2854,5.358,2855,3.248,2856,3.02,2857,3.02,2858,2.185,2859,4.109,2860,2.764,2861,3.02,2862,5.932,2863,3.02,2864,6.34,2865,4.587,2866,4.587,2867,3.02,2868,4.587,2869,6.34,2870,3.02,2871,2.294,2872,3.41,2873,2.421,2874,4.489,2875,2.09,2876,2.294,2877,4.489,3115,2.421,3329,4.106,3350,4.905,3360,4.109,3361,3.02,3364,4.109,3365,3.02,3485,3.02,3492,4.109,3856,3.02,3859,2.185,3893,4.566,3894,2.421,3895,3.825,4215,3.02,5166,4.489,5640,7.458,5713,2.764,5714,4.905,5715,4.905,5786,3.02,5787,4.489,5792,3.02,5793,3.02,5794,3.02,5795,4.489,5833,3.41,5835,5.803,5836,4.109,5926,5.358,5931,5.932,5936,6.047,5937,6.047,5938,3.408,5939,5.066,5940,5.066,5941,5.066,5942,3.408,5943,3.408,5944,3.408,5945,5.066,5946,5.066,5947,5.066,5948,5.066,5949,5.066,5950,5.066,5951,5.066,5952,5.066,5953,3.408,5954,3.408,5955,3.408,5956,3.408,5957,3.408,5958,3.408,5959,3.408,5960,7.499,5961,6.047,5962,6.047,5963,6.047,5964,3.408,5965,5.066,5966,3.408,5967,3.408,5968,3.408,5969,3.408,5970,3.408,5971,3.408,5972,5.066,5973,5.066,5974,5.066,5975,3.408,5976,3.408,5977,8.295,5978,5.066,5979,5.066,5980,5.066,5981,3.408,5982,3.408,5983,3.408,5984,3.408,5985,3.408,5986,3.408,5987,3.408,5988,3.408,5989,3.408,5990,3.408,5991,3.408,5992,6.047,5993,6.047,5994,6.047,5995,3.408,5996,3.408,5997,3.408,5998,3.408,5999,3.408,6000,3.408,6001,3.408,6002,3.408,6003,3.408,6004,3.408,6005,3.408,6006,3.408,6007,3.408,6008,3.408,6009,3.408,6010,3.408,6011,3.408,6012,3.408,6013,3.408,6014,3.408,6015,3.408,6016,3.408,6017,3.408,6018,3.408,6019,3.408,6020,7.155,6021,3.408,6022,3.408,6023,3.408,6024,3.408,6025,3.408,6026,3.408,6027,3.408,6028,3.408,6029,3.408,6030,3.408,6031,6.695,6032,3.408,6033,3.408,6034,3.408,6035,3.408,6036,3.408,6037,3.408,6038,3.408,6039,3.408,6040,3.408,6041,3.408,6042,3.408,6043,3.408,6044,3.408,6045,3.408]],["title/additional-documentation/using-gropius.html",[284,2.193,638,1.094,1650,1.662,2858,2.089]],["body/additional-documentation/using-gropius.html",[0,0.166,2,1.155,11,1.029,18,0.732,19,1.35,20,0.871,29,3.705,40,0.007,41,0.54,42,0.167,43,0.669,62,1.701,81,2.639,87,0.983,88,0.853,89,3.309,91,2.442,100,0.909,101,1.104,112,1.052,118,0.148,120,0.98,138,0.669,156,1.35,169,1.14,191,1.051,199,1.696,204,1.209,219,0.006,220,0.006,223,0.696,224,2.157,225,3.744,226,6.073,230,2.824,279,2.38,284,3.482,294,4.822,304,5.126,305,2.34,306,3.579,307,3.855,317,4.352,366,1.953,413,2.824,429,4.163,455,3.695,490,4.352,509,3.426,512,2.773,514,4.352,526,2.009,535,1.952,545,0.782,546,2.087,549,3.463,550,3.243,559,5.122,560,3.463,573,2.728,588,3.317,614,2.639,615,3.675,632,2.276,634,1.763,638,3.01,664,4.569,674,3.705,702,2.05,724,3.045,750,1.117,837,2.929,862,3.354,863,2.102,874,2.758,875,4.585,921,5.357,922,2.639,938,3.637,950,3.482,952,2.728,953,2.728,971,3.07,1001,5.713,1025,3.173,1029,2.83,1043,6.015,1050,5.122,1051,2.929,1066,2.215,1070,2.102,1100,1.662,1232,3.995,1247,3.034,1306,3.675,1419,4.822,1420,3.482,1442,4.197,1443,3.675,1473,3.109,1485,3.482,1508,3.07,1536,3.675,1576,4.197,1581,3.995,1585,3.482,1586,3.974,1628,2.824,1629,3.463,1650,2.639,1753,3.579,1803,3.482,1804,2.157,1928,2.639,1935,2.557,1995,3.482,2008,2.858,2043,6.073,2064,2.929,2150,3.675,2152,3.907,2186,3.317,2187,3.675,2235,4.585,2341,4.163,2343,3.317,2379,4.352,2531,4.585,2739,4.163,2766,4.197,2826,3.173,2875,4.646,3055,4.197,3341,4.289,3358,4.197,3408,4.585,3453,4.585,3867,3.675,3951,4.197,3967,2.929,4317,4.585,4465,3.907,4490,6.145,4586,4.585,4612,4.585,4646,4.585,4661,4.197,4664,6.015,4803,4.197,4838,4.197,4870,4.857,4898,4.822,4920,5.126,4955,4.822,5116,3.907,5162,6.145,5363,4.585,5492,4.197,5574,4.585,5607,4.585,5852,6.713,5867,4.585,5888,5.506,5890,4.585,5906,4.585,6046,5.174,6047,5.174,6048,7.576,6049,5.174,6050,5.174,6051,5.174,6052,6.788,6053,7.576,6054,5.174,6055,5.174,6056,5.174,6057,5.174,6058,5.174,6059,5.174,6060,6.788,6061,5.174,6062,5.174,6063,5.174,6064,5.174,6065,6.788,6066,5.174,6067,5.174,6068,4.585,6069,6.015,6070,6.788,6071,5.174,6072,5.174]],["title/additional-documentation/managing-gropius.html",[284,2.193,638,1.094,2858,2.089,2998,2.193]],["body/additional-documentation/managing-gropius.html",[0,0.124,2,0.998,4,0.152,18,1.135,19,1.344,20,0.865,30,0.679,37,0.467,40,0.006,41,0.332,42,0.183,50,0.941,57,0.017,68,4.167,87,0.775,88,0.847,100,0.902,101,1.025,112,0.619,118,0.085,125,1.022,138,0.506,157,0.981,165,0.976,180,1.022,186,0.506,191,1.043,219,0.006,220,0.006,224,3.148,225,3.731,226,5.102,228,2.812,230,2.804,231,1.371,310,0.829,313,2.462,324,3.458,333,3.458,334,3.458,338,4.167,366,1.973,397,4.443,439,2.804,476,5.987,479,4.552,490,3.294,500,3.649,512,1.99,514,4.332,529,1.229,542,2.26,545,1.142,550,2.893,553,2.709,560,2.621,563,4.548,569,2.745,570,3.688,575,3.879,588,3.294,591,4.274,601,4.167,614,2.621,620,4.841,623,2.621,634,1.334,638,2.269,717,1.892,720,3.879,722,2.593,739,3.023,759,3.892,766,1.892,772,5.48,773,4.548,774,2.804,775,2.269,777,3.528,782,3.619,788,2.123,807,4.552,808,3.562,809,1.65,816,3.447,831,3.844,837,2.908,841,2.709,862,2.539,867,6.506,874,3.259,898,3.649,921,3.15,938,3.056,941,2.804,974,2.972,1028,3.458,1066,2.199,1072,2.908,1096,2.621,1109,2.804,1233,3.023,1238,2.269,1247,2.549,1251,2.26,1299,3.688,1302,3.15,1308,3.688,1422,4.29,1423,3.294,1469,1.986,1474,2.26,1492,3.976,1502,2.199,1575,3.562,1617,3.294,1650,3.851,1663,4.552,1673,3.649,1678,3.294,1680,5.102,1702,3.879,1714,3.15,1765,3.649,1777,3.879,1780,3.649,1785,3.879,1807,3.879,1831,3.879,1837,3.879,1843,3.294,1848,3.458,1864,3.879,1928,3.447,1931,4.799,1932,5.673,1992,5.102,2008,1.938,2034,3.15,2041,3.879,2042,3.023,2047,4.719,2064,2.908,2104,5.701,2131,4.167,2166,2.621,2187,3.649,2246,3.879,2250,4.167,2323,4.332,2469,3.649,2529,4.552,2537,4.552,2601,6.124,2602,5.62,2603,6.459,2605,4.552,2689,3.458,2739,3.15,2849,3.458,2875,4.63,2914,3.879,2917,4.552,2998,3.458,3073,4.552,3087,4.167,3407,3.649,3839,4.552,3866,4.799,3928,6.69,3966,4.552,3983,4.167,4005,3.649,4011,4.799,4533,4.552,4624,4.552,4870,3.294,4898,4.799,4955,3.649,5105,5.697,5129,3.879,5162,4.167,5196,4.167,5492,4.167,5523,3.649,5632,4.552,5840,4.552,5842,6.69,5843,5.987,5844,4.552,5845,5.987,5851,4.552,5854,4.552,5888,4.167,5889,4.552,5914,4.552,6068,5.987,6069,4.552,6073,5.137,6074,5.137,6075,5.137,6076,5.137,6077,8.849,6078,5.137,6079,5.137,6080,5.137,6081,5.137,6082,5.137,6083,5.137,6084,5.137,6085,5.137,6086,6.757,6087,5.137,6088,5.137,6089,5.137,6090,5.137,6091,5.137,6092,5.137,6093,5.137,6094,6.757,6095,5.137,6096,5.137,6097,5.137,6098,5.137,6099,5.137,6100,5.137,6101,5.137,6102,5.137,6103,5.137,6104,5.137,6105,5.137,6106,5.137,6107,5.137,6108,5.137,6109,5.137,6110,5.137,6111,5.137,6112,5.137,6113,5.137,6114,5.137,6115,5.137,6116,5.137,6117,5.137,6118,5.137,6119,5.137,6120,5.137,6121,5.137,6122,5.137,6123,5.137,6124,5.137,6125,5.137,6126,5.137,6127,5.137,6128,5.137,6129,5.137,6130,5.137]],["title/additional-documentation/contributors.html",[638,1.276,2858,2.437,5859,3.083]],["body/additional-documentation/contributors.html",[40,0.007,219,0.007,220,0.007,2313,4.352,5859,5.999,6131,7.396,6132,7.396,6133,7.396,6134,7.396,6135,7.396,6136,7.396,6137,7.396,6138,7.396,6139,7.396,6140,7.396,6141,7.396,6142,7.396,6143,7.396,6144,7.396,6145,7.396,6146,7.396]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["0",{"_index":903,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["0..255",{"_index":3369,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.0.12",{"_index":5826,"title":{},"body":{"dependencies.html":{}}}],["0.0.5",{"_index":5812,"title":{},"body":{"dependencies.html":{}}}],["0.06",{"_index":2642,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{}}}],["0.08",{"_index":5361,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.1",{"_index":2695,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/QueryComponent.html":{}}}],["0.10.2",{"_index":5832,"title":{},"body":{"dependencies.html":{}}}],["0.114",{"_index":3398,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.12",{"_index":2693,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["0.15",{"_index":2771,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["0.175",{"_index":5556,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["0.2",{"_index":3349,"title":{},"body":{"components/IssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.27",{"_index":5359,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.27.0",{"_index":5820,"title":{},"body":{"dependencies.html":{}}}],["0.299",{"_index":3396,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3",{"_index":3404,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.3em",{"_index":3853,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["0.5",{"_index":2697,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["0.54",{"_index":1672,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/SideNavComponent.html":{}}}],["0.587",{"_index":3397,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["0.5em",{"_index":2779,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TopToolbarComponent.html":{}}}],["0.6",{"_index":5357,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["0.6.2",{"_index":5817,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":2790,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["0.8em",{"_index":3347,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["0.9",{"_index":4733,"title":{},"body":{"interfaces/Positions.html":{}}}],["0/1",{"_index":5691,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5745,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5741,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5708,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5740,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5699,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5690,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5721,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":5720,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5783,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5718,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5748,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5731,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":1533,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["000000",{"_index":1470,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["005eff",{"_index":3122,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["00ba39",{"_index":2791,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["01",{"_index":5476,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["01t19:44:04.813z",{"_index":5473,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["02t12:27:58.192z",{"_index":5485,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["0xff).tostring(16)).slice",{"_index":1535,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["1",{"_index":813,"title":{"interfaces/DialogData-1.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/TimeFormatter.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["1)[0",{"_index":2892,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["1.14.1",{"_index":5829,"title":{},"body":{"dependencies.html":{}}}],["1.1em",{"_index":5239,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["1.2em",{"_index":3348,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.3.3",{"_index":5830,"title":{},"body":{"dependencies.html":{}}}],["1.4em",{"_index":3346,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["1.5",{"_index":5326,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["1/1",{"_index":5703,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":5739,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5782,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":5744,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5742,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":5737,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5706,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5772,"title":{},"body":{"coverage.html":{}}}],["1/39",{"_index":5770,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5700,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5760,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5723,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5730,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5746,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5729,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1661,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["10.1.0",{"_index":5822,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":5728,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":5743,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":85,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["1000",{"_index":5503,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["10000",{"_index":5612,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["100px",{"_index":2783,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/QueryComponent.html":{}}}],["109",{"_index":3579,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["10px",{"_index":3119,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["11",{"_index":5484,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["11pt",{"_index":3582,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["11px",{"_index":1179,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["12",{"_index":1190,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["12px",{"_index":1674,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["13.2.1",{"_index":5825,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1186,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["14/15",{"_index":5751,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":5753,"title":{},"body":{"coverage.html":{}}}],["14px",{"_index":5560,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["15.2.0",{"_index":5815,"title":{},"body":{"dependencies.html":{}}}],["15.7.2",{"_index":5819,"title":{},"body":{"dependencies.html":{}}}],["15/16",{"_index":5711,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":5774,"title":{},"body":{"coverage.html":{}}}],["15/18",{"_index":5707,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":83,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["15px",{"_index":1180,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["16",{"_index":5722,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16/17",{"_index":5725,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1541,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["17",{"_index":5767,"title":{},"body":{"coverage.html":{}}}],["17.2",{"_index":4744,"title":{},"body":{"interfaces/Positions.html":{}}}],["17/17",{"_index":5773,"title":{},"body":{"coverage.html":{}}}],["17px",{"_index":3555,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["18px",{"_index":4883,"title":{},"body":{"components/ProjectListComponent.html":{},"components/QueryComponent.html":{}}}],["195",{"_index":3557,"title":{},"body":{"components/IssueListComponent.html":{}}}],["1]?.id",{"_index":6017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1fr",{"_index":2298,"title":{},"body":{"components/FrameComponent.html":{}}}],["1px",{"_index":2691,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["2",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["2.0.0",{"_index":5806,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":5550,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["2.6.0",{"_index":5818,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":5759,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5693,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":5738,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5781,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":5733,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":5749,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1183,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"classes/LayoutNode.html":{},"coverage.html":{},"overview.html":{}}}],["200",{"_index":1121,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["200px",{"_index":2293,"title":{},"body":{"components/FrameComponent.html":{}}}],["201",{"_index":3558,"title":{},"body":{"components/IssueListComponent.html":{}}}],["2021",{"_index":5472,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["20px",{"_index":1194,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["21",{"_index":5920,"title":{},"body":{"overview.html":{}}}],["217",{"_index":3580,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["21:44:04",{"_index":5477,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["23",{"_index":5757,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":5507,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["24px",{"_index":1173,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/LoginComponent.html":{}}}],["25",{"_index":1662,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"coverage.html":{}}}],["255",{"_index":2789,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{}}}],["26px",{"_index":5557,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["27",{"_index":5779,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":5559,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["28",{"_index":5732,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["29",{"_index":5777,"title":{},"body":{"coverage.html":{}}}],["2d",{"_index":3770,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["2px",{"_index":2692,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["3",{"_index":2292,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["3.1.2",{"_index":5811,"title":{},"body":{"dependencies.html":{}}}],["3.5.5",{"_index":5805,"title":{},"body":{"dependencies.html":{}}}],["3/10",{"_index":5763,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":5768,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":5698,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5790,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":5747,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":5736,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":5697,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":5695,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":74,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["300",{"_index":5415,"title":{},"body":{"components/SideNavComponent.html":{}}}],["300px",{"_index":2772,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["31",{"_index":5510,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["33",{"_index":5694,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":3281,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["35px",{"_index":5547,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["36px",{"_index":2688,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/ProjectListComponent.html":{},"components/SetEditorComponent.html":{},"components/TimelineItemComponent.html":{}}}],["37/59",{"_index":5762,"title":{},"body":{"coverage.html":{}}}],["38px",{"_index":1184,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["3f3f3f",{"_index":4824,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["3px",{"_index":1185,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["4",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"overview.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["4.0.16",{"_index":5809,"title":{},"body":{"dependencies.html":{}}}],["4.0.4",{"_index":5813,"title":{},"body":{"dependencies.html":{}}}],["4/17",{"_index":5758,"title":{},"body":{"coverage.html":{}}}],["4/27",{"_index":5717,"title":{},"body":{"coverage.html":{}}}],["4/4",{"_index":5709,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4757,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["400",{"_index":1119,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["4000",{"_index":5614,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["400px",{"_index":264,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{}}}],["401",{"_index":2522,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["42",{"_index":5696,"title":{},"body":{"coverage.html":{}}}],["43px",{"_index":3554,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["44px",{"_index":3117,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["45",{"_index":3280,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["46px",{"_index":1188,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["48px",{"_index":2920,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["4px",{"_index":1176,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{}}}],["5",{"_index":3758,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["5/5",{"_index":5712,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":5705,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3577,"title":{},"body":{"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{}}}],["500",{"_index":1761,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":1767,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["500px",{"_index":79,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["50px",{"_index":1197,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["51",{"_index":5919,"title":{},"body":{"overview.html":{}}}],["56px",{"_index":3855,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["57.75",{"_index":4740,"title":{},"body":{"interfaces/Positions.html":{}}}],["58",{"_index":1544,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"coverage.html":{}}}],["5em",{"_index":5460,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["5px",{"_index":1545,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TimelineItemComponent.html":{}}}],["6",{"_index":4370,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["6.5.4",{"_index":5827,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":5789,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":5701,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":5755,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":5771,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":75,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"coverage.html":{}}}],["600",{"_index":1635,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["60000",{"_index":959,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["600px",{"_index":265,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["60px",{"_index":5463,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["62",{"_index":5761,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":5784,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":1675,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/ProjectHeaderComponent.html":{}}}],["66",{"_index":5692,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1542,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["7",{"_index":72,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["7/11",{"_index":5785,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":5791,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":5756,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1130,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["75",{"_index":5754,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1181,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{}}}],["8",{"_index":2508,"title":{},"body":{"modules/GraphQLModule.html":{},"components/ProjectMembersComponent.html":{},"classes/TimeFormatter.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["8.2.2",{"_index":5823,"title":{},"body":{"dependencies.html":{}}}],["8/27",{"_index":5778,"title":{},"body":{"coverage.html":{}}}],["8/29",{"_index":5780,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":5766,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":3750,"title":{},"body":{"classes/LayoutNode.html":{}}}],["81",{"_index":5726,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":5704,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4535,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["85px",{"_index":4832,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["87",{"_index":5752,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":5765,"title":{},"body":{"coverage.html":{}}}],["8em",{"_index":5459,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["8px",{"_index":1189,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["9",{"_index":4924,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["9.0.0",{"_index":5824,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":6075,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["9.1.13",{"_index":5799,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":5801,"title":{},"body":{"dependencies.html":{}}}],["9.3.0",{"_index":5821,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5764,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":5727,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":76,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["93",{"_index":5710,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":5724,"title":{},"body":{"coverage.html":{}}}],["99999",{"_index":888,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["999999",{"_index":5552,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["9px",{"_index":1187,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["_",{"_index":3216,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["__typename",{"_index":3864,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["ababab",{"_index":5148,"title":{},"body":{"components/QueryComponent.html":{}}}],["abcdef",{"_index":6111,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["aborting",{"_index":1616,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["above",{"_index":2186,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["absolute",{"_index":2690,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["absoluterotation",{"_index":4425,"title":{},"body":{"interfaces/Positions.html":{}}}],["abstract",{"_index":1810,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{}}}],["abstractions",{"_index":6118,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["accept",{"_index":2506,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":19,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessed",{"_index":1777,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessible",{"_index":1807,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["accessing",{"_index":6095,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["accessors",{"_index":656,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["accesstokendialogcomponent",{"_index":1,"title":{"components/AccessTokenDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["according",{"_index":616,"title":{},"body":{"guards/AuthGuard.html":{}}}],["accordion",{"_index":3830,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["account",{"_index":5162,"title":{},"body":{"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["account_circle",{"_index":5378,"title":{},"body":{"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["account_tree",{"_index":4878,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["acting",{"_index":3788,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["action",{"_index":1033,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["actions",{"_index":266,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/Positions.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["activated",{"_index":2346,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{}}}],["activatedroute",{"_index":2702,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["activatedroutesnapshot",{"_index":626,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":2843,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SideNavComponent.html":{}}}],["activecategories",{"_index":2345,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["activecategories.includes(category",{"_index":2352,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["activecategories.push(key",{"_index":2977,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activecategories}).pipe",{"_index":2981,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["activeitemcontent",{"_index":5530,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["activepredicates",{"_index":2798,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["actual",{"_index":1883,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["actual_component",{"_index":218,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["actually",{"_index":988,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":100,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["add(other",{"_index":5653,"title":{},"body":{"classes/Vector.html":{}}}],["addablemembers",{"_index":4963,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableuser.id",{"_index":4968,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addableusers",{"_index":4904,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addcoalesceitems(coalescelist",{"_index":932,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addconsumedinterface",{"_index":2928,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterface(component",{"_index":2942,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterface(componentid",{"_index":3193,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["addconsumedinterfacegql",{"_index":2935,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["addconsumedinterfacemutation",{"_index":2934,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["added",{"_index":814,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["addedtocomponentevent",{"_index":847,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addedtolocationevent",{"_index":850,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addeduser1",{"_index":4919,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser1.de",{"_index":4921,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2",{"_index":4922,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser2.de",{"_index":4923,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3",{"_index":4925,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addeduser3.de",{"_index":4926,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["adding",{"_index":1781,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["addinterfacetocomponent(offeredbyid",{"_index":4449,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuecommentinput",{"_index":3644,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuefoldernodes(node",{"_index":4682,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuefolders(node",{"_index":4657,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuegroupcontainer(node",{"_index":4666,"title":{},"body":{"interfaces/Positions.html":{}}}],["addissuetolocationgql",{"_index":3623,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationinput",{"_index":3633,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addissuetolocationmutation",{"_index":3622,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addition",{"_index":6046,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["additional",{"_index":2858,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["additionally",{"_index":3025,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["additionalsearchstring",{"_index":3533,"title":{},"body":{"components/IssueListComponent.html":{}}}],["additions",{"_index":1511,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["addlocationinput",{"_index":3635,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addmemberdialogref",{"_index":4961,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addmemberdialogref.afterclosed().subscribe(data",{"_index":4965,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addpredicateafter",{"_index":2803,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addpredicateafter(index",{"_index":2818,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["addprojectmemberdialogcomponent",{"_index":99,"title":{"components/AddProjectMemberDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["adds",{"_index":896,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["addself",{"_index":5643,"title":{},"body":{"classes/Vector.html":{}}}],["addself(other",{"_index":5656,"title":{},"body":{"classes/Vector.html":{}}}],["addsinglecoalesceitem",{"_index":943,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["addsubscriber(subscriber",{"_index":1904,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["addtolocation",{"_index":3594,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["addtolocation(addlocationinput",{"_index":3632,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["adjusted",{"_index":3400,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["administrator",{"_index":261,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["affect",{"_index":4238,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected",{"_index":2101,"title":{},"body":{"injectables/DataService.html":{},"components/NodeDetailsComponent.html":{}}}],["affected.push",{"_index":4242,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push('deleting",{"_index":4245,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affected.push(affectedinterface",{"_index":4240,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affectedinterface",{"_index":4235,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["affecting",{"_index":5179,"title":{},"body":{"components/RegisterComponent.html":{}}}],["afteralertclose",{"_index":1561,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afterclosed().subscribe((close",{"_index":1597,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["afternodejoinedgroup",{"_index":3233,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodejoinedgroup(group",{"_index":3239,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afternodeleftgroup",{"_index":3234,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["afternodeleftgroup(group",{"_index":3244,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["afterviewinit",{"_index":825,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["afterwards",{"_index":4025,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["again",{"_index":4521,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["against",{"_index":1817,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["agnostic",{"_index":6105,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["ago",{"_index":5486,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["aka",{"_index":873,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["alert('todo",{"_index":4813,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["aliases",{"_index":5922,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1191,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["allcomponentslist",{"_index":1450,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["allicons",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["alllabelslist",{"_index":2810,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["allnodes",{"_index":3765,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["allow",{"_index":2343,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["allowed",{"_index":744,"title":{},"body":{"classes/CCIMSValidators.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors",{"_index":3298,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('bottom",{"_index":3304,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('left",{"_index":3303,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('right",{"_index":3300,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add('top",{"_index":3301,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allowedanchors.add(groupnode.position",{"_index":3299,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["allows",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{}}}],["alo",{"_index":2367,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["along",{"_index":5892,"title":{},"body":{"index.html":{}}}],["already",{"_index":774,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["always",{"_index":2038,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["amend",{"_index":1972,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amount",{"_index":1996,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["amounts",{"_index":2065,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["analysing",{"_index":5909,"title":{},"body":{"index.html":{}}}],["anchors",{"_index":3169,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["angular",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"directives/ItemDirective.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["angular/animations",{"_index":5798,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":5800,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["angular/cdk/overlay",{"_index":1087,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/portal",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["angular/cdk/table",{"_index":2559,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/cdk/tree",{"_index":2561,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/common",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["angular/common/locales/en",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":5802,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":54,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/forms",{"_index":251,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["angular/http",{"_index":2475,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["angular/icons",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material",{"_index":5803,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["angular/material/checkbox",{"_index":2574,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/dialog",{"_index":55,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/expansion",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/icon",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/input",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/list",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/menu",{"_index":2581,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/paginator",{"_index":2556,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/progress",{"_index":2591,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/material/select",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sidenav",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/slide",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/sort",{"_index":2563,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/table",{"_index":2552,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["angular/material/tabs",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/theming",{"_index":3114,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["angular/material/toolbar",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["angular/material/tooltip",{"_index":2588,"title":{},"body":{"modules/GraphsModule.html":{}}}],["angular/platform",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":496,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["animation",{"_index":3856,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":2281,"title":{},"body":{"components/FrameComponent.html":{}}}],["animations.ts",{"_index":5787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["another",{"_index":3030,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"index.html":{}}}],["ant",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["antd",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["antd/i18n",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["antd/icon",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["antdesignicons",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antdesignicons[key",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["any).__typename",{"_index":908,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueLocationComponent.html":{}}}],["anything",{"_index":2153,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["anyway",{"_index":2918,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["anywhere",{"_index":4491,"title":{},"body":{"interfaces/Positions.html":{}}}],["apart",{"_index":3885,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["api",{"_index":759,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["api.service",{"_index":3209,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["api.service.ts",{"_index":2925,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["api.service.ts:24",{"_index":2940,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:42",{"_index":2946,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:68",{"_index":2960,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:80",{"_index":2943,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["api.service.ts:89",{"_index":2958,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["apis",{"_index":6084,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["apiservice",{"_index":3192,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apiurl",{"_index":5946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apollo",{"_index":2469,"title":{},"body":{"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["apollo's",{"_index":5155,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["apollo/client",{"_index":5804,"title":{},"body":{"dependencies.html":{}}}],["apollo/client/core",{"_index":2473,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/core/apolloclient",{"_index":2483,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/client/link/error",{"_index":2479,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo/link",{"_index":2477,"title":{},"body":{"modules/GraphQLModule.html":{},"dependencies.html":{}}}],["apollo_named_options",{"_index":2466,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollo_options",{"_index":2467,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclientoptions",{"_index":2470,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apolloclients",{"_index":2487,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["apollolink",{"_index":2471,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink.from([basic",{"_index":2534,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["app.component",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["app/auth/authentication.service",{"_index":1549,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["app/components/cache",{"_index":2582,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/cursor",{"_index":2566,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/issue",{"_index":2570,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/item.directive",{"_index":786,"title":{},"body":{"components/CacheNodeComponent.html":{},"modules/GraphsModule.html":{},"components/SetEditorComponent.html":{}}}],["app/components/set",{"_index":2568,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/components/user",{"_index":2576,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/data",{"_index":787,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{}}}],["app/data/component/component",{"_index":1402,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/interface/interface",{"_index":1551,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{}}}],["app/data/issue",{"_index":1210,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["app/data/project/project",{"_index":1641,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/add",{"_index":4952,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/create",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["app/dialogs/remove",{"_index":1006,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["app/dialogs/settings",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{}}}],["app/graphs/automatic",{"_index":4308,"title":{},"body":{"interfaces/Positions.html":{}}}],["app/graphs/component",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["app/graphs/issue",{"_index":1090,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["app/graphs/shared",{"_index":2973,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["app/issue",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["app/node",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["app/project",{"_index":2564,"title":{},"body":{"modules/GraphsModule.html":{}}}],["app/state.service",{"_index":2279,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["app/text",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["app/user",{"_index":1007,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["app/utils/query",{"_index":834,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["app/utils/validators",{"_index":1403,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["appcoalescedtimelineitems",{"_index":5519,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["appcoalescedtimelineitems]'},{'name",{"_index":213,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appcomponent",{"_index":103,"title":{"components/AppComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2596,"title":{},"body":{"modules/GraphsModule.html":{}}}],["appears",{"_index":5262,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appitem",{"_index":3696,"title":{},"body":{"directives/ItemDirective.html":{},"components/SetEditorComponent.html":{}}}],["appitem]'},{'name",{"_index":207,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["applicable",{"_index":5086,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["application",{"_index":2235,"title":{},"body":{"components/FrameComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["applied",{"_index":3006,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{}}}],["applies",{"_index":3013,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["apply",{"_index":1540,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applychangeset",{"_index":4091,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["applycomponentchangeset",{"_index":1509,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["applyfilter",{"_index":3421,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["applyfilter(filter",{"_index":3432,"title":{},"body":{"components/IssueListComponent.html":{}}}],["applyfilter(filtervalue",{"_index":4908,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["applyidchangeset",{"_index":2804,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applyidchangeset(id",{"_index":2821,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["applying",{"_index":5257,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["appmodule",{"_index":325,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appquerybody",{"_index":5073,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybody]'},{'name",{"_index":209,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appquerybutton",{"_index":5081,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["appquerybutton]'},{'name",{"_index":211,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appropriate",{"_index":733,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/IssueIconComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["approutingmodule",{"_index":332,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsingletimelineitem",{"_index":217,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["appstate",{"_index":525,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["appstate.project",{"_index":5404,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node",{"_index":5405,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.id",{"_index":5409,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project.node.name",{"_index":5407,"title":{},"body":{"components/SideNavComponent.html":{}}}],["appstate.project?.node.id",{"_index":3217,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["apptimelineitemdeleted",{"_index":5522,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["apptimelineitemdeleted]'},{'name",{"_index":215,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["arbitrary",{"_index":3816,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["architecture",{"_index":5870,"title":{},"body":{"index.html":{}}}],["architectures",{"_index":5866,"title":{},"body":{"index.html":{}}}],["area",{"_index":6068,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["areas",{"_index":6097,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["args",{"_index":1734,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["arguments",{"_index":2383,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["arial",{"_index":3584,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["around",{"_index":2914,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["arranged",{"_index":4301,"title":{},"body":{"interfaces/Positions.html":{}}}],["array",{"_index":823,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["array(nodes.length",{"_index":3815,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["array.from(node.issuegroupcontainer.issuegroupnodeids).map",{"_index":4699,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(nodes.values",{"_index":4784,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.components.values()).map(component",{"_index":4597,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.from(this.graphdata.interfaces.values()).map",{"_index":4601,"title":{},"body":{"interfaces/Positions.html":{}}}],["array.includes(item",{"_index":2894,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.isarray(spec.sourcenodes",{"_index":4037,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.componentlist",{"_index":1513,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["array.isarray(this.data.listset",{"_index":4101,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["array.isarray(this.listset",{"_index":5290,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["array.push(item",{"_index":2895,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["array.splice(array.indexof(item",{"_index":2896,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["arrives",{"_index":3032,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["arrow",{"_index":1285,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["arrows",{"_index":1651,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["artifact",{"_index":3865,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["artifacts",{"_index":3899,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["asc",{"_index":3510,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["ask",{"_index":2344,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["aspect",{"_index":4533,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["assets/icons/issues",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["assets/icons/svg",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["asseturl",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":1537,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["assigned",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["assignedevent",{"_index":962,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.createdby.id",{"_index":964,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignedevent.removedassignee?.id",{"_index":965,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["assignee",{"_index":3536,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignee.displayname",{"_index":3538,"title":{},"body":{"components/IssueListComponent.html":{}}}],["assignees",{"_index":1581,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["associated",{"_index":2043,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/using-gropius.html":{}}}],["assume",{"_index":4624,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["async",{"_index":1510,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["attached",{"_index":2431,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["attempt",{"_index":1462,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["attempts",{"_index":6101,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["attr('r",{"_index":3145,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('x",{"_index":3143,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attr('y",{"_index":3144,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["attribute",{"_index":4791,"title":{},"body":{"interfaces/Positions.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["auth",{"_index":2529,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["auth/auth.guard",{"_index":501,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/authentication.service",{"_index":2480,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{}}}],["authenticated",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authentication",{"_index":2531,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/using-gropius.html":{}}}],["authentication.service",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authenticationservice",{"_index":623,"title":{"injectables/AuthenticationService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["authenticationsservice",{"_index":617,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":500,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["author",{"_index":3453,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["authorization",{"_index":2532,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservice",{"_index":1553,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"injectables/ProjectStoreService.html":{},"components/TopToolbarComponent.html":{}}}],["authservice.logout",{"_index":2523,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auto",{"_index":1199,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["autodismiss",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["automatic",{"_index":2095,"title":{},"body":{"injectables/DataService.html":{},"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":620,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueIconComponent.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["automaticly",{"_index":3592,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["autonomous",{"_index":5872,"title":{},"body":{"index.html":{}}}],["available",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1826,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["avoiding",{"_index":4627,"title":{},"body":{"interfaces/Positions.html":{}}}],["await",{"_index":1522,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/variables.html":{}}}],["away",{"_index":3777,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["b",{"_index":950,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueLabelComponent.html":{},"components/ProjectListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["b.blur",{"_index":4866,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["back",{"_index":4340,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["backend",{"_index":228,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["backend:can",{"_index":5857,"title":{},"body":{"index.html":{}}}],["background",{"_index":271,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["backtologin",{"_index":5168,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backtologin(e",{"_index":5177,"title":{},"body":{"components/RegisterComponent.html":{}}}],["backwards",{"_index":3901,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["badge",{"_index":5549,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.closed",{"_index":5565,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.reopened",{"_index":5566,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badge.warning",{"_index":5563,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["badly",{"_index":3858,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["bar",{"_index":2185,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/typealiases.html":{}}}],["based",{"_index":1243,"title":{},"body":{"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"index.html":{}}}],["basic",{"_index":2503,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bearer",{"_index":2533,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["before",{"_index":1934,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["beforenodemove",{"_index":3309,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beforenodemove(group",{"_index":3259,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beginediting",{"_index":2708,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["beginning",{"_index":2156,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["begins",{"_index":2714,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["behavior",{"_index":1793,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["behaviorsubject",{"_index":681,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["behaviorsubject(false",{"_index":2274,"title":{},"body":{"components/FrameComponent.html":{}}}],["behaviorsubject(null",{"_index":4345,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviorsubject(this.fetchuserfromstorage",{"_index":691,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["behaviorsubject({labels",{"_index":2192,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["behaviour",{"_index":4369,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours",{"_index":4305,"title":{},"body":{"interfaces/Positions.html":{}}}],["behaviours.ts",{"_index":3228,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["behaviours.ts:164",{"_index":3243,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:169",{"_index":3245,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:18",{"_index":3312,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:19",{"_index":3311,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:24",{"_index":3313,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["behaviours.ts:92",{"_index":3236,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:93",{"_index":3238,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:94",{"_index":3237,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behaviours.ts:96",{"_index":3247,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["behind",{"_index":5869,"title":{},"body":{"index.html":{}}}],["being",{"_index":1000,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{}}}],["belongs",{"_index":993,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["below",{"_index":2775,"title":{},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["beneath",{"_index":5382,"title":{},"body":{"components/SideNavComponent.html":{}}}],["benefits",{"_index":5879,"title":{},"body":{"index.html":{}}}],["bespoke",{"_index":3513,"title":{},"body":{"components/IssueListComponent.html":{}}}],["best",{"_index":3265,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["bestdistance",{"_index":3268,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["beta.3",{"_index":5807,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":6049,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["between",{"_index":702,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["beyond",{"_index":1762,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["bindings",{"_index":6081,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["bit",{"_index":1709,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["black",{"_index":3405,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectListComponent.html":{}}}],["blank",{"_index":4625,"title":{},"body":{"interfaces/Positions.html":{}}}],["block",{"_index":2777,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["body",{"_index":991,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TimelineItemComponent.html":{}}}],["body.mat",{"_index":4281,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["bold",{"_index":2921,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{}}}],["bool",{"_index":2862,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{}}}],["booleans",{"_index":3046,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bootstrap",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":1174,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["both",{"_index":739,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["bottom",{"_index":1272,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["bound",{"_index":3076,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["bounding",{"_index":4350,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox",{"_index":4589,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.height",{"_index":4642,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.width",{"_index":4639,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.x",{"_index":4638,"title":{},"body":{"interfaces/Positions.html":{}}}],["boundingbox.y",{"_index":4641,"title":{},"body":{"interfaces/Positions.html":{}}}],["box",{"_index":1177,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["brandt",{"_index":6145,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["break",{"_index":4069,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{}}}],["breakpointobserver",{"_index":2260,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["breakpoints",{"_index":2278,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["bridges",{"_index":2238,"title":{},"body":{"components/FrameComponent.html":{}}}],["brightness",{"_index":3392,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["browse",{"_index":5918,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browseranimationsmodule",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["browsermodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["bug",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["bug_report",{"_index":3110,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SideNavComponent.html":{}}}],["bugcount",{"_index":2378,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["bugs",{"_index":2379,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["buildfilter",{"_index":2805,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["builds",{"_index":2825,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["built",{"_index":5865,"title":{},"body":{"index.html":{}}}],["button",{"_index":89,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["buttoncreateproject",{"_index":4893,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttondeleteproject",{"_index":4892,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["buttonmode",{"_index":5109,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["buttons",{"_index":2698,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["c",{"_index":1995,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["c.name",{"_index":4248,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["c1",{"_index":3450,"title":{},"body":{"components/IssueListComponent.html":{}}}],["cache",{"_index":106,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["cache_fast_debounce_time_ms",{"_index":1757,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_interactive_debounce_time_ms",{"_index":1760,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_stale_time_ms",{"_index":1766,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1677,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cached",{"_index":773,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["cachenodecomponent",{"_index":105,"title":{"components/CacheNodeComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caching",{"_index":2096,"title":{},"body":{"injectables/DataService.html":{}}}],["calc(100",{"_index":1196,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["calc(36px",{"_index":5551,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["calculaiton",{"_index":3174,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculate",{"_index":3261,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculateboundingbox",{"_index":4753,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculated",{"_index":4751,"title":{},"body":{"interfaces/Positions.html":{}}}],["calculatemovement",{"_index":3739,"title":{},"body":{"classes/LayoutNode.html":{}}}],["calculatemovement(allnodes",{"_index":3762,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["calculates",{"_index":3160,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["calculatesourcehandles",{"_index":3154,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatesourcehandles(source",{"_index":3157,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles",{"_index":3155,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculatetargethandles(target",{"_index":3161,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["calculation",{"_index":3166,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["calculations",{"_index":4726,"title":{},"body":{"interfaces/Positions.html":{}}}],["call",{"_index":1862,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["callback",{"_index":1417,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["callbacks",{"_index":5304,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["called",{"_index":1889,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["caller",{"_index":3204,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["calling",{"_index":1772,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["calls",{"_index":1252,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["can't",{"_index":5283,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["canactivate",{"_index":506,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":625,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":77,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["canceled",{"_index":6098,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["cancelled",{"_index":5449,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["cancels",{"_index":1466,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/Positions.html":{}}}],["cancreatenewissue",{"_index":3412,"title":{},"body":{"components/IssueListComponent.html":{}}}],["capturechildmovement",{"_index":3230,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["card",{"_index":3831,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["care",{"_index":4585,"title":{},"body":{"interfaces/Positions.html":{}}}],["carries",{"_index":5185,"title":{},"body":{"components/RegisterComponent.html":{}}}],["carry",{"_index":2952,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["case",{"_index":899,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["cases",{"_index":3384,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["catch",{"_index":3380,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["catch((error",{"_index":1528,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["catch(err",{"_index":1625,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["catch(error",{"_index":1500,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["catcherror",{"_index":2179,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["categiry",{"_index":3439,"title":{},"body":{"components/IssueListComponent.html":{}}}],["categories",{"_index":2340,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["categories[key",{"_index":2976,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["category",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["category'},{'name",{"_index":128,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["category.component",{"_index":2595,"title":{},"body":{"modules/GraphsModule.html":{}}}],["category.component.html",{"_index":2637,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.scss",{"_index":2636,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category.component.ts",{"_index":2635,"title":{},"body":{"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:10",{"_index":2638,"title":{},"body":{"components/IssueCategoryComponent.html":{}}}],["category/issue",{"_index":2594,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"coverage.html":{}}}],["cause",{"_index":1617,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["caused",{"_index":3331,"title":{},"body":{"components/IssueIconComponent.html":{},"index.html":{}}}],["causes",{"_index":2130,"title":{},"body":{"injectables/DataService.html":{}}}],["caution",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["ccc",{"_index":5558,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["ccims",{"_index":720,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["ccimsicons",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["ccimsvalidators",{"_index":716,"title":{"classes/CCIMSValidators.html":{}},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"coverage.html":{}}}],["ccimsvalidators.contentvalidator",{"_index":1416,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.nameformatvalidator",{"_index":1410,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["ccimsvalidators.namevalidator",{"_index":736,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["ccimsvalidators.urlvalidator",{"_index":1412,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["cdktablemodule",{"_index":2558,"title":{},"body":{"modules/GraphsModule.html":{}}}],["cdktreemodule",{"_index":2560,"title":{},"body":{"modules/GraphsModule.html":{}}}],["center",{"_index":1192,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["center_focus_strong",{"_index":3112,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["centered",{"_index":4886,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["certain",{"_index":4696,"title":{},"body":{"interfaces/Positions.html":{}}}],["chain",{"_index":5893,"title":{},"body":{"index.html":{}}}],["challenges",{"_index":5884,"title":{},"body":{"index.html":{}}}],["change",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["changecolour",{"_index":4841,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["changed",{"_index":2715,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["changedetector",{"_index":1058,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changedetectorref",{"_index":1059,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["changeissuecategory",{"_index":3595,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategory(changeissuecategoryinput",{"_index":3636,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorygql",{"_index":3621,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategoryinput",{"_index":3637,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changeissuecategorymutation",{"_index":3620,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["changepassword",{"_index":4805,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["changes",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["changes.listset",{"_index":5298,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changes.listset.currentvalue",{"_index":5300,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["changeset",{"_index":2823,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["changing",{"_index":1831,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["charset=utf",{"_index":2507,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1786,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["checkbox",{"_index":5351,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["checked",{"_index":1632,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueDetailComponent.html":{}}}],["checkimstype",{"_index":1430,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["checkimstype(returnfromselect",{"_index":1427,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["checking",{"_index":5117,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["checks",{"_index":960,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusernamegql",{"_index":5175,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chevron_left",{"_index":1665,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["chevron_right",{"_index":1666,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["child",{"_index":2689,"title":{},"body":{"components/IssueContentsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["child(2",{"_index":5356,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(3",{"_index":5358,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child(4",{"_index":5360,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["child.x",{"_index":3296,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child.y",{"_index":3297,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["child::after",{"_index":3854,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["childgroup",{"_index":3240,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode",{"_index":3242,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnode.allowedanchors",{"_index":3305,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["childnodepositions",{"_index":3231,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["children",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["children.has(childid",{"_index":3287,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["circumstance",{"_index":3748,"title":{},"body":{"classes/LayoutNode.html":{}}}],["class",{"_index":57,"title":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["class=\"timeline",{"_index":2683,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["classes",{"_index":717,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["classname",{"_index":3011,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["clean",{"_index":4592,"title":{},"body":{"interfaces/Positions.html":{}}}],["clear",{"_index":2682,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["cleartimeout(this.loadtimeout",{"_index":1886,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cli",{"_index":6073,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["click",{"_index":2150,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/Positions.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["clicked",{"_index":1642,"title":{},"body":{"components/CreateProjectDialogComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["clickedonrow",{"_index":3422,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["clickedonrow(row",{"_index":3434,"title":{},"body":{"components/IssueListComponent.html":{}}}],["clickedonrow(rowdata",{"_index":4911,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["clicking",{"_index":4490,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["clicks",{"_index":2239,"title":{},"body":{"components/FrameComponent.html":{}}}],["client",{"_index":2537,"title":{},"body":{"modules/GraphQLModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["clientmutationid",{"_index":1601,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["clockwise",{"_index":5678,"title":{},"body":{"classes/Vector.html":{}}}],["close",{"_index":61,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["close(closeinput",{"_index":3639,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["close_ios",{"_index":65,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["closebutton",{"_index":2500,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["closecomponentactions(reload",{"_index":4573,"title":{},"body":{"interfaces/Positions.html":{}}}],["closed",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["closedialog",{"_index":31,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["closeinput",{"_index":3642,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissue",{"_index":2650,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["closeissuegql",{"_index":3615,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissueinput",{"_index":3640,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closeissuemutation",{"_index":3614,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["closes",{"_index":2657,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/Positions.html":{}}}],["closing",{"_index":4341,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{}}}],["clr/ui",{"_index":5808,"title":{},"body":{"dependencies.html":{}}}],["cluster_appmodule",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_graphsmodule",{"_index":2545,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_declarations",{"_index":2546,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["cluster_graphsmodule_exports",{"_index":2547,"title":{},"body":{"modules/GraphsModule.html":{},"overview.html":{}}}],["coalescable_events",{"_index":842,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesce",{"_index":897,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalesced",{"_index":810,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["coalesced.push",{"_index":939,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescedtimelineitem",{"_index":802,"title":{"interfaces/CoalescedTimelineItem.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["coalescelist",{"_index":895,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.length",{"_index":902,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist.push(timelineitem",{"_index":918,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0",{"_index":934,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescelist[0].createdat",{"_index":940,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescing",{"_index":913,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["coalescingtype",{"_index":894,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["code",{"_index":2602,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["codechange",{"_index":3962,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codedidchange",{"_index":3961,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["codegen",{"_index":6125,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["codegenerator",{"_index":1311,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["collect",{"_index":4232,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["collection",{"_index":2045,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["collections",{"_index":2324,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{}}}],["collects",{"_index":3027,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["color",{"_index":272,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"dependencies.html":{}}}],["color($accent",{"_index":5414,"title":{},"body":{"components/SideNavComponent.html":{}}}],["colorpickermodule",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["colortestcanvas",{"_index":3360,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colortestcanvas.getcontext('2d",{"_index":3365,"title":{},"body":{"components/IssueLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["colortestcanvas.height",{"_index":3363,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestcanvas.width",{"_index":3362,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestctx",{"_index":3364,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colortestctx.fillrect(0",{"_index":3374,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestctx.fillstyle",{"_index":3373,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["colortestctx.getimagedata(0",{"_index":3376,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["column",{"_index":2290,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["columns",{"_index":2297,"title":{},"body":{"components/FrameComponent.html":{}}}],["columnstodisplay",{"_index":3413,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["combination",{"_index":5083,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["combined",{"_index":3078,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest",{"_index":3072,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["combinelatest([this.selectedcategories",{"_index":3090,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["combinelatest([this.ss.state",{"_index":3212,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["combines",{"_index":3028,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["comes",{"_index":4362,"title":{},"body":{"interfaces/Positions.html":{}}}],["coming",{"_index":3720,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["comment",{"_index":972,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["comment'},{'name",{"_index":109,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["comment.component.html",{"_index":976,"title":{},"body":{"components/CommentComponent.html":{}}}],["comment.component.scss",{"_index":975,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentcomponent",{"_index":108,"title":{"components/CommentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["commentcontainer",{"_index":5561,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["commented",{"_index":1043,"title":{},"body":{"components/CommentComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["commenteditor",{"_index":2648,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["commentid",{"_index":981,"title":{},"body":{"components/CommentComponent.html":{}}}],["commentissue",{"_index":2651,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["commentissue(commentissueinput",{"_index":3643,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuegql",{"_index":3609,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissueinput",{"_index":3645,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentissuemutation",{"_index":3608,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["commentsub",{"_index":1013,"title":{},"body":{"components/CommentComponent.html":{}}}],["common",{"_index":6108,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["commonly",{"_index":719,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["commonmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["communicate",{"_index":6082,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["communicated",{"_index":2242,"title":{},"body":{"components/FrameComponent.html":{}}}],["communicating",{"_index":3966,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["communication",{"_index":2488,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["compare",{"_index":1816,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["compared",{"_index":3884,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compatibility",{"_index":2057,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["compatible",{"_index":5630,"title":{},"body":{"injectables/UsersService.html":{}}}],["complete",{"_index":4579,"title":{},"body":{"interfaces/Positions.html":{}}}],["completely",{"_index":4577,"title":{},"body":{"interfaces/Positions.html":{}}}],["complex",{"_index":4628,"title":{},"body":{"interfaces/Positions.html":{}}}],["compodoc",{"_index":3983,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["compodoc.p.s",{"_index":5850,"title":{},"body":{"index.html":{}}}],["compodocfor",{"_index":6079,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["component",{"_index":0,"title":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["component'},{'name",{"_index":116,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["component(s",{"_index":4239,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component.component",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["component.component.html",{"_index":5244,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.scss",{"_index":5243,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts",{"_index":5242,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:10",{"_index":5245,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:13",{"_index":5248,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:16",{"_index":5249,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:21",{"_index":5247,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.component.ts:25",{"_index":5246,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["component.graphql",{"_index":1314,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["component.id",{"_index":1258,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.name",{"_index":1259,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["component.node",{"_index":4219,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["component/:componentid",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/:componentid/issue/:issueid",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["component/project",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["component/query.component",{"_index":835,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["component/query.component.ts",{"_index":5071,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["component/query.component.ts:134",{"_index":5139,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:135",{"_index":5144,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:136",{"_index":5145,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:141",{"_index":5146,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:142",{"_index":5147,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:144",{"_index":5138,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:163",{"_index":5141,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:173",{"_index":5140,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:206",{"_index":5142,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:212",{"_index":5143,"title":{},"body":{"components/QueryComponent.html":{}}}],["component/query.component.ts:34",{"_index":5075,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:35",{"_index":5076,"title":{},"body":{"directives/QueryBodyDirective.html":{}}}],["component/query.component.ts:46",{"_index":5134,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/query.component.ts:47",{"_index":5135,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["component/remove",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["component_context_menu_data",{"_index":1102,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":97,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["componentcontextmenu",{"_index":4329,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent",{"_index":110,"title":{"components/ComponentContextMenuComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentcontextmenucomponent.componentcontextmenucomponent",{"_index":4330,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.componentcontextmenuservice",{"_index":4322,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenucomponent.last_height",{"_index":1075,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.last_width",{"_index":1078,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_height",{"_index":1135,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenucomponent.min_width",{"_index":1133,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentcontextmenudata",{"_index":1057,"title":{"interfaces/ComponentContextMenuData.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{}}}],["componentcontextmenunodeid",{"_index":4331,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentcontextmenuservice",{"_index":1097,"title":{"injectables/ComponentContextMenuService.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["componentdetails",{"_index":6045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["componentfilter",{"_index":1389,"title":{},"body":{"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentid",{"_index":1290,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["componentinterface",{"_index":2317,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacefilter",{"_index":1390,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["componentinterfaceprovider",{"_index":3414,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentinterfaces",{"_index":3896,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["componentinterfacesub",{"_index":3415,"title":{},"body":{"components/IssueListComponent.html":{}}}],["componentlist",{"_index":1451,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["componentnode",{"_index":1203,"title":{"interfaces/ComponentNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["componentnodes",{"_index":4596,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentportal",{"_index":1088,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["componentportal(componentcontextmenucomponent",{"_index":1127,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["components.node.component.name",{"_index":4246,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.node.consumedby.nodes",{"_index":4247,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["components.service",{"_index":5068,"title":{},"body":{"injectables/QueriesService.html":{}}}],["componentsize",{"_index":4754,"title":{},"body":{"interfaces/Positions.html":{}}}],["componentsservice",{"_index":1364,"title":{"injectables/ComponentsService.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["componentstore",{"_index":1406,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["componentstoreservice",{"_index":1302,"title":{"injectables/ComponentStoreService.html":{}},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["componentsub",{"_index":3416,"title":{},"body":{"components/IssueListComponent.html":{}}}],["composed",{"_index":3871,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["compute",{"_index":2370,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computed",{"_index":4004,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["computerelatedfolders",{"_index":5734,"title":{},"body":{"coverage.html":{}}}],["computerelatedfolders(linkissues",{"_index":2362,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["computes",{"_index":2429,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["concat",{"_index":2178,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["concepts",{"_index":6104,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["condition",{"_index":6128,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["configuration",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["configurations",{"_index":2486,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["confirm",{"_index":1596,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmation",{"_index":2152,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["confirmbuttontext",{"_index":1595,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["confirmdeletedialogref",{"_index":1026,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(del",{"_index":1035,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["confirmdeletedialogref.afterclosed().subscribe(deletedata",{"_index":4251,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["confirmed",{"_index":1037,"title":{},"body":{"components/CommentComponent.html":{}}}],["confirms",{"_index":1461,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["confirmvalidator",{"_index":5165,"title":{},"body":{"components/RegisterComponent.html":{}}}],["congiuration",{"_index":2496,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["conjunction",{"_index":5518,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["connect",{"_index":1229,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["connectconsumingcomponents(interfacenode",{"_index":4649,"title":{},"body":{"interfaces/Positions.html":{}}}],["connected",{"_index":3745,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["connectedposition",{"_index":1084,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["connectedto",{"_index":3731,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connecting",{"_index":4612,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["connection",{"_index":869,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"components/ProjectIssueListComponent.html":{},"classes/Vector.html":{}}}],["connections",{"_index":4586,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["connector",{"_index":1292,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["connectto",{"_index":3740,"title":{},"body":{"classes/LayoutNode.html":{}}}],["connectto(other",{"_index":3768,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["connecttoofferingcomponent(node",{"_index":4643,"title":{},"body":{"interfaces/Positions.html":{}}}],["considered",{"_index":1763,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["consists",{"_index":4316,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["console",{"_index":5608,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["console.error('oh",{"_index":1719,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('dark",{"_index":5377,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["console.log('deleted",{"_index":2159,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('error",{"_index":5097,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["console.log('node",{"_index":1718,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["console.log('not",{"_index":2160,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["console.log('register",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('result",{"_index":5096,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["console.log('setting",{"_index":4390,"title":{},"body":{"interfaces/Positions.html":{}}}],["console.log(`[graphql",{"_index":2517,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.log(`[network",{"_index":2519,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["const",{"_index":255,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1791,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{}}}],["constructed",{"_index":2492,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["constructing",{"_index":2031,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["construction",{"_index":2951,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["constructor(@inject(component_context_menu_data",{"_index":1144,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["constructor(activatedroute",{"_index":3428,"title":{},"body":{"components/IssueListComponent.html":{}}}],["constructor(apiservice",{"_index":3190,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["constructor(authservice",{"_index":5013,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["constructor(breakpointobserver",{"_index":2259,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["constructor(changedetector",{"_index":5538,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["constructor(components",{"_index":5058,"title":{},"body":{"injectables/QueriesService.html":{}}}],["constructor(createinterfacemutation",{"_index":2607,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["constructor(createissue",{"_index":3602,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["constructor(data",{"_index":1056,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["constructor(dataservice",{"_index":765,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["constructor(dialog",{"_index":1457,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["constructor(dialogref",{"_index":34,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["constructor(element",{"_index":5133,"title":{},"body":{"directives/QueryButtonDirective.html":{}}}],["constructor(fb",{"_index":5171,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(getfullissuegraphdataquery",{"_index":2932,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["constructor(getlabelsgql",{"_index":3712,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["constructor(http",{"_index":658,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(id",{"_index":1866,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["constructor(initialposition",{"_index":3310,"title":{},"body":{"classes/IssueGroupContainerParentBehaviour.html":{}}}],["constructor(labelstore",{"_index":3698,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["constructor(maticonregistry",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(notify",{"_index":5137,"title":{},"body":{"components/QueryComponent.html":{}}}],["constructor(overlay",{"_index":1200,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["constructor(private",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"interfaces/userMock.html":{}}}],["constructor(projectstore",{"_index":4845,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["constructor(public",{"_index":58,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(qlistprojectcomponents",{"_index":1371,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["constructor(qlistprojects",{"_index":5045,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(qsearchusers",{"_index":5620,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(queries",{"_index":1923,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["constructor(route",{"_index":3920,"title":{},"body":{"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["constructor(router",{"_index":622,"title":{},"body":{"guards/AuthGuard.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/NodeDetailsComponent.html":{},"injectables/StateService.html":{}}}],["constructor(spec",{"_index":3999,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["constructor(ss",{"_index":5392,"title":{},"body":{"components/SideNavComponent.html":{}}}],["constructor(template",{"_index":5074,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["constructor(toastr",{"_index":5602,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["constructor(updatecomponentmutation",{"_index":1323,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["constructor(x",{"_index":3773,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["constructors",{"_index":1237,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["consumed",{"_index":2944,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["consumedby",{"_index":2391,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["consumer",{"_index":4408,"title":{},"body":{"interfaces/Positions.html":{}}}],["consumerid",{"_index":4650,"title":{},"body":{"interfaces/Positions.html":{}}}],["consuming",{"_index":4613,"title":{},"body":{"interfaces/Positions.html":{}}}],["contain",{"_index":805,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["contained",{"_index":1253,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"index.html":{}}}],["container",{"_index":1195,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"interfaces/Position.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/enumerations.html":{}}}],["containers",{"_index":4759,"title":{},"body":{"interfaces/Positions.html":{}}}],["containing",{"_index":898,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["contains",{"_index":2008,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["content",{"_index":262,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{}}}],["content.nativeelement.addeventlistener('mousedown",{"_index":1140,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["contentchild",{"_index":785,"title":{},"body":{"components/CacheNodeComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(itemdirective",{"_index":778,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/SetEditorComponent.html":{}}}],["contentchild(querybodydirective",{"_index":5106,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(querybuttondirective",{"_index":5107,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contentchild(timelinecoalesceditemsdirective",{"_index":5526,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelineitemdeleteddirective",{"_index":5528,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contentchild(timelinesingleitemdirective",{"_index":5524,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["contents",{"_index":2645,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["contents'},{'name",{"_index":130,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["contents.component",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{}}}],["contents.component.html",{"_index":2647,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.scss",{"_index":2646,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts",{"_index":2643,"title":{},"body":{"components/IssueContentsComponent.html":{},"coverage.html":{}}}],["contents.component.ts:19",{"_index":2654,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:21",{"_index":2655,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:33",{"_index":2662,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:35",{"_index":2653,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:56",{"_index":2656,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:61",{"_index":2659,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contents.component.ts:66",{"_index":2658,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["contentvalidator",{"_index":726,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["context",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["contextmenutype",{"_index":4512,"title":{},"body":{"interfaces/Positions.html":{}}}],["contextmenutypefornodetype(node",{"_index":4516,"title":{},"body":{"interfaces/Positions.html":{}}}],["continue",{"_index":920,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["contrast",{"_index":806,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{}}}],["contributors",{"_index":5859,"title":{"additional-documentation/contributors.html":{}},"body":{"index.html":{},"additional-documentation/contributors.html":{}}}],["contributors.p.s",{"_index":5860,"title":{},"body":{"index.html":{}}}],["control",{"_index":1673,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["control.value",{"_index":2162,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["control.value}).subscribe(({data",{"_index":5210,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controlled",{"_index":1658,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["controls",{"_index":1101,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["controls'},{'name",{"_index":139,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["controls.component",{"_index":499,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["controls.component.html",{"_index":3035,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.scss",{"_index":3034,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts",{"_index":3024,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:108",{"_index":3052,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":3064,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:27",{"_index":3066,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:29",{"_index":3067,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":3061,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:33",{"_index":3059,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":3071,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":3070,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:38",{"_index":3062,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:39",{"_index":3043,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:41",{"_index":3060,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:50",{"_index":3069,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:57",{"_index":3056,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:66",{"_index":3044,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls.component.ts:74",{"_index":3051,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["controls/issue",{"_index":498,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"coverage.html":{}}}],["conversion",{"_index":2927,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["convert",{"_index":2312,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/QueryListParams.html":{}}}],["converts",{"_index":2353,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/TimeFormatter.html":{}}}],["convertvalueforfilter",{"_index":5775,"title":{},"body":{"coverage.html":{}}}],["convertvalueforfilter(predicates[id].type",{"_index":2903,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["convertvalueforfilter(type",{"_index":2881,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["coordinate",{"_index":3180,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["coordinates",{"_index":4518,"title":{},"body":{"interfaces/Positions.html":{}}}],["coressponding",{"_index":3049,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["corner",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"additional-documentation/using-gropius.html":{}}}],["corner.svg",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["correct",{"_index":748,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["correctly",{"_index":1969,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["correspond",{"_index":2207,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["corresponding",{"_index":862,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["corresponds",{"_index":3872,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["count",{"_index":886,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["count(c",{"_index":1997,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["count.tostring",{"_index":4690,"title":{},"body":{"interfaces/Positions.html":{}}}],["counter",{"_index":1849,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["counts",{"_index":2339,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["cover",{"_index":4117,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["coverage",{"_index":5688,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":112,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["create(issueinput",{"_index":3646,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["create(name",{"_index":2618,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["create/edit",{"_index":1483,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["createcomponent",{"_index":1317,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponent(input",{"_index":1338,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentdata",{"_index":1397,"title":{"interfaces/CreateComponentData.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"coverage.html":{}}}],["createcomponentdialogcomponent",{"_index":111,"title":{"components/CreateComponentDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createcomponentdialogref",{"_index":4799,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentdialogref.afterclosed().subscribe(componentinformation",{"_index":4801,"title":{},"body":{"interfaces/Positions.html":{}}}],["createcomponentgql",{"_index":1330,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentinput",{"_index":1339,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["createcomponentinterfacegql",{"_index":2608,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentinterfaceinput",{"_index":2626,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createcomponentmutation",{"_index":1329,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["createcomponentnode",{"_index":1219,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createcomponentnode(component",{"_index":1256,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createconsumptionedge",{"_index":1224,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createconsumptionedge(componentid",{"_index":1288,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["created",{"_index":921,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["createdby",{"_index":936,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["createeditlabeldialogcomponent",{"_index":113,"title":{"components/CreateEditLabelDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createeditlabeldialogdata",{"_index":1449,"title":{"interfaces/CreateEditLabelDialogData.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"coverage.html":{}}}],["createerrorlink",{"_index":5750,"title":{},"body":{"coverage.html":{}}}],["createerrorlink(authservice",{"_index":2509,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["createinterfacedata",{"_index":1547,"title":{"interfaces/CreateInterfaceData.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["createinterfacedialogcomponent",{"_index":117,"title":{"components/CreateInterfaceDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createinterfacedialogref",{"_index":4451,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacedialogref.afterclosed().subscribe((interfaceid",{"_index":4453,"title":{},"body":{"interfaces/Positions.html":{}}}],["createinterfacemutation",{"_index":2617,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["createinterfacenode",{"_index":1220,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfacenode(intrface",{"_index":1262,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createinterfaceprovisionedge",{"_index":1225,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createinterfaceprovisionedge(componentid",{"_index":1293,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissue",{"_index":3631,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuedialogcomponent",{"_index":119,"title":{"components/CreateIssueDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createissuefoldernode",{"_index":1222,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuefoldernode(node",{"_index":1275,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissuegql",{"_index":3603,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["createissuegroupcontainernode",{"_index":1221,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createissuegroupcontainernode(node",{"_index":1268,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["createissueinput",{"_index":1583,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"injectables/IssueStoreService.html":{}}}],["createitem",{"_index":4094,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["createnode",{"_index":4150,"title":{},"body":{"classes/NodeCache.html":{}}}],["createnode(id",{"_index":2048,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["createproject",{"_index":5019,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectdialogcomponent",{"_index":121,"title":{"components/CreateProjectDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createprojectdialogref",{"_index":4858,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectdialogref.afterclosed().subscribe(result",{"_index":4860,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["createprojectgql",{"_index":5020,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createprojectinput",{"_index":5031,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["createrelationedge",{"_index":1223,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["createrelationedge(sourceid",{"_index":1278,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["creates",{"_index":1448,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["creating",{"_index":1485,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["creation",{"_index":1234,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["creator",{"_index":925,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["creator's",{"_index":928,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["credentials",{"_index":2526,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["credits",{"_index":5911,"title":{},"body":{"index.html":{}}}],["critical",{"_index":5886,"title":{},"body":{"index.html":{}}}],["cross",{"_index":5894,"title":{},"body":{"index.html":{}}}],["crud",{"_index":3589,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["css",{"_index":3359,"title":{},"body":{"components/IssueLabelComponent.html":{},"interfaces/Positions.html":{}}}],["current",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["current_user_node",{"_index":2663,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["current_user_node.id",{"_index":6024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentcolor",{"_index":5354,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["currentdata",{"_index":1814,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currenthasnode(key",{"_index":2009,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentissueid",{"_index":4561,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentitems",{"_index":1929,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currently",{"_index":614,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["currentqueryparams",{"_index":1830,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["currentuser",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["currentusergql",{"_index":5623,"title":{},"body":{"injectables/UsersService.html":{}}}],["currentusersub",{"_index":2666,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["currentusersubject",{"_index":650,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentuservalue",{"_index":657,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["currentviewwindow",{"_index":4712,"title":{},"body":{"interfaces/Positions.html":{}}}],["currentvisiblearea",{"_index":4328,"title":{},"body":{"interfaces/Positions.html":{}}}],["cursor",{"_index":123,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["cursor(c",{"_index":1994,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["cursor[objkey",{"_index":4068,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["cursorpaginatorcomponent",{"_index":122,"title":{"components/CursorPaginatorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cursory",{"_index":3836,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["custom_elements_schema",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["customevent",{"_index":4435,"title":{},"body":{"interfaces/Positions.html":{}}}],["d",{"_index":6064,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["d4d4d4",{"_index":5555,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["danner",{"_index":6133,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["dark",{"_index":3358,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["dark_mode",{"_index":5369,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dashboard",{"_index":3113,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["dashed",{"_index":4587,"title":{},"body":{"interfaces/Positions.html":{}}}],["data",{"_index":231,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["data.checkusername",{"_index":5211,"title":{},"body":{"components/RegisterComponent.html":{}}}],["data.color",{"_index":1498,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["data.component.id",{"_index":3498,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.createproject.project.id",{"_index":1646,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["data.currentuser",{"_index":6026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.emptyresultslabel",{"_index":5348,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.emptysuggestionslabel",{"_index":5349,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["data.length",{"_index":6012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node",{"_index":6020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.pageinfo",{"_index":6000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.assignees.totalcount",{"_index":5999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.pageinfo",{"_index":5962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.components.totalcount",{"_index":5961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.pageinfo",{"_index":5969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.interfaces.totalcount",{"_index":5968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.pageinfo",{"_index":5973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issues.totalcount",{"_index":5972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.pageinfo",{"_index":5979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.issuesonlocation.totalcount",{"_index":5978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.nodes",{"_index":3727,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["data.node.labels.pageinfo",{"_index":5993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.labels.totalcount",{"_index":5992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.pageinfo",{"_index":6009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkedbyissues.totalcount",{"_index":6008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkingissues.nodes.map(gqlissue",{"_index":2360,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["data.node.linkstoissues.pageinfo",{"_index":6004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.linkstoissues.totalcount",{"_index":6003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.pageinfo",{"_index":5989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.locations.totalcount",{"_index":5988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.pageinfo",{"_index":5984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.node.timeline.totalcount",{"_index":5983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.edges.map(edge",{"_index":5039,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["data.projects.pageinfo",{"_index":5957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.projects.totalcount",{"_index":5956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.searchuser",{"_index":5641,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.title",{"_index":5232,"title":{},"body":{"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{}}}],["data.ts",{"_index":2303,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["data.ts:100",{"_index":2451,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:101",{"_index":2453,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:102",{"_index":2454,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:103",{"_index":2450,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:104",{"_index":2452,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:106",{"_index":2455,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:119",{"_index":2456,"title":{},"body":{"classes/GraphInterface.html":{}}}],["data.ts:133",{"_index":2308,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:134",{"_index":2306,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:135",{"_index":2307,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:141",{"_index":2311,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:152",{"_index":2315,"title":{},"body":{"classes/GraphComponent.html":{}}}],["data.ts:169",{"_index":2460,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:170",{"_index":2459,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:171",{"_index":2462,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:172",{"_index":2461,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:178",{"_index":2464,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:190",{"_index":2463,"title":{},"body":{"classes/GraphIssue.html":{}}}],["data.ts:37",{"_index":2449,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.ts:48",{"_index":2448,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["data.userstoadd",{"_index":4966,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.userstodelete",{"_index":4975,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["data.values",{"_index":3508,"title":{},"body":{"components/IssueListComponent.html":{}}}],["data.verificationname",{"_index":5241,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["data/issue",{"_index":3074,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["data/label/label",{"_index":2184,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["data/project/project",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"components/ProjectListComponent.html":{},"injectables/StateService.html":{}}}],["data[0]?.id",{"_index":6014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data[data.length",{"_index":6016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataaspromise",{"_index":1698,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["database",{"_index":229,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["datalist",{"_index":831,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["datalist#hydrateinitial",{"_index":1859,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datalist(this.queries",{"_index":2138,"title":{},"body":{"injectables/DataService.html":{}}}],["datanode",{"_index":782,"title":{"classes/DataNode.html":{}},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["datanode#subscribelazy",{"_index":1010,"title":{},"body":{"components/CommentComponent.html":{}}}],["datanode(this.queries",{"_index":2051,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.hasdata",{"_index":2063,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanode.insertresult(node",{"_index":2073,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datanodes",{"_index":2041,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["dataquery",{"_index":1678,"title":{"classes/DataQuery.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["dataquery#interactive",{"_index":1758,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dataquery:145",{"_index":1706,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:179",{"_index":1712,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:225",{"_index":1725,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:234",{"_index":1721,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:253",{"_index":1727,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:264",{"_index":1724,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:295",{"_index":1732,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:385",{"_index":1711,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:56",{"_index":1705,"title":{},"body":{"classes/DataNode.html":{}}}],["dataquery:57",{"_index":1710,"title":{},"body":{"classes/DataNode.html":{}}}],["dataservice",{"_index":766,"title":{"injectables/DataService.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["dataservice.getlist(spec.sourcenodes",{"_index":4041,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dataservice.getnode(somenodeid",{"_index":1717,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["datasource",{"_index":3417,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["datatype",{"_index":2864,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":5481,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(datestring",{"_index":5495,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date(time).tostring",{"_index":5493,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["date.now",{"_index":1823,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["date.parse(firstitem.createdat",{"_index":958,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["datestring",{"_index":5487,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["day",{"_index":5513,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["days",{"_index":73,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/TimeFormatter.html":{}}}],["db",{"_index":1555,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["deal",{"_index":1795,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debounce",{"_index":1708,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["debounced",{"_index":1856,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["debouncetime",{"_index":4304,"title":{},"body":{"interfaces/Positions.html":{}}}],["debouncetime(300",{"_index":4389,"title":{},"body":{"interfaces/Positions.html":{}}}],["debugnologin",{"_index":6122,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["decide",{"_index":885,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["decides",{"_index":911,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["declarations",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["declarative",{"_index":6100,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["declare",{"_index":1774,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{}}}],["declared",{"_index":2549,"title":{},"body":{"modules/GraphsModule.html":{}}}],["decode",{"_index":3876,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid",{"_index":2114,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodelistid(id",{"_index":3902,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decodelistid(id).type",{"_index":2136,"title":{},"body":{"injectables/DataService.html":{}}}],["decodenodeid",{"_index":1741,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["decodenodeid(firstkey",{"_index":2002,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(id",{"_index":3874,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["decodenodeid(keys[keys.length",{"_index":2007,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["decodenodeid(parts[0",{"_index":3903,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["decompose",{"_index":5871,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":241,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{}}}],["deep",{"_index":1631,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["defaultdictionary",{"_index":2322,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["defaultmenutitle",{"_index":5386,"title":{},"body":{"components/SideNavComponent.html":{}}}],["defaultoptions",{"_index":2482,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":4980,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["define",{"_index":1407,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"directives/ItemDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["defines",{"_index":1626,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["definition",{"_index":6123,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["definitions",{"_index":1233,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"additional-documentation/managing-gropius.html":{}}}],["degrees",{"_index":3778,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["del",{"_index":1036,"title":{},"body":{"components/CommentComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delay",{"_index":1729,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["delete",{"_index":1029,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["delete(id",{"_index":2621,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["deletecomment",{"_index":979,"title":{},"body":{"components/CommentComponent.html":{},"injectables/IssueStoreService.html":{}}}],["deletecomment(deleteissuecommentinput",{"_index":3649,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deletecomponent",{"_index":1318,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponent(id",{"_index":1341,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentgql",{"_index":1326,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinput",{"_index":1354,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deletecomponentinterfacegql",{"_index":2612,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentinterfaceinput",{"_index":2627,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deletecomponentmutation",{"_index":1325,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["deleted",{"_index":922,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/using-gropius.html":{}}}],["deletedata",{"_index":4252,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deleteinterfacemutation",{"_index":2611,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["deleteissuecommentgql",{"_index":3611,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentinput",{"_index":3650,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteissuecommentmutation",{"_index":3610,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["deleteitem",{"_index":4096,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["deletememberdialogref",{"_index":4970,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deletememberdialogref.afterclosed().subscribe(data",{"_index":4974,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleteproject",{"_index":4992,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["deleteprojectgql",{"_index":5021,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deleteprojectinput",{"_index":5032,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["deletequery",{"_index":4207,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["deletes",{"_index":995,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["deleting",{"_index":1306,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["deletion",{"_index":1038,"title":{},"body":{"components/CommentComponent.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/Positions.html":{}}}],["deletions",{"_index":1512,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["delivers",{"_index":2354,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["demo",{"_index":4876,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["denoting",{"_index":2963,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["dependencies",{"_index":327,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1299,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["dependent",{"_index":4532,"title":{},"body":{"interfaces/Positions.html":{}}}],["depending",{"_index":2860,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["depends",{"_index":1298,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["depicted",{"_index":4681,"title":{},"body":{"interfaces/Positions.html":{}}}],["deployment",{"_index":5881,"title":{},"body":{"index.html":{}}}],["deps",{"_index":2544,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["derived",{"_index":4793,"title":{},"body":{"interfaces/Positions.html":{}}}],["described",{"_index":5896,"title":{},"body":{"index.html":{}}}],["describes",{"_index":2329,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"miscellaneous/variables.html":{}}}],["describing",{"_index":3200,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["description",{"_index":223,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{}}}],["description).subscribe(({data",{"_index":1558,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["descriptionvalidator",{"_index":1640,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["deselect",{"_index":5269,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["design/icons",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["desired",{"_index":2068,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{}}}],["destroy",{"_index":3036,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["destroyed",{"_index":1798,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["destruction",{"_index":4361,"title":{},"body":{"interfaces/Positions.html":{}}}],["detail",{"_index":155,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail'},{'name",{"_index":132,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["detail.component",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":2701,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.scss",{"_index":2700,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts",{"_index":2699,"title":{},"body":{"components/IssueDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:115",{"_index":2721,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":2730,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":2728,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:29",{"_index":2727,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":2731,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":2732,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":2733,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2726,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":2729,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":2725,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":2712,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":2723,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:65",{"_index":2720,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":2713,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail.component.ts:94",{"_index":2717,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["detail/comment/comment.component",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["detail/comment/comment.component.ts",{"_index":970,"title":{},"body":{"components/CommentComponent.html":{},"coverage.html":{}}}],["detail/comment/comment.component.ts:23",{"_index":987,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:25",{"_index":986,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:27",{"_index":992,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:30",{"_index":1004,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:32",{"_index":999,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:34",{"_index":1002,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:45",{"_index":985,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:65",{"_index":997,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/comment/comment.component.ts:82",{"_index":994,"title":{},"body":{"components/CommentComponent.html":{}}}],["detail/issue",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detail/linked",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"components/LinkedIssueItemComponent.html":{},"coverage.html":{}}}],["detail/time",{"_index":828,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/coalesced/timeline",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["detail/timeline/timeline.component",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["detail/timeline/timeline.component.ts",{"_index":804,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["detailed",{"_index":2734,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["details",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["details'},{'name",{"_index":166,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["details.component",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["details.component.html",{"_index":4159,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.scss",{"_index":4158,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts",{"_index":4157,"title":{},"body":{"components/NodeDetailsComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["details.component.ts:130",{"_index":4179,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:145",{"_index":4181,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:152",{"_index":4183,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:160",{"_index":4184,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:165",{"_index":4186,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:169",{"_index":4185,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:201",{"_index":4190,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:249",{"_index":4187,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:263",{"_index":4188,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:277",{"_index":4191,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:292",{"_index":4192,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:43",{"_index":4178,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:47",{"_index":4176,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:51",{"_index":4177,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:55",{"_index":4174,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":4196,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":4193,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:68",{"_index":4195,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:69",{"_index":4194,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:70",{"_index":4198,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":4197,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":4201,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":4200,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:76",{"_index":4203,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:77",{"_index":4199,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":4202,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details.component.ts:79",{"_index":4173,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["details/node",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["detailscallback",{"_index":1152,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["determine",{"_index":1850,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["determines",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["dev",{"_index":6076,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["developing",{"_index":5876,"title":{},"body":{"index.html":{}}}],["development",{"_index":5840,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["dgql",{"_index":788,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectsService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"additional-documentation/managing-gropius.html":{}}}],["dgql/id",{"_index":789,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/id.ts",{"_index":3859,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/index.ts",{"_index":2094,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["dgql/index.ts:30",{"_index":2106,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:40",{"_index":2109,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:45",{"_index":2111,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/index.ts:73",{"_index":2108,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/load.ts",{"_index":5713,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/mutate",{"_index":2116,"title":{},"body":{"injectables/DataService.html":{}}}],["dgql/mutate.ts",{"_index":5716,"title":{},"body":{"coverage.html":{}}}],["dgql/queries/components.service.ts",{"_index":1366,"title":{},"body":{"injectables/ComponentsService.html":{},"coverage.html":{}}}],["dgql/queries/components.service.ts:12",{"_index":1378,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:20",{"_index":1386,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:24",{"_index":1388,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:28",{"_index":1381,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/components.service.ts:32",{"_index":1383,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["dgql/queries/issues.service.ts",{"_index":5719,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dgql/queries/projects.service.ts",{"_index":5042,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["dgql/queries/projects.service.ts:12",{"_index":5049,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:18",{"_index":5054,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/projects.service.ts:22",{"_index":5052,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["dgql/queries/queries.service.ts",{"_index":5057,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["dgql/queries/queries.service.ts:10",{"_index":5061,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:12",{"_index":5062,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:13",{"_index":5063,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:14",{"_index":5064,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/queries.service.ts:15",{"_index":5065,"title":{},"body":{"injectables/QueriesService.html":{}}}],["dgql/queries/users.service.ts",{"_index":5619,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["dgql/queries/users.service.ts:11",{"_index":5624,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:17",{"_index":5628,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/users.service.ts:36",{"_index":5626,"title":{},"body":{"injectables/UsersService.html":{}}}],["dgql/queries/util",{"_index":1392,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["dgql/queries/util.ts",{"_index":5150,"title":{},"body":{"interfaces/QueryListParams.html":{},"coverage.html":{}}}],["dgql/query",{"_index":790,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["dgql/query.ts",{"_index":1676,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dgql/query.ts:145",{"_index":2076,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:179",{"_index":2078,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:225",{"_index":2081,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:234",{"_index":2079,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:243",{"_index":2083,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:253",{"_index":2082,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:264",{"_index":2080,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:295",{"_index":2084,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:330",{"_index":2093,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:381",{"_index":1738,"title":{},"body":{"classes/DataNode.html":{}}}],["dgql/query.ts:56",{"_index":2075,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:57",{"_index":2077,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:653",{"_index":4152,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:658",{"_index":4153,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:664",{"_index":4154,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:678",{"_index":4155,"title":{},"body":{"classes/NodeCache.html":{}}}],["dgql/query.ts:76",{"_index":2086,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:81",{"_index":2088,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:94",{"_index":2090,"title":{},"body":{"classes/DataQuery.html":{}}}],["dgql/query.ts:97",{"_index":2091,"title":{},"body":{"classes/DataQuery.html":{}}}],["diagram",{"_index":5906,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["dialog",{"_index":20,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["dialog'},{'name",{"_index":98,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["dialog.component",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["dialog.component.html",{"_index":24,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.scss",{"_index":22,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts",{"_index":13,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dialog.component.ts:10",{"_index":38,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":4811,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:114",{"_index":4022,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:118",{"_index":1465,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":48,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:122",{"_index":4018,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:123",{"_index":1460,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":4808,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":245,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:141",{"_index":4027,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:15",{"_index":238,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":243,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:163",{"_index":1467,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:165",{"_index":4014,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:17",{"_index":248,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:179",{"_index":4023,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:18",{"_index":44,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1436,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1435,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":1564,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:210",{"_index":5342,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:211",{"_index":5346,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:212",{"_index":5344,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:213",{"_index":5343,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:214",{"_index":5345,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:215",{"_index":5339,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:216",{"_index":5341,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:217",{"_index":5331,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":47,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:223",{"_index":5340,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":239,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:245",{"_index":5337,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":1563,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:252",{"_index":5335,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:257",{"_index":5334,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":4809,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:261",{"_index":5336,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":1438,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:275",{"_index":5338,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":1440,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:286",{"_index":5332,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":240,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:299",{"_index":5333,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1439,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1437,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1481,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1433,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1471,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1579,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":1477,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":1434,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":4008,"title":{},"body":{"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1472,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["dialog.component.ts:42",{"_index":5368,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1458,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":1476,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":4010,"title":{},"body":{"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":5231,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":1431,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":1562,"title":{},"body":{"components/CreateInterfaceDialogComponent.html":{}}}],["dialog.component.ts:56",{"_index":4001,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:57",{"_index":5230,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":4006,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:60",{"_index":1574,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/MultiSourceList.html":{}}}],["dialog.component.ts:61",{"_index":5229,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":4000,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:67",{"_index":4007,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:75",{"_index":1572,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:78",{"_index":4013,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:83",{"_index":4026,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["dialog.component.ts:94",{"_index":1569,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":1570,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["dialog/access",{"_index":12,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/add",{"_index":222,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["dialog/create",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["dialog/profile",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog/remove",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialog/settings",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["dialogdata",{"_index":1568,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":28,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["dialogref.afterclosed().subscribe(confirm",{"_index":2158,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["dialogs/access",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/add",{"_index":2565,"title":{},"body":{"modules/GraphsModule.html":{}}}],["dialogs/create",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["dialogs/profile",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/remove",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogservice",{"_index":5254,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["didopen",{"_index":3834,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["difference",{"_index":4735,"title":{},"body":{"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["different",{"_index":2064,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["differs",{"_index":949,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{}}}],["dimensions",{"_index":3262,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["direct",{"_index":5890,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["direction",{"_index":1970,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{}}}],["directions",{"_index":3814,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["directive",{"_index":95,"title":{"directives/ItemDirective.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["directives",{"_index":205,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"overview.html":{}}}],["directly",{"_index":1096,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["directory",{"_index":2605,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"additional-documentation/managing-gropius.html":{}}}],["disabled",{"_index":5098,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disables",{"_index":5087,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["disappear",{"_index":4792,"title":{},"body":{"interfaces/Positions.html":{}}}],["discard",{"_index":1594,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{}}}],["display",{"_index":1100,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"additional-documentation/using-gropius.html":{}}}],["display'},{'name",{"_index":195,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["display.component",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.html",{"_index":5427,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.scss",{"_index":5426,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts",{"_index":5424,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["display.component.ts:21",{"_index":5435,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:23",{"_index":5433,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:25",{"_index":5438,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:30",{"_index":5447,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:35",{"_index":5437,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":5436,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:39",{"_index":5445,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:40",{"_index":5442,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:41",{"_index":5443,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:42",{"_index":5444,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:44",{"_index":5440,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display.component.ts:55",{"_index":5441,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["display/text",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["displayed",{"_index":3341,"title":{},"body":{"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["displayedcode",{"_index":3981,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["displaying",{"_index":4660,"title":{},"body":{"interfaces/Positions.html":{}}}],["displayname",{"_index":2873,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":971,"title":{},"body":{"components/CommentComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["distance",{"_index":3805,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["distance(newposition.x",{"_index":3269,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distance(x",{"_index":3250,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["distancetoline",{"_index":5644,"title":{},"body":{"classes/Vector.html":{}}}],["distancetoline(sourcepoint",{"_index":5658,"title":{},"body":{"classes/Vector.html":{}}}],["distinctuntilchanged",{"_index":2180,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["distinguish",{"_index":2070,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["document",{"_index":4468,"title":{},"body":{"interfaces/Positions.html":{}}}],["document.createelement('canvas",{"_index":3361,"title":{},"body":{"components/IssueLabelComponent.html":{},"miscellaneous/variables.html":{}}}],["document.queryselector('#buttoncreateproject",{"_index":4864,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["documentation",{"_index":1932,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"coverage.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["documentation:can",{"_index":5847,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":2067,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["dographlayout",{"_index":4307,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["dographlayout(nodelist",{"_index":4785,"title":{},"body":{"interfaces/Positions.html":{}}}],["doing",{"_index":1855,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["domsanitizer",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":1794,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{}}}],["don\\'t",{"_index":2165,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["done",{"_index":1796,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["dont",{"_index":4339,"title":{},"body":{"interfaces/Positions.html":{}}}],["dot",{"_index":3576,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/SetEditorDialogComponent.html":{},"classes/Vector.html":{}}}],["dot(other",{"_index":5666,"title":{},"body":{"classes/Vector.html":{}}}],["dot(target",{"_index":3779,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["dot(this",{"_index":5669,"title":{},"body":{"classes/Vector.html":{}}}],["dots",{"_index":5353,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["down",{"_index":2248,"title":{},"body":{"components/FrameComponent.html":{}}}],["drag",{"_index":4368,"title":{},"body":{"interfaces/Positions.html":{}}}],["dragged",{"_index":4397,"title":{},"body":{"interfaces/Positions.html":{}}}],["draggededge",{"_index":3167,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["draghandles",{"_index":1287,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["draw",{"_index":2330,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["drawbacks",{"_index":6092,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["drawer",{"_index":2244,"title":{},"body":{"components/FrameComponent.html":{}}}],["drawfolderrelations(node",{"_index":4697,"title":{},"body":{"interfaces/Positions.html":{}}}],["drawgraph",{"_index":1255,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["drawing",{"_index":2430,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["draws",{"_index":4694,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropped",{"_index":4404,"title":{},"body":{"interfaces/Positions.html":{}}}],["dropping",{"_index":4411,"title":{},"body":{"interfaces/Positions.html":{}}}],["due",{"_index":3882,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["duplicate",{"_index":1301,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["duplicated",{"_index":5213,"title":{},"body":{"components/RegisterComponent.html":{}}}],["duplicates",{"_index":1300,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":3128,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"dependencies.html":{}}}],["dynamictemplate",{"_index":1271,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["dynamictemplate.dynamicnodetemplate",{"_index":3149,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["dynamictemplate.dynamictemplatecontext",{"_index":3141,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["e",{"_index":4465,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["e.g",{"_index":722,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/ComponentNode.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"classes/TimeFormatter.html":{},"injectables/UsersService.html":{},"additional-documentation/managing-gropius.html":{}}}],["e.preventdefault",{"_index":4874,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["e.stoppropagation",{"_index":4875,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["e6e6e6",{"_index":3974,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["each",{"_index":1247,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["early",{"_index":3824,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["ease",{"_index":5880,"title":{},"body":{"index.html":{}}}],["easier",{"_index":5878,"title":{},"body":{"index.html":{}}}],["east",{"_index":4298,"title":{},"body":{"interfaces/Positions.html":{}}}],["easy",{"_index":5523,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["edge",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edge.createdfrom",{"_index":4412,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.draghandles",{"_index":4421,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.markerend",{"_index":4424,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.node",{"_index":5040,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["edge.svg",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["edge.type",{"_index":3020,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["edge.validtargets.add(node.id.tostring",{"_index":4427,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.add(original.target.tostring",{"_index":4416,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.clear",{"_index":4415,"title":{},"body":{"interfaces/Positions.html":{}}}],["edge.validtargets.delete(existingedge.target.tostring",{"_index":4429,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgeclasssetter",{"_index":3017,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["edges",{"_index":1239,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["edgetype",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["edgetype].filter(part",{"_index":3328,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["edgex",{"_index":4536,"title":{},"body":{"interfaces/Positions.html":{}}}],["edgey",{"_index":4538,"title":{},"body":{"interfaces/Positions.html":{}}}],["edit",{"_index":114,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editable",{"_index":2736,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["editbody",{"_index":977,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment",{"_index":980,"title":{},"body":{"components/CommentComponent.html":{}}}],["editcomment(body",{"_index":996,"title":{},"body":{"components/CommentComponent.html":{}}}],["edited",{"_index":1001,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["editexisting",{"_index":1486,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["editing",{"_index":989,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["edititem",{"_index":4095,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["editmode",{"_index":4160,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["editor",{"_index":188,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["editor'},{'name",{"_index":161,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["editor.component",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["editor.component.html",{"_index":3959,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.scss",{"_index":3958,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{}}}],["editor.component.ts",{"_index":3955,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editor.component.ts:142",{"_index":5281,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:16",{"_index":3970,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:171",{"_index":5279,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":3963,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":3965,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":3968,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editor.component.ts:38",{"_index":5270,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:40",{"_index":5267,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:42",{"_index":5256,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:44",{"_index":5273,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:46",{"_index":5275,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:48",{"_index":5259,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":5264,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":5260,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":5265,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":5266,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":5258,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:61",{"_index":5278,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":5277,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":5255,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["editor/markdown",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"coverage.html":{}}}],["editor/set",{"_index":2569,"title":{},"body":{"modules/GraphsModule.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["editorcontainer",{"_index":3973,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["editoroptions",{"_index":3960,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["edits",{"_index":998,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"components/SetEditorComponent.html":{}}}],["edittext",{"_index":5428,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["effect",{"_index":1892,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["effects",{"_index":4349,"title":{},"body":{"interfaces/Positions.html":{}}}],["element",{"_index":94,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["element.assigneesstring",{"_index":3550,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.createdby.displayname",{"_index":3549,"title":{},"body":{"components/IssueListComponent.html":{}}}],["element.displayname",{"_index":4985,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.email",{"_index":4986,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["element.title",{"_index":3548,"title":{},"body":{"components/IssueListComponent.html":{}}}],["elementref",{"_index":1080,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["elements",{"_index":2206,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["ellipsis",{"_index":3852,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["elsewhere",{"_index":1722,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["email",{"_index":4920,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["embedded",{"_index":4313,"title":{},"body":{"interfaces/Positions.html":{}}}],["emission",{"_index":3089,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["emit",{"_index":1907,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"classes/NodeCache.html":{},"interfaces/TextFragment.html":{}}}],["emiterrortoallsubscribers(error",{"_index":1915,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emits",{"_index":1918,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{}}}],["emitselectedlabels",{"_index":2203,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["emitted",{"_index":2817,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/QueryListParams.html":{}}}],["emitting",{"_index":3106,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/LabelStoreService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["emitupdatetoallsubscribers",{"_index":1912,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["emoji_objects",{"_index":3109,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["empty",{"_index":900,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{}}}],["emptying",{"_index":2132,"title":{},"body":{"injectables/DataService.html":{}}}],["emptyresultslabel",{"_index":4093,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["emptysuggestionslabel",{"_index":4092,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["en",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["en_us",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["enable",{"_index":4872,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["enabled",{"_index":5088,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["enablehtml",{"_index":2502,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4623,"title":{},"body":{"interfaces/Positions.html":{}}}],["enabling",{"_index":5898,"title":{},"body":{"index.html":{}}}],["encoded",{"_index":3873,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodedid",{"_index":2049,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["encodelistid",{"_index":2113,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodelistid(id",{"_index":2137,"title":{},"body":{"injectables/DataService.html":{}}}],["encodelistid(ld",{"_index":3906,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodelistid(selector",{"_index":2125,"title":{},"body":{"injectables/DataService.html":{}}}],["encodenodeid",{"_index":1482,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["encodenodeid(id",{"_index":1516,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodenodeid(ld.node",{"_index":3907,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(nd",{"_index":3890,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encodenodeid(this.getnodeid(item",{"_index":4127,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["encodes",{"_index":3881,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["encoding",{"_index":3887,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["end",{"_index":1669,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["endcursor",{"_index":6015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoint",{"_index":1775,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["ensure",{"_index":5194,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ensures",{"_index":732,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["enter",{"_index":1443,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["entered",{"_index":2956,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/RegisterComponent.html":{}}}],["entirely",{"_index":5874,"title":{},"body":{"index.html":{}}}],["entities",{"_index":5492,"title":{},"body":{"classes/TimeFormatter.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["entity",{"_index":6090,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["entry",{"_index":2155,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["entry[1",{"_index":2908,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["enum",{"_index":1227,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/variables.html":{}}}],["enumdictionary",{"_index":2230,"title":{},"body":{"interfaces/FilterState.html":{},"miscellaneous/typealiases.html":{}}}],["enumerations",{"_index":5834,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":686,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2536,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environment.publicclientname",{"_index":5192,"title":{},"body":{"components/RegisterComponent.html":{}}}],["environment.signupurl",{"_index":2541,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["environments/environment",{"_index":687,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["epoch",{"_index":1821,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["equals",{"_index":915,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["equation",{"_index":3393,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["equivalent",{"_index":2025,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["err",{"_index":1615,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["err.message).join",{"_index":2516,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["error",{"_index":1041,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"modules/GraphQLModule.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('could",{"_index":3875,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["error('not",{"_index":6028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('parameters",{"_index":1927,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["error(`${nodetype[node.type",{"_index":6034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`${nodetype[type",{"_index":6038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(`unknown",{"_index":2880,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["error(err",{"_index":5126,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["error.status",{"_index":3945,"title":{},"body":{"components/LoginComponent.html":{}}}],["errorconfig",{"_index":5611,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["errorlink",{"_index":2510,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["errormessage",{"_index":5104,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["errorpolicy",{"_index":2495,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":673,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"interfaces/User.html":{}}}],["essentially",{"_index":3771,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["etc",{"_index":5196,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["even",{"_index":5156,"title":{},"body":{"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["event",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{}}}],["event.detail.currentviewwindow",{"_index":4495,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.dropposition",{"_index":4446,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.edge",{"_index":4436,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.eventsource",{"_index":4437,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node",{"_index":4471,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.node.type",{"_index":4482,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.rendered",{"_index":4578,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.shiftkey",{"_index":4507,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.detail.sourceevent.stopimmediatepropagation",{"_index":4522,"title":{},"body":{"interfaces/Positions.html":{}}}],["event.movementx",{"_index":1166,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.movementy",{"_index":1168,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["event.preventdefault",{"_index":4438,"title":{},"body":{"interfaces/Positions.html":{}}}],["eventemitter",{"_index":2815,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["eventlisteneroreventlistenerobject",{"_index":4576,"title":{},"body":{"interfaces/Positions.html":{}}}],["events",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/StateService.html":{}}}],["ex",{"_index":3447,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["example",{"_index":80,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/userMock.html":{}}}],["examplecomponent",{"_index":1685,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["examples",{"_index":3862,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["except",{"_index":6056,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["exclusive",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["execute",{"_index":6127,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["executed",{"_index":3210,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["execution",{"_index":4731,"title":{},"body":{"interfaces/Positions.html":{}}}],["exist",{"_index":2039,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/SideNavComponent.html":{}}}],["existing",{"_index":1475,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/TextFragment.html":{}}}],["exists",{"_index":924,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["exit",{"_index":1023,"title":{},"body":{"components/CommentComponent.html":{}}}],["expands",{"_index":3829,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["expected",{"_index":6048,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["expects",{"_index":5084,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["expitarion",{"_index":71,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["exports",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["expose",{"_index":670,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["exposes",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["exposing",{"_index":648,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["expression",{"_index":2962,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["extended",{"_index":3336,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["extending",{"_index":1248,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["extends",{"_index":1206,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["externally",{"_index":1812,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["extra",{"_index":2912,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["extract",{"_index":4469,"title":{},"body":{"interfaces/Positions.html":{}}}],["extractissueid(issuelist",{"_index":4568,"title":{},"body":{"interfaces/Positions.html":{}}}],["extracts",{"_index":4566,"title":{},"body":{"interfaces/Positions.html":{}}}],["f",{"_index":1935,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["f.subscribe",{"_index":5160,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["f0ad4e",{"_index":5564,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["fabian",{"_index":6132,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["fact",{"_index":6099,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["factor",{"_index":5683,"title":{},"body":{"classes/Vector.html":{}}}],["fade",{"_index":1670,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["fafafa",{"_index":5461,"title":{},"body":{"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fail",{"_index":3382,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["failed",{"_index":5103,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["fails",{"_index":671,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["false",{"_index":244,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":6083,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["family",{"_index":3583,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["fb",{"_index":1404,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["feature",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["feature_request",{"_index":4549,"title":{},"body":{"interfaces/Positions.html":{}}}],["featurerequestcount",{"_index":2380,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["featurerequests",{"_index":2390,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{}}}],["features",{"_index":5852,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["feed",{"_index":3033,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["feeds",{"_index":3026,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["fetch",{"_index":772,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/QueryListParams.html":{},"additional-documentation/managing-gropius.html":{}}}],["fetched",{"_index":4180,"title":{},"body":{"components/NodeDetailsComponent.html":{},"injectables/ProjectStoreService.html":{}}}],["fetches",{"_index":5007,"title":{},"body":{"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{}}}],["fetchpolicy",{"_index":2494,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["fetchuserfromstorage",{"_index":653,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["few",{"_index":5287,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ff0036",{"_index":2792,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TimelineItemComponent.html":{}}}],["fff",{"_index":274,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/TimelineItemComponent.html":{}}}],["field",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["fields",{"_index":724,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["file.run",{"_index":6126,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["files",{"_index":6077,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["files:run",{"_index":5846,"title":{},"body":{"index.html":{}}}],["fill",{"_index":2597,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["filter",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["filter'},{'name",{"_index":134,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["filter(([appstate",{"_index":3215,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filter(childid",{"_index":3286,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["filter(event",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["filter(f",{"_index":1991,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["filter(part",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["filter(timelineitem",{"_index":917,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["filter.component",{"_index":2586,"title":{},"body":{"modules/GraphsModule.html":{}}}],["filter.component.html",{"_index":2797,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.scss",{"_index":2796,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts",{"_index":2794,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.component.ts:116",{"_index":2814,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:118",{"_index":2813,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:120",{"_index":2816,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:123",{"_index":2846,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:124",{"_index":2845,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:127",{"_index":2842,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:129",{"_index":2847,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:131",{"_index":2848,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:137",{"_index":2828,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:147",{"_index":2839,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:157",{"_index":2831,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:167",{"_index":2819,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:180",{"_index":2834,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:195",{"_index":2822,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:210",{"_index":2824,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.component.ts:222",{"_index":2841,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.fullsearch",{"_index":2900,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter.username",{"_index":5636,"title":{},"body":{"injectables/UsersService.html":{}}}],["filter[id",{"_index":2902,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filter_list",{"_index":2906,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filterby",{"_index":5154,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["filterchange",{"_index":2812,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["filtered",{"_index":2341,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["filterelement",{"_index":2196,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filtering",{"_index":2187,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["filterlabel",{"_index":2177,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["filters",{"_index":2826,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{}}}],["filterselection",{"_index":2172,"title":{"interfaces/FilterSelection.html":{}},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["filterstate",{"_index":2225,"title":{"interfaces/FilterState.html":{}},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["filterstate.selectedcategories",{"_index":3220,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.labels",{"_index":3221,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filterstate.selectedfilter.texts",{"_index":3222,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["filtertext",{"_index":5026,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["filtervalue",{"_index":4910,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.tolowercase",{"_index":4979,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["filtervalue.trim",{"_index":4978,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["finally",{"_index":1025,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["find",{"_index":2205,"title":{},"body":{"interfaces/FilterSelection.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/LabelSearchComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["findidealcomponentposition(id",{"_index":4635,"title":{},"body":{"interfaces/Positions.html":{}}}],["finds",{"_index":4634,"title":{},"body":{"interfaces/Positions.html":{}}}],["finishcoalescing",{"_index":901,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["finished",{"_index":2763,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["finishediting",{"_index":2709,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/TextDisplayComponent.html":{}}}],["finishediting(save",{"_index":2716,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["finishediting(saved",{"_index":5439,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["finishes",{"_index":2718,"title":{},"body":{"components/IssueDetailComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fired",{"_index":1643,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["fires",{"_index":4868,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["first",{"_index":952,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["first_page",{"_index":1664,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["firstcomponent",{"_index":4719,"title":{},"body":{"interfaces/Positions.html":{}}}],["firstitem",{"_index":933,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.__typename",{"_index":935,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstitem.createdby.id",{"_index":955,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["firstkey",{"_index":2000,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstnode",{"_index":3820,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstnode.fixed",{"_index":3822,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["firstpage",{"_index":2013,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["firstpageitemid",{"_index":1999,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["fit",{"_index":4519,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{}}}],["fitgraphinview",{"_index":4750,"title":{},"body":{"interfaces/Positions.html":{}}}],["fits",{"_index":4749,"title":{},"body":{"interfaces/Positions.html":{}}}],["fix",{"_index":3500,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["fixed",{"_index":3732,"title":{},"body":{"classes/LayoutNode.html":{}}}],["fixme",{"_index":884,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["flag",{"_index":1759,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["flex",{"_index":1667,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["float",{"_index":90,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["float:right",{"_index":267,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["floating",{"_index":4889,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["flow",{"_index":2296,"title":{},"body":{"components/FrameComponent.html":{}}}],["flying",{"_index":3819,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["focus",{"_index":4863,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["folder",{"_index":1315,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"interfaces/Positions.html":{},"index.html":{}}}],["folderedgetypes",{"_index":1296,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["folderedgetypes.relatedto",{"_index":1280,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["foldernode",{"_index":4701,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernode.type",{"_index":4703,"title":{},"body":{"interfaces/Positions.html":{}}}],["foldernodes",{"_index":4698,"title":{},"body":{"interfaces/Positions.html":{}}}],["folders",{"_index":2428,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["following",{"_index":1931,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["font",{"_index":1633,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["force",{"_index":3787,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["forces",{"_index":2149,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["forgot",{"_index":3952,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":81,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"classes/TimeFormatter.html":{},"additional-documentation/using-gropius.html":{}}}],["format",{"_index":749,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{}}}],["formatcategorydescription",{"_index":3423,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategorydescription(category",{"_index":3437,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon",{"_index":3424,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatcategoryicon(issue",{"_index":3440,"title":{},"body":{"components/IssueListComponent.html":{}}}],["formatissueopentime",{"_index":2710,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["formatted",{"_index":4182,"title":{},"body":{"components/NodeDetailsComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter",{"_index":829,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["formatter.ts",{"_index":5466,"title":{},"body":{"classes/TimeFormatter.html":{},"coverage.html":{}}}],["formatter.ts:11",{"_index":5471,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:19",{"_index":5483,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatter.ts:48",{"_index":5490,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime",{"_index":5467,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattime(time",{"_index":5470,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference",{"_index":5468,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formattimedifference(datestring",{"_index":5482,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["formatting",{"_index":859,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{}}}],["formbuilder",{"_index":1398,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":246,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["formgroup",{"_index":3933,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["forward",{"_index":1933,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{}}}],["forward(f",{"_index":1998,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["found",{"_index":3867,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["fragment",{"_index":2208,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["fragments",{"_index":2189,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["frame",{"_index":1137,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{}}}],["frame'},{'name",{"_index":126,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["frame.component.html",{"_index":2253,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame.component.scss",{"_index":2252,"title":{},"body":{"components/FrameComponent.html":{}}}],["frame/frame.component",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["framecomponent",{"_index":125,"title":{"components/FrameComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["fri",{"_index":5474,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["fromat",{"_index":2412,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql",{"_index":2304,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlgraphcomponent",{"_index":2309,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlinterface",{"_index":2393,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgql(gqlissue",{"_index":2423,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromgqlnolinks",{"_index":2458,"title":{},"body":{"classes/GraphIssue.html":{}}}],["fromgqlnolinks(gqlpartialissue",{"_index":2418,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["fromsinglelist",{"_index":3995,"title":{},"body":{"classes/MultiSourceList.html":{}}}],["fromsinglelist(list",{"_index":4012,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["frontend",{"_index":2313,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/QueryListParams.html":{},"index.html":{},"additional-documentation/contributors.html":{}}}],["full",{"_index":86,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/LinkedIssueItemComponent.html":{}}}],["fullissue",{"_index":3842,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuelink",{"_index":3833,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["fullissuesub",{"_index":3843,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["funcion",{"_index":3454,"title":{},"body":{"components/IssueListComponent.html":{}}}],["function",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":5574,"title":{},"body":{"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["functionality",{"_index":858,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["functioning",{"_index":6072,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["functions",{"_index":1235,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["further",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/StateService.html":{},"index.html":{}}}],["fut.then(data",{"_index":1894,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["g",{"_index":1536,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"components/IssueLabelComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["g.append('circle",{"_index":3142,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["gamma",{"_index":3399,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["garbage",{"_index":2044,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["gather",{"_index":3911,"title":{},"body":{"components/LoginComponent.html":{}}}],["gathers",{"_index":3045,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["generate",{"_index":68,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["generated",{"_index":2601,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"additional-documentation/managing-gropius.html":{}}}],["generated/graphql",{"_index":830,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["generates",{"_index":6114,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["generatetoken",{"_index":32,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["generation",{"_index":5845,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["generation:run",{"_index":5849,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2603,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"components/MarkdownPreviewComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["generator.com",{"_index":6113,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["generic",{"_index":5151,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["getall",{"_index":5008,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getall(filtertext",{"_index":5024,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallfilter",{"_index":3710,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallfilter(projectid",{"_index":3715,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getallprojectsgql",{"_index":5015,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getallquery",{"_index":5014,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getalltimelineitems",{"_index":3596,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitems(id",{"_index":3652,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsgql",{"_index":3629,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getalltimelineitemsquery",{"_index":3628,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getbasiccomponent",{"_index":1319,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponent(id",{"_index":1343,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentgql",{"_index":1334,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getbasiccomponentquery",{"_index":1333,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getbasicproject",{"_index":5011,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicproject(id",{"_index":5027,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectgql",{"_index":5016,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getbasicprojectquery",{"_index":528,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{}}}],["getcomponent",{"_index":1367,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponent(id",{"_index":1380,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["getcomponentgql",{"_index":1328,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{}}}],["getcomponentinterfaces",{"_index":1320,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfaces(id",{"_index":1345,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesgql",{"_index":1336,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentinterfacesquery",{"_index":1335,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels",{"_index":1321,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabels(id",{"_index":1347,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsgql",{"_index":1332,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentlabelsquery",{"_index":1355,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getcomponentquery",{"_index":1356,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getconsumingcomponents",{"_index":2606,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponents(id",{"_index":2622,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsgql",{"_index":2615,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getconsumingcomponentsquery",{"_index":2614,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["getcurrent",{"_index":2087,"title":{},"body":{"classes/DataQuery.html":{}}}],["getcurrentuservalue",{"_index":684,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["getdefaultfortype",{"_index":5776,"title":{},"body":{"coverage.html":{}}}],["getdefaultfortype(predicates[type].type",{"_index":2889,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getdefaultfortype(type",{"_index":2878,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getencodedid",{"_index":5327,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getencodedid(item",{"_index":4126,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getfullcomponent",{"_index":1322,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponent(id",{"_index":1349,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullcomponentquery",{"_index":1327,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getfullissue",{"_index":3597,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissue(id",{"_index":3654,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullissuegraphdataquery",{"_index":2941,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getfullissuequery",{"_index":3606,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getfullproject",{"_index":5012,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullproject(id",{"_index":5029,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectgql",{"_index":5018,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfullprojectquery",{"_index":4946,"title":{},"body":{"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/userMock.html":{}}}],["getfullquery",{"_index":5017,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["getfulproject",{"_index":5006,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["gethasdata",{"_index":2085,"title":{},"body":{"classes/DataQuery.html":{}}}],["geticonlabel",{"_index":3317,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["geticonname",{"_index":3318,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["getimagedata",{"_index":3381,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["getinterface",{"_index":1368,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterface(id",{"_index":1382,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacegql",{"_index":1377,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/InterfaceStoreService.html":{}}}],["getinterfacequery",{"_index":2613,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["getissuefolderid",{"_index":1226,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["getissuefolderid(id",{"_index":1294,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuefolderid(node.id",{"_index":1276,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["getissuegql",{"_index":3607,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getissuegraphdatadocument",{"_index":2318,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuegraphdataforsearchgql",{"_index":2939,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdatagql",{"_index":2933,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getissuegraphdataquery",{"_index":2319,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["getissuelink",{"_index":3335,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["getissuequery",{"_index":3676,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["getlabelsgql",{"_index":3713,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getlabelsquery",{"_index":1331,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["getlinkhandles(g",{"_index":3148,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["getlist",{"_index":2103,"title":{},"body":{"injectables/DataService.html":{}}}],["getlist(id",{"_index":2107,"title":{},"body":{"injectables/DataService.html":{}}}],["getmatchinglabels",{"_index":3711,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getmatchinglabels(projectid",{"_index":3717,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["getnode",{"_index":2102,"title":{},"body":{"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnode(id",{"_index":2052,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["getnodeid",{"_index":5328,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["getnodeid(item",{"_index":4124,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["getnodename",{"_index":4165,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring",{"_index":4166,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getnodetypestring().tolowercase",{"_index":4279,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["getparams",{"_index":2089,"title":{},"body":{"classes/DataQuery.html":{}}}],["getproject",{"_index":5043,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getproject(id",{"_index":5051,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getprojectgql",{"_index":5048,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["getqueryparamfilter",{"_index":3425,"title":{},"body":{"components/IssueListComponent.html":{}}}],["getremainingtypes",{"_index":2806,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["getremainingtypes(index",{"_index":2827,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["gets",{"_index":878,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["getsearchissuegraphdataquery",{"_index":2938,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["getselectedcategories",{"_index":3039,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["getsubscribercount",{"_index":2092,"title":{},"body":{"classes/DataQuery.html":{}}}],["gettext",{"_index":5446,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["getting",{"_index":5839,"title":{"index.html":{}},"body":{"index.html":{}}}],["gettotalcount",{"_index":5280,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["github",{"_index":1445,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["github/time",{"_index":5810,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1246,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["given",{"_index":838,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["gives",{"_index":4591,"title":{},"body":{"interfaces/Positions.html":{}}}],["glitch",{"_index":3857,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["global",{"_index":1957,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["globalconfig",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["gm",{"_index":4667,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.addnodetogroup(node.id",{"_index":4677,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.markastreeroot(node.id",{"_index":4669,"title":{},"body":{"interfaces/Positions.html":{}}}],["gm.setgroupbehaviourof",{"_index":4672,"title":{},"body":{"interfaces/Positions.html":{}}}],["gmt+0200",{"_index":5478,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["gotolocationdetails",{"_index":3562,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["gql",{"_index":2035,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"classes/NodeCache.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gqlcomponent.id",{"_index":2410,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent",{"_index":2310,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlgraphcomponent.featurerequests.totalcount",{"_index":2405,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.id",{"_index":2407,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.name",{"_index":2408,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponent.unclassified.totalcount",{"_index":2406,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlgraphcomponents",{"_index":2316,"title":{},"body":{"classes/GraphComponent.html":{}}}],["gqlinterface",{"_index":2388,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlinterface.component.id",{"_index":2399,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.consumedby.nodes.map(component",{"_index":2400,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.featurerequests.totalcount",{"_index":2395,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.id",{"_index":2397,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.name",{"_index":2398,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterface.unclassified.totalcount",{"_index":2396,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlinterfaces",{"_index":2457,"title":{},"body":{"classes/GraphInterface.html":{}}}],["gqlissue",{"_index":2413,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["gqlissue.linkstoissues.nodes.map(gqlpartialissue",{"_index":2426,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue",{"_index":2417,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.category",{"_index":2420,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.id",{"_index":2419,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["gqlpartialissue.locations.nodes.map(location",{"_index":2421,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["granularity",{"_index":6093,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["graph",{"_index":138,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"modules.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["graph'},{'name",{"_index":136,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["graph.addeventlistener('click",{"_index":4492,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeadd",{"_index":4400,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgedrop",{"_index":4405,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('edgeremove",{"_index":4402,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeadd",{"_index":4481,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodeclick",{"_index":4462,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodedragend",{"_index":4470,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('nodepositionchange",{"_index":4464,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('noderemove",{"_index":4484,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('render",{"_index":4488,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.addeventlistener('zoomchange",{"_index":4493,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.calculatelinkhandlesforedge",{"_index":3175,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["graph.component",{"_index":1092,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["graph.component.css",{"_index":4321,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.html",{"_index":4320,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.component.ts",{"_index":4294,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["graph.dynamictemplateregistry.adddynamictemplate('issue",{"_index":3139,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["graph.getedge(edge.createdfrom",{"_index":4414,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getedgesbysource(sourcenode.id).foreach((existingedge",{"_index":4428,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.source",{"_index":4410,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(edge.target",{"_index":4459,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.getnode(rootid",{"_index":4553,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.groupingmanager.gettreerootof(node.id",{"_index":4551,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.nodelist.foreach((node",{"_index":4426,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.oncreatedraggededge",{"_index":4395,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.ondraggededgetargetchange",{"_index":4398,"title":{},"body":{"interfaces/Positions.html":{}}}],["graph.setedgeclass",{"_index":3022,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph.setnodeclass",{"_index":3015,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["graph/class",{"_index":2994,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["graph/dynamic",{"_index":3126,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["graph/graph",{"_index":1211,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graph/group",{"_index":3227,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"coverage.html":{}}}],["graph/issue",{"_index":1091,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["graph/link",{"_index":3151,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["graph_structure_documentation.png",{"_index":3253,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["graphcomponent",{"_index":1208,"title":{"classes/GraphComponent.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphcomponent.fromgql(gqlcomponent",{"_index":2411,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphcomponent.mapfromgql(data.node.components.nodes",{"_index":2357,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdata",{"_index":2331,"title":{"interfaces/GraphData.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["graphdata.graphlocations.values",{"_index":2349,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphdatafactory",{"_index":2337,"title":{"classes/GraphDataFactory.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"coverage.html":{}}}],["graphdatafactory.graphdatafromgql",{"_index":2954,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdatafactory.removefiltereddata(graphdatafactory.graphdatafromgql(result.data",{"_index":2982,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["graphdataforfilter",{"_index":3088,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["graphdataforfilter(filter",{"_index":3195,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["graphdatafromgql",{"_index":2446,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["graphdatafromgql(data",{"_index":2356,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphedit.zoomtobox(box",{"_index":4737,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor",{"_index":1249,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["grapheditor.getnode(childid",{"_index":3295,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grapheditor.zoomtobox",{"_index":4728,"title":{},"body":{"interfaces/Positions.html":{}}}],["grapheditor.zoomtobox(box",{"_index":4727,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfirstrender",{"_index":4332,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphfolder",{"_index":2327,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphical",{"_index":5903,"title":{},"body":{"index.html":{}}}],["graphically",{"_index":5900,"title":{},"body":{"index.html":{}}}],["graphinitialized",{"_index":4334,"title":{},"body":{"interfaces/Positions.html":{}}}],["graphinterface",{"_index":1209,"title":{"classes/GraphInterface.html":{}},"body":{"interfaces/ComponentNode.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["graphinterface.fromgql(gqlinterface",{"_index":2403,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphinterface.mapfromgql(data.node.interfaces.nodes",{"_index":2358,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphissue",{"_index":2336,"title":{"classes/GraphIssue.html":{}},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"coverage.html":{}}}],["graphissue.fromgql(gqlissue",{"_index":2361,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphlink",{"_index":5387,"title":{},"body":{"components/SideNavComponent.html":{}}}],["graphlocation",{"_index":2328,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["graphlocations",{"_index":2332,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["graphql",{"_index":1422,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"modules/GraphQLModule.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphql.module",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["graphql.module.ts",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlerrors",{"_index":2513,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlerrors.map(err",{"_index":2515,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["graphqlmodule",{"_index":333,"title":{"modules/GraphQLModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphs/graphs.module",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["graphs/issue",{"_index":497,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["graphsmodule",{"_index":334,"title":{"modules/GraphsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["graphstateservice",{"_index":3097,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["graphwrapper",{"_index":4325,"title":{},"body":{"interfaces/Positions.html":{}}}],["gray",{"_index":4891,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TextDisplayComponent.html":{}}}],["green",{"_index":273,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["grid",{"_index":2289,"title":{},"body":{"components/FrameComponent.html":{}}}],["gropius",{"_index":284,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["gropius.p.s",{"_index":5853,"title":{},"body":{"index.html":{}}}],["group",{"_index":1231,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["groupbehaviour",{"_index":3229,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["grouping",{"_index":4662,"title":{},"body":{"interfaces/Positions.html":{}}}],["groupnode",{"_index":3241,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.add(childgroup",{"_index":3307,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.issuegroupnodeids.delete(childgroup",{"_index":3308,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.position",{"_index":3278,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.type",{"_index":3263,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.x",{"_index":3270,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groupnode.y",{"_index":3271,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["groups",{"_index":4300,"title":{},"body":{"interfaces/Positions.html":{}}}],["grow",{"_index":3116,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["gs",{"_index":1405,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["guard",{"_index":609,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":610,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gui",{"_index":3928,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["h2",{"_index":4890,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["hack",{"_index":3499,"title":{},"body":{"components/IssueListComponent.html":{}}}],["hand",{"_index":5573,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handels",{"_index":2950,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["handle",{"_index":3138,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handleclick",{"_index":5577,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["handled",{"_index":953,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["handler",{"_index":3839,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["handles",{"_index":966,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["handles.service",{"_index":4310,"title":{},"body":{"interfaces/Positions.html":{}}}],["handles.service.ts",{"_index":3153,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"coverage.html":{}}}],["handles.service.ts:101",{"_index":3163,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:22",{"_index":3165,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.service.ts:65",{"_index":3159,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles.sourcehandles",{"_index":3178,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["handles/issue",{"_index":3152,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["handling",{"_index":866,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["handset",{"_index":2251,"title":{},"body":{"components/FrameComponent.html":{}}}],["happen",{"_index":3826,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["happens",{"_index":1789,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hardcoded",{"_index":4897,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/userMock.html":{}}}],["hasdata",{"_index":1787,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hasin",{"_index":3324,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasmore",{"_index":3990,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hasn't",{"_index":3840,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{}}}],["hasnextpage",{"_index":1968,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasout",{"_index":3326,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["hasprevious/nextpage",{"_index":1953,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["haspreviouspage",{"_index":1967,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":2011,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["having",{"_index":1715,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["header",{"_index":2301,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["header'},{'name",{"_index":171,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["header.component",{"_index":2585,"title":{},"body":{"modules/GraphsModule.html":{}}}],["header.component.html",{"_index":4820,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.scss",{"_index":4819,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts",{"_index":4818,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:12",{"_index":4823,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":4822,"title":{},"body":{"components/ProjectHeaderComponent.html":{}}}],["header/project",{"_index":2584,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectHeaderComponent.html":{},"coverage.html":{}}}],["headers",{"_index":2505,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["headline",{"_index":4887,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["height",{"_index":263,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["help",{"_index":3111,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["helper",{"_index":2917,"title":{},"body":{"components/IssueFilterComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["hence",{"_index":1971,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{}}}],["here",{"_index":1939,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"index.html":{}}}],["heuristic",{"_index":4116,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["hidden",{"_index":2300,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["hide",{"_index":4803,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/TimelineItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["hides",{"_index":5594,"title":{},"body":{"components/UserItemComponent.html":{}}}],["highlight",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["highlighting",{"_index":3957,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["hold",{"_index":1316,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["holding",{"_index":678,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["holds",{"_index":2234,"title":{},"body":{"components/FrameComponent.html":{}}}],["home",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/TopToolbarComponent.html":{}}}],["hook",{"_index":876,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["horizontal",{"_index":4831,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["host",{"_index":3329,"title":{},"body":{"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/SetEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hostlistener",{"_index":1081,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mousemove",{"_index":1162,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["hostlistener('window:mouseup",{"_index":1160,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["host}/api",{"_index":5947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/api/public",{"_index":5949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host}/login",{"_index":5951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":5515,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hours",{"_index":5504,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["hsp",{"_index":3388,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["html",{"_index":93,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["htmlelement",{"_index":4865,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["http",{"_index":661,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["http://alienryderflex.com/hsp.html",{"_index":3394,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["http://ccims.github.io/ccims",{"_index":5848,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":5844,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["http://localhost:6060",{"_index":6080,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["http://localhost:8080",{"_index":5952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":659,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["httpclientmodule",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["httperrorresponse",{"_index":3935,"title":{},"body":{"components/LoginComponent.html":{}}}],["httplink",{"_index":2474,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink.create({uri",{"_index":2535,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://github.com/ccims/ccims",{"_index":5858,"title":{},"body":{"index.html":{}}}],["https://graphql",{"_index":6112,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["hue",{"_index":3389,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["hydrate",{"_index":5253,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["hydrated",{"_index":1858,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrateinitial(data",{"_index":2026,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydratelist",{"_index":2036,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateraw",{"_index":1699,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["hydrateraw(prepareddata",{"_index":1720,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydrates",{"_index":2021,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["hydration",{"_index":1861,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["hyperlink",{"_index":3339,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["i.c.insertnodes(data",{"_index":6018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.assignees.nodes",{"_index":6001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.components.nodes",{"_index":5963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.interfaces.nodes",{"_index":5970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issues.nodes",{"_index":5974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.issuesonlocation.nodes",{"_index":5980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.labels.nodes",{"_index":5994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkedbyissues.nodes",{"_index":6010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.linkstoissues.nodes",{"_index":6005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.locations.nodes",{"_index":5990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.node.timeline.nodes",{"_index":5985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.c.insertnodes(data.projects.nodes",{"_index":5958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.consumedby.nodes",{"_index":4241,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.consumedby.nodes.length",{"_index":4237,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.e",{"_index":771,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["i.name",{"_index":4236,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["i.q.components.getcomponent(id).then(data",{"_index":6021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.getinterface(id).then(data",{"_index":6022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectcomponents(list.node.id",{"_index":5959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.components.listprojectinterfaces(list.node.id",{"_index":5967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getissueheader(id).then(data",{"_index":6023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.getlabel(id).then(data",{"_index":6030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentinterfaceissuesonlocation(list.node.id",{"_index":5981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissues(list.node.id",{"_index":5975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentissuesonlocation(list.node.id",{"_index":5976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listcomponentlabels(list.node.id",{"_index":5995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissueassignees(list.node.id",{"_index":5998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuecomponents(list.node.id",{"_index":5964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelabels(list.node.id",{"_index":5996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkedbyissues(list.node.id",{"_index":6007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelinkstoissues(list.node.id",{"_index":6002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuelocations(list.node.id",{"_index":5987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listissuetimelineitems(list.node.id",{"_index":5982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listlabelcomponents(list.node.id",{"_index":5966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectissues(list.node.id",{"_index":5971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.issues.listprojectlabels(list.node.id",{"_index":5991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.getproject(id).then(data",{"_index":6019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.projects.listprojects(listparams(params)).then(data",{"_index":5955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.currentuser().then(data",{"_index":6025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i.q.users.searchusers(params.filter",{"_index":6011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i1",{"_index":3448,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icomponent",{"_index":3478,"title":{},"body":{"components/IssueListComponent.html":{}}}],["icon",{"_index":2240,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["icon'},{'name",{"_index":141,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["icon.component",{"_index":2579,"title":{},"body":{"modules/GraphsModule.html":{}}}],["icon.component.html",{"_index":3316,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.scss",{"_index":3315,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts",{"_index":3314,"title":{},"body":{"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:13",{"_index":3319,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:15",{"_index":3321,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon.component.ts:33",{"_index":3320,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["icon/issue",{"_index":2578,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueIconComponent.html":{},"coverage.html":{}}}],["icondefinition",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["iconname",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["icons",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["id.split",{"_index":3878,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["idea",{"_index":5868,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":4530,"title":{},"body":{"interfaces/Positions.html":{}}}],["identical",{"_index":3795,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["identified",{"_index":1680,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["identifier",{"_index":1865,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{}}}],["identifies",{"_index":3861,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["identity",{"_index":3886,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["ids",{"_index":1474,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["idt",{"_index":2024,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["id}).pipe",{"_index":3691,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["id}__${issuecategory",{"_index":1295,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["if(this.mode",{"_index":5372,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["if(this.modeicon",{"_index":5374,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["ifempty",{"_index":2869,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["iff",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{}}}],["ignore",{"_index":1011,"title":{},"body":{"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UserNotifyService.html":{}}}],["ignored",{"_index":2058,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ignoring",{"_index":2415,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["imagedata",{"_index":3375,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["imagedata.data[0",{"_index":3377,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["imagedata.data[1",{"_index":3378,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["imagedata.data[2",{"_index":3379,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["img",{"_index":4833,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["immediately",{"_index":1716,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["immutable",{"_index":3772,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["implementation",{"_index":1884,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["implementations",{"_index":3255,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["implemented",{"_index":6029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["import",{"_index":53,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["important",{"_index":5416,"title":{},"body":{"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{}}}],["imported",{"_index":2550,"title":{},"body":{"modules/GraphsModule.html":{}}}],["imports",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["improve",{"_index":6102,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["ims",{"_index":1419,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["imstype",{"_index":1399,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["imstype.github",{"_index":1429,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["in(black",{"_index":1671,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["inarray",{"_index":2833,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["include",{"_index":3766,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"index.html":{}}}],["included",{"_index":4011,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["includes",{"_index":1232,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["including",{"_index":1576,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"additional-documentation/using-gropius.html":{}}}],["incorrect",{"_index":5635,"title":{},"body":{"injectables/UsersService.html":{}}}],["indented",{"_index":2148,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["independence",{"_index":5883,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1690,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicates",{"_index":2719,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["indicating",{"_index":3047,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/RegisterComponent.html":{}}}],["indication",{"_index":5085,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indicator",{"_index":5092,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["indirection",{"_index":3988,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["individual",{"_index":819,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/FrameComponent.html":{}}}],["individualconfig",{"_index":2481,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["inelegant",{"_index":1840,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["infinite",{"_index":5661,"title":{},"body":{"classes/Vector.html":{}}}],["infinitely",{"_index":5662,"title":{},"body":{"classes/Vector.html":{}}}],["infix",{"_index":2778,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["infoconfig",{"_index":5613,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["information",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["inherit",{"_index":2295,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inherited",{"_index":1704,"title":{},"body":{"classes/DataNode.html":{}}}],["inidcate",{"_index":5080,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["initgraph",{"_index":3000,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["initial",{"_index":1627,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["initialized",{"_index":4333,"title":{},"body":{"interfaces/Positions.html":{}}}],["initializes",{"_index":4352,"title":{},"body":{"interfaces/Positions.html":{}}}],["initially",{"_index":3964,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["initialposition",{"_index":3258,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["initiated",{"_index":3446,"title":{},"body":{"components/IssueListComponent.html":{}}}],["inject",{"_index":249,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["inject(component_context_menu_data",{"_index":1073,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["inject(mat_dialog_data",{"_index":242,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["injectable",{"_index":529,"title":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{}},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["injectable({providedin",{"_index":689,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{}}}],["injectables",{"_index":643,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":1310,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["injection",{"_index":6086,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["injectiontoken",{"_index":1082,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injectiontoken('component_context_menu_data",{"_index":1103,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1083,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["injector)).instance",{"_index":1128,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["inline",{"_index":2782,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["inmemorycache",{"_index":2472,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["inner",{"_index":1843,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["innermapfn",{"_index":1847,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerquery/mapfn",{"_index":1839,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["innerqueryfn",{"_index":1808,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inout",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["input",{"_index":723,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputs",{"_index":763,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["inputtitle",{"_index":2703,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["insert",{"_index":1958,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertnodes",{"_index":4151,"title":{},"body":{"classes/NodeCache.html":{}}}],["insertnodes(nodes",{"_index":2059,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["insertresult(result",{"_index":1919,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inserts",{"_index":2056,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["inset",{"_index":3553,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["inside",{"_index":3455,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["instance",{"_index":2491,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["instances",{"_index":3005,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["instantiate",{"_index":5286,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["instantiated",{"_index":1250,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["instead",{"_index":817,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["int",{"_index":4225,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["int.node",{"_index":4226,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["inteface",{"_index":6054,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["intended",{"_index":5082,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["interact",{"_index":5908,"title":{},"body":{"index.html":{}}}],["interacting",{"_index":1770,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["interaction",{"_index":227,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["interactive",{"_index":1696,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{}}}],["interest",{"_index":2955,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["interested",{"_index":3205,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["interface",{"_index":118,"title":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"interfaces/GraphData.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["interface.graphql",{"_index":2604,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["interface/:interfaceid",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["interfaceconsumer",{"_index":1228,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["interfaceid",{"_index":1289,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["interfacenode",{"_index":1216,"title":{"interfaces/InterfaceNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["interfacenode.dataaspromise().then(data",{"_index":3501,"title":{},"body":{"components/IssueListComponent.html":{}}}],["interfacenode.id",{"_index":4653,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes",{"_index":4600,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacenodes.foreach(interfacenode",{"_index":4614,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfaceofferingcomponents",{"_index":2372,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaceofferingcomponents.has(id",{"_index":2377,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{},"index.html":{},"overview.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["interfaces.get(interfaceid).offeredby",{"_index":2375,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.has(locationid)).map(interfaceid",{"_index":2374,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["interfaces.node.interfaces.nodes",{"_index":4234,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["interfacesize",{"_index":4755,"title":{},"body":{"interfaces/Positions.html":{}}}],["interfacestore",{"_index":1554,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["interfacestoreservice",{"_index":1550,"title":{"injectables/InterfaceStoreService.html":{}},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["internal",{"_index":1012,"title":{},"body":{"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["interplay",{"_index":3256,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["intrface",{"_index":4602,"title":{},"body":{"interfaces/Positions.html":{}}}],["intrface.id",{"_index":1263,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.name",{"_index":1264,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["intrface.offeredby",{"_index":1266,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["introducing",{"_index":6103,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["introduction",{"_index":5861,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":1441,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["invalidate",{"_index":1700,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidatelists",{"_index":2105,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidatelists(selector",{"_index":2110,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidates",{"_index":2112,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidating",{"_index":2129,"title":{},"body":{"injectables/DataService.html":{}}}],["invalidation",{"_index":1818,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["invalidcredentials",{"_index":3915,"title":{},"body":{"components/LoginComponent.html":{}}}],["invisible",{"_index":4654,"title":{},"body":{"interfaces/Positions.html":{}}}],["invoke",{"_index":6117,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["invoked",{"_index":621,"title":{},"body":{"guards/AuthGuard.html":{}}}],["invokes",{"_index":2953,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["involves",{"_index":2154,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["irrelevant",{"_index":3201,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["isbehind",{"_index":5645,"title":{},"body":{"classes/Vector.html":{}}}],["isbehind(source",{"_index":5670,"title":{},"body":{"classes/Vector.html":{}}}],["isclosed",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["iscoalesced",{"_index":822,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iscolordark",{"_index":3353,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["iscolordark(color",{"_index":3355,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["iscomponent",{"_index":3563,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["isduplicate",{"_index":2863,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isfilterlabel",{"_index":2182,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["isfilterlabel(item)).map(item",{"_index":2211,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["isfilterlabel(label",{"_index":2214,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{}}}],["ishandset",{"_index":2254,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["isinset",{"_index":5329,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["isinset(item",{"_index":4128,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isissuebody",{"_index":982,"title":{},"body":{"components/CommentComponent.html":{}}}],["islinkedbyissues",{"_index":2870,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":3916,"title":{},"body":{"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["islocalset",{"_index":4097,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["isn't",{"_index":4529,"title":{},"body":{"interfaces/Positions.html":{}}}],["isnextsublazy",{"_index":1863,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["isopen",{"_index":2861,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["isprojectset",{"_index":2255,"title":{},"body":{"components/FrameComponent.html":{}}}],["isprojecturl",{"_index":5417,"title":{},"body":{"injectables/StateService.html":{}}}],["isprojecturl(url",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["isright",{"_index":6042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":120,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["issue$.current?.usercaneditissue",{"_index":2738,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issue's",{"_index":990,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["issue.assignees.nodes",{"_index":3537,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.assigneesstring",{"_index":3534,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.category",{"_index":2437,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["issue.createdby.displayname",{"_index":3541,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.graphql",{"_index":3593,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issue.id",{"_index":4569,"title":{},"body":{"interfaces/Positions.html":{}}}],["issue.isopen",{"_index":3482,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labels.nodes",{"_index":3539,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.labelsstring",{"_index":3535,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.linksissues",{"_index":2425,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issue.search",{"_index":3542,"title":{},"body":{"components/IssueListComponent.html":{}}}],["issue.title",{"_index":2764,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueItemComponent.html":{}}}],["issuecategory",{"_index":1212,"title":{},"body":{"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/typealiases.html":{}}}],["issuecategory.bug",{"_index":2385,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.featurerequest",{"_index":2386,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory.unclassified",{"_index":2387,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["issuecategory[key",{"_index":4686,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecategorycomponent",{"_index":127,"title":{"components/IssueCategoryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecomment",{"_index":1005,"title":{},"body":{"components/CommentComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuecontainersize",{"_index":4756,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecontentscomponent",{"_index":129,"title":{"components/IssueContentsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuecount",{"_index":1274,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuecounts",{"_index":4683,"title":{},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["issuecounts(bugcount",{"_index":2384,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlgraphcomponent.bugs.totalcount",{"_index":2404,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts(gqlinterface.bugs.totalcount",{"_index":2394,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issuecounts.get(issuecategory",{"_index":4688,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuecounts.has(issuecategory",{"_index":4687,"title":{},"body":{"interfaces/Positions.html":{}}}],["issued",{"_index":4343,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuedata",{"_index":1565,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["issuedetailcomponent",{"_index":131,"title":{"components/IssueDetailComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueeditable",{"_index":2704,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuefilter",{"_index":2795,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{}}}],["issuefiltercomponent",{"_index":133,"title":{"components/IssueFilterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["issuefoldernode",{"_index":1273,"title":{"interfaces/IssueFolderNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuefoldernode.id",{"_index":4693,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraph",{"_index":1104,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{}}}],["issuegraphapiservice",{"_index":2924,"title":{"injectables/IssueGraphApiService.html":{}},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["issuegraphclasssettersservice",{"_index":2993,"title":{"injectables/IssueGraphClassSettersService.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphcomponent",{"_index":135,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponent",{"_index":137,"title":{"components/IssueGraphControlsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuegraphcontrolscomponents",{"_index":4344,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphdynamictemplateregistryservice",{"_index":3125,"title":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphlinkhandlesservice",{"_index":3150,"title":{"injectables/IssueGraphLinkHandlesService.html":{}},"body":{"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegraphnodes",{"_index":4306,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createcomponentnode(component",{"_index":4598,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createinterfacenode(intrface",{"_index":4603,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuefoldernode(node",{"_index":4689,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createissuegroupcontainernode(node",{"_index":4670,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.createrelationedge(foldernode.id",{"_index":4705,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.getissuefolderid(issuenodeid",{"_index":4706,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.interfacenode",{"_index":4644,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode",{"_index":4607,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.issuenode[]).concat(interfacenodes",{"_index":4606,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.component",{"_index":4419,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interface",{"_index":4420,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.interfaceconsumer",{"_index":4433,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.nodetype.issuegroupcontainer",{"_index":4472,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphnodes.position",{"_index":4450,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegraphstateservice",{"_index":1400,"title":{"injectables/IssueGraphStateService.html":{}},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainer",{"_index":1230,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["issuegroupcontainerbehaviour",{"_index":3226,"title":{"classes/IssueGroupContainerBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainernode",{"_index":1217,"title":{"interfaces/IssueGroupContainerNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuegroupcontainernode.id",{"_index":4678,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupcontainerparentbehaviour",{"_index":3257,"title":{"classes/IssueGroupContainerParentBehaviour.html":{}},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["issuegroupcontainerparentbehaviour(initialposition",{"_index":4673,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroupnodeids",{"_index":1267,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["issuegroupparents",{"_index":4336,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuegroups",{"_index":4295,"title":{},"body":{"interfaces/Positions.html":{}}}],["issueheadercomponent",{"_index":4825,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["issueiconcomponent",{"_index":140,"title":{"components/IssueIconComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueid",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["issueinput",{"_index":3648,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["issueitemcomponent",{"_index":142,"title":{"components/IssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelabelcomponent",{"_index":144,"title":{"components/IssueLabelComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelist",{"_index":4567,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuelistcomponent",{"_index":146,"title":{"components/IssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelistid",{"_index":4161,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["issuelistparams",{"_index":5927,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["issuelocation",{"_index":3565,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["issuelocationcomponent",{"_index":148,"title":{"components/IssueLocationComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issuelocations",{"_index":3898,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuenode",{"_index":1207,"title":{"interfaces/IssueNode.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["issuenodeid",{"_index":2744,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["issuenodes",{"_index":4605,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.foreach(node",{"_index":4608,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuenodes.length",{"_index":4619,"title":{},"body":{"interfaces/Positions.html":{}}}],["issuepage",{"_index":2320,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["issueregex",{"_index":2985,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issueregex}).pipe",{"_index":2988,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/ComponentNode.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"injectables/QueriesService.html":{},"interfaces/RelationEdge.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["issues&quot",{"_index":2969,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["issues.service",{"_index":5066,"title":{},"body":{"injectables/QueriesService.html":{}}}],["issuesidebarcomponent",{"_index":150,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["issueslink",{"_index":5388,"title":{},"body":{"components/SideNavComponent.html":{}}}],["issuesonlocation",{"_index":3897,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuesservice",{"_index":5059,"title":{},"body":{"injectables/QueriesService.html":{},"coverage.html":{}}}],["issuestoreservice",{"_index":3587,"title":{"injectables/IssueStoreService.html":{}},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["issuestub",{"_index":3828,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuestub.title",{"_index":3851,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["issuesub",{"_index":2705,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["issuetimelineitem",{"_index":824,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["issuing",{"_index":5186,"title":{},"body":{"components/RegisterComponent.html":{}}}],["iszero",{"_index":5646,"title":{},"body":{"classes/Vector.html":{}}}],["it's",{"_index":618,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["italic",{"_index":5464,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["item",{"_index":88,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["item's",{"_index":927,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item'},{'name",{"_index":143,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"modules/GraphsModule.html":{}}}],["item.component.html",{"_index":3334,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.name",{"_index":2911,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["item.component.scss",{"_index":3333,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts",{"_index":3332,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:12",{"_index":5570,"title":{},"body":{"directives/TimelineSingleItemDirective.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:13",{"_index":3342,"title":{},"body":{"components/IssueItemComponent.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["item.component.ts:14",{"_index":5595,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:15",{"_index":3340,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:16",{"_index":5593,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:17",{"_index":3338,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:19",{"_index":3337,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["item.component.ts:22",{"_index":3837,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:24",{"_index":3343,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:25",{"_index":5520,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{}}}],["item.component.ts:27",{"_index":3841,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:31",{"_index":3835,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:37",{"_index":5568,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:38",{"_index":5569,"title":{},"body":{"directives/TimelineItemDeletedDirective.html":{}}}],["item.component.ts:42",{"_index":3838,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["item.component.ts:54",{"_index":5541,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:56",{"_index":5540,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:59",{"_index":5543,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:61",{"_index":5545,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:63",{"_index":5544,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:65",{"_index":5542,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.component.ts:66",{"_index":5539,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["item.createdby",{"_index":930,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.createdby.displayname",{"_index":931,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.id",{"_index":2201,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["item.label",{"_index":844,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.linkedissue",{"_index":855,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.location",{"_index":851,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.name",{"_index":1538,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["item.removedcomponent",{"_index":849,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlabel",{"_index":846,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlinkedissue",{"_index":857,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item.removedlocation",{"_index":853,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["item/issue",{"_index":2575,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueItemComponent.html":{},"coverage.html":{}}}],["item/user",{"_index":2577,"title":{},"body":{"modules/GraphsModule.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item::before",{"_index":5562,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["itemdirective",{"_index":206,"title":{"directives/ItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["itemfilterfunction",{"_index":836,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/typealiases.html":{}}}],["itemfilterfunction|undefined",{"_index":942,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemops",{"_index":4088,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["items",{"_index":809,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["items.filter(x",{"_index":3724,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["items.push(item",{"_index":4078,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.splice(this.limit",{"_index":4082,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["items.values",{"_index":906,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["items/events",{"_index":820,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["itemtemplate",{"_index":761,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["itemtype",{"_index":907,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["iterate",{"_index":3792,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["itself",{"_index":2246,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["javascript",{"_index":1854,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{}}}],["jimmy",{"_index":6134,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["join",{"_index":2990,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["json",{"_index":4713,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(atob(response.token.split('.')[1",{"_index":707,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(data",{"_index":4385,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(localstorage.getitem(this.userstoragekey",{"_index":695,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["json.parse(previousboundingboxasstring",{"_index":4722,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring",{"_index":4723,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.parse(zoomtransformasstring).k",{"_index":4741,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentviewwindow",{"_index":4366,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.graph.currentzoomtransform",{"_index":4364,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(this.savedpositions",{"_index":4392,"title":{},"body":{"interfaces/Positions.html":{}}}],["json.stringify(user",{"_index":697,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["jump",{"_index":4983,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["jumps",{"_index":4869,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["justify",{"_index":1668,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["jwt",{"_index":646,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["k",{"_index":2231,"title":{},"body":{"interfaces/FilterState.html":{}}}],["keep",{"_index":701,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["keeps",{"_index":2040,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["key",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["key.split",{"_index":4067,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["keyed",{"_index":2856,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":1636,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["keys",{"_index":2004,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{}}}],["keys[keys.length",{"_index":2006,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["keyset",{"_index":1514,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.add(encodenodeid(item",{"_index":1519,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.delete(encodenodeid(item",{"_index":1521,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyset.has(encodenodeid(item",{"_index":1517,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["keyword",{"_index":3443,"title":{},"body":{"components/IssueListComponent.html":{},"components/MarkdownPreviewComponent.html":{}}}],["keywords",{"_index":3456,"title":{},"body":{"components/IssueListComponent.html":{}}}],["kliment",{"_index":6136,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["klimentov",{"_index":6137,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["knowledge",{"_index":1974,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["kristina",{"_index":6138,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["label",{"_index":115,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["label'},{'name",{"_index":145,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["label.component",{"_index":2572,"title":{},"body":{"modules/GraphsModule.html":{}}}],["label.component.html",{"_index":3352,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.scss",{"_index":3351,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts",{"_index":3350,"title":{},"body":{"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label.component.ts:37",{"_index":3354,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.component.ts:44",{"_index":3356,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["label.id",{"_index":2984,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label.name",{"_index":3540,"title":{},"body":{"components/IssueListComponent.html":{}}}],["label/issue",{"_index":2571,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLabelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["label/label",{"_index":2974,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["label?.name",{"_index":3403,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["labeled",{"_index":5425,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["labelledevent",{"_index":843,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["labels",{"_index":1473,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["labels.length",{"_index":2978,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labels.map(label",{"_index":2983,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["labelsearch",{"_index":3037,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["labelsearchcomponent",{"_index":152,"title":{"components/LabelSearchComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["labelsinput",{"_index":2194,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelsloading",{"_index":2193,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstore",{"_index":2197,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["labelstoreservice",{"_index":2183,"title":{"injectables/LabelStoreService.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{}}}],["labeltext",{"_index":5431,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["landing",{"_index":4836,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["language",{"_index":2964,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"components/MarkdownEditorComponent.html":{}}}],["larger",{"_index":3953,"title":{},"body":{"components/LoginComponent.html":{}}}],["last",{"_index":1815,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{}}}],["last_height",{"_index":1134,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["last_width",{"_index":1132,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["lastloadtime",{"_index":1824,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastpageitemid",{"_index":2003,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["lastqueriedprojectname",{"_index":4839,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["latter",{"_index":6071,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["layer",{"_index":3987,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["layour",{"_index":4776,"title":{},"body":{"interfaces/Positions.html":{}}}],["layout",{"_index":2131,"title":{},"body":{"injectables/DataService.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["layout.ts",{"_index":3730,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layout.ts:100",{"_index":5680,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:109",{"_index":5667,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:123",{"_index":5660,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:133",{"_index":5672,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:143",{"_index":3756,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:146",{"_index":3751,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:149",{"_index":3753,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:152",{"_index":3755,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:155",{"_index":3757,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:158",{"_index":3759,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:161",{"_index":3749,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:164",{"_index":3761,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:167",{"_index":3746,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:170",{"_index":3744,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:173",{"_index":3743,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:186",{"_index":3769,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:195",{"_index":3763,"title":{},"body":{"classes/LayoutNode.html":{}}}],["layout.ts:29",{"_index":5671,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:40",{"_index":5682,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:47",{"_index":5673,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:55",{"_index":5674,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:64",{"_index":5654,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:73",{"_index":5657,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:8",{"_index":5652,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:84",{"_index":5687,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:9",{"_index":5651,"title":{},"body":{"classes/Vector.html":{}}}],["layout.ts:92",{"_index":5676,"title":{},"body":{"classes/Vector.html":{}}}],["layoutgraph",{"_index":3040,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["layoutmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutnode",{"_index":3728,"title":{"classes/LayoutNode.html":{}},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["layoutnode(node.id",{"_index":4778,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.padding_component",{"_index":3781,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.padding_interface",{"_index":3782,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["layoutnode.position.x",{"_index":4788,"title":{},"body":{"interfaces/Positions.html":{}}}],["layoutnode.position.y",{"_index":4789,"title":{},"body":{"interfaces/Positions.html":{}}}],["lazily",{"_index":770,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{}}}],["lazy",{"_index":764,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ld",{"_index":3905,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["lead",{"_index":3451,"title":{},"body":{"components/IssueListComponent.html":{},"index.html":{}}}],["leak",{"_index":1801,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["leaving",{"_index":753,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["left",{"_index":1070,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["leftdistance",{"_index":3273,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["legend",{"_index":92,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["length",{"_index":734,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/Vector.html":{}}}],["lets",{"_index":1773,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{}}}],["levels",{"_index":4665,"title":{},"body":{"interfaces/Positions.html":{}}}],["li",{"_index":5548,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["license",{"_index":5915,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":875,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"additional-documentation/using-gropius.html":{}}}],["light",{"_index":3357,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["light_mode",{"_index":5375,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["lightgray",{"_index":5238,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["limit",{"_index":3991,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["limitation",{"_index":3883,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["line",{"_index":2145,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"classes/Vector.html":{}}}],["line.replace('\\n",{"_index":5458,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line.replace(\\'\\n",{"_index":5465,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["line:component",{"_index":793,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["lines",{"_index":2144,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["link",{"_index":750,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"injectables/IssueStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["link(linkissueinput",{"_index":3656,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linked",{"_index":156,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["linked).catch(err",{"_index":1614,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["linkedbyissues",{"_index":2871,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissue",{"_index":2438,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissue.category",{"_index":2442,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["linkedissueitemcomponent",{"_index":154,"title":{"components/LinkedIssueItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linkedissues",{"_index":2664,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["linkedissuesub",{"_index":2665,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["linkevent",{"_index":854,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["linkhandle",{"_index":3136,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.x",{"_index":3183,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandle.y",{"_index":3186,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linkhandlecalculation",{"_index":3168,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["linking",{"_index":3591,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissue",{"_index":3604,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissuegql",{"_index":3605,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissueinput",{"_index":3657,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["linkissues",{"_index":2335,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["links",{"_index":2416,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"index.html":{}}}],["linksissues",{"_index":2414,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["linkstoissues",{"_index":1582,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["list",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentsService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["list'},{'name",{"_index":147,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["list.component",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["list.component.html",{"_index":3411,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.scss",{"_index":3410,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts",{"_index":3406,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["list.component.ts:163",{"_index":3442,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:18",{"_index":4851,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:188",{"_index":3433,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:19",{"_index":4828,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:197",{"_index":3435,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:20",{"_index":4827,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:207",{"_index":3452,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:21",{"_index":4852,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:22",{"_index":4846,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:24",{"_index":4826,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["list.component.ts:245",{"_index":3444,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:33",{"_index":3430,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:34",{"_index":3431,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:35",{"_index":3471,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:36",{"_index":3467,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:39",{"_index":3460,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:40",{"_index":3464,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:43",{"_index":3461,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:44",{"_index":3463,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:47",{"_index":3462,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:50",{"_index":4850,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:51",{"_index":3458,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:53",{"_index":3457,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:55",{"_index":3466,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:56",{"_index":3459,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:57",{"_index":3472,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:58",{"_index":3476,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:60",{"_index":3470,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:61",{"_index":3475,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:62",{"_index":3429,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{}}}],["list.component.ts:70",{"_index":4849,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["list.component.ts:77",{"_index":3441,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.component.ts:93",{"_index":3438,"title":{},"body":{"components/IssueListComponent.html":{}}}],["list.interactive",{"_index":4051,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.invalidate",{"_index":2133,"title":{},"body":{"injectables/DataService.html":{}}}],["list.loaddebounced",{"_index":2134,"title":{},"body":{"injectables/DataService.html":{}}}],["list.subscribe",{"_index":4054,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["list.subscribercount",{"_index":2128,"title":{},"body":{"injectables/DataService.html":{}}}],["list/issue",{"_index":2557,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["list/project",{"_index":502,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectIssueListComponent.html":{},"coverage.html":{}}}],["list]=\"linkedissues",{"_index":2684,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["listall",{"_index":2866,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["listallissues",{"_index":2852,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listed",{"_index":864,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["listen",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listeners",{"_index":4319,"title":{},"body":{"interfaces/Positions.html":{}}}],["listening",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["listento",{"_index":5136,"title":{},"body":{"components/QueryComponent.html":{}}}],["listento(query",{"_index":5119,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["listfromnode",{"_index":4032,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listid",{"_index":1469,"title":{"interfaces/ListId.html":{}},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["listidenc",{"_index":2115,"title":{},"body":{"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["listids",{"_index":6110,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["listing",{"_index":2851,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listparams",{"_index":1742,"title":{"interfaces/ListParams.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listparams(params",{"_index":5977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listparams(params)).then(data",{"_index":5960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listprojectcomponents",{"_index":1369,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponents(project",{"_index":1384,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectcomponentsgql",{"_index":1372,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces",{"_index":1370,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfaces(project",{"_index":1387,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojectinterfacesgql",{"_index":1374,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["listprojects",{"_index":5044,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojects(list",{"_index":5053,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listprojectsgql",{"_index":5046,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["listqueries",{"_index":5714,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["listqueries[type",{"_index":6032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type",{"_index":6033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueries[type][node.type](i",{"_index":6036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listqueryinput",{"_index":5932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["listresult",{"_index":1747,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lists",{"_index":1928,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["listset",{"_index":4090,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listsetsub",{"_index":4099,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["listtype",{"_index":832,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["listtype.assignees",{"_index":5997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.componentinterfaces",{"_index":2877,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.components",{"_index":1489,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuelocations",{"_index":5986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.issues",{"_index":2855,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"components/ProjectIssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.issuesonlocation",{"_index":4215,"title":{},"body":{"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.labels",{"_index":3485,"title":{},"body":{"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.linkedbyissues",{"_index":6006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.linkedissues",{"_index":2669,"title":{},"body":{"components/IssueContentsComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["listtype.projects",{"_index":5954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listtype.searchusers",{"_index":2874,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["listtype.timelineitems",{"_index":883,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"miscellaneous/variables.html":{}}}],["listtype[ld.type",{"_index":3908,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[parts[1",{"_index":3904,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["listtype[type",{"_index":6035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listwrapper",{"_index":4881,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["literal",{"_index":1548,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1502,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectListComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"additional-documentation/managing-gropius.html":{}}}],["loaddebounced",{"_index":1701,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["loaddebounced(interactive",{"_index":1726,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loaded",{"_index":777,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["loadifneeded",{"_index":1697,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loadimpl(fut",{"_index":1885,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["loading",{"_index":232,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/enumerations.html":{}}}],["loadissuegraphdata",{"_index":2929,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["loadissuegraphdata(projectid",{"_index":2945,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["loadlabels",{"_index":2216,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["loads",{"_index":758,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["loadsavedpositions",{"_index":4383,"title":{},"body":{"interfaces/Positions.html":{}}}],["loadtimeout",{"_index":1857,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["local",{"_index":668,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{}}}],["localissuedata",{"_index":1580,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"miscellaneous/typealiases.html":{}}}],["locally",{"_index":5855,"title":{},"body":{"index.html":{}}}],["localset",{"_index":4098,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["localstorage",{"_index":647,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('token",{"_index":2528,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["localstorage.getitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4715,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(`zoomtransform_${this.projectstoragekey",{"_index":4718,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.getitem(this.projectstoragekey",{"_index":4384,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.removeitem('currentuser",{"_index":712,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.removeitem('token",{"_index":713,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem('token",{"_index":704,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["localstorage.setitem(`zoomboundingbox_${this.projectstoragekey",{"_index":4365,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(`zoomtransform_${this.projectstoragekey",{"_index":4363,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.projectstoragekey",{"_index":4393,"title":{},"body":{"interfaces/Positions.html":{}}}],["localstorage.setitem(this.userstoragekey",{"_index":696,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["located",{"_index":5914,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["location",{"_index":1628,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueLocationComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["location's",{"_index":3568,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location'},{'name",{"_index":149,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["location.component",{"_index":2593,"title":{},"body":{"modules/GraphsModule.html":{}}}],["location.component.html",{"_index":3561,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.scss",{"_index":3560,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts",{"_index":3559,"title":{},"body":{"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["location.component.ts:15",{"_index":3566,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:17",{"_index":3564,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:23",{"_index":3569,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.component.ts:28",{"_index":3567,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location.id",{"_index":2422,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.issues",{"_index":2350,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["location.name",{"_index":3575,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["location/issue",{"_index":2592,"title":{},"body":{"modules/GraphsModule.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{}}}],["locationid",{"_index":2325,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"miscellaneous/typealiases.html":{}}}],["locationids",{"_index":2363,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locationids.filter(id",{"_index":2376,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["locations",{"_index":1577,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"miscellaneous/variables.html":{}}}],["log",{"_index":3951,"title":{},"body":{"components/LoginComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["logged",{"_index":615,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["loggin",{"_index":4837,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["logic",{"_index":3481,"title":{},"body":{"components/IssueListComponent.html":{},"interfaces/Positions.html":{}}}],["login",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["login'},{'name",{"_index":158,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["login(username",{"_index":663,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["login.component.html",{"_index":3914,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":3913,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":157,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["loginurl",{"_index":5950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":654,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["lollipop",{"_index":4647,"title":{},"body":{"interfaces/Positions.html":{}}}],["long",{"_index":1751,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["longer",{"_index":923,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["look",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["loop",{"_index":3823,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["lot",{"_index":6094,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["lowercase",{"_index":4981,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["made",{"_index":3967,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{}}}],["main",{"_index":1803,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"additional-documentation/using-gropius.html":{}}}],["make",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["makecommentid(node",{"_index":967,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["makecomponentfilter(search",{"_index":1507,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["makefilter",{"_index":2868,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":2250,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"additional-documentation/managing-gropius.html":{}}}],["making",{"_index":5274,"title":{},"body":{"components/SetEditorComponent.html":{},"index.html":{}}}],["manage",{"_index":4895,"title":{},"body":{"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"interfaces/userMock.html":{}}}],["manageclasssetters",{"_index":3001,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["manageclasssetters(graph",{"_index":3002,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["managed",{"_index":5888,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["managedragbehaviour(graph",{"_index":4394,"title":{},"body":{"interfaces/Positions.html":{}}}],["managedynamictemplateregistry",{"_index":3131,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["managedynamictemplateregistry(graph",{"_index":3132,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["manageeventlisteners(graph",{"_index":4461,"title":{},"body":{"interfaces/Positions.html":{}}}],["managelinkhandles",{"_index":3156,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["managelinkhandles(graph",{"_index":3164,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["management",{"_index":5889,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["manager",{"_index":4663,"title":{},"body":{"interfaces/Positions.html":{}}}],["manages",{"_index":1049,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{}}}],["managing",{"_index":2998,"title":{"additional-documentation/managing-gropius.html":{}},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["manipulation",{"_index":3203,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["manually",{"_index":1797,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/typealiases.html":{}}}],["many",{"_index":4556,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["map",{"_index":688,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["map(([selectedcategories",{"_index":3093,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["map(({data",{"_index":2630,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["map([...components",{"_index":2359,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map([...location.issues].filter(([category",{"_index":2351,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlgraphcomponents.map(gqlcomponent",{"_index":2409,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(gqlinterfaces.map(gqlinterface",{"_index":2402,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["map(items",{"_index":3723,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["map(key",{"_index":3284,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["map(result",{"_index":2270,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/TopToolbarComponent.html":{}}}],["map(state",{"_index":2283,"title":{},"body":{"components/FrameComponent.html":{}}}],["map.set(component_context_menu_data",{"_index":1124,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["map.set(encodenodeid(id",{"_index":2074,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mapfromgql",{"_index":2305,"title":{},"body":{"classes/GraphComponent.html":{},"classes/GraphInterface.html":{}}}],["mapfromgql(gqlgraphcomponents",{"_index":2314,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapfromgql(gqlinterfaces",{"_index":2401,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["mapping",{"_index":2364,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["maps",{"_index":1845,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["margin",{"_index":1193,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mark",{"_index":2735,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["markdown",{"_index":160,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"dependencies.html":{}}}],["markdown/markdown",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["markdowneditorcomponent",{"_index":159,"title":{"components/MarkdownEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["markdownmodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownpreviewcomponent",{"_index":162,"title":{"components/MarkdownPreviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["marker",{"_index":4423,"title":{},"body":{"interfaces/Positions.html":{}}}],["markerend",{"_index":1284,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["marks",{"_index":2752,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{}}}],["mat",{"_index":269,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["mat_dialog_data",{"_index":252,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["mat_form_field_default_options",{"_index":2554,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matbutton",{"_index":5077,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["matbuttonmodule",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matbuttontogglemodule",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["match",{"_index":2166,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/managing-gropius.html":{}}}],["matcheckboxmodule",{"_index":2573,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matches",{"_index":4982,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["matching",{"_index":220,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["matchstrings",{"_index":4064,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchstrings.push(cursor",{"_index":4070,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["matchvalidator",{"_index":2161,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["matdialog",{"_index":36,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{}}}],["matdialogmodule",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matdialogref",{"_index":35,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"classes/MultiSourceList.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{}}}],["matdialogref,@inject(mat_dialog_data",{"_index":253,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["matexpansionmodule",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["math.abs(date.parse(timelineitem.createdat",{"_index":957,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["math.abs(linkhandle.x",{"_index":3181,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.abs(linkhandle.y",{"_index":3182,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["math.max(0",{"_index":4541,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(1",{"_index":3806,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.max(nodex",{"_index":4773,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(nodey",{"_index":4775,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.max(this.height",{"_index":1167,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(this.width",{"_index":1165,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["math.max(y",{"_index":4500,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodex",{"_index":4769,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.min(nodey",{"_index":4771,"title":{},"body":{"interfaces/Positions.html":{}}}],["math.random",{"_index":1534,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["math.random().tostring",{"_index":1021,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["math.random().tostring(36",{"_index":1602,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["math.round((+now",{"_index":5502,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(hours",{"_index":5506,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.round(minutes",{"_index":5505,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["math.sqrt",{"_index":3395,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["math.sqrt(0.5",{"_index":3402,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["maticonmodule",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["maticonregistry",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["matinputmodule",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matlistmodule",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matmenumodule",{"_index":2580,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matpaginator",{"_index":3468,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matpaginatormodule",{"_index":2555,"title":{},"body":{"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matprogressspinnermodule",{"_index":2589,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matselectmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsidenavmodule",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matslidetogglemodule",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["matsort",{"_index":3473,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortable",{"_index":3477,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["matsortmodule",{"_index":2562,"title":{},"body":{"modules/GraphsModule.html":{}}}],["matspinner",{"_index":2590,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabledatasource",{"_index":3465,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattabledatasource(data",{"_index":3507,"title":{},"body":{"components/IssueListComponent.html":{}}}],["mattabledatasource(this.mockusers",{"_index":4958,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mattablemodule",{"_index":2551,"title":{},"body":{"modules/GraphsModule.html":{}}}],["mattabsmodule",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattoolbarmodule",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["mattooltipmodule",{"_index":2587,"title":{},"body":{"modules/GraphsModule.html":{}}}],["max",{"_index":84,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["max_distance_connected",{"_index":3733,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maximum",{"_index":3752,"title":{},"body":{"classes/LayoutNode.html":{}}}],["maxopened",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":1811,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/NodeCache.html":{}}}],["maybelocallist",{"_index":5933,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mayer",{"_index":6143,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["media",{"_index":2773,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{}}}],["member",{"_index":102,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["members'},{'name",{"_index":175,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["members.component",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{}}}],["members.component.html",{"_index":4903,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.scss",{"_index":4902,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["members.component.ts",{"_index":4894,"title":{},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["members.component.ts:115",{"_index":4918,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:119",{"_index":4909,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:125",{"_index":4912,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:26",{"_index":4943,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:27",{"_index":4945,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:28",{"_index":4950,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:29",{"_index":4949,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:30",{"_index":4948,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:31",{"_index":4947,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:32",{"_index":4951,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:34",{"_index":4928,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:35",{"_index":4929,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:38",{"_index":4942,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:47",{"_index":4927,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:51",{"_index":4907,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:77",{"_index":4914,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members.component.ts:97",{"_index":4915,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["members/project",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphsModule.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["memberslink",{"_index":5389,"title":{},"body":{"components/SideNavComponent.html":{}}}],["memory",{"_index":1802,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["mentioned",{"_index":5899,"title":{},"body":{"index.html":{}}}],["menu",{"_index":1050,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["menu.component",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Positions.html":{}}}],["menu.component.html",{"_index":1053,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.scss",{"_index":1052,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts",{"_index":1048,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menu.component.ts:117",{"_index":1079,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:119",{"_index":1076,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:121",{"_index":1077,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:134",{"_index":1060,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:136",{"_index":1074,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:166",{"_index":1065,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:175",{"_index":1061,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":1201,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu.component.ts:60",{"_index":1202,"title":{},"body":{"injectables/ComponentContextMenuService.html":{}}}],["menu/component",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuclick",{"_index":5580,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["menutitle",{"_index":5390,"title":{},"body":{"components/SideNavComponent.html":{}}}],["merge",{"_index":2072,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["message",{"_index":2514,"title":{},"body":{"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"injectables/UserNotifyService.html":{}}}],["message.startswith",{"_index":5234,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["message.substring(1",{"_index":5235,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["messages",{"_index":1030,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["met",{"_index":6129,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["method",{"_index":619,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/userMock.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["mgmt",{"_index":2922,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["mico",{"_index":4314,"title":{},"body":{"interfaces/Positions.html":{}}}],["middle",{"_index":2640,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["millisecond",{"_index":1820,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["milliseconds",{"_index":1756,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["min",{"_index":82,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/TextDisplayComponent.html":{}}}],["min_distance_connected",{"_index":3734,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_edge",{"_index":3735,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_distance_not_connected",{"_index":3736,"title":{},"body":{"classes/LayoutNode.html":{}}}],["min_height",{"_index":1131,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["min_width",{"_index":1129,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minheight",{"_index":1120,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["minimap",{"_index":3003,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["minimap.addedge(event.detail.edge",{"_index":4486,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.addnode(node",{"_index":4483,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.calculatelinkhandlesforedge",{"_index":3176,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["minimap.completerender",{"_index":4580,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removeedge(event.detail.edge",{"_index":4487,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.removenode(node",{"_index":4485,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.setedgeclass",{"_index":3023,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.setnodeclass",{"_index":3016,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["minimap.updategraphpositions",{"_index":4583,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.updatenodeclasses",{"_index":4582,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimap.zoomtoboundingbox",{"_index":4581,"title":{},"body":{"interfaces/Positions.html":{}}}],["minimum",{"_index":3754,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["minute",{"_index":5517,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minutes",{"_index":5501,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["minwidth",{"_index":1118,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["mirrors",{"_index":2033,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":5833,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitteleuropäische",{"_index":5479,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["mock",{"_index":4955,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["mocked",{"_index":226,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["mockmembers",{"_index":4972,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mockusers",{"_index":4899,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["mode",{"_index":5363,"title":{},"body":{"components/SettingsDialogComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["modeicon",{"_index":5364,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["models",{"_index":5901,"title":{},"body":{"index.html":{}}}],["module",{"_index":324,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}},"body":{"modules/GraphsModule.html":{},"additional-documentation/managing-gropius.html":{}}}],["modules",{"_index":326,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["monaco",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownEditorComponent.html":{},"dependencies.html":{}}}],["monacoeditormodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["monacoeditormodule.forroot",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["month",{"_index":5511,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["months",{"_index":5496,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["more",{"_index":938,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["more_vert",{"_index":5347,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["moritz",{"_index":6140,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["mouseevent",{"_index":1164,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/RegisterComponent.html":{}}}],["move",{"_index":3543,"title":{},"body":{"components/IssueListComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["movechildrenalonggoup",{"_index":3232,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["moved",{"_index":4430,"title":{},"body":{"interfaces/Positions.html":{}}}],["movement",{"_index":3764,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["moves",{"_index":2012,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["movex",{"_index":4540,"title":{},"body":{"interfaces/Positions.html":{}}}],["movey",{"_index":4543,"title":{},"body":{"interfaces/Positions.html":{}}}],["moz",{"_index":4885,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["much",{"_index":5877,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":2188,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{}}}],["multisourcelist",{"_index":3984,"title":{"classes/MultiSourceList.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["multisourcelist(this.data.listall",{"_index":4109,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["multisourcelist.fromsinglelist(this.data.listall",{"_index":4112,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["mutate",{"_index":1463,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{}}}],["mutation",{"_index":1312,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/DataService.html":{},"components/RegisterComponent.html":{}}}],["mutationinputdata",{"_index":4276,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["mutations",{"_index":2104,"title":{},"body":{"injectables/DataService.html":{},"injectables/IssueStoreService.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["mutations(queries",{"_index":2121,"title":{},"body":{"injectables/DataService.html":{}}}],["mutually",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["n",{"_index":4034,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["namedoptions",{"_index":2468,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["nameformatvalidator",{"_index":727,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["names",{"_index":2164,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"miscellaneous/enumerations.html":{}}}],["namevalidator",{"_index":728,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateProjectDialogComponent.html":{}}}],["nan",{"_index":3387,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/SetEditorComponent.html":{}}}],["narrow",{"_index":2776,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLocationComponent.html":{}}}],["nativeelement",{"_index":4326,"title":{},"body":{"interfaces/Positions.html":{}}}],["nav",{"_index":4888,"title":{},"body":{"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":192,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nav.component",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["nav.component.html",{"_index":5385,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.scss",{"_index":5384,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":5380,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:17",{"_index":5394,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:18",{"_index":5398,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:19",{"_index":5400,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:20",{"_index":5395,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:21",{"_index":5396,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:22",{"_index":5393,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:24",{"_index":5402,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:25",{"_index":5401,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:26",{"_index":5399,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"components/SideNavComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":5843,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["navigates",{"_index":3436,"title":{},"body":{"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{}}}],["navigating",{"_index":613,"title":{},"body":{"guards/AuthGuard.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["navigation",{"_index":2243,"title":{},"body":{"components/FrameComponent.html":{},"components/SideNavComponent.html":{}}}],["navigationend",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["nbsp",{"_index":2765,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nbsp;&nbsp;&nbsp;&nbsp",{"_index":5233,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["nbsp;&sdot",{"_index":2768,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["nd",{"_index":3889,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nd.id",{"_index":3892,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nearest",{"_index":3264,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["necessary",{"_index":1846,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"classes/TimeFormatter.html":{},"miscellaneous/typealiases.html":{}}}],["need",{"_index":841,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["needed",{"_index":1776,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{}}}],["needs",{"_index":5916,"title":{},"body":{"index.html":{}}}],["network",{"_index":2497,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["networkerror",{"_index":2512,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.name}\\n${networkerror.message}\\n${networkerror.stack",{"_index":2520,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerror.status",{"_index":2521,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["networkerrortoast",{"_index":2499,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":1864,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["new",{"_index":87,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"coverage.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["newdata",{"_index":4391,"title":{},"body":{"interfaces/Positions.html":{}}}],["newest",{"_index":1891,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"classes/NodeCache.html":{}}}],["newly",{"_index":3057,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["newposition",{"_index":3260,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.x",{"_index":3266,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newposition.y",{"_index":3267,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["newsourceset",{"_index":4044,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(source",{"_index":4048,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.add(encodelistid(this.spec.listfromnode(nodeid",{"_index":4046,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newsourceset.has(source",{"_index":4057,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["newvalue",{"_index":5299,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["next",{"_index":792,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/NodeCache.html":{},"components/RemoveDialogComponent.html":{},"index.html":{}}}],["nextpage",{"_index":2019,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ng",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":870,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["ngmodel",{"_index":3077,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["ngmodule",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["ngonchanges(changes",{"_index":5297,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ngondestroy",{"_index":800,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ngoninit",{"_index":60,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["ngoptionhighlightmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngselectmodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["ngx",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"components/MarkdownEditorComponent.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["ngzorroantdmodule",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["nice",{"_index":6078,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["noce",{"_index":3014,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["node",{"_index":165,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["node.component",{"_index":2583,"title":{},"body":{"modules/GraphsModule.html":{}}}],["node.component.ts",{"_index":757,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["node.component.ts:18",{"_index":776,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:20",{"_index":768,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:21",{"_index":781,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:23",{"_index":783,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.component.ts:24",{"_index":767,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["node.dataaspromise().then(data",{"_index":1495,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node.id",{"_index":969,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["node.id.tostring",{"_index":4524,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.id}__issue",{"_index":1269,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["node.invalidate",{"_index":1493,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.issuecount",{"_index":4554,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupcontainer",{"_index":4675,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.issuegroupnodeids.size",{"_index":4758,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.load",{"_index":1494,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["node.position",{"_index":4474,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.type",{"_index":3012,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["node.x",{"_index":4477,"title":{},"body":{"interfaces/Positions.html":{}}}],["node.y",{"_index":4478,"title":{},"body":{"interfaces/Positions.html":{}}}],["node?.id",{"_index":2060,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["node]'},{'name",{"_index":107,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["nodecache",{"_index":1960,"title":{"classes/NodeCache.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodecache(queries",{"_index":2119,"title":{},"body":{"injectables/DataService.html":{}}}],["nodeclasssetter",{"_index":3010,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["nodeclickcontextmenuhastype(node",{"_index":4517,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickissuefolder(node",{"_index":4548,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickmanyissues(rootnode",{"_index":4570,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodeclickoneissue(rootid",{"_index":4558,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodedeleted",{"_index":1153,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{}}}],["nodedetails",{"_index":1143,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailscomponent",{"_index":164,"title":{"components/NodeDetailsComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailspagecomponent",{"_index":167,"title":{"components/NodeDetailsPageComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nodedetailsready",{"_index":1054,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["nodedetailstype",{"_index":1093,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/enumerations.html":{}}}],["nodedetailstype.component",{"_index":4212,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodedetailstype.interface",{"_index":4223,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{}}}],["nodeid",{"_index":775,"title":{"interfaces/NodeId.html":{}},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["nodeid[]).length",{"_index":5301,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["nodeid`s",{"_index":3888,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeidenc",{"_index":1743,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["nodeids",{"_index":6109,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["nodelist",{"_index":4783,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodequeries",{"_index":5715,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodequeries[type",{"_index":6037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequeries[type](i",{"_index":6039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodequery",{"_index":4205,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["nodequeryinput",{"_index":5934,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nodes",{"_index":1238,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["nodes.get(edge.source).connectto(nodes.get(edge.target",{"_index":4781,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(edge.target).connectto(nodes.get(edge.source",{"_index":4782,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.get(node.id",{"_index":4786,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.source",{"_index":4779,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.has(edge.target",{"_index":4780,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.length",{"_index":3813,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodes.set(node.id",{"_index":4777,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodes.ts",{"_index":1205,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nodes[0",{"_index":3821,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["nodesub",{"_index":762,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["nodetype",{"_index":833,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{}}}],["nodetype.component",{"_index":1260,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nodetype.componentinterface",{"_index":3492,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.interface",{"_index":1265,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.interfaceconsumer",{"_index":1291,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.issue",{"_index":1609,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.issuecomment",{"_index":968,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["nodetype.issuegroupcontainer",{"_index":1270,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["nodetype.label",{"_index":5965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodetype.project",{"_index":2853,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"miscellaneous/variables.html":{}}}],["nodetype.root",{"_index":3893,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype.user",{"_index":3895,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["nodetype[nd.type",{"_index":3891,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[parts[0",{"_index":3879,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetype[typename",{"_index":3870,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodetypefromtypename",{"_index":1744,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["nodetypefromtypename(item.__typename",{"_index":4125,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["nodetypefromtypename(node.__typename",{"_index":2061,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["nodetypefromtypename(typename",{"_index":3869,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["nodeupdatedcallbackfn",{"_index":1094,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["nodex",{"_index":4760,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodey",{"_index":4762,"title":{},"body":{"interfaces/Positions.html":{}}}],["nodisplay",{"_index":5592,"title":{},"body":{"components/UserItemComponent.html":{}}}],["non",{"_index":1619,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["none",{"_index":2923,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["normal",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{}}}],["normalize",{"_index":5647,"title":{},"body":{"classes/Vector.html":{}}}],["normalized",{"_index":5675,"title":{},"body":{"classes/Vector.html":{}}}],["north",{"_index":4296,"title":{},"body":{"interfaces/Positions.html":{}}}],["not(.has",{"_index":5597,"title":{},"body":{"components/UserItemComponent.html":{}}}],["notation",{"_index":4648,"title":{},"body":{"interfaces/Positions.html":{}}}],["note",{"_index":70,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"classes/Vector.html":{}}}],["nothing",{"_index":4842,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["nothing(e",{"_index":4848,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["notification",{"_index":3123,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify",{"_index":983,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{}}}],["notify.notifyerror('the",{"_index":5413,"title":{},"body":{"components/SideNavComponent.html":{}}}],["notify.service",{"_index":1009,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{}}}],["notify.service.ts",{"_index":5599,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notify.service.ts:23",{"_index":5603,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:33",{"_index":5605,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify.service.ts:45",{"_index":5610,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notify/user",{"_index":1008,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["notifyerror",{"_index":5600,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyerror(message",{"_index":5604,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo",{"_index":5601,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyinfo(message",{"_index":5609,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["notifyservice",{"_index":4100,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["now",{"_index":754,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{}}}],["now.getfullyear",{"_index":5499,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["now.getmonth",{"_index":5497,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["nowrap",{"_index":5240,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["npm",{"_index":5842,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["nth",{"_index":5355,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["null",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":1993,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["number",{"_index":1063,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"interfaces/RelationEdge.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/TimeFormatter.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["nz",{"_index":4880,"title":{},"body":{"components/ProjectListComponent.html":{},"components/RegisterComponent.html":{}}}],["nz_i18n",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["nz_icons",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["obervable",{"_index":3096,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["object",{"_index":1771,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.entries(ccimsicons",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["object.keys(antdesignicons).map(key",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object.keys(issuecategory",{"_index":3283,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["object.keys(issuecategory).foreach(key",{"_index":4685,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(predicates).filter(id",{"_index":2885,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(predicates).length",{"_index":2844,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["object.keys(this.savedpositions.nodes).length",{"_index":4595,"title":{},"body":{"interfaces/Positions.html":{}}}],["object.keys(this.validateform.controls",{"_index":5218,"title":{},"body":{"components/RegisterComponent.html":{}}}],["object.keys(this.validateform.controls).foreach(controlkey",{"_index":3936,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.values(issuecategory",{"_index":2975,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["objects",{"_index":1308,"title":{},"body":{"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/managing-gropius.html":{}}}],["objkey",{"_index":4066,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["observable",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"interfaces/userMock.html":{}}}],["observable#subscribe",{"_index":1783,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["observable((observer",{"_index":5208,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observables",{"_index":3198,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["observed",{"_index":3479,"title":{},"body":{"components/IssueListComponent.html":{}}}],["observer",{"_index":5199,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.complete",{"_index":5215,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next(null",{"_index":5214,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observer.next({error",{"_index":5212,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observers",{"_index":2100,"title":{},"body":{"injectables/DataService.html":{}}}],["obtain",{"_index":1679,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["occurred",{"_index":5606,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["occurs",{"_index":5887,"title":{},"body":{"index.html":{}}}],["oct",{"_index":5475,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["offer",{"_index":2371,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offered",{"_index":2600,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offeredby",{"_index":2392,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["offeredbyid",{"_index":1261,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["offering",{"_index":2365,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["offeringcomponentid",{"_index":2619,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["offers",{"_index":4898,"title":{},"body":{"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["offset",{"_index":1069,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["offsetx",{"_index":1113,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["offsety",{"_index":1114,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["old",{"_index":4814,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["onaddclick",{"_index":3426,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["oncancelclick",{"_index":4167,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["once",{"_index":2739,"title":{},"body":{"components/IssueDetailComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["onchanges",{"_index":5252,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["onclick",{"_index":5099,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["onconfirmclick",{"_index":1454,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["onconfirmclick(name",{"_index":1459,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["oncreate",{"_index":1566,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["oncreateedge",{"_index":4409,"title":{},"body":{"interfaces/Positions.html":{}}}],["ondeleteclick",{"_index":2171,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{}}}],["ondestroy",{"_index":760,"title":{},"body":{"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ondialogapplychangeset",{"_index":5305,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogcreateitem",{"_index":5307,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogdeleteitem",{"_index":5311,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondialogedititem",{"_index":5309,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["ondraggededgetargetchanged",{"_index":4431,"title":{},"body":{"interfaces/Positions.html":{}}}],["one",{"_index":808,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"interfaces/QueryListParams.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["onedgeadd",{"_index":4434,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgedrop",{"_index":4444,"title":{},"body":{"interfaces/Positions.html":{}}}],["onedgeremove",{"_index":4458,"title":{},"body":{"interfaces/Positions.html":{}}}],["oneditclick",{"_index":4168,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["oneditfinished",{"_index":5432,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["onerror",{"_index":2478,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["onerror(({graphqlerrors",{"_index":2511,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["ones",{"_index":6057,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["onlabelcancelclick",{"_index":1455,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["onminimaprender(minimap",{"_index":4575,"title":{},"body":{"interfaces/Positions.html":{}}}],["onmousemove(event",{"_index":1163,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onmouseup",{"_index":1161,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["onnoclick",{"_index":236,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["onnoclick(showconfirmdialog",{"_index":1571,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["onnodeclick",{"_index":4501,"title":{},"body":{"interfaces/Positions.html":{}}}],["onnodeupdate",{"_index":4285,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onnodeupdate(deleted",{"_index":4287,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["onokclick",{"_index":237,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onokclick(name",{"_index":1418,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["onpagechange",{"_index":4906,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["onpagechange(event",{"_index":4916,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["onsaveclick",{"_index":4169,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["onto",{"_index":3197,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["opacity",{"_index":2696,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/UserItemComponent.html":{}}}],["open",{"_index":1098,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueIconComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"miscellaneous/variables.html":{}}}],["open(parent",{"_index":1105,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["openaccesstokensettings",{"_index":5365,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opencreatecomponentdialog",{"_index":4798,"title":{},"body":{"interfaces/Positions.html":{}}}],["opencreateprojectdialog",{"_index":4843,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["opened",{"_index":2766,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/LinkedIssueItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["opening",{"_index":4448,"title":{},"body":{"interfaces/Positions.html":{}}}],["openprofilesettings",{"_index":5366,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["opens",{"_index":1585,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["opensettingsdialog",{"_index":5578,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["operation",{"_index":1851,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["operations",{"_index":3590,"title":{},"body":{"injectables/IssueStoreService.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{}}}],["optimized",{"_index":4710,"title":{},"body":{"interfaces/Positions.html":{}}}],["option",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"dependencies.html":{},"additional-documentation/using-gropius.html":{}}}],["option2",{"_index":52,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["optionally",{"_index":5607,"title":{},"body":{"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{}}}],["options",{"_index":2859,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":1240,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{}}}],["ordered",{"_index":1930,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["original",{"_index":4413,"title":{},"body":{"interfaces/Positions.html":{}}}],["originally",{"_index":3925,"title":{},"body":{"components/LoginComponent.html":{}}}],["originates",{"_index":4417,"title":{},"body":{"interfaces/Positions.html":{}}}],["originating",{"_index":4695,"title":{},"body":{"interfaces/Positions.html":{}}}],["originx",{"_index":1108,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["originy",{"_index":1110,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["othernode",{"_index":3791,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.id",{"_index":3794,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.padding",{"_index":3804,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernode.position.subtract(this.position",{"_index":3799,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["othernodesvisited",{"_index":3790,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["others",{"_index":6146,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["otherwise",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["out",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CCIMSValidators.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueIconComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["outlet",{"_index":2265,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata",{"_index":2286,"title":{},"body":{"components/FrameComponent.html":{}}}],["outlet.activatedroutedata.animation",{"_index":2287,"title":{},"body":{"components/FrameComponent.html":{}}}],["output",{"_index":2849,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["outputs",{"_index":2811,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["outside",{"_index":5663,"title":{},"body":{"classes/Vector.html":{}}}],["over",{"_index":3793,"title":{},"body":{"classes/LayoutNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"index.html":{}}}],["overflow",{"_index":1198,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["overlay",{"_index":1085,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/FrameComponent.html":{},"interfaces/Positions.html":{}}}],["overlayref",{"_index":1086,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayx",{"_index":1111,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["overlayy",{"_index":1112,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["override",{"_index":5261,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["overview",{"_index":4870,"title":{"overview.html":{}},"body":{"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{},"overview.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["overview'},{'name",{"_index":177,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["overview.component",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":4991,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.scss",{"_index":4990,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts",{"_index":4988,"title":{},"body":{"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:23",{"_index":4998,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:25",{"_index":4997,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:26",{"_index":4996,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:27",{"_index":4993,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:47",{"_index":4995,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview.component.ts:55",{"_index":4994,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["overview/project",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{}}}],["overviewlink",{"_index":5391,"title":{},"body":{"components/SideNavComponent.html":{}}}],["overwriting",{"_index":2066,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["owner",{"_index":4989,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["p",{"_index":1739,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/TimelineItemComponent.html":{},"index.html":{}}}],["package",{"_index":5797,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":3803,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["padding",{"_index":1172,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{}}}],["padding.these",{"_index":4730,"title":{},"body":{"interfaces/Positions.html":{}}}],["padding_component",{"_index":3737,"title":{},"body":{"classes/LayoutNode.html":{}}}],["padding_interface",{"_index":3738,"title":{},"body":{"classes/LayoutNode.html":{}}}],["paddingx",{"_index":4739,"title":{},"body":{"interfaces/Positions.html":{}}}],["paddingy",{"_index":4743,"title":{},"body":{"interfaces/Positions.html":{}}}],["page",{"_index":638,"title":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["page.component",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":4284,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.scss",{"_index":4283,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts",{"_index":4282,"title":{},"body":{"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:10",{"_index":4290,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:11",{"_index":4289,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:12",{"_index":4286,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page.component.ts:34",{"_index":4288,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["page/node",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{}}}],["pageevent",{"_index":4917,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagefill",{"_index":4835,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["pageinfo",{"_index":1750,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":4976,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagesizes",{"_index":1656,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["pagesizes]=\"[10",{"_index":2685,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["paginated",{"_index":4896,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pagination",{"_index":1992,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["pagination/sorting/filtering",{"_index":3514,"title":{},"body":{"components/IssueListComponent.html":{}}}],["paginator",{"_index":1653,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["paginator'},{'name",{"_index":124,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["paginator.component",{"_index":2567,"title":{},"body":{"modules/GraphsModule.html":{}}}],["paginator.component.html",{"_index":1655,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":1654,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts",{"_index":1649,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["paginator.component.ts:14",{"_index":1657,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator.component.ts:16",{"_index":1659,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["paginator/cursor",{"_index":1648,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"modules/GraphsModule.html":{},"coverage.html":{}}}],["paginatormodule",{"_index":4905,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["pairs",{"_index":3007,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["panel",{"_index":5554,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["param",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{}}}],["parameter",{"_index":1809,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["parameterize",{"_index":6116,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{}}}],["params",{"_index":1703,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["params(p",{"_index":1834,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["params.filter",{"_index":3525,"title":{},"body":{"components/IssueListComponent.html":{}}}],["parent",{"_index":1072,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/NodeId.html":{},"additional-documentation/managing-gropius.html":{}}}],["parent}__${issuecategory[key",{"_index":3285,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__bug",{"_index":3291,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__feature",{"_index":3292,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parent}__undecided",{"_index":3290,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["parsed",{"_index":4382,"title":{},"body":{"interfaces/Positions.html":{},"classes/TimeFormatter.html":{}}}],["parsing",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["part",{"_index":5271,"title":{},"body":{"components/SetEditorComponent.html":{},"index.html":{}}}],["part).join",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/IssueIconComponent.html":{}}}],["partial",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["participants",{"_index":2872,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["parts",{"_index":3877,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"index.html":{}}}],["parts[1",{"_index":3880,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["pass",{"_index":3100,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/SetEditorComponent.html":{}}}],["passed",{"_index":1735,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TopToolbarComponent.html":{}}}],["passes",{"_index":2247,"title":{},"body":{"components/FrameComponent.html":{}}}],["password",{"_index":664,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"additional-documentation/using-gropius.html":{}}}],["passwords",{"_index":5228,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pasttime",{"_index":5494,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getfullyear",{"_index":5500,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pasttime.getmonth",{"_index":5498,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["path",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":752,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["pcount",{"_index":1948,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pcursor",{"_index":1947,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pencheva",{"_index":6139,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["pendingcreate",{"_index":4840,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["per",{"_index":1663,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["perceived",{"_index":3391,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["perform",{"_index":4873,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["performed",{"_index":811,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["perpendicularclockwise",{"_index":5648,"title":{},"body":{"classes/Vector.html":{}}}],["perpendicularcounterclockwise",{"_index":5649,"title":{},"body":{"classes/Vector.html":{}}}],["persisted",{"_index":6130,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["persistent",{"_index":6070,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["personal",{"_index":66,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["pertain",{"_index":6088,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["pertaining",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["pfeffer",{"_index":6141,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["pfilter",{"_index":1949,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pforward",{"_index":1950,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["phone",{"_index":4504,"title":{},"body":{"interfaces/Positions.html":{}}}],["pick",{"_index":2389,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{},"components/ProjectListComponent.html":{},"miscellaneous/typealiases.html":{}}}],["picker",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"components/IssueFilterComponent.html":{},"dependencies.html":{}}}],["pictures",{"_index":6047,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["piece",{"_index":1768,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pipe",{"_index":2269,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["pipe(first",{"_index":3942,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(response",{"_index":699,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":4388,"title":{},"body":{"interfaces/Positions.html":{}}}],["place",{"_index":3817,"title":{},"body":{"classes/LayoutNode.html":{},"components/RemoveDialogComponent.html":{},"classes/Vector.html":{},"index.html":{}}}],["placeholder",{"_index":4162,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["places",{"_index":3275,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["please",{"_index":5227,"title":{},"body":{"components/RegisterComponent.html":{}}}],["pluralize",{"_index":5469,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralize(n",{"_index":5488,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pluralized",{"_index":5491,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["pnodes",{"_index":1959,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["point",{"_index":3249,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{},"index.html":{}}}],["point.x",{"_index":4637,"title":{},"body":{"interfaces/Positions.html":{}}}],["point.y",{"_index":4640,"title":{},"body":{"interfaces/Positions.html":{}}}],["pointer",{"_index":1956,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{}}}],["pointing",{"_index":3776,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["points",{"_index":5383,"title":{},"body":{"components/SideNavComponent.html":{},"classes/Vector.html":{}}}],["pop",{"_index":6053,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["popup",{"_index":6051,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["portalinjector",{"_index":1089,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalinjector(this.injector",{"_index":1125,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["portalmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["pos",{"_index":1107,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position",{"_index":1067,"title":{"interfaces/Position.html":{}},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["position.withpositions([pos",{"_index":1115,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["position.x",{"_index":4455,"title":{},"body":{"interfaces/Positions.html":{}}}],["position.y",{"_index":4456,"title":{},"body":{"interfaces/Positions.html":{}}}],["positionclass",{"_index":2501,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["positioning",{"_index":4475,"title":{},"body":{"interfaces/Positions.html":{}}}],["positions",{"_index":4293,"title":{"interfaces/Positions.html":{}},"body":{"interfaces/Positions.html":{},"coverage.html":{}}}],["positionstrategy",{"_index":1122,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["positionx",{"_index":3741,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["positiony",{"_index":3742,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["possible",{"_index":1841,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/variables.html":{}}}],["possibly",{"_index":2857,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["practice",{"_index":2037,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pre",{"_index":3288,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/MarkdownEditorComponent.html":{}}}],["pred",{"_index":2919,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicate",{"_index":2820,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["predicatecount",{"_index":2799,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates",{"_index":2800,"title":{},"body":{"components/IssueFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["predicates[id].ifempty",{"_index":2910,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[id].label",{"_index":2909,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicates[type].label",{"_index":2907,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["predicatevalues",{"_index":2801,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["prefer",{"_index":6106,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["prepare",{"_index":892,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["prepareddata",{"_index":1723,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["prepareissuearray",{"_index":3427,"title":{},"body":{"components/IssueListComponent.html":{}}}],["prepareroute",{"_index":2257,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepareroute(outlet",{"_index":2262,"title":{},"body":{"components/FrameComponent.html":{}}}],["prepares",{"_index":891,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueListComponent.html":{}}}],["preparetimelineitems(items",{"_index":893,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["presence",{"_index":2835,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["present",{"_index":1900,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["preservewhitespaces",{"_index":3978,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["pressed",{"_index":4506,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["presumes",{"_index":4680,"title":{},"body":{"interfaces/Positions.html":{}}}],["prevent",{"_index":3818,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["prevents",{"_index":4871,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["preview",{"_index":3975,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["preview'},{'name",{"_index":163,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["preview.component",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["preview.component.html",{"_index":3980,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.scss",{"_index":3979,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview.component.ts",{"_index":3977,"title":{},"body":{"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:17",{"_index":3982,"title":{},"body":{"components/MarkdownPreviewComponent.html":{}}}],["preview/markdown",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["previous",{"_index":2016,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["previousboundingbox",{"_index":4725,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.height",{"_index":4734,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.width",{"_index":4732,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.x",{"_index":4745,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingbox.y",{"_index":4746,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousboundingboxasstring",{"_index":4714,"title":{},"body":{"interfaces/Positions.html":{}}}],["previousitems",{"_index":2883,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previousitems.includes(id",{"_index":2886,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["previouslyhadpagecontents",{"_index":1955,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["prevpage",{"_index":2017,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["primary",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["primary.segments",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary.segments.length",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primary_outlet",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primarysegments[0].path",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["primer/css",{"_index":5814,"title":{},"body":{"dependencies.html":{}}}],["prior",{"_index":1973,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["pristine",{"_index":5182,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":59,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/FilterSelection.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["probably",{"_index":2117,"title":{},"body":{"injectables/DataService.html":{}}}],["problem",{"_index":5897,"title":{},"body":{"index.html":{}}}],["problems",{"_index":5902,"title":{},"body":{"index.html":{}}}],["process",{"_index":948,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueDetailComponent.html":{},"index.html":{}}}],["processing",{"_index":4959,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["product",{"_index":5668,"title":{},"body":{"classes/Vector.html":{}}}],["production",{"_index":5945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":169,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["profilesettingsdialogcomponent",{"_index":168,"title":{"components/ProfileSettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":101,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["project's",{"_index":4317,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["project.description",{"_index":5002,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["project.name",{"_index":4877,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["project.node.users.nodes.foreach(u",{"_index":4956,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["project_${this.projectid",{"_index":4357,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectfilter",{"_index":5033,"title":{},"body":{"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{}}}],["projectheadercomponent",{"_index":170,"title":{"components/ProjectHeaderComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectid",{"_index":865,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectissuelistcomponent",{"_index":172,"title":{"components/ProjectIssueListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectlistcomponent",{"_index":173,"title":{"components/ProjectListComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projectmemberscomponent",{"_index":174,"title":{"components/ProjectMembersComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["projectname",{"_index":4821,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectListComponent.html":{}}}],["projectnameedited",{"_index":4806,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectnameedited(saved",{"_index":4810,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["projectoverviewcomponent",{"_index":176,"title":{"components/ProjectOverviewComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["projects",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/QueriesService.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/using-gropius.html":{}}}],["projects.service",{"_index":5067,"title":{},"body":{"injectables/QueriesService.html":{}}}],["projects/:id",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["projectsservice",{"_index":5041,"title":{"injectables/ProjectsService.html":{}},"body":{"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"coverage.html":{}}}],["projectstoragekey",{"_index":4337,"title":{},"body":{"interfaces/Positions.html":{}}}],["projectstore",{"_index":4847,"title":{},"body":{"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["projectstoreservice",{"_index":539,"title":{"injectables/ProjectStoreService.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["prolong",{"_index":1707,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promise",{"_index":1713,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":1876,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["promise.all(promises",{"_index":1623,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promise.reject(new",{"_index":6027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise.resolve",{"_index":5638,"title":{},"body":{"injectables/UsersService.html":{}}}],["promise.resolve(this.current",{"_index":1875,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["promises",{"_index":1611,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promises.push(this.dataservice.mutations.linkissue(math.random().tostring",{"_index":1613,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["promisifyapollofetch",{"_index":1391,"title":{},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["promisifyapollofetch(f",{"_index":5159,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["promisifyapollofetch(this.qcurrentuser.fetch",{"_index":5642,"title":{},"body":{"injectables/UsersService.html":{}}}],["promisifyapollofetch(this.qgetcomponent.fetch",{"_index":1395,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetinterface.fetch",{"_index":1396,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qgetproject.fetch",{"_index":5056,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qlistprojectcomponents.fetch",{"_index":1393,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojectinterfaces.fetch",{"_index":1394,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["promisifyapollofetch(this.qlistprojects.fetch",{"_index":5055,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["promisifyapollofetch(this.qsearchusers.fetch",{"_index":5639,"title":{},"body":{"injectables/UsersService.html":{}}}],["prop",{"_index":4312,"title":{},"body":{"interfaces/Positions.html":{}}}],["propagate",{"_index":5891,"title":{},"body":{"index.html":{}}}],["propagated",{"_index":6096,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["propagates",{"_index":2099,"title":{},"body":{"injectables/DataService.html":{}}}],["propagation",{"_index":5910,"title":{},"body":{"index.html":{}}}],["proper",{"_index":3480,"title":{},"body":{"components/IssueListComponent.html":{}}}],["properly",{"_index":4655,"title":{},"body":{"interfaces/Positions.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["property",{"_index":1779,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["protected",{"_index":1813,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["provide",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["provided",{"_index":230,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"interfaces/User.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["providedefaultapollo",{"_index":2490,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providedefaultapollo(httplink",{"_index":2527,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["providedin",{"_index":552,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"injectables/UsersService.html":{}}}],["providepublicapollo",{"_index":2489,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providepublicapollo(httplink",{"_index":2540,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["provider",{"_index":1420,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["providers",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{}}}],["provides",{"_index":224,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["providing",{"_index":4447,"title":{},"body":{"interfaces/Positions.html":{}}}],["prvider",{"_index":3449,"title":{},"body":{"components/IssueListComponent.html":{}}}],["ps",{"_index":556,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateProjectDialogComponent.html":{},"injectables/StateService.html":{}}}],["ps.getbasicproject(this.router.parseurl(event.url).root?.children[primary_outlet].segments[1].path",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["psetparamsnoupdate",{"_index":1828,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ptotalcount",{"_index":1952,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["publicclient",{"_index":2542,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["publicclientname",{"_index":5166,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["purely",{"_index":6069,"title":{},"body":{"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["purpose",{"_index":2484,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":2774,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/SetEditorComponent.html":{}}}],["px",{"_index":1146,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["q",{"_index":6031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qcurrentuser",{"_index":5622,"title":{},"body":{"injectables/UsersService.html":{}}}],["qgetcomponent",{"_index":1375,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetinterface",{"_index":1376,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qgetproject",{"_index":5047,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qlistprojectcomponents",{"_index":1379,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojectinterfaces",{"_index":1373,"title":{},"body":{"injectables/ComponentsService.html":{}}}],["qlistprojects",{"_index":5050,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["qsearchusers",{"_index":5625,"title":{},"body":{"injectables/UsersService.html":{}}}],["queries",{"_index":2047,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["queries/queries.service",{"_index":1746,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{}}}],["queriesservice",{"_index":1745,"title":{"injectables/QueriesService.html":{}},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/NodeCache.html":{},"injectables/QueriesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":179,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentStoreService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["query.component.html",{"_index":5101,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.component.scss",{"_index":5102,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query.subscribe((value",{"_index":5122,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["query/mutation",{"_index":6115,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["querybodydirective",{"_index":208,"title":{"directives/QueryBodyDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querybuttondirective",{"_index":210,"title":{"directives/QueryButtonDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponent",{"_index":178,"title":{"components/QueryComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["querycomponentstate",{"_index":5078,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["querycomponentstate.error",{"_index":5125,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.loading",{"_index":5108,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querycomponentstate.ready",{"_index":5114,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["querylist",{"_index":1748,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querylist(queries",{"_index":1961,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["querylistparams",{"_index":1385,"title":{"interfaces/QueryListParams.html":{}},"body":{"injectables/ComponentsService.html":{},"injectables/ProjectsService.html":{},"interfaces/QueryListParams.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querynode",{"_index":1749,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["querynode(queries",{"_index":1925,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["queryparamfilter",{"_index":3418,"title":{},"body":{"components/IssueListComponent.html":{}}}],["queryparams",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["querystate",{"_index":5091,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["quick",{"_index":4029,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["quicker",{"_index":69,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{}}}],["quickscore",{"_index":4028,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quickscore(matchstrings.join",{"_index":4071,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["quot;(newest",{"_index":2971,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;test&quot",{"_index":2970,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["quot;{{data.verificationname}}&quot",{"_index":5236,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["r",{"_index":1532,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{}}}],["r.matches",{"_index":4360,"title":{},"body":{"interfaces/Positions.html":{}}}],["radius",{"_index":1175,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["ran",{"_index":5130,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["randomize",{"_index":1546,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["randomizecolor",{"_index":1456,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["randomized",{"_index":3797,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["randomizes",{"_index":1468,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["range",{"_index":3370,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rank",{"_index":4002,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["ranking",{"_index":4020,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["rare",{"_index":3383,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ratio",{"_index":4534,"title":{},"body":{"interfaces/Positions.html":{}}}],["raw",{"_index":1484,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["re",{"_index":1788,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{}}}],["reactiveformsmodule",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["read",{"_index":779,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{}}}],["readcsscolor",{"_index":5702,"title":{},"body":{"coverage.html":{}}}],["readcsscolor(color",{"_index":3371,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["readonly",{"_index":651,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{},"classes/Vector.html":{}}}],["reads",{"_index":3366,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["ready",{"_index":5079,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"miscellaneous/enumerations.html":{}}}],["really",{"_index":1028,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["reasonable",{"_index":4115,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["recalculates",{"_index":5189,"title":{},"body":{"components/RegisterComponent.html":{}}}],["received",{"_index":1860,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["receiving",{"_index":1954,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["recommended",{"_index":6091,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["recoverable",{"_index":1620,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["rect",{"_index":4302,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.x",{"_index":4736,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmax",{"_index":4772,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.xmin",{"_index":4768,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.y",{"_index":4742,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymax",{"_index":4774,"title":{},"body":{"interfaces/Positions.html":{}}}],["rect.ymin",{"_index":4770,"title":{},"body":{"interfaces/Positions.html":{}}}],["red",{"_index":3121,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/QueryComponent.html":{}}}],["redirect",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["redirected",{"_index":5187,"title":{},"body":{"components/RegisterComponent.html":{}}}],["redirects",{"_index":629,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectto",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturl",{"_index":3924,"title":{},"body":{"components/LoginComponent.html":{}}}],["redraw",{"_index":3101,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["redrawbycloseofcomponentdetails",{"_index":4342,"title":{},"body":{"interfaces/Positions.html":{}}}],["reduce",{"_index":5009,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["reduces",{"_index":4977,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["reducing",{"_index":2097,"title":{},"body":{"injectables/DataService.html":{}}}],["redundant",{"_index":2023,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["ref",{"_index":1116,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["ref.attach(new",{"_index":1126,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["refactor",{"_index":1842,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["refer",{"_index":6089,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["reference",{"_index":1099,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/Positions.html":{}}}],["references",{"_index":4323,"title":{},"body":{"interfaces/Positions.html":{}}}],["referring",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["refers",{"_index":3570,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["reflect",{"_index":4315,"title":{},"body":{"interfaces/Positions.html":{}}}],["reflected",{"_index":6062,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["refresh",{"_index":1539,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["refreshes",{"_index":703,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["regarding",{"_index":5912,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":3810,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["register",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":181,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["register.component.css",{"_index":5163,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":5164,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":180,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/managing-gropius.html":{}}}],["registering",{"_index":2493,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{}}}],["registerlocaledata",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(en",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["registerusergql",{"_index":5173,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeruserinput",{"_index":5200,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerusermutation",{"_index":5172,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":2538,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["registry",{"_index":3130,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{}}}],["registry.service",{"_index":4311,"title":{},"body":{"interfaces/Positions.html":{}}}],["registry.service.ts",{"_index":3129,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"coverage.html":{}}}],["registry.service.ts:21",{"_index":3133,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["registry/issue",{"_index":3127,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["regular",{"_index":2961,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["reject",{"_index":1877,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["reject(error",{"_index":1882,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["related",{"_index":3021,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["relatedfolder",{"_index":4704,"title":{},"body":{"interfaces/Positions.html":{}}}],["relatedfolders",{"_index":2334,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/Positions.html":{}}}],["relatedfolders.getvalue(folder).concat(targetfolders",{"_index":2445,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedfolders.setvalue(folder",{"_index":2444,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["relatedto",{"_index":1297,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["relation",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["relationedge",{"_index":1218,"title":{"interfaces/RelationEdge.html":{}},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{}}}],["relations",{"_index":3055,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["relative",{"_index":1071,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"classes/NodeCache.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["relativepositionchanged",{"_index":3235,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativepositionchanged(group",{"_index":3246,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{}}}],["relativerotation",{"_index":1286,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["relativeto",{"_index":4509,"title":{},"body":{"interfaces/Positions.html":{}}}],["relevance",{"_index":4003,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["relevant",{"_index":1852,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["reload",{"_index":1492,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["reload$]).pipe",{"_index":3213,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["reloaded",{"_index":1765,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["reloadlistset",{"_index":5289,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["reloadonmouseup",{"_index":4346,"title":{},"body":{"interfaces/Positions.html":{}}}],["reloadprojects",{"_index":4844,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["reloads",{"_index":4572,"title":{},"body":{"interfaces/Positions.html":{}}}],["remaining",{"_index":916,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["remember",{"_index":1693,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["remove",{"_index":183,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["removeconsumedinterface",{"_index":2930,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterface(component",{"_index":2957,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterface(componentid",{"_index":3207,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["removeconsumedinterfacegql",{"_index":2937,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removeconsumedinterfacemutation",{"_index":2936,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["removed",{"_index":2368,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{}}}],["removedfromcomponentevent",{"_index":848,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedfromlocationevent",{"_index":852,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["removedialogcomponent",{"_index":182,"title":{"components/RemoveDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["removefiltereddata",{"_index":2447,"title":{},"body":{"classes/GraphDataFactory.html":{}}}],["removefiltereddata(graphdata",{"_index":2348,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removefromlocation",{"_index":3598,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removefromlocation(removelocationinput",{"_index":3659,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationgql",{"_index":3625,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationinput",{"_index":3660,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeissuefromlocationmutation",{"_index":3624,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removelocationinput",{"_index":3662,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["removeofferingcomponents",{"_index":5735,"title":{},"body":{"coverage.html":{}}}],["removeofferingcomponents(issue.locations",{"_index":2434,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(linkedissue.locations",{"_index":2440,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removeofferingcomponents(locationids",{"_index":2369,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["removepredicateat",{"_index":2807,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removepredicateat(index",{"_index":2830,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["removeprojectmembercomponentcomponent",{"_index":184,"title":{"components/RemoveProjectMemberComponentComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{},"interfaces/userMock.html":{}}}],["removes",{"_index":2338,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"interfaces/Positions.html":{}}}],["rename",{"_index":3599,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["rename(renameinput",{"_index":3663,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameinput",{"_index":3666,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuemutation",{"_index":3618,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitlegql",{"_index":3619,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["renameissuetitleinput",{"_index":3664,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["render",{"_index":2947,"title":{},"body":{"injectables/IssueGraphApiService.html":{},"interfaces/Positions.html":{}}}],["rendered",{"_index":2237,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["rendering",{"_index":2355,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["renderinitialtemplate",{"_index":3140,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["renders",{"_index":2644,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownPreviewComponent.html":{},"interfaces/Positions.html":{}}}],["reopen",{"_index":2686,"title":{},"body":{"components/IssueContentsComponent.html":{},"injectables/IssueStoreService.html":{}}}],["reopen(reopeninput",{"_index":3667,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopeninput",{"_index":3670,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissue",{"_index":2652,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["reopenissuegql",{"_index":3617,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissueinput",{"_index":3668,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopenissuemutation",{"_index":3616,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["reopens",{"_index":2660,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["replace",{"_index":2737,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["replaced",{"_index":4901,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["replaysubject",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["replaysubject(1",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{}}}],["report",{"_index":3120,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["reports",{"_index":1966,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["repository",{"_index":1442,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["repositoryurl",{"_index":1425,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["represent",{"_index":1244,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{},"miscellaneous/enumerations.html":{}}}],["representation",{"_index":860,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"classes/TimeFormatter.html":{},"index.html":{}}}],["represented",{"_index":821,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["representing",{"_index":818,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["represents",{"_index":4661,"title":{},"body":{"interfaces/Positions.html":{},"interfaces/QueryListParams.html":{},"additional-documentation/using-gropius.html":{}}}],["reqeusts",{"_index":2539,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["request",{"_index":1629,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueCategoryComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["requested",{"_index":2949,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["requests",{"_index":1753,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["requesttimelineitems",{"_index":877,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["require",{"_index":5795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":5943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphStateService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["requires",{"_index":6066,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["rerun",{"_index":6119,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["reset",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphsModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["resetform",{"_index":5169,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetform(e",{"_index":5180,"title":{},"body":{"components/RegisterComponent.html":{}}}],["resetgraph",{"_index":4629,"title":{},"body":{"interfaces/Positions.html":{}}}],["resets",{"_index":4622,"title":{},"body":{"interfaces/Positions.html":{},"components/RegisterComponent.html":{}}}],["resetvalues",{"_index":4170,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["resize",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resizecorner(content",{"_index":1139,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["resolve(data",{"_index":1880,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/QueryListParams.html":{}}}],["resolved",{"_index":5885,"title":{},"body":{"index.html":{}}}],["resolves",{"_index":5158,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["respective",{"_index":3863,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["response.token",{"_index":705,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["responsible",{"_index":612,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["respoonsible",{"_index":2997,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["rest",{"_index":5631,"title":{},"body":{"injectables/UsersService.html":{}}}],["restricting",{"_index":2948,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["result",{"_index":1608,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"classes/Vector.html":{}}}],["result.id",{"_index":1610,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["result.items",{"_index":1980,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.items.size",{"_index":1979,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.matches",{"_index":2271,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["result.pageinfo",{"_index":1963,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result.totalcount",{"_index":1965,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["result?.createdprojectid",{"_index":4862,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["resulting",{"_index":4738,"title":{},"body":{"interfaces/Positions.html":{}}}],["results",{"_index":219,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{},"additional-documentation/contributors.html":{}}}],["rethrow",{"_index":1622,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["retrieval",{"_index":2926,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["retrieve",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"injectables/LabelStoreService.html":{},"injectables/StateService.html":{}}}],["retrieved",{"_index":929,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["retrievel",{"_index":2599,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["retrieves",{"_index":872,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["retrieving",{"_index":1307,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/ProjectIssueListComponent.html":{}}}],["return",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":672,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["returnedfilter",{"_index":3523,"title":{},"body":{"components/IssueListComponent.html":{}}}],["returnfromselect",{"_index":1432,"title":{},"body":{"components/CreateComponentDialogComponent.html":{}}}],["returnfromselect.localecompare(imstype.github",{"_index":1428,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["returning",{"_index":2485,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["returnurl",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["reusability",{"_index":5882,"title":{},"body":{"index.html":{}}}],["reusable",{"_index":3544,"title":{},"body":{"components/IssueListComponent.html":{},"index.html":{}}}],["rgb",{"_index":3367,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["rgb(0",{"_index":1182,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueLocationComponent.html":{}}}],["rgb(204",{"_index":1543,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{}}}],["rgb(9",{"_index":3578,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["rgba(0",{"_index":2641,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["rgba(0,0,0,0.75",{"_index":4884,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["rgba(201",{"_index":3556,"title":{},"body":{"components/IssueListComponent.html":{}}}],["rgba(201,195,201,1",{"_index":4987,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rgba(255",{"_index":2788,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/QueryComponent.html":{}}}],["rid",{"_index":3330,"title":{},"body":{"components/IssueIconComponent.html":{},"interfaces/Positions.html":{}}}],["right",{"_index":91,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SideNavComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["right/bottom",{"_index":4526,"title":{},"body":{"interfaces/Positions.html":{}}}],["rightdistance",{"_index":3272,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["role",{"_index":260,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["root",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"injectables/DataService.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"injectables/StateService.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":104,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["root_node",{"_index":2850,"title":{},"body":{"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootid",{"_index":4550,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode",{"_index":4552,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.id",{"_index":4571,"title":{},"body":{"interfaces/Positions.html":{}}}],["rootnode.type",{"_index":4559,"title":{},"body":{"interfaces/Positions.html":{}}}],["rotate",{"_index":5677,"title":{},"body":{"classes/Vector.html":{}}}],["rotate(360deg",{"_index":1639,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["rotated",{"_index":5679,"title":{},"body":{"classes/Vector.html":{}}}],["route",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/userMock.html":{}}}],["router",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/User.html":{}}}],["router.events.pipe",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["routermodule",{"_index":495,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":2263,"title":{},"body":{"components/FrameComponent.html":{}}}],["routerstatesnapshot",{"_index":627,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":494,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/StateService.html":{},"additional-documentation/managing-gropius.html":{}}}],["routing.module",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":493,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":2291,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["row.id",{"_index":3529,"title":{},"body":{"components/IssueListComponent.html":{}}}],["row:hover",{"_index":3552,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["rowdata",{"_index":4913,"title":{},"body":{"components/ProjectMembersComponent.html":{}}}],["rows",{"_index":2299,"title":{},"body":{"components/FrameComponent.html":{}}}],["run",{"_index":5105,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["running",{"_index":5854,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["rxjs",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"dependencies.html":{},"interfaces/userMock.html":{}}}],["rxjs/operators",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"injectables/ComponentStoreService.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{}}}],["s",{"_index":5216,"title":{},"body":{"components/RegisterComponent.html":{},"classes/TimeFormatter.html":{}}}],["s${sourceid}t${targetid}r${edgetype",{"_index":1281,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["s1",{"_index":2069,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["s2",{"_index":2071,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["same",{"_index":815,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"injectables/ComponentStoreService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{}}}],["sandwich",{"_index":2267,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sans",{"_index":3585,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["sat",{"_index":3390,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["save",{"_index":667,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueDetailComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/User.html":{}}}],["savechanges",{"_index":2711,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["saved",{"_index":1003,"title":{},"body":{"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/TextDisplayComponent.html":{}}}],["savedpositions",{"_index":4347,"title":{},"body":{"interfaces/Positions.html":{}}}],["savefailed",{"_index":1552,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["savepositionssubject",{"_index":4348,"title":{},"body":{"interfaces/Positions.html":{}}}],["saves",{"_index":2722,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["saveusertostorage",{"_index":655,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["saveusertostorage(user",{"_index":679,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["saving",{"_index":645,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["savingbody",{"_index":978,"title":{},"body":{"components/CommentComponent.html":{}}}],["savingchanges",{"_index":2706,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["savingcomment",{"_index":2649,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["scalar",{"_index":5684,"title":{},"body":{"classes/Vector.html":{}}}],["scalars",{"_index":2321,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scalars['id",{"_index":2326,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["scale",{"_index":3811,"title":{},"body":{"classes/LayoutNode.html":{},"interfaces/Positions.html":{},"classes/Vector.html":{}}}],["scale(factor",{"_index":5681,"title":{},"body":{"classes/Vector.html":{}}}],["scaled",{"_index":5685,"title":{},"body":{"classes/Vector.html":{}}}],["schema",{"_index":1423,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["schemas",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["schould",{"_index":4900,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["score",{"_index":3996,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"dependencies.html":{}}}],["score(item",{"_index":4017,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scorekeys",{"_index":2865,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["scores",{"_index":4019,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["scoring",{"_index":5276,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["screen",{"_index":3910,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Positions.html":{}}}],["sdot",{"_index":1045,"title":{},"body":{"components/CommentComponent.html":{}}}],["search",{"_index":1508,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/FilterSelection.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/TextFragment.html":{},"injectables/UsersService.html":{},"additional-documentation/using-gropius.html":{}}}],["search'},{'name",{"_index":153,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["search.component",{"_index":2229,"title":{},"body":{"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{}}}],["search.component.html",{"_index":2190,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.scss",{"_index":2191,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["search.component.ts",{"_index":2175,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search.component.ts:17",{"_index":3703,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:19",{"_index":3704,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:20",{"_index":3706,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:21",{"_index":3705,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:22",{"_index":3699,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:31",{"_index":3702,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:38",{"_index":3700,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search.component.ts:49",{"_index":3701,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["search/label",{"_index":2174,"title":{},"body":{"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"modules/GraphsModule.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["searched",{"_index":5251,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["searchissuesdataarray",{"_index":3419,"title":{},"body":{"components/IssueListComponent.html":{}}}],["searchquery",{"_index":2802,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchquerydidchange",{"_index":4120,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["searchuser",{"_index":5629,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusers",{"_index":3900,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["searchusers(filter",{"_index":5627,"title":{},"body":{"injectables/UsersService.html":{}}}],["searchusersgql",{"_index":5621,"title":{},"body":{"injectables/UsersService.html":{}}}],["second",{"_index":4656,"title":{},"body":{"interfaces/Positions.html":{}}}],["seconds",{"_index":951,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["section",{"_index":6061,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["see",{"_index":974,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["seenitems",{"_index":4072,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.add(id",{"_index":4077,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["seenitems.has(id",{"_index":4076,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["segment",{"_index":5664,"title":{},"body":{"classes/Vector.html":{}}}],["select",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/FilterSelection.html":{},"modules/GraphsModule.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/TextFragment.html":{},"dependencies.html":{}}}],["select.label",{"_index":3707,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["select/ng",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"dependencies.html":{}}}],["selectable",{"_index":5350,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["selected",{"_index":29,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["selectedcategories",{"_index":2227,"title":{},"body":{"interfaces/FilterState.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["selectedfilter",{"_index":2228,"title":{},"body":{"interfaces/FilterState.html":{},"components/IssueGraphControlsComponent.html":{}}}],["selectedlabels",{"_index":2195,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selectedusers",{"_index":233,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["selecting",{"_index":6059,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["selection",{"_index":2204,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["selection.labels",{"_index":2212,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selection.texts",{"_index":2209,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["selects",{"_index":3445,"title":{},"body":{"components/IssueListComponent.html":{}}}],["self",{"_index":961,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"components/RemoveDialogComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["self.alllabelslist",{"_index":2867,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["self.projectid",{"_index":2854,"title":{},"body":{"components/IssueFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["selfassigned(assignedevent",{"_index":963,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["send",{"_index":1838,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/MarkdownEditorComponent.html":{},"classes/NodeCache.html":{}}}],["sending",{"_index":1755,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":5152,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["separate",{"_index":3408,"title":{},"body":{"components/IssueListComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["separately",{"_index":3832,"title":{},"body":{"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sequence",{"_index":3199,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["serif",{"_index":3586,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["server",{"_index":867,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/SetEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["server/connection",{"_index":2525,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["server:run",{"_index":5841,"title":{},"body":{"index.html":{}}}],["service",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueStoreService.html":{},"classes/NodeCache.html":{},"injectables/ProjectStoreService.html":{},"injectables/StateService.html":{},"injectables/UserNotifyService.html":{},"additional-documentation/managing-gropius.html":{}}}],["services",{"_index":5873,"title":{},"body":{"index.html":{}}}],["session",{"_index":4709,"title":{},"body":{"interfaces/Positions.html":{}}}],["set",{"_index":186,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["set(locationids.filter(locationid",{"_index":2373,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["set(this.componentlist.map(id",{"_index":1515,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["setcontext",{"_index":2476,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((_",{"_index":2530,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["setcontext((operation",{"_index":2504,"title":{},"body":{"modules/GraphQLModule.html":{},"miscellaneous/variables.html":{}}}],["seteditorcomponent",{"_index":185,"title":{"components/SetEditorComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogcomponent",{"_index":187,"title":{"components/SetEditorDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seteditordialogdata",{"_index":4089,"title":{"interfaces/SetEditorDialogData.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["seterror",{"_index":5124,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["setfilter",{"_index":3997,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setfilter(query",{"_index":4021,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["setgraphtolastview",{"_index":4711,"title":{},"body":{"interfaces/Positions.html":{}}}],["setinenumarray",{"_index":2808,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setinenumarray(array",{"_index":2832,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setmultisource",{"_index":3989,"title":{"interfaces/SetMultiSource.html":{}},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{}}}],["setparams",{"_index":1983,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["setparams(p",{"_index":1737,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{}}}],["setpredicatetype",{"_index":2809,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setpredicatetype(index",{"_index":2838,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["setrelationvisibility",{"_index":3041,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["setrelationvisibility(showrelations",{"_index":4795,"title":{},"body":{"interfaces/Positions.html":{}}}],["sets",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{}}}],["setter",{"_index":3009,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters",{"_index":2999,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["setters.service",{"_index":4309,"title":{},"body":{"interfaces/Positions.html":{}}}],["setters.service.ts",{"_index":2996,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"coverage.html":{}}}],["setters.service.ts:24",{"_index":3004,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{}}}],["setters/issue",{"_index":2995,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{},"coverage.html":{}}}],["settext(value",{"_index":5448,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["settimeout",{"_index":1902,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/RegisterComponent.html":{}}}],["setting",{"_index":4794,"title":{},"body":{"interfaces/Positions.html":{}}}],["settings",{"_index":62,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"additional-documentation/using-gropius.html":{}}}],["settingsdialogcomponent",{"_index":189,"title":{"components/SettingsDialogComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":3087,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["several",{"_index":807,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"additional-documentation/managing-gropius.html":{}}}],["shadow",{"_index":1178,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{}}}],["shared",{"_index":3073,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["sharereplay",{"_index":2272,"title":{},"body":{"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/SettingsDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["sharereplay(1",{"_index":3223,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["sheet",{"_index":4626,"title":{},"body":{"interfaces/Positions.html":{}}}],["shift",{"_index":4505,"title":{},"body":{"interfaces/Positions.html":{}}}],["short",{"_index":1728,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/UserItemComponent.html":{}}}],["shortcut",{"_index":4867,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["shouldn't",{"_index":2032,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/typealiases.html":{}}}],["show",{"_index":3054,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["showconfirmdialog",{"_index":1573,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["showdeleted",{"_index":5521,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["showdeletedialog",{"_index":4171,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdeletedialog(affected",{"_index":4189,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showdrawer",{"_index":2256,"title":{},"body":{"components/FrameComponent.html":{}}}],["showing",{"_index":2916,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SideNavComponent.html":{},"components/TopToolbarComponent.html":{}}}],["showmenubutton",{"_index":5579,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["shown",{"_index":863,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/enumerations.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{}}}],["showname",{"_index":4163,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["showplaceholder",{"_index":5429,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["showrelations",{"_index":3038,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["shows",{"_index":837,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/DialogData-1.html":{},"components/IssueListComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["side",{"_index":191,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["sidebar",{"_index":2249,"title":{},"body":{"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorComponent.html":{}}}],["sidebar'},{'name",{"_index":151,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["sidebar.component",{"_index":1584,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"modules/GraphsModule.html":{}}}],["sidebar.component.ts",{"_index":5769,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["sidemenu",{"_index":5381,"title":{},"body":{"components/SideNavComponent.html":{}}}],["sidenav",{"_index":2288,"title":{},"body":{"components/FrameComponent.html":{}}}],["sidenavcomponent",{"_index":190,"title":{"components/SideNavComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sign",{"_index":6065,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["signal",{"_index":3202,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["signals",{"_index":3098,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["signature",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["significant",{"_index":3825,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["signup",{"_index":5953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signupurl",{"_index":5948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["similar",{"_index":5904,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1848,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{},"additional-documentation/managing-gropius.html":{}}}],["simplechanges",{"_index":5282,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["simply",{"_index":3386,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["simultaneously",{"_index":4005,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["single",{"_index":941,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["singular",{"_index":5489,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["size",{"_index":1652,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"interfaces/Positions.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["size.height",{"_index":4763,"title":{},"body":{"interfaces/Positions.html":{}}}],["size.width",{"_index":4761,"title":{},"body":{"interfaces/Positions.html":{}}}],["sizes",{"_index":1660,"title":{},"body":{"components/CursorPaginatorComponent.html":{}}}],["slate",{"_index":4593,"title":{},"body":{"interfaces/Positions.html":{}}}],["slide",{"_index":3118,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["slider",{"_index":2280,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slideto",{"_index":5788,"title":{},"body":{"coverage.html":{}}}],["slideto('right",{"_index":6043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sliding",{"_index":6044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slightly",{"_index":5153,"title":{},"body":{"interfaces/QueryListParams.html":{}}}],["small",{"_index":3796,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["smaller",{"_index":5352,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["software",{"_index":5862,"title":{},"body":{"index.html":{}}}],["solid",{"_index":2694,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["solves",{"_index":5895,"title":{},"body":{"index.html":{}}}],["something",{"_index":4015,"title":{},"body":{"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sometimes",{"_index":4338,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhat",{"_index":4531,"title":{},"body":{"interfaces/Positions.html":{}}}],["somewhere",{"_index":4016,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sommerzeit",{"_index":5480,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["soon",{"_index":5093,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{}}}],["sort",{"_index":3407,"title":{},"body":{"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["sorted",{"_index":3289,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids",{"_index":3282,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.foreach((childid",{"_index":3293,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["sortedchildids.length",{"_index":3302,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"directives/ItemDirective.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["source.allowedanchors.has('bottom",{"_index":3185,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.allowedanchors.has('right",{"_index":3184,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["source.current.entries",{"_index":4075,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.current.size",{"_index":4079,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.filter",{"_index":4063,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.hasdata",{"_index":4074,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source.loading",{"_index":4085,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["source?.allowedanchors",{"_index":3170,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourced",{"_index":4033,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcefolders",{"_index":2435,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcefolders.foreach(folder",{"_index":2443,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcehandles",{"_index":3158,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles.filter((linkhandle",{"_index":3179,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourcehandles:linkhandle[];targethandles:linkhandle",{"_index":3177,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["sourceid",{"_index":1282,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourceissues",{"_index":1277,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["sourcelocationids",{"_index":2433,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcelocationids.map(locationid",{"_index":2436,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["sourcenode",{"_index":3018,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["sourcenode.type",{"_index":4418,"title":{},"body":{"interfaces/Positions.html":{}}}],["sourcenodelist",{"_index":3992,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodelistsub",{"_index":4035,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcenodes",{"_index":4009,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcepoint",{"_index":5665,"title":{},"body":{"classes/Vector.html":{}}}],["sources",{"_index":3986,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sourcesubs",{"_index":4036,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["south",{"_index":4297,"title":{},"body":{"interfaces/Positions.html":{}}}],["space",{"_index":2147,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/IssueIconComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spacer",{"_index":3124,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/TopToolbarComponent.html":{}}}],["spaces",{"_index":743,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["spacing",{"_index":2913,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["span[matline",{"_index":4879,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["spec",{"_index":3993,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec.sourcenodes",{"_index":4039,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["spec\\.ts",{"_index":5944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3894,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"injectables/StateService.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["specified",{"_index":1421,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/MultiSourceList.html":{},"injectables/ProjectStoreService.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"index.html":{}}}],["specifies",{"_index":4030,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["specify",{"_index":6055,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["specifying",{"_index":1095,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/Positions.html":{}}}],["spinner",{"_index":1637,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{}}}],["src/.../app.module.ts",{"_index":5936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../component",{"_index":5938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":5940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../graph",{"_index":5925,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../graphql.module.ts",{"_index":5937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../id.ts",{"_index":5836,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issue",{"_index":5835,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../issues.service.ts",{"_index":5928,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../label",{"_index":5924,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../load.ts",{"_index":5931,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../node",{"_index":5837,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../query.component.ts",{"_index":5838,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../query.ts",{"_index":5926,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":5942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../set",{"_index":5930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../shared.ts",{"_index":5923,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../test.ts",{"_index":5939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../text",{"_index":5935,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timeline.component.ts",{"_index":5929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":492,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.guard.ts",{"_index":611,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth/auth.guard.ts:10",{"_index":624,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/auth.guard.ts:22",{"_index":628,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth/authentication.service.ts",{"_index":644,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/auth/authentication.service.ts:15",{"_index":683,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:16",{"_index":682,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:17",{"_index":660,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:24",{"_index":685,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:28",{"_index":662,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:32",{"_index":680,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:43",{"_index":665,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/auth/authentication.service.ts:59",{"_index":676,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/components/cache",{"_index":756,"title":{},"body":{"components/CacheNodeComponent.html":{},"coverage.html":{}}}],["src/app/components/cursor",{"_index":1647,"title":{},"body":{"components/CursorPaginatorComponent.html":{},"coverage.html":{}}}],["src/app/components/issue",{"_index":2634,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueLocationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/item.directive.ts",{"_index":3692,"title":{},"body":{"directives/ItemDirective.html":{},"coverage.html":{}}}],["src/app/components/set",{"_index":3985,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/components/user",{"_index":5591,"title":{},"body":{"components/UserItemComponent.html":{},"coverage.html":{}}}],["src/app/data",{"_index":1365,"title":{},"body":{"injectables/ComponentsService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/data/component/component",{"_index":1303,"title":{},"body":{"injectables/ComponentStoreService.html":{},"coverage.html":{}}}],["src/app/data/interface/interface",{"_index":2598,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"coverage.html":{}}}],["src/app/data/issue",{"_index":2302,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphStateService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/issue/issue",{"_index":3588,"title":{},"body":{"injectables/IssueStoreService.html":{},"coverage.html":{}}}],["src/app/data/label/label",{"_index":3709,"title":{},"body":{"injectables/LabelStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/data/project/project",{"_index":5005,"title":{},"body":{"injectables/ProjectStoreService.html":{},"coverage.html":{}}}],["src/app/dialogs/access",{"_index":10,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/add",{"_index":221,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/create",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/profile",{"_index":4802,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/remove",{"_index":2142,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"coverage.html":{}}}],["src/app/dialogs/settings",{"_index":5362,"title":{},"body":{"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts",{"_index":2233,"title":{},"body":{"components/FrameComponent.html":{},"coverage.html":{}}}],["src/app/frame/frame.component.ts:27",{"_index":2275,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:28",{"_index":2276,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:30",{"_index":2273,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:34",{"_index":2261,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:36",{"_index":2277,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:45",{"_index":2266,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/frame/frame.component.ts:49",{"_index":2264,"title":{},"body":{"components/FrameComponent.html":{}}}],["src/app/graphql.module.ts",{"_index":2465,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs",{"_index":3254,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["src/app/graphs/automatic",{"_index":3729,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["src/app/graphs/component",{"_index":1047,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/graphs.module.ts",{"_index":2548,"title":{},"body":{"modules/GraphsModule.html":{}}}],["src/app/graphs/issue",{"_index":1204,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/graphs/label",{"_index":2173,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/graphs/shared.ts",{"_index":2226,"title":{},"body":{"interfaces/FilterState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/issue",{"_index":803,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/login/login.component.ts",{"_index":3909,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:18",{"_index":3934,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:19",{"_index":3931,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":3930,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":3929,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":3932,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":3922,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:49",{"_index":3921,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/markdown/markdown",{"_index":3954,"title":{},"body":{"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"coverage.html":{}}}],["src/app/node",{"_index":4156,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/project",{"_index":4817,"title":{},"body":{"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["src/app/register/register.component.ts",{"_index":5161,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:118",{"_index":5181,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:131",{"_index":5178,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:20",{"_index":5197,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:21",{"_index":5191,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":5176,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":5193,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:67",{"_index":5190,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:85",{"_index":5188,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:95",{"_index":5184,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/route",{"_index":5786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/side",{"_index":5379,"title":{},"body":{"components/SideNavComponent.html":{},"coverage.html":{}}}],["src/app/state.service.ts",{"_index":527,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{},"coverage.html":{}}}],["src/app/state.service.ts:16",{"_index":5422,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:17",{"_index":5419,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:31",{"_index":5421,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/state.service.ts:57",{"_index":5420,"title":{},"body":{"injectables/StateService.html":{}}}],["src/app/text",{"_index":5423,"title":{},"body":{"components/TextDisplayComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/top",{"_index":5571,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":5598,"title":{},"body":{"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["src/app/utils/query",{"_index":5070,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/utils/validators.ts",{"_index":718,"title":{},"body":{"classes/CCIMSValidators.html":{},"coverage.html":{}}}],["src/app/utils/validators.ts:10",{"_index":746,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:16",{"_index":738,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:25",{"_index":747,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/app/utils/validators.ts:30",{"_index":731,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["src/environments/environment.prod.ts",{"_index":5792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/generated",{"_index":6120,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["src/generated/graphql",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/FilterState.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"components/IssueDetailComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"interfaces/RelationEdge.html":{},"injectables/StateService.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{}}}],["src/generated/public",{"_index":5201,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/styles/dialog",{"_index":1446,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{}}}],["src/styles/spinner",{"_index":2687,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/ProjectListComponent.html":{}}}],["src/styles/variables",{"_index":1171,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"components/TextDisplayComponent.html":{}}}],["src/styles/variables.scss",{"_index":2770,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["src/test.ts",{"_index":5794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ss",{"_index":2198,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"interfaces/TextFragment.html":{}}}],["ss.state$.pipe",{"_index":2282,"title":{},"body":{"components/FrameComponent.html":{}}}],["ss.state$.subscribe(appstate",{"_index":5403,"title":{},"body":{"components/SideNavComponent.html":{}}}],["stale",{"_index":1764,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["standing",{"_index":2223,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"interfaces/TextFragment.html":{},"miscellaneous/typealiases.html":{}}}],["star",{"_index":2787,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["start",{"_index":1109,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/TimelineItemComponent.html":{},"index.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["start/end",{"_index":740,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["startcursor",{"_index":6013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":2756,"title":{"index.html":{}},"body":{"components/IssueDetailComponent.html":{},"index.html":{}}}],["startediting",{"_index":5430,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["startoffset",{"_index":3279,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["starts",{"_index":2146,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["state",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"injectables/StateService.html":{},"miscellaneous/enumerations.html":{}}}],["state.project",{"_index":2284,"title":{},"body":{"components/FrameComponent.html":{}}}],["state.service",{"_index":1401,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/FilterSelection.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["state.service.ts",{"_index":3189,"title":{},"body":{"injectables/IssueGraphStateService.html":{},"coverage.html":{}}}],["state.service.ts:14",{"_index":3191,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:28",{"_index":3196,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:44",{"_index":3194,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.service.ts:51",{"_index":3208,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["state.url",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state[fill",{"_index":2784,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["state[stroke",{"_index":2785,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["stateful",{"_index":1769,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statelock",{"_index":1853,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["statements",{"_index":5689,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":3206,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["stateservice",{"_index":553,"title":{"injectables/StateService.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"additional-documentation/managing-gropius.html":{}}}],["static",{"_index":725,"title":{},"body":{"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"classes/LayoutNode.html":{},"classes/MultiSourceList.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"classes/Vector.html":{}}}],["staticsourcenodelist",{"_index":3994,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["staticsources",{"_index":2876,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":2793,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["status",{"_index":2781,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["sticky",{"_index":5590,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["still",{"_index":1478,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"index.html":{}}}],["stop",{"_index":912,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["stopcoalescing",{"_index":910,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stopcoalescing(coalescingtype",{"_index":954,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["stops",{"_index":947,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["storage",{"_index":669,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store",{"_index":700,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Positions.html":{},"interfaces/User.html":{}}}],["store.service",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/LabelSearchComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{},"interfaces/userMock.html":{}}}],["store.service.ts",{"_index":1304,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{},"injectables/IssueStoreService.html":{},"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["store.service.ts:100",{"_index":3675,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:104",{"_index":3655,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:110",{"_index":3653,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:12",{"_index":3714,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:23",{"_index":3719,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["store.service.ts:25",{"_index":2616,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:29",{"_index":5022,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:30",{"_index":1337,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:34",{"_index":2620,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:36",{"_index":3716,"title":{},"body":{"injectables/LabelStoreService.html":{},"injectables/ProjectStoreService.html":{}}}],["store.service.ts:41",{"_index":1348,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:42",{"_index":3630,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:43",{"_index":2623,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:44",{"_index":5023,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:45",{"_index":1344,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["store.service.ts:49",{"_index":1350,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:51",{"_index":5028,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:53",{"_index":1346,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:55",{"_index":5030,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:56",{"_index":3647,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:57",{"_index":1342,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/InterfaceStoreService.html":{}}}],["store.service.ts:59",{"_index":5025,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["store.service.ts:60",{"_index":3658,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:64",{"_index":1340,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:68",{"_index":1353,"title":{},"body":{"injectables/ComponentStoreService.html":{},"injectables/IssueStoreService.html":{}}}],["store.service.ts:72",{"_index":3651,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:76",{"_index":3641,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:80",{"_index":3669,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:84",{"_index":3665,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:88",{"_index":3638,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:92",{"_index":3634,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["store.service.ts:96",{"_index":3661,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["stored",{"_index":1242,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["stretch",{"_index":268,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["string",{"_index":49,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":2965,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["stroke",{"_index":2786,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["structural",{"_index":3694,"title":{},"body":{"directives/ItemDirective.html":{}}}],["structure",{"_index":2034,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["stuff",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["style",{"_index":3581,"title":{},"body":{"components/IssueLocationComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["style('opacity",{"_index":3146,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["sub",{"_index":1878,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.error(error",{"_index":1917,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.next(this.current",{"_index":1914,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["sub.unsubscribe",{"_index":1881,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["sub.unsubscribe()`]{@link",{"_index":1799,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subclass",{"_index":1844,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subclasses",{"_index":1825,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subdivided",{"_index":6087,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["subheading",{"_index":2780,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["subject",{"_index":677,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{},"interfaces/User.html":{}}}],["submitform",{"_index":3919,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform(value",{"_index":5183,"title":{},"body":{"components/RegisterComponent.html":{}}}],["subscribe",{"_index":769,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribe(_",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(filterstate",{"_index":3094,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["subscribe(project",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["subscribe(r",{"_index":4358,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscribe(this.isprojectset",{"_index":2285,"title":{},"body":{"components/FrameComponent.html":{}}}],["subscribe]{@link",{"_index":1782,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribed",{"_index":973,"title":{},"body":{"components/CommentComponent.html":{}}}],["subscribelazy",{"_index":1702,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["subscribelazy(...args",{"_index":1731,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriber",{"_index":1740,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["subscriber.next(this.current",{"_index":1908,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribercount",{"_index":1921,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscribers",{"_index":1837,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["subscribes",{"_index":4374,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["subscribetosubject",{"_index":4386,"title":{},"body":{"interfaces/Positions.html":{}}}],["subscription",{"_index":784,"title":{},"body":{"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["subscription#unsubscribe",{"_index":1800,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subscriptions",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueGraphControlsComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{}}}],["subsequent",{"_index":1784,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["subtract",{"_index":5650,"title":{},"body":{"classes/Vector.html":{}}}],["subtract(other",{"_index":5686,"title":{},"body":{"classes/Vector.html":{}}}],["success",{"_index":270,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["success(value",{"_index":5123,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["successful",{"_index":675,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/CommentComponent.html":{},"components/IssueContentsComponent.html":{},"components/NodeDetailsComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/User.html":{}}}],["successfull",{"_index":3923,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":5072,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["succession",{"_index":812,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["sucessfull",{"_index":666,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["such",{"_index":2042,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueItemComponent.html":{},"classes/NodeCache.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["sufficient",{"_index":1790,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["suggestions",{"_index":5263,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["sum",{"_index":5655,"title":{},"body":{"classes/Vector.html":{}}}],["super(id",{"_index":1924,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["super(subscriber",{"_index":1867,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["superclass",{"_index":6107,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["superset",{"_index":5268,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["support",{"_index":5917,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1031,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/LayoutNode.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"classes/Vector.html":{}}}],["svg",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/IssueDetailComponent.html":{},"modules.html":{}}}],["switch",{"_index":2879,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"components/SettingsDialogComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["switches",{"_index":3048,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["switchmap",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/FilterSelection.html":{},"injectables/IssueGraphStateService.html":{},"components/LabelSearchComponent.html":{},"injectables/StateService.html":{},"interfaces/TextFragment.html":{}}}],["switchmap(([appstate",{"_index":3218,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["switchmap((event",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["switchmap(term",{"_index":2220,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["switchtheme",{"_index":5367,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["symbols",{"_index":5195,"title":{},"body":{"components/RegisterComponent.html":{}}}],["synchronously",{"_index":1778,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["syncstatewithurl",{"_index":5418,"title":{},"body":{"injectables/StateService.html":{}}}],["syncstatewithurl(router",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["syntax",{"_index":3956,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["system",{"_index":4838,"title":{},"body":{"components/ProjectListComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{}}}],["systems",{"_index":5863,"title":{},"body":{"index.html":{}}}],["t",{"_index":1806,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/FilterState.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":4280,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["table",{"_index":3409,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5796,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":3866,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"additional-documentation/managing-gropius.html":{}}}],["taken",{"_index":2829,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/RegisterComponent.html":{}}}],["takes",{"_index":4584,"title":{},"body":{"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["takeuntil",{"_index":3075,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"interfaces/Positions.html":{}}}],["takeuntil(destroy",{"_index":3214,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["takeuntil(this.destroy",{"_index":3092,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["tap",{"_index":2181,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["target",{"_index":1283,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{}}}],["target.allowedanchors.has('bottom",{"_index":3188,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target.allowedanchors.has('right",{"_index":3187,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["target?.allowedanchors",{"_index":3172,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targeted",{"_index":6058,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["targetfolders",{"_index":2432,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetfolders.concat(targetlocationids.map(locationid",{"_index":2441,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targethandles",{"_index":3162,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["targetid",{"_index":1279,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["targetlocationids",{"_index":2439,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["targetnode",{"_index":3019,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"interfaces/Positions.html":{}}}],["targetnode.id.tostring()).subscribe",{"_index":4442,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetnode?.type",{"_index":4432,"title":{},"body":{"interfaces/Positions.html":{}}}],["targetpoint",{"_index":5659,"title":{},"body":{"classes/Vector.html":{}}}],["targets",{"_index":4422,"title":{},"body":{"interfaces/Positions.html":{}}}],["task",{"_index":4960,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["team",{"_index":6131,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["technically",{"_index":5634,"title":{},"body":{"injectables/UsersService.html":{}}}],["technologies",{"_index":5856,"title":{},"body":{"index.html":{}}}],["tell",{"_index":3053,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["templateref",{"_index":780,"title":{},"body":{"components/CacheNodeComponent.html":{},"classes/MultiSourceList.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["templates",{"_index":3695,"title":{},"body":{"directives/ItemDirective.html":{}}}],["templates/dynamic",{"_index":3135,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["term",{"_index":3718,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["term).pipe",{"_index":2222,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["test",{"_index":2967,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["test)&quot;&quot",{"_index":2972,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["testing",{"_index":755,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["text",{"_index":194,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"miscellaneous/typealiases.html":{}}}],["text(value",{"_index":5450,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["textdisplaycomponent",{"_index":193,"title":{"components/TextDisplayComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textdisplayeditcallbackfn",{"_index":5434,"title":{},"body":{"components/TextDisplayComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textfragment",{"_index":2224,"title":{"interfaces/TextFragment.html":{}},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["texts",{"_index":2176,"title":{},"body":{"interfaces/FilterSelection.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/LabelSearchComponent.html":{},"interfaces/Positions.html":{},"interfaces/TextFragment.html":{}}}],["texts.length",{"_index":2979,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["texts.map(text",{"_index":2989,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex",{"_index":2931,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([\"newest",{"_index":2966,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex([&quot;newest",{"_index":2968,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["textstoregex(texts",{"_index":2959,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["thecurrent",{"_index":879,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["theme",{"_index":3969,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["then(created",{"_index":1530,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["then(data",{"_index":5640,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["theres",{"_index":4708,"title":{},"body":{"interfaces/Positions.html":{}}}],["thing",{"_index":1682,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.hasdata",{"_index":1683,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing$.loading",{"_index":1681,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thing.something",{"_index":1684,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingid",{"_index":1686,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["things",{"_index":1937,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingslistid",{"_index":1936,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingssub",{"_index":1940,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["thingsub",{"_index":1687,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["think",{"_index":1236,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["this.activatedroute.parent",{"_index":4510,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.activatedroute.queryparams.subscribe",{"_index":3524,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":2742,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('issueid",{"_index":2743,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.activeitemcontent",{"_index":5532,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.activepredicates",{"_index":2901,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.slice(0",{"_index":2884,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates.splice(index",{"_index":2891,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.activepredicates[index",{"_index":2887,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.addableusers",{"_index":4964,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addableusers.foreach(addableuser",{"_index":4967,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.addcoalesceitems(coalescelist",{"_index":904,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addconsumedinterfacemutation.mutate({input",{"_index":2991,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.addinterfacetocomponent(event.detail.sourcenode.id",{"_index":4445,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefoldernodes(node",{"_index":4659,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuefolders(node",{"_index":4610,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuegroupcontainer(node",{"_index":4658,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.addissuetolocationmutation.mutate({input",{"_index":3686,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.additions.add(encodenodeid(node",{"_index":4147,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.add(id",{"_index":4139,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.delete(id",{"_index":4136,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.has(id",{"_index":4130,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.additions.size",{"_index":4140,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.addsinglecoalesceitem(timelineitem",{"_index":919,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.addsubscriber(subscriber",{"_index":1868,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.allcomponentslist",{"_index":1506,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.alllabelslist",{"_index":3483,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.apiservice.addconsumedinterface(componentid",{"_index":3224,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.loadissuegraphdata(appstate.project.node.id",{"_index":3219,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.apiservice.removeconsumedinterface(componentid",{"_index":3225,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.applychangeset(additions",{"_index":5306,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.authenticationservice.currentuservalue",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.login(this.validateform.controls.username.value",{"_index":3940,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.body",{"_index":5111,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.body.code",{"_index":1599,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":2268,"title":{},"body":{"components/FrameComponent.html":{},"interfaces/Positions.html":{},"components/TopToolbarComponent.html":{}}}],["this.bug",{"_index":3081,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.button",{"_index":5112,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.button.element.disabled",{"_index":5132,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.buttonmode",{"_index":5110,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.calculateboundingbox",{"_index":4590,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.calculatesourcehandles(source",{"_index":3171,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.calculatetargethandles(target",{"_index":3173,"title":{},"body":{"injectables/IssueGraphLinkHandlesService.html":{}}}],["this.callback",{"_index":4254,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(false",{"_index":4275,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.callback(true",{"_index":4255,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.cancreatenewissue",{"_index":3487,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.category.setvalue(data.category",{"_index":2755,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.category.setvalue(issuecategory.unclassified",{"_index":1587,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.category.value",{"_index":1600,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{}}}],["this.changecolour",{"_index":4861,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":1149,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/NodeDetailsPageComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.changeissuecategorymutation.mutate({input",{"_index":3685,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.childnodepositions.set(childid",{"_index":3294,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.close",{"_index":1155,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.closecomponentactions",{"_index":4367,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closecomponentactions(false",{"_index":4466,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.closeissuemutation.mutate({input",{"_index":3682,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.codechange.emit(this.code",{"_index":3972,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["this.color",{"_index":1497,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.comment",{"_index":1014,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.comment$.subscribelazy",{"_index":1017,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commenteditor.code",{"_index":2681,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.commentid",{"_index":1022,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentissuemutation.mutate({input",{"_index":3680,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.commentsub",{"_index":1016,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.commentsub?.unsubscribe",{"_index":1018,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.component",{"_index":3488,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["this.component$.id",{"_index":3546,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component$.subscribe",{"_index":3491,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.component.node.description",{"_index":4261,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.id",{"_index":4273,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.ims.imstype",{"_index":4259,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.component.node.name",{"_index":4249,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.componentcontextmenu",{"_index":4496,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.close",{"_index":4574,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.data.nodeid",{"_index":4502,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.height",{"_index":4544,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.updateposition(math.max(x",{"_index":4499,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenu.width",{"_index":4542,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenunodeid",{"_index":4520,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentcontextmenuservice.open",{"_index":4523,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentinterface",{"_index":3493,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.dataaspromise().then(data",{"_index":3496,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.id",{"_index":3547,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterface$.subscribe",{"_index":3495,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfaceprovider",{"_index":3497,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub",{"_index":3494,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentinterfacesub?.unsubscribe",{"_index":3522,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentlist",{"_index":1488,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.push(item",{"_index":1518,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentlist.splice(this.componentlist.indexof(item",{"_index":1520,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.componentstoreservice.getfullcomponent(rootid).subscribe(component",{"_index":4560,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.componentsub",{"_index":3490,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.componentsub?.unsubscribe",{"_index":3521,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.confirmvalidator",{"_index":5207,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.connectconsumingcomponents(interfacenode",{"_index":4616,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.connectedto.add(other",{"_index":3785,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connectedto.has(othernode",{"_index":3812,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.connecttoofferingcomponent(interfacenode",{"_index":4615,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.contextmenutypefornodetype(node",{"_index":4513,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.createcomponentmutation.mutate({input",{"_index":1362,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.createinterfacemutation.mutate({input",{"_index":2628,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.createissue.mutate({input",{"_index":3677,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.createitem",{"_index":5308,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.createnode(id",{"_index":2054,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.createproject.mutate({input",{"_index":5034,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.current",{"_index":1906,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys",{"_index":2005,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.keys().next()?.value",{"_index":2001,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current.values",{"_index":1990,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.current?.has(encodenodeid(key",{"_index":2010,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentdata",{"_index":1829,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentqueryparams",{"_index":1833,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.currentuser",{"_index":692,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueContentsComponent.html":{},"interfaces/User.html":{}}}],["this.currentuser$.subscribe",{"_index":2674,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub",{"_index":2673,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersub.unsubscribe",{"_index":2676,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.currentusersubject",{"_index":690,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":693,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(null",{"_index":715,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.next(user",{"_index":711,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.value",{"_index":694,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.currentvisiblearea",{"_index":4494,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.cursor",{"_index":2014,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.data",{"_index":5094,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.data.applychangeset([...this.additions].map(decodenodeid",{"_index":4143,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.components",{"_index":1590,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.confirmbuttontext",{"_index":5237,"title":{},"body":{"components/RemoveDialogComponent.html":{}}}],["this.data.createitem().then(node",{"_index":4146,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.editexisting",{"_index":1487,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.editexisting.id",{"_index":1527,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.graph.reload",{"_index":1154,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.issueid",{"_index":1505,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.listall",{"_index":4108,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.listset].map(id",{"_index":4104,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.locations",{"_index":1593,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.data.makefilter(this.searchquery",{"_index":4122,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.nodeid",{"_index":1170,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.data.offeredbyid",{"_index":1557,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.data.overlayref.dispose",{"_index":1159,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.overlayref.getconfig().positionstrategy.apply",{"_index":1158,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsetx",{"_index":1156,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.position.offsety",{"_index":1157,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.data.projectid",{"_index":1424,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.data.scorekeys",{"_index":4110,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.data.verificationname",{"_index":2163,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dataservice",{"_index":4111,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist",{"_index":881,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/IssueContentsComponent.html":{}}}],["this.dataservice.getlist(decodelistid(source",{"_index":4050,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.data.listset",{"_index":4106,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dataservice.getlist(this.listid",{"_index":3503,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getlist(this.listset",{"_index":5292,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.dataservice.getlist(this.thingslistid",{"_index":1942,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode",{"_index":3847,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.dataservice.getnode(current_user_node",{"_index":2672,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.getnode(issuenodeid",{"_index":2746,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.getnode(node",{"_index":4830,"title":{},"body":{"components/ProjectIssueListComponent.html":{}}}],["this.dataservice.getnode(this.commentid",{"_index":1015,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.getnode(this.data.editexisting",{"_index":1491,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.getnode(this.listid.node",{"_index":3489,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dataservice.getnode(this.node",{"_index":795,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.dataservice.getnode(this.thingid",{"_index":1689,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.dataservice.getnode({type",{"_index":4999,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.dataservice.mutations.addissuecomment",{"_index":2680,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.addlabeltocomponent(math.random().tostring",{"_index":1523,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.changeissuecategory",{"_index":2761,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.closeissue(math.random().tostring",{"_index":2677,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.createissue(issuedata).then(async",{"_index":1607,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dataservice.mutations.createlabel",{"_index":1529,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.deleteissuecomment",{"_index":1039,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.removelabelfromcomponent(math.random().tostring",{"_index":1524,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dataservice.mutations.renameissuetitle",{"_index":2759,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.dataservice.mutations.reopenissue(math.random().tostring",{"_index":2678,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.dataservice.mutations.updateissuecomment",{"_index":1020,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.dataservice.mutations.updatelabel",{"_index":1525,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.datasource",{"_index":3506,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.filter",{"_index":3517,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.paginator",{"_index":3515,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.datasource.sort",{"_index":3511,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.defaultmenutitle",{"_index":5397,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.deletecomponentmutation.mutate({input",{"_index":1361,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.deleteinterfacemutation.mutate({input",{"_index":2633,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.deleteissuecommentmutation.mutate({input",{"_index":3681,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.deleteitem.emit(item",{"_index":5312,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.deleteproject.mutate({input",{"_index":5035,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.deletequery.listento(this.componentstoreservice.deletecomponent(this.nodeid",{"_index":4253,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.componentstoreservice.getcomponentinterfaces(this.nodeid",{"_index":4233,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.delete(this.nodeid",{"_index":4257,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletequery.listento(this.interfacestoreservice.getconsumingcomponents(this.nodeid",{"_index":4244,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.deletions.add(id",{"_index":4137,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.delete(id",{"_index":4138,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.has(id",{"_index":4131,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions.size",{"_index":4141,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.deletions].map(decodenodeid)).then",{"_index":4144,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.description",{"_index":5001,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.destroy",{"_index":3107,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$).pipe",{"_index":3103,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.destroy$.next",{"_index":3108,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{}}}],["this.dialog.close",{"_index":1526,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(created",{"_index":1531,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.close(null",{"_index":1503,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.dialog.open(accesstokendialogcomponent",{"_index":5371,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(addprojectmemberdialogcomponent",{"_index":4962,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(createcomponentdialogcomponent",{"_index":4800,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createinterfacedialogcomponent",{"_index":4452,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.dialog.open(createissuedialogcomponent",{"_index":3545,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.dialog.open(createprojectdialogcomponent",{"_index":4859,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.dialog.open(profilesettingsdialogcomponent",{"_index":5370,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(removedialogcomponent",{"_index":1027,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialog.open(removeprojectmembercomponentcomponent",{"_index":4971,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.dialog.open(settingsdialogcomponent",{"_index":5589,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":63,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.dialogref.close(data",{"_index":258,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.dialogref.close(data.createcomponentinterface.componentinterface.id",{"_index":1559,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.dialogref.close(false",{"_index":2170,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close(null",{"_index":4142,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.dialogref.close(true",{"_index":1624,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.dialogref.close({createdprojectid",{"_index":1645,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.dialogref.disableclose",{"_index":1588,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.dialogservice.open>(seteditordialogcomponent",{"_index":5313,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl('../assets/icons/svg",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["this.domsanitizer.bypasssecuritytrustresourceurl(asseturl",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["this.drawfolderrelations(node",{"_index":4611,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.drawgraph",{"_index":4621,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.editbody",{"_index":1024,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.edititem.emit(item",{"_index":5310,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.editmode",{"_index":4210,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/TextDisplayComponent.html":{}}}],["this.edittext",{"_index":5455,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.emiterrortoallsubscribers(error",{"_index":1897,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emitupdatetoallsubscribers",{"_index":1903,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.emptyresultslabel",{"_index":5319,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.emptysuggestionslabel",{"_index":5318,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.errorconfig",{"_index":5616,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.extractissueid(component.node.issues.nodes",{"_index":4562,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.extractissueid(interfacecomponent.node.issuesonlocation.nodes",{"_index":4565,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fb.group",{"_index":3948,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.featurerequests",{"_index":3082,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter",{"_index":3029,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filter$.next(filterstate",{"_index":3095,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.filterchange.emit(this.buildfilter",{"_index":2905,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.filterselection",{"_index":2202,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.filterselection$.next(selection",{"_index":2215,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.findidealcomponentposition(component.id",{"_index":4599,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.firstpageitemid",{"_index":2018,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.fitgraphinview",{"_index":4748,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.fixed",{"_index":3786,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.formatcategorydescription(element.category",{"_index":3551,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.formatissueopentime",{"_index":2767,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.forward",{"_index":1975,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.frame.nativeelement.style.minheight",{"_index":1147,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.frame.nativeelement.style.minwidth",{"_index":1145,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.fromgqlnolinks(gqlissue",{"_index":2424,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fromgqlnolinks(gqlpartialissue",{"_index":2427,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["this.fullissue",{"_index":3846,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissue.subscribe",{"_index":3849,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuelink",{"_index":3844,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub",{"_index":3848,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.fullissuesub?.unsubscribe",{"_index":3850,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.getallfilter(projectid",{"_index":3721,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallfilter(projectid).pipe",{"_index":3722,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getallquery.fetch({filter}).pipe",{"_index":5038,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getalltimelineitemsquery.fetch({input",{"_index":3690,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getbasiccomponentquery.fetch({id}).pipe(map(({data",{"_index":1358,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getbasicprojectquery.fetch({id}).pipe(map(({data",{"_index":5036,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getcomponentinterfacesquery.fetch({id}).pipe(map(({data",{"_index":1360,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getconsumingcomponentsquery.fetch({id}).pipe(map(({data",{"_index":2631,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getencodedid(item",{"_index":4129,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.getfullcomponentquery.fetch({id}).pipe(map(({data",{"_index":1359,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getfullissuegraphdataquery.fetch({projectid",{"_index":2980,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getfullissuequery.fetch({id}).pipe",{"_index":3689,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.getfullquery.fetch({id}).pipe(map(({data",{"_index":5037,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["this.getinterfacequery.fetch({id}).pipe",{"_index":2629,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.getlabelsgql.fetch({projectid}).pipe",{"_index":3726,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["this.getlabelsquery.fetch({id}).pipe(map(({data",{"_index":1357,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.getnode(id",{"_index":2062,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.getqueryparamfilter",{"_index":3518,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.getremainingtypes(index",{"_index":2893,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.getsearchissuegraphdataquery.fetch({projectid",{"_index":2987,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.getselectedcategories",{"_index":3068,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.graph",{"_index":4353,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(edge",{"_index":4707,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createconsumptionedge(consumerid",{"_index":4652,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addedge(issuegraphnodes.createinterfaceprovisionedge(node.offeredbyid",{"_index":4645,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuefoldernode",{"_index":4691,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(issuegroupcontainernode",{"_index":4676,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.addnode(node",{"_index":4609,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.completerender",{"_index":4617,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentviewwindow",{"_index":4527,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.apply([node.x",{"_index":4498,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.currentzoomtransform.k",{"_index":4528,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.edgelist",{"_index":4630,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.source",{"_index":4439,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(edge.target",{"_index":4440,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(id",{"_index":4700,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getnode(this.componentcontextmenunodeid",{"_index":4497,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.getsvg().style",{"_index":4796,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager",{"_index":4668,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.addnodetogroup(node.issuegroupcontainer.id",{"_index":4692,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.groupingmanager.clearallgroups",{"_index":4633,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.nodelist",{"_index":4631,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox",{"_index":4545,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(previousboundingbox",{"_index":4747,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graph.zoomtobox(rect",{"_index":4752,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata",{"_index":4318,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.components.size",{"_index":4720,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.graphlocations.get(node.id).issues",{"_index":4684,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.interfaces.get(interfacenode.id).consumedby",{"_index":4651,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders",{"_index":4588,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphdata.relatedfolders.getvalue([node.id.tostring",{"_index":4702,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphfirstrender",{"_index":4724,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphinitialized",{"_index":4371,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.graphlink",{"_index":5410,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.graphwrapper.nativeelement",{"_index":4354,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.addconsumedinterface(sourcenode.id.tostring",{"_index":4441,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.gs.graphdataforfilter(this.filter",{"_index":3102,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.gs.removeconsumedinterface(sourcenode.id.tostring",{"_index":4460,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.hasdata",{"_index":1874,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hasmore",{"_index":4073,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.height",{"_index":1151,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.http.post(environment.loginurl",{"_index":698,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.hydrate",{"_index":5295,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.hydrated",{"_index":1896,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.hydrateraw(data.then(value",{"_index":2027,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.id",{"_index":1870,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["this.infoconfig",{"_index":5618,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.initgraph",{"_index":4355,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.innermapfn",{"_index":1872,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innermapfn(result",{"_index":1920,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.innerqueryfn",{"_index":1871,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.inputtitle.nativeelement.value",{"_index":2760,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.insertresult(data",{"_index":1895,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interactive",{"_index":1730,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.interface",{"_index":4227,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.description",{"_index":4264,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.id",{"_index":4277,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interface.node.name",{"_index":4256,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.interfacestore.create(name",{"_index":1556,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{}}}],["this.interfacestoreservice.getinterface(rootid).subscribe(interfacecomponent",{"_index":4564,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.invalidate",{"_index":2015,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.invalidatelists.bind(this",{"_index":2122,"title":{},"body":{"injectables/DataService.html":{}}}],["this.invalidcredentials",{"_index":3927,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.iscomponent",{"_index":3572,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.ishandset",{"_index":4359,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.isinset(item",{"_index":4135,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isloading",{"_index":3939,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.islocalset",{"_index":4102,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.isnextsublazy",{"_index":1869,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.isprojecturl(event.url",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.issue",{"_index":2745,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.dataaspromise().then(data",{"_index":2754,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.hasdata",{"_index":2750,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue$.id",{"_index":2668,"title":{},"body":{"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issue$.subscribe",{"_index":2748,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issue.category",{"_index":3322,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.id",{"_index":3345,"title":{},"body":{"components/IssueItemComponent.html":{}}}],["this.issue.isopen",{"_index":3323,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkedbyissues?.totalcount",{"_index":3325,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issue.linkstoissues?.totalcount",{"_index":3327,"title":{},"body":{"components/IssueIconComponent.html":{}}}],["this.issuedata.assignees.map(node",{"_index":1606,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.map(node",{"_index":1603,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.components.push(componentid",{"_index":1591,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.labels.map(node",{"_index":1605,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.linkstoissues",{"_index":1612,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.map(node",{"_index":1604,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issuedata.locations.push(componentid",{"_index":1592,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.issueeditable",{"_index":2753,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuegraph.drawgraph",{"_index":3085,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.fitgraphinview",{"_index":3086,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.graphdata",{"_index":3104,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.layoutgraph",{"_index":3084,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.reload",{"_index":3099,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraph.setrelationvisibility(this.showrelations",{"_index":3105,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.issuegraphclasssettersservice.manageclasssetters(graph",{"_index":4377,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphdynamictemplateregistryservice.managedynamictemplateregistry(graph",{"_index":4380,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegraphlinkhandlesservice.managelinkhandles(graph",{"_index":4378,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents",{"_index":4632,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issuegroupparents.push(node",{"_index":4679,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.issueid",{"_index":882,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{}}}],["this.issuelistid",{"_index":4213,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{}}}],["this.issueslink",{"_index":5411,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.issuestub.id",{"_index":3845,"title":{},"body":{"components/LinkedIssueItemComponent.html":{}}}],["this.issuesub",{"_index":2747,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.issuesub.unsubscribe",{"_index":2749,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.itemops.includes('create",{"_index":5320,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('delete",{"_index":5324,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemops.includes('edit",{"_index":5322,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.itemtemplate",{"_index":5315,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.labels",{"_index":2217,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsearch.filterselection$]).pipe",{"_index":3091,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.labelsinput$.pipe",{"_index":2218,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelsloading",{"_index":2219,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.labelstore.getmatchinglabels(this.ss.state.project.node.id",{"_index":2221,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.lastloadtime",{"_index":1888,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastpageitemid",{"_index":2020,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.lastqueriedprojectname",{"_index":4854,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.layoutgraph",{"_index":4620,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.lazy",{"_index":797,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.linkedissues",{"_index":2667,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissues$.subscribe",{"_index":2671,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub",{"_index":2670,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkedissuesub.unsubscribe",{"_index":2675,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.linkissue.mutate({input",{"_index":3678,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.list",{"_index":3502,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.count",{"_index":3504,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.current.values",{"_index":3532,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.filter",{"_index":3527,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.list$.hasdata",{"_index":3530,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listall",{"_index":4107,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.setfilter(this.searchquery",{"_index":4123,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listall.unsubscribe",{"_index":4149,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listid.node",{"_index":3484,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.listid.node.type",{"_index":3486,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.lists",{"_index":2135,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(encodedid).add(list",{"_index":2141,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.get(id",{"_index":2127,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(encodedid",{"_index":2139,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.has(id",{"_index":2126,"title":{},"body":{"injectables/DataService.html":{}}}],["this.lists.set(encodedid",{"_index":2140,"title":{},"body":{"injectables/DataService.html":{}}}],["this.listset",{"_index":4105,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.count",{"_index":4118,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.current?.has(id",{"_index":4133,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.filter",{"_index":4121,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.hydrateinitial(this.hydrate",{"_index":5296,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.interactive",{"_index":4119,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listset$.loading",{"_index":5302,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.subscribe",{"_index":5293,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$.totalcount",{"_index":5303,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listset$?.subscribe",{"_index":4114,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub",{"_index":4113,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.listsetsub.unsubscribe",{"_index":5291,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.listsetsub?.unsubscribe",{"_index":4148,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.load",{"_index":1901,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loaddebounced",{"_index":1836,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadifneeded",{"_index":1909,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(prepareddata",{"_index":1899,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loadimpl(this.innerqueryfn(this.id",{"_index":1898,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.loading",{"_index":1490,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"classes/NodeCache.html":{},"components/ProjectListComponent.html":{}}}],["this.loadlabels",{"_index":2199,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.loadsavedpositions",{"_index":4373,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.loadtimeout",{"_index":1887,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.localset",{"_index":4103,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.localset.includes(id",{"_index":4132,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.location",{"_index":3571,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.location.id",{"_index":3574,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.makefilter",{"_index":5317,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.managedragbehaviour(graph",{"_index":4379,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.manageeventlisteners(graph",{"_index":4381,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.matchvalidator",{"_index":2168,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.maticonregistry.addsvgicon(iconname",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.maticonregistry.addsvgicon(key",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["this.memberslink",{"_index":5412,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.menuclick.emit",{"_index":5588,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["this.menutitle",{"_index":5406,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.minimap.nativeelement",{"_index":4376,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.mockusers",{"_index":4973,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(addableuser",{"_index":4969,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mockusers.push(u",{"_index":4957,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.mode",{"_index":5373,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.modeicon",{"_index":5376,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.mutations",{"_index":2120,"title":{},"body":{"injectables/DataService.html":{}}}],["this.node",{"_index":794,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribe",{"_index":799,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node$.subscribelazy",{"_index":798,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.node().node.name",{"_index":4230,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodeclickcontextmenuhastype(node",{"_index":4514,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickissuefolder(node",{"_index":4515,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickmanyissues(rootnode",{"_index":4557,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodeclickoneissue(rootid",{"_index":4555,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.nodedetails.getnodename",{"_index":1169,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["this.nodedetailsready",{"_index":1148,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.nodeid",{"_index":4214,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.nodequery",{"_index":4228,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.componentstoreservice.getbasiccomponent(this.nodeid",{"_index":4218,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.listento(this.interfacestoreservice.getinterface(this.nodeid",{"_index":4224,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.ready",{"_index":4229,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodequery.seterror",{"_index":4222,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.nodes",{"_index":2118,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.get(encodedid",{"_index":2055,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.getnode(id",{"_index":2123,"title":{},"body":{"injectables/DataService.html":{}}}],["this.nodes.has(encodedid",{"_index":2053,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodes.set(encodedid",{"_index":2050,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.nodesub",{"_index":796,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodesub.unsubscribe",{"_index":801,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["this.nodetype",{"_index":4211,"title":{},"body":{"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.notify.notifyerror('could",{"_index":1501,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.notify.notifyerror('failed",{"_index":1042,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RegisterComponent.html":{}}}],["this.notify.notifyerror(this.errormessage",{"_index":5128,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.notify.notifyinfo('successfully",{"_index":1040,"title":{},"body":{"components/CommentComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["this.notifyservice.notifyerror('failed",{"_index":4145,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.oncreateedge",{"_index":4396,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.ondialogapplychangeset",{"_index":5316,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogcreateitem",{"_index":5321,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogdeleteitem",{"_index":5325,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondialogedititem",{"_index":5323,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.ondraggededgetargetchanged",{"_index":4399,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeadd",{"_index":4401,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgedrop",{"_index":4406,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onedgeremove",{"_index":4403,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.oneditfinished",{"_index":5456,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.oneditfinished(saved",{"_index":5457,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.onminimaprender(minimap",{"_index":4489,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.onnodeclick",{"_index":4463,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.overlay.create",{"_index":1117,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overlay.position().flexibleconnectedto(parent",{"_index":1106,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.overviewlink",{"_index":5408,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.padding",{"_index":3780,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.pageinfo",{"_index":1962,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.hasnextpage",{"_index":1978,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pageinfo.haspreviouspage",{"_index":1976,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.paginator",{"_index":3516,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.params",{"_index":1984,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcount",{"_index":1986,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pcursor",{"_index":1985,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pfilter",{"_index":1988,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pforward",{"_index":1987,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pluralize(days",{"_index":5512,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(hours",{"_index":5514,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(minutes",{"_index":5516,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pluralize(months",{"_index":5508,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["this.pnodes",{"_index":1981,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.pnodes.insertnodes(value.nodes",{"_index":2030,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.position",{"_index":3783,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.x",{"_index":3801,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.position.y",{"_index":3802,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.predicatevalues[id",{"_index":2904,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].push(item",{"_index":2897,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[id].splice(this.predicatevalues[id].indexof(item",{"_index":2898,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.predicatevalues[type",{"_index":2888,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.prepareissuearray",{"_index":3520,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.preparetimelineitems(value",{"_index":890,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.previouslyhadpagecontents",{"_index":1977,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.project",{"_index":4829,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.project$.subscribe(project",{"_index":4954,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.project.current.name",{"_index":5003,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectid",{"_index":2741,"title":{},"body":{"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.projectname",{"_index":4855,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projects",{"_index":4857,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstoragekey",{"_index":4356,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.projectstore.delete(this.projectid).subscribe",{"_index":5004,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.projectstore.getall(this.projectname).subscribe(projects",{"_index":4856,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.projectstore.getfullproject(this.projectid",{"_index":4953,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.ps.create(name",{"_index":1644,"title":{},"body":{"components/CreateProjectDialogComponent.html":{}}}],["this.psetparamsnoupdate",{"_index":1835,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.ptotalcount",{"_index":1964,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.publicclientname",{"_index":5203,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.query",{"_index":4061,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.query.listento(this.list",{"_index":3505,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.query.listento(this.someobservable",{"_index":5095,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.somethingthattakesawhile",{"_index":5100,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.query.listento(this.timelineitems",{"_index":889,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.query.querystate",{"_index":5118,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.querycomponent.listento(this.componentstore.createcomponent(input",{"_index":1426,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["this.querycomponent.listento(this.project",{"_index":5000,"title":{},"body":{"components/ProjectOverviewComponent.html":{}}}],["this.queryparamfilter",{"_index":3526,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.querystate",{"_index":5113,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.randomizecolor",{"_index":1504,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.redrawbycloseofcomponentdetails",{"_index":4503,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.registerusermutation.client",{"_index":5202,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerusermutation.mutate({input}).subscribe(({data",{"_index":5224,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.relativepositionchanged(group",{"_index":3306,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["this.reload",{"_index":4480,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reload$.next(null",{"_index":4443,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadlistset",{"_index":5294,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.reloadonmouseup",{"_index":4467,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.reloadprojects",{"_index":4853,"title":{},"body":{"components/ProjectListComponent.html":{}}}],["this.removeconsumedinterfacemutation.mutate({input",{"_index":2992,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.removeissuefromlocationmutation.mutate({input",{"_index":3687,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.renameissuemutation.mutate({input",{"_index":3684,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.reopenissuemutation.mutate({input",{"_index":3683,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.requesttimelineitems",{"_index":871,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.resetgraph",{"_index":4594,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.resetvalues",{"_index":4231,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.resize",{"_index":1141,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.results",{"_index":4083,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.returnurl",{"_index":3949,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.snapshot.parammap.get('componentid",{"_index":4291,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":3079,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{}}}],["this.route.snapshot.parammap.get('interfaceid",{"_index":4292,"title":{},"body":{"components/NodeDetailsPageComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":3950,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":4563,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectOverviewComponent.html":{},"components/SideNavComponent.html":{}}}],["this.router.navigate(['./component",{"_index":4508,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['./interface",{"_index":4511,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.router.navigate(['/login",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/projects",{"_index":3528,"title":{},"body":{"components/IssueListComponent.html":{},"components/NodeDetailsPageComponent.html":{}}}],["this.router.navigate(['login",{"_index":714,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["this.router.navigate(['projects",{"_index":3573,"title":{},"body":{"components/IssueLocationComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":3944,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.parseurl(url",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.router.serializeurl(this.router.createurltree",{"_index":3344,"title":{},"body":{"components/IssueItemComponent.html":{},"components/LinkedIssueItemComponent.html":{}}}],["this.savechanges",{"_index":2758,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savedpositions",{"_index":4372,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[issuegroupcontainernode.id",{"_index":4671,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.issuegroups[node.id",{"_index":4473,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[id",{"_index":4636,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[interfaceid",{"_index":4454,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[intrface.id",{"_index":4604,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[layoutnode.id",{"_index":4787,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savedpositions.nodes[node.id",{"_index":4476,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savefailed",{"_index":1560,"title":{},"body":{"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.savepositionssubject",{"_index":4387,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.savepositionssubject.next",{"_index":4457,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.saveusertostorage(user",{"_index":710,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["this.savingbody",{"_index":1019,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.savingchanges",{"_index":2757,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.savingcomment",{"_index":2679,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["this.score(a",{"_index":4080,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.score(b",{"_index":4081,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.scorekeys",{"_index":4065,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.searchissuesdataarray",{"_index":3531,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.searchquery.trim",{"_index":2899,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["this.selectedcategories",{"_index":3058,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedcategories$.next",{"_index":3080,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.selectedlabels.filter(item",{"_index":2210,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedlabels.filter(label",{"_index":2213,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["this.selectedusers",{"_index":257,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{}}}],["this.seterror",{"_index":5127,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.setgraphtolastview",{"_index":4618,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.setparams",{"_index":1982,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.showdeleted",{"_index":5531,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.showdeletedialog(affected",{"_index":4243,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.showdrawer",{"_index":2245,"title":{},"body":{"components/FrameComponent.html":{}}}],["this.showplaceholder",{"_index":5452,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.sort",{"_index":3512,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sort.sort(({id",{"_index":3509,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["this.sourcenodelist",{"_index":4040,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist.subscribe",{"_index":4043,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.current?.keys",{"_index":4045,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelist?.loading",{"_index":4084,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub",{"_index":4042,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcenodelistsub?.unsubscribe",{"_index":4086,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.delete(source",{"_index":4060,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.has(source",{"_index":4049,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.keys",{"_index":4056,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.set(source",{"_index":4052,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sources.values",{"_index":4062,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.delete(source",{"_index":4059,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.foreach(sub",{"_index":4087,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.get(source).unsubscribe",{"_index":4058,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.sourcesubs.set(source",{"_index":4053,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.spec.staticsources",{"_index":4047,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.state",{"_index":3211,"title":{},"body":{"injectables/IssueGraphStateService.html":{}}}],["this.state$.next(this.state",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.state.project",{"_index":586,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.statelock",{"_index":1893,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.staticsourcenodelist",{"_index":4038,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.stopcoalescing(coalescingtype",{"_index":914,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.subscribe(...args",{"_index":1911,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribe(data",{"_index":1879,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers",{"_index":1913,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.add(subscriber",{"_index":1905,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.delete(subscriber",{"_index":1910,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribers.size",{"_index":1922,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.subscribetosubject",{"_index":4375,"title":{},"body":{"interfaces/Positions.html":{}}}],["this.subscription",{"_index":5121,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.subscription?.unsubscribe",{"_index":5115,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.syncstatewithurl(router",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["this.text",{"_index":5454,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.textstoregex(texts",{"_index":2986,"title":{},"body":{"injectables/IssueGraphApiService.html":{}}}],["this.thing",{"_index":1688,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thing$.subscribe",{"_index":1692,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things",{"_index":1941,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.things$.subscribe",{"_index":1944,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub",{"_index":1943,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingssub.unsubscribe",{"_index":1945,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub",{"_index":1691,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.thingsub.unsubscribe",{"_index":1695,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["this.timeformatter.formattimedifference(comment.createdat",{"_index":1044,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(comment.lasteditedat",{"_index":1046,"title":{},"body":{"components/CommentComponent.html":{}}}],["this.timeformatter.formattimedifference(this.issue$.current.createdat",{"_index":2751,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timeformatter.formattimedifference(timelineitem.time",{"_index":5546,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["this.timeformatter.pluralize(issue.issuecomments?.totalcount",{"_index":2769,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["this.timelineitem.iscoalesced",{"_index":5534,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemcontent.template",{"_index":5537,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemdeletedcontent.template",{"_index":5533,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitems",{"_index":880,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitems$.count",{"_index":887,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.timelineitemscontent",{"_index":5535,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.timelineitemscontent.template",{"_index":5536,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["this.title.value",{"_index":1598,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.titletext?.nativeelement.textcontent",{"_index":5314,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["this.toastr.error(message",{"_index":5615,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.toastr.info(message",{"_index":5617,"title":{},"body":{"injectables/UserNotifyService.html":{}}}],["this.unclassified",{"_index":3083,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["this.unknownerror",{"_index":3946,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.unlinkissuemutation.mutate({input",{"_index":3679,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.update",{"_index":2890,"title":{},"body":{"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updatebutton",{"_index":5120,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["this.updatecommentmutation.mutate({input",{"_index":3688,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["this.updatecomponent",{"_index":4263,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatecomponentmutation.mutate({input",{"_index":1363,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["this.updateinterface",{"_index":4265,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateinterfacemutation.mutate({input",{"_index":2632,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["this.updatepasswordfieldsshown",{"_index":4812,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["this.updatequery.listento(this.componentstoreservice.updatecomponent(input",{"_index":4274,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updatequery.listento(this.interfacestoreservice.update(mutationinputdata",{"_index":4278,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.updateresults",{"_index":4055,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["this.updateselecteditems",{"_index":1589,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["this.useravailablyquery.client",{"_index":5204,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.useravailablyquery.fetch({username",{"_index":5209,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.username(firstitem",{"_index":937,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.username(timelineitem",{"_index":945,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["this.usernameasyncvalidator",{"_index":5205,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform",{"_index":3947,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls.confirm.updatevalueandvalidity",{"_index":5217,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls.password.reset",{"_index":3943,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls.password.value",{"_index":3941,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.validateform.controls[controlkey].markasdirty",{"_index":3937,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[controlkey].updatevalueandvalidity",{"_index":3938,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.validateform.controls[key].markasdirty",{"_index":5219,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].markaspristine",{"_index":5226,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.controls[key].updatevalueandvalidity",{"_index":5220,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validateform.reset",{"_index":5225,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.validationdescription.setvalue(this.component.node.description",{"_index":4270,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.setvalue(this.interface.node.description",{"_index":4272,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationdescription.value",{"_index":4262,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationfilter.setvalue(this.getqueryparamfilter",{"_index":3519,"title":{},"body":{"components/IssueListComponent.html":{}}}],["this.validationims.setvalue",{"_index":4216,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('http://example.ims.com",{"_index":4267,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationims.setvalue('this",{"_index":4220,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationlabeldescription.setvalue(data.description",{"_index":1499,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationlabelname.setvalue(data.name",{"_index":1496,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["this.validationname.setvalue(this.component.node.name",{"_index":4266,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.setvalue(this.interface.node.name",{"_index":4271,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationname.value",{"_index":4258,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.setvalue(this.component.node.ims.imstype",{"_index":4268,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationprovider.value",{"_index":4260,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationrole.setvalue('administrator",{"_index":254,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["this.validationurl.setvalue",{"_index":4217,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue('http://example.repo.com",{"_index":4269,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.validationurl.setvalue(component.node.repositoryurl",{"_index":4221,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["this.value",{"_index":5451,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["this.verificationnameinput.markastouched",{"_index":2169,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["this.width",{"_index":1150,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["this.x",{"_index":3774,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.y",{"_index":3775,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["this.zoomonredraw",{"_index":4479,"title":{},"body":{"interfaces/Positions.html":{}}}],["though",{"_index":5157,"title":{},"body":{"interfaces/QueryListParams.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["through",{"_index":649,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"components/ProjectIssueListComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"interfaces/User.html":{},"index.html":{}}}],["throw",{"_index":1926,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":5875,"title":{},"body":{"index.html":{}}}],["till",{"_index":6142,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["time",{"_index":816,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"additional-documentation/managing-gropius.html":{}}}],["timeformatter",{"_index":827,"title":{"classes/TimeFormatter.html":{}},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/IssueDetailComponent.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"coverage.html":{}}}],["timeline",{"_index":199,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["timeline'},{'name",{"_index":197,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["timeline.component.html",{"_index":839,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timeline.component.scss",{"_index":840,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinecoalesceditemsdirective",{"_index":212,"title":{"directives/TimelineCoalescedItemsDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent",{"_index":196,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelinecomponent.coalescable_events.get(itemtype",{"_index":909,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem",{"_index":905,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitem.createdat",{"_index":946,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitem.createdby.id",{"_index":956,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["timelineitemcomponent",{"_index":198,"title":{"components/TimelineItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitemcontent",{"_index":5525,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeletedcontent",{"_index":5529,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelineitemdeleteddirective",{"_index":214,"title":{"directives/TimelineItemDeletedDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timelineitems",{"_index":861,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{},"miscellaneous/enumerations.html":{}}}],["timelineitemscontent",{"_index":5527,"title":{},"body":{"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{}}}],["timelinesingleitemdirective",{"_index":216,"title":{"directives/TimelineSingleItemDirective.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["timeout",{"_index":1819,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"classes/NodeCache.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":1822,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["tipping",{"_index":3401,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["title",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentNode.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/InterfaceNode.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"components/IssueListComponent.html":{},"interfaces/IssueNode.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Position.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["title.value.length",{"_index":1630,"title":{},"body":{"components/CreateIssueDialogComponent.html":{}}}],["titletext",{"_index":5285,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["toast",{"_index":2498,"title":{},"body":{"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["toasterconfig",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["toastr",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{},"dependencies.html":{}}}],["toastr.error(message",{"_index":2518,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastr.error(networkerror.message",{"_index":2524,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["toastrmodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["toastrmodule.forroot(toasterconfig",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphQLModule.html":{},"injectables/UserNotifyService.html":{}}}],["toasts",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["todo",{"_index":64,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"classes/CCIMSValidators.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"interfaces/userMock.html":{}}}],["toggle",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"components/CreateIssueDialogComponent.html":{},"modules/GraphsModule.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{}}}],["toggleinset",{"_index":5330,"title":{},"body":{"components/SetEditorDialogComponent.html":{}}}],["toggleinset(item",{"_index":4134,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["togglemenu",{"_index":2258,"title":{},"body":{"components/FrameComponent.html":{}}}],["toggles",{"_index":2347,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{}}}],["token",{"_index":11,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"additional-documentation/using-gropius.html":{}}}],["tokenpayload",{"_index":706,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.name",{"_index":708,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokenpayload.sub",{"_index":709,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["tokens",{"_index":67,"title":{},"body":{"components/AccessTokenDialogComponent.html":{}}}],["toolbar",{"_index":2294,"title":{},"body":{"components/FrameComponent.html":{},"components/TopToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":202,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["toolbar.component",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar.component.html",{"_index":5576,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":5575,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts",{"_index":5572,"title":{},"body":{"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["toolbar.component.ts:22",{"_index":5582,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:25",{"_index":5583,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:27",{"_index":5587,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:31",{"_index":5581,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:33",{"_index":5586,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:35",{"_index":5584,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar.component.ts:39",{"_index":5585,"title":{},"body":{"components/TopToolbarComponent.html":{}}}],["toolbar/top",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"components/TopToolbarComponent.html":{},"coverage.html":{}}}],["top",{"_index":201,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["topbar",{"_index":2241,"title":{},"body":{"components/FrameComponent.html":{}}}],["topdistance",{"_index":3274,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["toptoolbarcomponent",{"_index":200,"title":{"components/TopToolbarComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["total",{"_index":1989,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["totalcount",{"_index":1951,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["towards",{"_index":3809,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother",{"_index":3798,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.iszero",{"_index":3800,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.length",{"_index":3807,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["towardsother.scale(1",{"_index":3808,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["track",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{},"classes/LayoutNode.html":{},"injectables/StateService.html":{},"classes/Vector.html":{}}}],["trackbyfn",{"_index":3697,"title":{},"body":{"components/LabelSearchComponent.html":{}}}],["trackbyfn(item",{"_index":2200,"title":{},"body":{"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"interfaces/TextFragment.html":{}}}],["transfered",{"_index":5010,"title":{},"body":{"injectables/ProjectStoreService.html":{}}}],["transform",{"_index":1638,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/Positions.html":{}}}],["transition",{"_index":6041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transparent",{"_index":3708,"title":{},"body":{"components/LabelSearchComponent.html":{},"components/TimelineItemComponent.html":{}}}],["travel",{"_index":3767,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["treated",{"_index":5272,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{}}}],["tree.root.children[primary_outlet",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"injectables/StateService.html":{}}}],["tries",{"_index":3912,"title":{},"body":{"components/LoginComponent.html":{}}}],["trigger",{"_index":1832,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["trigger('routeanimations",{"_index":6040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggered",{"_index":4407,"title":{},"body":{"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/userMock.html":{}}}],["triggering",{"_index":1792,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["triggers",{"_index":4797,"title":{},"body":{"interfaces/Positions.html":{}}}],["true",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LoginComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{},"additional-documentation/managing-gropius.html":{}}}],["try",{"_index":3372,"title":{},"body":{"components/IssueLabelComponent.html":{},"components/LoginComponent.html":{}}}],["ts",{"_index":1873,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/DialogData-1.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"modules/GraphQLModule.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["tsconfig.doc.json",{"_index":5851,"title":{},"body":{"index.html":{},"additional-documentation/managing-gropius.html":{}}}],["tslib",{"_index":5828,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":791,"title":{},"body":{"components/CacheNodeComponent.html":{}}}],["tuple",{"_index":3368,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["turned",{"_index":3050,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["twice",{"_index":1890,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{}}}],["two",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"classes/Vector.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"injectables/ComponentStoreService.html":{},"injectables/ComponentsService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"interfaces/FilterState.html":{},"components/FrameComponent.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"interfaces/InterfaceNode.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphApiService.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"interfaces/IssueNode.html":{},"injectables/IssueStoreService.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"injectables/ProjectStoreService.html":{},"injectables/ProjectsService.html":{},"injectables/QueriesService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"interfaces/QueryListParams.html":{},"components/RegisterComponent.html":{},"interfaces/RelationEdge.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"classes/TimeFormatter.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"injectables/UsersService.html":{},"classes/Vector.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["typealiases",{"_index":5921,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":2157,"title":{},"body":{"interfaces/DialogData-1.html":{},"interfaces/FilterSelection.html":{},"components/LabelSearchComponent.html":{},"components/RemoveDialogComponent.html":{},"interfaces/TextFragment.html":{}}}],["typename",{"_index":3868,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["typeof",{"_index":2124,"title":{},"body":{"injectables/DataService.html":{},"classes/MultiSourceList.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["typeparam",{"_index":1805,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["types",{"_index":1804,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueFilterComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["typescript",{"_index":2323,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"dependencies.html":{},"additional-documentation/managing-gropius.html":{}}}],["u",{"_index":2232,"title":{},"body":{"interfaces/FilterState.html":{}}}],["ul",{"_index":5567,"title":{},"body":{"components/TimelineItemComponent.html":{}}}],["uml",{"_index":5905,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueListComponent.html":{}}}],["unclassified",{"_index":1586,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"interfaces/Positions.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["unclassifiedcount",{"_index":2381,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["undefined",{"_index":944,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3747,"title":{},"body":{"classes/LayoutNode.html":{}}}],["undone",{"_index":1034,"title":{},"body":{"components/CommentComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["undone!'].concat(affected",{"_index":4250,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["uneditable",{"_index":2762,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["union",{"_index":2333,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/IssueGraphApiService.html":{}}}],["unique",{"_index":2840,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["uniquely",{"_index":3860,"title":{},"body":{"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"interfaces/NodeId.html":{}}}],["unknown",{"_index":1916,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unknownerror",{"_index":3917,"title":{},"body":{"components/LoginComponent.html":{}}}],["unlabelledevent",{"_index":845,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unless",{"_index":1733,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["unlink",{"_index":3600,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlink(unlinkissueinput",{"_index":3671,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkevent",{"_index":856,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["unlinkissuegql",{"_index":3613,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissueinput",{"_index":3672,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unlinkissuemutation",{"_index":3612,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["unnecessary",{"_index":2098,"title":{},"body":{"injectables/DataService.html":{},"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["unsubscribe",{"_index":1694,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["unsubscribes",{"_index":4024,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["until",{"_index":1754,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"additional-documentation/using-gropius.html":{}}}],["update",{"_index":1066,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueFilterComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"interfaces/QueryListParams.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["update(input",{"_index":2624,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatebutton",{"_index":5131,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["updatecomment",{"_index":3601,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomment(updatecommentinput",{"_index":3673,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentgql",{"_index":3627,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentinput",{"_index":3674,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecommentmutation",{"_index":3626,"title":{},"body":{"injectables/IssueStoreService.html":{}}}],["updatecomponent",{"_index":1313,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponent(input",{"_index":1351,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentgql",{"_index":1324,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updatecomponentinput",{"_index":1352,"title":{},"body":{"injectables/ComponentStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentinterfacegql",{"_index":2610,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatecomponentinterfaceinput",{"_index":2625,"title":{},"body":{"injectables/InterfaceStoreService.html":{},"components/NodeDetailsComponent.html":{}}}],["updatecomponentmutation",{"_index":1309,"title":{},"body":{"injectables/ComponentStoreService.html":{}}}],["updated",{"_index":4175,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterface",{"_index":4172,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateinterfacemutation",{"_index":2609,"title":{},"body":{"injectables/InterfaceStoreService.html":{}}}],["updatepassword",{"_index":4807,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updatepasswordfieldsshown",{"_index":4804,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["updateposition",{"_index":1055,"title":{},"body":{"components/ComponentContextMenuComponent.html":{}}}],["updateposition(x",{"_index":1062,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["updatequery",{"_index":4209,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["updateresults",{"_index":3998,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["updates",{"_index":1575,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"additional-documentation/managing-gropius.html":{}}}],["updateselectedcategories",{"_index":3042,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["updateselecteditems",{"_index":1567,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["updatetemplate",{"_index":3147,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["updating",{"_index":1305,"title":{},"body":{"injectables/ComponentStoreService.html":{},"interfaces/Positions.html":{}}}],["upon",{"_index":1780,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/SetEditorComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["upper",{"_index":4664,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["url",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/FrameComponent.html":{},"components/IssueItemComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectIssueListComponent.html":{},"injectables/StateService.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["urls",{"_index":6124,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["urlvalidator",{"_index":729,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["usable",{"_index":721,"title":{},"body":{"classes/CCIMSValidators.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["usage",{"_index":3971,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["use",{"_index":874,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueListComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"injectables/UsersService.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["used",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CCIMSValidators.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"modules/GraphQLModule.html":{},"components/IssueDetailComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"injectables/IssueGraphStateService.html":{},"directives/ItemDirective.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/ProjectStoreService.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"directives/TimelineCoalescedItemsDirective.html":{},"components/TimelineItemComponent.html":{},"directives/TimelineItemDeletedDirective.html":{},"directives/TimelineSingleItemDirective.html":{},"classes/Vector.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["usefactory",{"_index":2543,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["useful",{"_index":5129,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"additional-documentation/managing-gropius.html":{}}}],["user",{"_index":204,"title":{"interfaces/User.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"modules/GraphQLModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphApiService.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["user's",{"_index":6067,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["user.displayname",{"_index":259,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/UserItemComponent.html":{}}}],["user.username",{"_index":5596,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user1",{"_index":4930,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user1.de",{"_index":4931,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2",{"_index":4932,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user2.de",{"_index":4933,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3",{"_index":4934,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user3.de",{"_index":4935,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4",{"_index":4936,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user4.de",{"_index":4937,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5",{"_index":4938,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user5.de",{"_index":4939,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6",{"_index":4940,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["user6.de",{"_index":4941,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["useravailablyquery",{"_index":5174,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usercaneditissue",{"_index":2707,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["userfilter",{"_index":5633,"title":{},"body":{"injectables/UsersService.html":{}}}],["useritemcomponent",{"_index":203,"title":{"components/UserItemComponent.html":{}},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"modules/GraphsModule.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usermock",{"_index":4984,"title":{"interfaces/userMock.html":{}},"body":{"components/ProjectMembersComponent.html":{},"coverage.html":{},"interfaces/userMock.html":{}}}],["username",{"_index":674,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/IssueFilterComponent.html":{},"components/LoginComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{}}}],["username(item",{"_index":926,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{}}}],["usernameasyncvalidator",{"_index":5167,"title":{},"body":{"components/RegisterComponent.html":{}}}],["usernotifyservice",{"_index":984,"title":{"injectables/UserNotifyService.html":{}},"body":{"components/CommentComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"classes/MultiSourceList.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SideNavComponent.html":{},"injectables/UserNotifyService.html":{},"coverage.html":{}}}],["users",{"_index":2875,"title":{},"body":{"components/IssueFilterComponent.html":{},"components/ProjectMembersComponent.html":{},"injectables/QueriesService.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"interfaces/userMock.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["users.service",{"_index":5069,"title":{},"body":{"injectables/QueriesService.html":{}}}],["usersservice",{"_index":5060,"title":{"injectables/UsersService.html":{}},"body":{"injectables/QueriesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userstoadd",{"_index":256,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["userstodelete",{"_index":5250,"title":{},"body":{"components/RemoveProjectMemberComponentComponent.html":{}}}],["userstoragekey",{"_index":652,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["uses",{"_index":5632,"title":{},"body":{"injectables/UsersService.html":{},"additional-documentation/managing-gropius.html":{}}}],["usevalue",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{}}}],["using",{"_index":1650,"title":{"additional-documentation/using-gropius.html":{}},"body":{"components/CursorPaginatorComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/SetEditorComponent.html":{},"index.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["ustutt/grapheditor",{"_index":1213,"title":{},"body":{"interfaces/ComponentNode.html":{},"modules/GraphsModule.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"dependencies.html":{}}}],["usually",{"_index":5864,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":4335,"title":{},"body":{"interfaces/Positions.html":{}}}],["v",{"_index":3827,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["valid",{"_index":1444,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/IssueLabelComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{}}}],["validateconfirmpassword",{"_index":5170,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validateform",{"_index":3918,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":234,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["validationdescription",{"_index":1415,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationerrors",{"_index":5198,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationfilter",{"_index":3420,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["validationims",{"_index":1413,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationlabeldescription",{"_index":1452,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationlabelname",{"_index":1453,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validationname",{"_index":1409,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationprovider",{"_index":1414,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validationrole",{"_index":235,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{}}}],["validations",{"_index":1408,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{}}}],["validationtype",{"_index":4164,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["validationurl",{"_index":1411,"title":{},"body":{"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["validator",{"_index":1479,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validatorfn",{"_index":2151,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["validators",{"_index":250,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"classes/CCIMSValidators.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["validators.compose",{"_index":735,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.email",{"_index":5206,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.maxlength(256",{"_index":745,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.maxlength(30",{"_index":1480,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{}}}],["validators.maxlength(655536",{"_index":730,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.pattern",{"_index":737,"title":{},"body":{"classes/CCIMSValidators.html":{}}}],["validators.required",{"_index":247,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueDetailComponent.html":{},"components/LoginComponent.html":{},"components/NodeDetailsComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"classes/CCIMSValidators.html":{},"components/CacheNodeComponent.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/LabelSearchComponent.html":{},"injectables/LabelStoreService.html":{},"classes/LayoutNode.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"interfaces/TextFragment.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"classes/Vector.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.email",{"_index":5223,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.length",{"_index":5453,"title":{},"body":{"components/TextDisplayComponent.html":{}}}],["value.map(item",{"_index":2882,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["value.pageinfo",{"_index":2029,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.password",{"_index":5222,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value.totalcount",{"_index":2028,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["value.username",{"_index":5221,"title":{},"body":{"components/RegisterComponent.html":{}}}],["values",{"_index":2382,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":96,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/AppComponent.html":{},"components/CacheNodeComponent.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueCategoryComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueIconComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"components/SideNavComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{},"components/UserItemComponent.html":{},"interfaces/userMock.html":{}}}],["variable",{"_index":4790,"title":{},"body":{"interfaces/Positions.html":{},"components/SetEditorComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3115,"title":{"miscellaneous/variables.html":{}},"body":{"components/IssueGraphControlsComponent.html":{},"components/ProjectListComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/variables.html":{}}}],["variant",{"_index":2837,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["variants",{"_index":2836,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["various",{"_index":3693,"title":{},"body":{"directives/ItemDirective.html":{},"interfaces/Positions.html":{}}}],["vector",{"_index":3760,"title":{"classes/Vector.html":{}},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{},"coverage.html":{}}}],["vector(positionx",{"_index":3784,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["verbatim",{"_index":1736,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["verification",{"_index":5090,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["verificationname",{"_index":2143,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/RemoveDialogComponent.html":{}}}],["verificationnameinput",{"_index":2167,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/RemoveDialogComponent.html":{}}}],["verify",{"_index":751,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/RegisterComponent.html":{}}}],["version",{"_index":6074,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["versions",{"_index":1946,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["vertical",{"_index":2639,"title":{},"body":{"components/IssueCategoryComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TextDisplayComponent.html":{}}}],["via",{"_index":1251,"title":{},"body":{"interfaces/ComponentNode.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"interfaces/FilterSelection.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"components/IssueGraphControlsComponent.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/LabelSearchComponent.html":{},"components/LoginComponent.html":{},"classes/NodeCache.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"interfaces/TextFragment.html":{},"additional-documentation/managing-gropius.html":{}}}],["view",{"_index":225,"title":{},"body":{"components/AddProjectMemberDialogComponent.html":{},"components/CommentComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/IssueListComponent.html":{},"components/LinkedIssueItemComponent.html":{},"classes/NodeCache.html":{},"interfaces/Positions.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"interfaces/userMock.html":{},"additional-documentation/using-gropius.html":{},"additional-documentation/managing-gropius.html":{}}}],["viewchild",{"_index":826,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueListComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/SetEditorComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild('body",{"_index":1578,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["viewchild('comment",{"_index":2661,"title":{},"body":{"components/IssueContentsComponent.html":{}}}],["viewchild('deletequery",{"_index":4206,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('frame",{"_index":1136,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('graph",{"_index":4324,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('minimap",{"_index":4327,"title":{},"body":{"interfaces/Positions.html":{}}}],["viewchild('nodequery",{"_index":4204,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild('resizecorner",{"_index":1138,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild('titleinput",{"_index":2724,"title":{},"body":{"components/IssueDetailComponent.html":{}}}],["viewchild('titletext",{"_index":5284,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["viewchild('updatequery",{"_index":4208,"title":{},"body":{"components/NodeDetailsComponent.html":{}}}],["viewchild(issuegraphcomponent",{"_index":3063,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(labelsearchcomponent",{"_index":3065,"title":{},"body":{"components/IssueGraphControlsComponent.html":{}}}],["viewchild(matpaginator",{"_index":3469,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matpaginatormodule",{"_index":4944,"title":{},"body":{"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(matsort",{"_index":3474,"title":{},"body":{"components/IssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["viewchild(nodedetailscomponent",{"_index":1142,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["viewchild(querycomponent",{"_index":868,"title":{},"body":{"interfaces/CoalescedTimelineItem.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/IssueListComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["viewers",{"_index":1785,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"additional-documentation/managing-gropius.html":{}}}],["views",{"_index":2236,"title":{},"body":{"components/FrameComponent.html":{}}}],["vincent",{"_index":6144,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["visibility",{"_index":4816,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visibility_off",{"_index":4815,"title":{},"body":{"components/ProfileSettingsDialogComponent.html":{}}}],["visible",{"_index":4525,"title":{},"body":{"interfaces/Positions.html":{},"index.html":{}}}],["visible.height",{"_index":4539,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.width",{"_index":4537,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.x",{"_index":4546,"title":{},"body":{"interfaces/Positions.html":{}}}],["visible.y",{"_index":4547,"title":{},"body":{"interfaces/Positions.html":{}}}],["visited",{"_index":3789,"title":{},"body":{"classes/LayoutNode.html":{},"classes/Vector.html":{}}}],["visual",{"_index":4674,"title":{},"body":{"interfaces/Positions.html":{}}}],["visualization",{"_index":6050,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["visualize",{"_index":1241,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["visualized",{"_index":4646,"title":{},"body":{"interfaces/Positions.html":{},"additional-documentation/using-gropius.html":{}}}],["visualizes",{"_index":6063,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["visualizing",{"_index":5907,"title":{},"body":{"index.html":{}}}],["void",{"_index":46,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/CoalescedTimelineItem.html":{},"components/CommentComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/CreateComponentData.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"interfaces/CreateEditLabelDialogData.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CreateProjectDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"injectables/IssueGraphClassSettersService.html":{},"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LabelSearchComponent.html":{},"classes/LayoutNode.html":{},"components/LinkedIssueItemComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/MarkdownPreviewComponent.html":{},"classes/MultiSourceList.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/NodeDetailsPageComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{},"components/SettingsDialogComponent.html":{},"injectables/StateService.html":{},"components/TextDisplayComponent.html":{},"components/TopToolbarComponent.html":{},"interfaces/User.html":{},"injectables/UserNotifyService.html":{},"classes/Vector.html":{},"interfaces/userMock.html":{}}}],["vs",{"_index":1245,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"components/MarkdownEditorComponent.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["wagner",{"_index":6135,"title":{},"body":{"additional-documentation/contributors.html":{}}}],["wait",{"_index":1752,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1032,"title":{},"body":{"components/CommentComponent.html":{},"components/CreateIssueDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/DataService.html":{},"interfaces/DialogData.html":{},"components/IssueFilterComponent.html":{},"classes/NodeCache.html":{},"components/NodeDetailsComponent.html":{},"components/ProjectOverviewComponent.html":{}}}],["wanted",{"_index":3926,"title":{},"body":{"components/LoginComponent.html":{}}}],["warning",{"_index":6121,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["wasnt",{"_index":4721,"title":{},"body":{"interfaces/Positions.html":{}}}],["way",{"_index":5116,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{},"additional-documentation/using-gropius.html":{}}}],["we'll",{"_index":3385,"title":{},"body":{"components/IssueLabelComponent.html":{}}}],["we're",{"_index":1938,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["weakmap",{"_index":1123,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{}}}],["webcomponent",{"_index":5816,"title":{},"body":{"dependencies.html":{}}}],["webcomponent/lib/dynamic",{"_index":3134,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{}}}],["webcomponent/lib/edge",{"_index":1215,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/grapheditor",{"_index":3008,"title":{},"body":{"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/Positions.html":{}}}],["webcomponent/lib/grouping",{"_index":3248,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["webcomponent/lib/index",{"_index":2553,"title":{},"body":{"modules/GraphsModule.html":{}}}],["webcomponent/lib/link",{"_index":3137,"title":{},"body":{"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{}}}],["webcomponent/lib/node",{"_index":1214,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphClassSettersService.html":{},"injectables/IssueGraphDynamicTemplateRegistryService.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{}}}],["webcomponent/lib/util",{"_index":4303,"title":{},"body":{"interfaces/Positions.html":{}}}],["webkit",{"_index":4882,"title":{},"body":{"components/ProjectListComponent.html":{},"components/TimelineItemComponent.html":{}}}],["weight",{"_index":1634,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueItemComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/QueryComponent.html":{},"components/RemoveDialogComponent.html":{},"components/SetEditorComponent.html":{},"components/SideNavComponent.html":{},"components/UserItemComponent.html":{}}}],["weird",{"_index":1618,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["well",{"_index":1051,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/LayoutNode.html":{},"classes/NodeCache.html":{},"components/TopToolbarComponent.html":{},"classes/Vector.html":{},"additional-documentation/using-gropius.html":{}}}],["west",{"_index":4299,"title":{},"body":{"interfaces/Positions.html":{}}}],["what's",{"_index":6060,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["whatever",{"_index":5288,"title":{},"body":{"components/SetEditorComponent.html":{}}}],["whenever",{"_index":3031,"title":{},"body":{"components/IssueGraphControlsComponent.html":{},"injectables/IssueGraphStateService.html":{},"components/RegisterComponent.html":{}}}],["whether",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CoalescedTimelineItem.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"components/FrameComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"components/IssueItemComponent.html":{},"components/IssueLabelComponent.html":{},"components/IssueListComponent.html":{},"interfaces/ListId.html":{},"interfaces/ListParams.html":{},"classes/NodeCache.html":{},"interfaces/NodeId.html":{},"interfaces/Positions.html":{},"injectables/StateService.html":{},"components/TopToolbarComponent.html":{}}}],["white",{"_index":742,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueLabelComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/RemoveDialogComponent.html":{},"components/TopToolbarComponent.html":{}}}],["whitesmoke",{"_index":5149,"title":{},"body":{"components/QueryComponent.html":{}}}],["whitespace",{"_index":741,"title":{},"body":{"classes/CCIMSValidators.html":{},"components/ProjectMembersComponent.html":{},"interfaces/userMock.html":{}}}],["whole",{"_index":5867,"title":{},"body":{"index.html":{},"additional-documentation/using-gropius.html":{}}}],["whoose",{"_index":2366,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{},"injectables/LabelStoreService.html":{}}}],["whose",{"_index":4031,"title":{},"body":{"classes/MultiSourceList.html":{},"components/SetEditorDialogComponent.html":{},"interfaces/SetEditorDialogData.html":{},"interfaces/SetMultiSource.html":{}}}],["width",{"_index":78,"title":{},"body":{"components/AccessTokenDialogComponent.html":{},"components/AddProjectMemberDialogComponent.html":{},"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"components/CreateComponentDialogComponent.html":{},"components/CreateEditLabelDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/CreateIssueDialogComponent.html":{},"components/CursorPaginatorComponent.html":{},"components/FrameComponent.html":{},"components/IssueContentsComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueGraphControlsComponent.html":{},"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"components/IssueListComponent.html":{},"components/IssueLocationComponent.html":{},"components/LoginComponent.html":{},"components/MarkdownEditorComponent.html":{},"components/NodeDetailsComponent.html":{},"interfaces/Positions.html":{},"components/ProfileSettingsDialogComponent.html":{},"components/ProjectHeaderComponent.html":{},"components/ProjectIssueListComponent.html":{},"components/ProjectListComponent.html":{},"components/ProjectMembersComponent.html":{},"components/ProjectOverviewComponent.html":{},"components/QueryComponent.html":{},"components/RegisterComponent.html":{},"components/RemoveDialogComponent.html":{},"components/RemoveProjectMemberComponentComponent.html":{},"components/SetEditorComponent.html":{},"components/SetEditorDialogComponent.html":{},"components/TextDisplayComponent.html":{},"components/TimelineItemComponent.html":{}}}],["width:100",{"_index":4834,"title":{},"body":{"components/ProjectIssueListComponent.html":{},"components/ProjectMembersComponent.html":{}}}],["window",{"_index":6052,"title":{},"body":{"additional-documentation/using-gropius.html":{}}}],["within",{"_index":1254,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/RelationEdge.html":{}}}],["without",{"_index":1714,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"components/ProjectMembersComponent.html":{},"components/SetEditorComponent.html":{},"injectables/UsersService.html":{},"interfaces/userMock.html":{},"additional-documentation/managing-gropius.html":{}}}],["won't",{"_index":1621,"title":{},"body":{"components/CreateIssueDialogComponent.html":{},"interfaces/DialogData.html":{}}}],["wont",{"_index":2915,"title":{},"body":{"components/IssueFilterComponent.html":{}}}],["word",{"_index":5462,"title":{},"body":{"components/TextDisplayComponent.html":{},"classes/TimeFormatter.html":{}}}],["work",{"_index":5637,"title":{},"body":{"injectables/UsersService.html":{}}}],["workaround",{"_index":2342,"title":{},"body":{"classes/GraphComponent.html":{},"interfaces/GraphData.html":{},"classes/GraphDataFactory.html":{},"classes/GraphInterface.html":{},"classes/GraphIssue.html":{}}}],["worked",{"_index":5913,"title":{},"body":{"index.html":{}}}],["works",{"_index":2740,"title":{},"body":{"components/IssueDetailComponent.html":{},"interfaces/Positions.html":{}}}],["wrap",{"_index":3976,"title":{},"body":{"components/MarkdownEditorComponent.html":{}}}],["wrapper",{"_index":1447,"title":{},"body":{"components/CreateComponentDialogComponent.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/NodeDetailsComponent.html":{}}}],["wrappers",{"_index":6085,"title":{},"body":{"additional-documentation/managing-gropius.html":{}}}],["writes",{"_index":1827,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["x",{"_index":1068,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["x.name.tolocalelowercase().indexof(term.tolocalelowercase",{"_index":3725,"title":{},"body":{"injectables/LabelStoreService.html":{}}}],["x2",{"_index":3251,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["xmax",{"_index":4766,"title":{},"body":{"interfaces/Positions.html":{}}}],["xmin",{"_index":4764,"title":{},"body":{"interfaces/Positions.html":{}}}],["xoffset",{"_index":3276,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["y",{"_index":1064,"title":{},"body":{"components/ComponentContextMenuComponent.html":{},"interfaces/ComponentContextMenuData.html":{},"injectables/ComponentContextMenuService.html":{},"interfaces/ComponentNode.html":{},"interfaces/CreateInterfaceData.html":{},"components/CreateInterfaceDialogComponent.html":{},"components/FrameComponent.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"injectables/IssueGraphLinkHandlesService.html":{},"classes/IssueGroupContainerBehaviour.html":{},"interfaces/IssueGroupContainerNode.html":{},"classes/IssueGroupContainerParentBehaviour.html":{},"interfaces/IssueNode.html":{},"classes/LayoutNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"classes/Vector.html":{},"miscellaneous/variables.html":{}}}],["y2",{"_index":3252,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["year",{"_index":5509,"title":{},"body":{"classes/TimeFormatter.html":{}}}],["yes",{"_index":1464,"title":{},"body":{"components/CreateEditLabelDialogComponent.html":{},"classes/DataNode.html":{},"classes/DataQuery.html":{},"injectables/InterfaceStoreService.html":{},"components/IssueDetailComponent.html":{},"components/IssueFilterComponent.html":{},"components/IssueLabelComponent.html":{},"classes/NodeCache.html":{},"components/QueryComponent.html":{},"injectables/UserNotifyService.html":{}}}],["yielded",{"_index":5089,"title":{},"body":{"directives/QueryBodyDirective.html":{},"directives/QueryButtonDirective.html":{},"components/QueryComponent.html":{}}}],["ymax",{"_index":4767,"title":{},"body":{"interfaces/Positions.html":{}}}],["ymin",{"_index":4765,"title":{},"body":{"interfaces/Positions.html":{}}}],["yoffset",{"_index":3277,"title":{},"body":{"classes/IssueGroupContainerBehaviour.html":{},"classes/IssueGroupContainerParentBehaviour.html":{}}}],["you've",{"_index":2022,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{}}}],["z",{"_index":5553,"title":{},"body":{"components/TimelineItemComponent.html":{},"components/TopToolbarComponent.html":{}}}],["zero",{"_index":2046,"title":{},"body":{"classes/DataNode.html":{},"classes/DataQuery.html":{},"classes/NodeCache.html":{},"classes/Vector.html":{}}}],["zeroposition",{"_index":1257,"title":{},"body":{"interfaces/ComponentNode.html":{},"interfaces/InterfaceNode.html":{},"interfaces/IssueFolderNode.html":{},"interfaces/IssueGroupContainerNode.html":{},"interfaces/IssueNode.html":{},"interfaces/Position.html":{},"interfaces/Positions.html":{},"interfaces/RelationEdge.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":5831,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/GraphsModule.html":{},"interfaces/Positions.html":{},"overview.html":{}}}],["zoomonredraw",{"_index":4351,"title":{},"body":{"interfaces/Positions.html":{}}}],["zooms",{"_index":4729,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransform",{"_index":4716,"title":{},"body":{"interfaces/Positions.html":{}}}],["zoomtransformasstring",{"_index":4717,"title":{},"body":{"interfaces/Positions.html":{}}}],["zorro",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessTokenDialogComponent.html":{"url":"components/AccessTokenDialogComponent.html","title":"component - AccessTokenDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessTokenDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-token-dialog\n            \n\n            \n                styleUrls\n                ./access-token-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./access-token-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                    Public\n                                generateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'option2'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/access-token-dialog/access-token-dialog.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-access-token-dialog',\n  templateUrl: './access-token-dialog.component.html',\n  styleUrls: ['./access-token-dialog.component.scss']\n})\nexport class AccessTokenDialogComponent implements OnInit {\n  selected = 'option2';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //close access token settings dialog\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n\n  public generateToken() {\n    //TODO\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        close_ios\n    \n\n    Personal access tokens\n    Generate a personal access token for quicker access ...\n\n    \n        \n          Note\n          \n        \n      \n\n      \n        Expitarion\n        \n          7 days\n          30 days\n          60 days\n          90 days\n        \n      \n\n      \n\n      \n    \n        Generate Token\n    \n\n      \n        Cancel\n    \n\n\n    \n\n    \n                \n                    ./access-token-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n\n.example-form {\n    min-width: 150px;\n    max-width: 500px;\n    width: 100%;\n  }\n  \n.example-full-width {\n    width: 100%;\n}\n\n.new-item-button{\n    float: right;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close_ios        Personal access tokens    Generate a personal access token for quicker access ...                      Note                                      Expitarion                  7 days          30 days          60 days          90 days                                      Generate Token                  Cancel    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccessTokenDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddProjectMemberDialogComponent.html":{"url":"components/AddProjectMemberDialogComponent.html","title":"component - AddProjectMemberDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddProjectMemberDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a view to add a member to a project\nThe view is just mocked, so no interaction with the backend or database is provided yet\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-project-member-dialog\n            \n\n            \n                styleUrls\n                ./add-project-member-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-project-member-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                loading\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                validation\n                            \n                            \n                                validationRole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n/**\n * This component provides a view to add a member to a project\n * The view is just mocked, so no interaction with the backend or database is provided yet\n */\n@Component({\n  selector: 'app-add-project-member-dialog',\n  templateUrl: './add-project-member-dialog.component.html',\n  styleUrls: ['./add-project-member-dialog.component.scss']\n})\nexport class AddProjectMemberDialogComponent implements OnInit {\n  loading = false;\n  selectedUsers = [];\n  constructor(public dialogRef: MatDialogRef,@Inject(MAT_DIALOG_DATA) public data) { }\n  validation = new FormControl('', [Validators.required]);\n  validationRole = new FormControl('', [Validators.required]);\n  ngOnInit(): void {\n    this.validationRole.setValue('administrator')\n  }\n\n  //cancel button\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  //add member button\n  onOkClick(){\n    const data = {usersToAdd: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n}\n\n    \n\n    \n        Add Project Member\n\n\n  \n  \n\n    \n\n      {{user.displayName}}\n    \n  \n\n  \n  \n    Role\n    \n      Administrator\n    \n  \n\n\n\n\n  Cancel\n  Add\n\n\n    \n\n    \n                \n                    ./add-project-member-dialog.component.scss\n                \n                .dialog-content {\n  min-height: 400px;\n  min-width: 400px;\n  max-width: 600px;\n}\n.actions {\n  float:right\n}\n.stretch {\n  width: 100%;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Project Member              {{user.displayName}}              Role          Administrator        Cancel  Add'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddProjectMemberDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matIconRegistry\n                                                  \n                                                        \n                                                                    MatIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        domSanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Gropius'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gropius';\n\n  constructor(private matIconRegistry: MatIconRegistry,\n              private domSanitizer: DomSanitizer) {\n    const ccimsIcons = {\n      'relation-edge': 'relation-edge.svg',\n      'resize-corner': 'resize-corner.svg'\n    };\n\n    for (const [key, value] of Object.entries(ccimsIcons)) {\n      console.log('register', key, 'as', '../assets/icons/svg/' + value );\n      this.matIconRegistry.addSvgIcon(key, this.domSanitizer.bypassSecurityTrustResourceUrl('../assets/icons/svg/' + value));\n    }\n\n    // add all issue icons\n    for (const type of ['normal', 'assigned']) {\n      for (const category of ['bug', 'feature', 'uncategorized']) {\n        for (const isClosed of [false, true]) {\n          for (const edgeType of [null, 'in', 'out', 'inout']) {\n            const assetUrl = [\n              '../assets/icons/issues/', type, '/', category, isClosed ? '-closed' : null, edgeType && '-', edgeType, '.svg'\n            ].filter(part => !!part).join('');\n            const iconName = [\n              'issue', type === 'assigned' ? 'assigned' : null, category, isClosed ? 'closed' : null, edgeType\n            ].filter(part => !!part).join('-');\n            this.matIconRegistry.addSvgIcon(iconName, this.domSanitizer.bypassSecurityTrustResourceUrl(assetUrl));\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessTokenDialogComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            CommentComponent\n                        \n                        \n                            ComponentContextMenuComponent\n                        \n                        \n                            CreateComponentDialogComponent\n                        \n                        \n                            CreateEditLabelDialogComponent\n                        \n                        \n                            CreateInterfaceDialogComponent\n                        \n                        \n                            CreateIssueDialogComponent\n                        \n                        \n                            CreateProjectDialogComponent\n                        \n                        \n                            FrameComponent\n                        \n                        \n                            IssueContentsComponent\n                        \n                        \n                            IssueDetailComponent\n                        \n                        \n                            LinkedIssueItemComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MarkdownEditorComponent\n                        \n                        \n                            MarkdownPreviewComponent\n                        \n                        \n                            NodeDetailsComponent\n                        \n                        \n                            NodeDetailsPageComponent\n                        \n                        \n                            ProfileSettingsDialogComponent\n                        \n                        \n                            ProjectListComponent\n                        \n                        \n                            ProjectOverviewComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            RemoveDialogComponent\n                        \n                        \n                            RemoveProjectMemberComponentComponent\n                        \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            SideNavComponent\n                        \n                        \n                            TextDisplayComponent\n                        \n                        \n                            TimelineCoalescedItemsDirective\n                        \n                        \n                            TimelineComponent\n                        \n                        \n                            TimelineItemComponent\n                        \n                        \n                            TimelineItemDeletedDirective\n                        \n                        \n                            TimelineSingleItemDirective\n                        \n                        \n                            TopToolbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            GraphQLModule\n                        \n                        \n                            GraphsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProjectListComponent} from './project-list-component/project-list.component';\nimport {ProjectOverviewComponent} from './project-overview/project-overview.component';\nimport {TopToolbarComponent} from './top-toolbar/top-toolbar.component';\nimport {SideNavComponent} from './side-nav/side-nav.component';\nimport {GraphQLModule} from './graphql.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {IssueDetailComponent} from './issue-detail/issue-detail.component';\nimport {GraphsModule} from './graphs/graphs.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NZ_ICONS} from 'ng-zorro-antd/icon';\nimport {en_US, NZ_I18N} from 'ng-zorro-antd/i18n';\nimport {NgZorroAntdModule} from 'ng-zorro-antd';\nimport * as AllIcons from '@ant-design/icons-angular/icons';\nimport {IconDefinition} from '@ant-design/icons-angular';\nimport {CommonModule, registerLocaleData} from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport {LoginComponent} from './login/login.component';\nimport {FrameComponent} from './frame/frame.component';\nimport {RegisterComponent} from './register/register.component';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {GlobalConfig, ToastrModule} from 'ngx-toastr';\nimport {RemoveDialogComponent} from './dialogs/remove-dialog/remove-dialog.component';\nimport {CreateComponentDialogComponent} from './dialogs/create-component-dialog/create-component-dialog.component';\nimport {CreateInterfaceDialogComponent} from './dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {CreateIssueDialogComponent} from './dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {NgSelectModule} from '@ng-select/ng-select';\nimport {NgOptionHighlightModule} from '@ng-select/ng-option-highlight';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport {CreateEditLabelDialogComponent} from '@app/dialogs/create-label-dialog/create-edit-label-dialog.component';\nimport {RemoveProjectMemberComponentComponent} from './dialogs/remove-project-member-component/remove-project-member-component.component';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ComponentContextMenuComponent} from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsComponent} from '@app/node-details/node-details.component';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MarkdownEditorComponent} from './markdown/markdown-editor/markdown-editor.component';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {MarkdownPreviewComponent} from './markdown/markdown-preview/markdown-preview.component';\nimport {TimelineComponent} from './issue-detail/timeline/timeline.component';\nimport {CommentComponent} from './issue-detail/comment/comment.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\nimport {TextDisplayComponent} from '@app/text-display/text-display.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {IssueContentsComponent} from '@app/issue-detail/issue-contents.component';\nimport {LinkedIssueItemComponent} from '@app/issue-detail/linked-issue-item.component';\nimport {SettingsDialogComponent} from '@app/dialogs/settings-dialog/settings-dialog.component';\nimport {ProfileSettingsDialogComponent} from './dialogs/profile-settings-dialog/profile-settings-dialog.component';\nimport {AccessTokenDialogComponent} from './dialogs/access-token-dialog/access-token-dialog.component';\nimport {\n  TimelineCoalescedItemsDirective,\n  TimelineItemComponent,\n  TimelineItemDeletedDirective,\n  TimelineSingleItemDirective\n} from '@app/issue-detail/timeline/coalesced/timeline-item.component';\n\nregisterLocaleData(en);\nconst antDesignIcons = AllIcons as {\n  [key: string]: IconDefinition;\n};\nconst icons: IconDefinition[] = Object.keys(antDesignIcons).map(key => antDesignIcons[key]);\n\n// configuration for toasts, the toastrservice is configured in graphql.module.ts\nconst toasterConfig: Partial = {\n  maxOpened: 4,\n  autoDismiss: true\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectListComponent,\n    ProjectOverviewComponent,\n    TopToolbarComponent,\n    SideNavComponent,\n    IssueDetailComponent,\n    LoginComponent,\n    FrameComponent,\n    RegisterComponent,\n    CreateProjectDialogComponent,\n    RemoveDialogComponent,\n    CreateComponentDialogComponent,\n    CreateInterfaceDialogComponent,\n    CreateIssueDialogComponent,\n    CreateEditLabelDialogComponent,\n    RemoveProjectMemberComponentComponent,\n    ComponentContextMenuComponent,\n    NodeDetailsComponent,\n    NodeDetailsPageComponent,\n    MarkdownEditorComponent,\n    MarkdownPreviewComponent,\n    TimelineComponent,\n    CommentComponent,\n    TextDisplayComponent,\n    IssueContentsComponent,\n    LinkedIssueItemComponent,\n    SettingsDialogComponent,\n    ProfileSettingsDialogComponent,\n    AccessTokenDialogComponent,\n    TimelineItemComponent,\n    TimelineSingleItemDirective,\n    TimelineCoalescedItemsDirective,\n    TimelineItemDeletedDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(toasterConfig),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    GraphQLModule,\n    HttpClientModule,\n    GraphsModule,\n    MatDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgZorroAntdModule,\n    NgSelectModule,\n    CommonModule,\n    NgOptionHighlightModule,\n    ColorPickerModule,\n    MatExpansionModule,\n    PortalModule,\n    MonacoEditorModule.forRoot(),\n    MarkdownModule.forRoot(),\n    MatButtonToggleModule\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [{provide: NZ_I18N, useValue: en_US}, {provide: NZ_ICONS, useValue: icons}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectListComponent } from './project-list-component/project-list.component';\nimport { ProjectOverviewComponent } from './project-overview/project-overview.component';\nimport { IssueDetailComponent } from './issue-detail/issue-detail.component';\nimport { IssueGraphControlsComponent } from './graphs/issue-graph-controls/issue-graph-controls.component';\nimport { LoginComponent } from './login/login.component';\nimport { FrameComponent } from './frame/frame.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { RegisterComponent } from './register/register.component';\nimport { ProjectIssueListComponent } from './project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from './project-members/project-members.component';\nimport {NodeDetailsPageComponent} from '@app/node-details-page/node-details-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: FrameComponent, canActivate: [AuthGuard],\n    children: [\n      { path: '', redirectTo: 'projects', pathMatch: 'full' },\n      { path: 'projects', component: ProjectListComponent },\n      {\n        path: 'projects/:id',\n        children: [\n          { path: '', pathMatch: 'full', component: ProjectOverviewComponent },\n          { path: 'graph', component: IssueGraphControlsComponent },\n          {\n            path: 'issues',\n            children: [\n              { path: '', pathMatch: 'full', component: ProjectIssueListComponent },\n              { path: ':issueId', pathMatch: 'full', component: IssueDetailComponent },\n            ]\n          },\n          { path: 'members', component: ProjectMembersComponent },\n          {\n            path: 'component/:componentId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n              {\n                path: 'interface/:interfaceId',\n                children: [\n                  { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n                  { path: 'component/:componentId/issue/:issueId', pathMatch: 'full', component: IssueDetailComponent }\n                ]\n              },\n            ]\n          },\n          {\n            path: 'interface/:interfaceId',\n            children: [\n              { path: '', pathMatch: 'full', component: NodeDetailsPageComponent},\n            ]\n          }\n        ]\n      },\n      { path: 'issue', component: IssueDetailComponent },\n    ],\n  },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            project\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        project:     GetBasicProjectQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     GetBasicProjectQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    AuthGuard is responsible for navigating the user to /login when he is not\ncurrently logged in according to the AuthenticationsService. It's canActivate\nmethod is automatically invoked by angular on routing events.\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.guard.ts:22\n                \n            \n\n\n            \n                \n                    Redirects user to login if he is not authenticated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        unused but required for CanActivate signature\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        router state when guard was invoked, used to redirect the user after login\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff the user is logged in according to the AuthenticationService\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\n\n/** AuthGuard is responsible for navigating the user to /login when he is not\n * currently logged in according to the AuthenticationsService. It's canActivate\n * method is automatically invoked by angular on routing events.\n */\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    /**\n     * Redirects user to login if he is not authenticated.\n     * @param route unused but required for CanActivate signature\n     * @param state router state when guard was invoked, used to redirect the user after login\n     * @returns true iff the user is logged in according to the AuthenticationService\n     */\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for saving user name, id and jwt token in localstorage\nand exposing the name and id through currentUserSubject\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                            \n                                    Readonly\n                                userStorageKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserFromStorage\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUserToStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUserValue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchUserFromStorage\n                        \n                    \n                \n            \n            \n                \nfetchUserFromStorage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:43\n                \n            \n\n\n            \n                \n                    If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\nthrough currentUserSubject. If the login fails the returned observable errors.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provided by user to LoginComponent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the logged in user, errors if login is not successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:59\n                \n            \n\n\n            \n                \n                    remove user from local storage and set subject holding the current user to null\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserToStorage\n                        \n                    \n                \n            \n            \n                \nsaveUserToStorage(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/authentication.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userStorageKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'currentUser'\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUserValue\n                    \n                \n\n                \n                    \n                        getcurrentUserValue()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/authentication.service.ts:24\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCIMSValidators.html":{"url":"classes/CCIMSValidators.html","title":"class - CCIMSValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCIMSValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/validators.ts\n        \n\n\n            \n                Description\n            \n            \n                This class provides commonly used validators in CCIMS usable for e.g. input fields\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                contentValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameFormatValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                nameValidator\n                            \n                            \n                                    Static\n                                    Readonly\n                                urlValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        contentValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:30\n                        \n                    \n\n            \n                \n                    Ensures that the text has the appropriate length for content\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameFormatValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ])\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:16\n                        \n                    \n\n            \n                \n                    Ensures that the text is both usable as a name (#nameValidator) and that the text does not start/end with\na whitespace (white-spaces in the name are allowed)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(256)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:10\n                        \n                    \n\n            \n                \n                    Ensures that text has the appropriate length to be used as a name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        urlValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Validators.maxLength(655536)\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/validators.ts:25\n                        \n                    \n\n            \n                \n                    Ensures that the provided text has the correct length and the correct format for an URL\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Validators} from '@angular/forms';\n\n/**\n * This class provides commonly used validators in CCIMS usable for e.g. input fields\n */\nexport class CCIMSValidators {\n  /**\n   * Ensures that text has the appropriate length to be used as a name\n   */\n  static readonly nameValidator = Validators.maxLength(256);\n\n  /**\n   * Ensures that the text is both usable as a name ({@link #nameValidator}) and that the text does not start/end with\n   * a whitespace (white-spaces in the name are allowed)\n   */\n  static readonly nameFormatValidator = Validators.compose([\n    CCIMSValidators.nameValidator,\n    Validators.pattern('([^ ]+ )*([^ ]+)+')\n  ]);\n\n  /**\n   * Ensures that the provided text has the correct length and the correct format for an URL\n   */\n  // TODO: Verify URL pattern, leaving this out for now for quicker testing\n  static readonly urlValidator = Validators.maxLength(655536);\n\n  /**\n   * Ensures that the text has the appropriate length for content\n   */\n  static readonly contentValidator = Validators.maxLength(655536);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CacheNodeComponent.html":{"url":"components/CacheNodeComponent.html","title":"component - CacheNodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CacheNodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cache-node.component.ts\n\n\n\n    \n        Description\n    \n    \n        Loads data for a node from the cache or from the API.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [cache-node]\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                itemTemplate\n                            \n                            \n                                node$\n                            \n                            \n                                nodeSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lazy\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/cache-node.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:20\n                            \n                        \n                \n                    \n                        If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cache-node.component.ts:18\n                            \n                        \n                \n                    \n                        The node that will be loaded.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        itemTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(ItemDirective, {read: TemplateRef})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        node$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/cache-node.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ContentChild, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { ItemDirective } from '@app/components/item.directive';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\n\n/**\n * Loads data for a node from the cache or from the API.\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: '[cache-node]',\n  template: ''\n})\nexport class CacheNodeComponent implements OnInit, OnDestroy {\n  /** The node that will be loaded. */\n  @Input() node: NodeId;\n  /** If true, this component will subscribe to the node lazily (i.e. it will not fetch new data if data is cached already) */\n  @Input() lazy = true;\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  node$: DataNode;\n  nodeSub: Subscription;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.node$ = this.dataService.getNode(this.node);\n    this.nodeSub = this.lazy ? this.node$.subscribeLazy() : this.node$.subscribe();\n  }\n  ngOnDestroy() {\n    this.nodeSub.unsubscribe();\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CacheNodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoalescedTimelineItem.html":{"url":"interfaces/CoalescedTimelineItem.html","title":"interface - CoalescedTimelineItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoalescedTimelineItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/timeline.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface may contain in contrast to a normal timeline item several events in one item.\nTimeline items are coalesced because they are performed in close succession.\nlabel 1 and label 2 are added to an issue at the same time.\nInstead of representing them as to individual items/events, they will be represented as one item in the timeline.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isCoalesced\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isCoalesced\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isCoalesced:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:     Array | IssueTimelineItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array | IssueTimelineItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, ViewChild} from '@angular/core';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\nimport {Router} from '@angular/router';\nimport {IssueTimelineItem} from '../../../generated/graphql-dgql';\nimport {DataList} from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport {ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This interface may contain in contrast to a normal timeline item several events in one item.\n * Timeline items are coalesced because they are performed in close succession.\n * @example\n * label 1 and label 2 are added to an issue at the same time.\n * Instead of representing them as to individual items/events, they will be represented as one item in the timeline.\n */\nexport interface CoalescedTimelineItem {\n  user: string;\n  type: string;\n  isCoalesced: boolean;\n  item: Array | IssueTimelineItem;\n  time: string;\n}\n\n\ntype ItemFilterFunction = (IssueTimelineItem) => boolean;\n\n/**\n * This component shows the full timeline\n * with all its timeline events for a given issue.\n */\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements AfterViewInit {\n  /**\n   * Events which need to be coalesced\n   */\n  static readonly COALESCABLE_EVENTS: Map = new Map([\n      ['LabelledEvent', (item) => {\n        return !!item.label;\n      }],\n      ['UnlabelledEvent', (item) => {\n        return !!item.removedLabel;\n      }],\n      ['AddedToComponentEvent', (item) => {\n        return !!item.component;\n      }],\n      ['RemovedFromComponentEvent', (item) => {\n        return !!item.removedComponent;\n      }],\n      ['AddedToLocationEvent', (item) => {\n        return !!item.location;\n      }],\n      ['RemovedFromLocationEvent', (item) => {\n        return !!item.removedLocation;\n      }],\n      ['LinkEvent', (item) => {\n        return !!item.linkedIssue;\n      }],\n      ['UnlinkEvent', (item) => {\n        return !!item.removedLinkedIssue;\n      }]\n    ]\n  );\n\n  /**\n   * provides functionality for time formatting for correct representation\n   */\n  public timeFormatter = new TimeFormatter();\n  /**\n   * Already coalesced items for timeline representation\n   */\n  timelineItems: Array = [];\n  /**\n   * Subscription for timelineitems\n   */\n  public timelineItems$: DataList;\n  /**\n   * The id of the corresponding issue for which the timeline is shown\n   */\n  @Input() issueId: NodeId;\n  /**\n   * The id of the project in which the issue is listed\n   */\n  @Input() projectID: string;\n  /**\n   * Component which is handling the query to the server\n   */\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  /**\n   * Service for handling API connection is required\n   * @param {DataService} dataService handling api connection\n   */\n  constructor(private dataService: DataService) {\n  }\n\n  ngAfterViewInit(): void {\n    this.requestTimelineItems();\n  }\n\n  /**\n   * Retrieves all timeline items (aka. timeline events) for the current issue.\n   * Use in ngAfterViewInit() lifecycle hook\n   */\n  requestTimelineItems(): void {\n\n    // gets an observable with all timeline items for thecurrent issue\n    this.timelineItems$ = this.dataService.getList({\n      node: this.issueId,\n      type: ListType.TimelineItems\n    });\n\n    //FIXME: decide on the count\n    this.timelineItems$.count = 99999;\n\n    this.query.listenTo(this.timelineItems$, value => {\n      this.prepareTimelineItems(value);\n    });\n  }\n\n  /**\n   * Prepares the timeline items (aka. the timeline events).\n   * @param  {Map} items - Timeline items to prepare.\n   */\n  prepareTimelineItems(items: Map): void {\n\n    let coalescingType = null;\n    let coalesceList = new Array();\n    let coalesced: Array = [];\n\n    /**\n     * Adds items from the coalesce list {@link coalesceList}\n     * to a list containing all coalesced timeline items {@link coalesced}\n     * in case the coalesce list is not empty.\n     */\n    const finishCoalescing = () => {\n\n      // case: the coalesce list is empty\n      if (coalesceList.length === 0) {\n        return;\n      }\n\n      // case: the coalesce list is not empty\n      else {\n        coalesced = this.addCoalesceItems(coalesceList, coalesced);\n        coalesceList = [];\n      }\n    };\n\n    for (const timelineItem of items.values()) {\n      const itemType = (timelineItem as any).__typename;\n      const filter = TimelineComponent.COALESCABLE_EVENTS.get(itemType);\n      let stopCoalescing = false;\n\n      // decides whether to stop coalescing\n      stopCoalescing = this.stopCoalescing(coalescingType, coalesceList, stopCoalescing, timelineItem);\n\n      // case: the coalescing type equals the current item type\n      // or coalescing should stop\n      if (coalescingType !== itemType || stopCoalescing) {\n\n        // adds remaining items\n        finishCoalescing();\n\n        if (filter && filter(timelineItem)) {\n          coalescingType = itemType;\n          coalesceList.push(timelineItem);\n        } else {\n          coalescingType = null;\n          coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        }\n\n        continue;\n      }\n\n      // case: the coalescing type is null\n      else if (coalescingType == null) {\n        coalesced = this.addSingleCoalesceItem(timelineItem, filter, coalesced);\n        continue;\n      }\n\n      if (filter(timelineItem)) {\n        coalesceList.push(timelineItem);\n      }\n    }\n\n    // adds remaining items\n    finishCoalescing();\n    this.timelineItems = coalesced;\n  }\n\n  /**\n   * Returns the name of the user\n   * that created a given timeline item (aka. timeline event)\n   * or just \"Deleted User\" in case the user no longer exists.\n   * @param  {IssueTimelineItem} item - The given timeline item.\n   * @returns - Name of the timeline item creator.\n   */\n  private userName(item: IssueTimelineItem) {\n\n    // case: the timeline item's creator's name can be retrieved\n    if (item.createdBy) {\n      return item.createdBy.displayName;\n    }\n\n    return 'Deleted User';\n  }\n\n  /**\n   * Adds items from a given coalesce list\n   * to a given list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem[]} coalesceList  The given coalesce list.\n   * @param  {CoalescedTimelineItem[]} coalesced  The given list containing all coalesced timeline items.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addCoalesceItems(coalesceList: IssueTimelineItem[], coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n    const firstItem: any = coalesceList[0];\n    const itemType = firstItem.__typename;\n    const createdBy = this.userName(firstItem);\n\n    // case: the coalesce list has more than one item\n    if (coalesceList.length > 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: true,\n        item: coalesceList,\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // case: the coalesce list has only one item\n    else if (coalesceList.length === 1) {\n      coalesced.push({\n        type: itemType,\n        isCoalesced: false,\n        item: coalesceList[0],\n        user: createdBy,\n        time: coalesceList[0].createdAt\n      });\n    }\n\n    // returns the list containing all coalesced timeline items\n    return coalesced;\n  }\n\n  /**\n   * Adds a single item to a list containing all coalesced timeline items.\n   * @param  {IssueTimelineItem} timelineItem - The given item.\n   * @param  {ItemFilterFunction|undefined} filter - Filter used on the given item.\n   * @returns The given list containing all coalesced timeline items.\n   */\n   private addSingleCoalesceItem(\n    timelineItem: IssueTimelineItem,\n    filter: ItemFilterFunction | undefined,\n    coalesced: CoalescedTimelineItem[]): CoalescedTimelineItem[] {\n\n      if (!filter || filter(timelineItem)) {\n        coalesced.push({\n          type: (timelineItem as any).__typename,\n          isCoalesced: false,\n          item: timelineItem,\n          user: this.userName(timelineItem),\n          time: timelineItem.createdAt\n        });\n      }\n\n      // returns the list containing all coalesced timeline items\n      return coalesced;\n  }\n\n  /**\n   * Stops the coalescing process in case\n   * a) the user differs or\n   * b) the current item was already added\n   * 60 seconds after the first one added.\n   * @param  {any} coalescingType - Coalescing type handled.\n   * @param  {IssueTimelineItem[]} coalesceList - Coalesce list handled.\n   * @param  {boolean} stopCoalescing - Value that determines whether the coalescing should stop.\n   * @param  {IssueTimelineItem} timelineItem - Timeline item handled.\n   * @returns The value that determines whether the coalescing should stop.\n   */\n   private stopCoalescing(coalescingType: any, coalesceList: IssueTimelineItem[], stopCoalescing: boolean, timelineItem: IssueTimelineItem) {\n\n    if (coalescingType) {\n      const firstItem = coalesceList[0];\n      stopCoalescing = firstItem.createdBy.id !== timelineItem.createdBy.id ||\n        Math.abs(Date.parse(timelineItem.createdAt) - Date.parse(firstItem.createdAt)) > 60000;\n    }\n\n    return stopCoalescing;\n  }\n\n  /**\n   * Checks if the user self-assigned this issue for text representation.\n   * @param assignedEvent - Assigned event handled.\n   */\n  selfAssigned(assignedEvent): boolean {\n\n    if (assignedEvent.createdBy.id === assignedEvent.removedAssignee?.id) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Handles the id for a given node...\n   */\n  makeCommentId(node): NodeId {\n    return {type: NodeType.IssueComment, id: node.id};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommentComponent.html":{"url":"components/CommentComponent.html","title":"component - CommentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CommentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/comment/comment.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue comment.\nThe comment will be subscribed to lazily (see DataNode).\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comment\n            \n\n            \n                styleUrls\n                ./comment.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editBody\n                            \n                            \n                                    Public\n                                savingBody\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteComment\n                            \n                            \n                                    Public\n                                editComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                commentId\n                            \n                            \n                                isIssueBody\n                            \n                            \n                                issueId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/comment/comment.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        commentId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:25\n                            \n                        \n                \n                    \n                        The comment or issue ID. If this is an issue ID, set  to true.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isIssueBody\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:23\n                            \n                        \n                \n                    \n                        If true, this comment component is actually editing an issue's body.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issueId\n                    \n                \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/comment/comment.component.ts:27\n                            \n                        \n                \n                    \n                        The issue this comment belongs to.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:82\n                \n            \n\n\n            \n                \n                    Deletes the current comment.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    editComment(body: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/comment/comment.component.ts:65\n                \n            \n\n\n            \n                \n                    Edits the description of the current comment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe new description of the current issue or comment.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        editBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:32\n                        \n                    \n\n            \n                \n                    True if the comment body is being edited.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:34\n                        \n                    \n\n            \n                \n                    True if the comment body is being saved.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/comment/comment.component.ts:30\n                        \n                    \n\n            \n                \n                    Used to format time.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { IssueComment } from '../../../generated/graphql-dgql';\nimport { TimeFormatter } from '@app/issue-detail/time-formatter';\nimport DataService from '@app/data-dgql';\nimport { NodeId } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays an issue comment.\n * The comment will be subscribed to lazily (see {@link DataNode#subscribeLazy}).\n */\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent implements OnInit, OnDestroy {\n  /** If true, this comment component is actually editing an issue's body. */\n  @Input() isIssueBody: boolean;\n  /** The comment or issue ID. If this is an issue ID, set {@link #isIssueBody} to true. */\n  @Input() commentId: NodeId;\n  /** The issue this comment belongs to. */\n  @Input() issueId: NodeId;\n\n  /** Used to format time. */\n  public timeFormatter = new TimeFormatter();\n  /** True if the comment body is being edited. */\n  public editBody = false;\n  /** True if the comment body is being saved. */\n  public savingBody = false;\n\n  /**\n   * @ignore\n   * Internal: comment data node view.\n   */\n  comment$: DataNode;\n  /**\n   * @ignore\n   * Internal: subscription to comment$.\n   */\n  commentSub: Subscription;\n\n  constructor(private dataService: DataService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {}\n\n  ngOnInit() {\n    this.comment$ = this.dataService.getNode(this.commentId);\n    this.commentSub = this.comment$.subscribeLazy();\n  }\n\n  ngOnDestroy() {\n    this.commentSub?.unsubscribe();\n  }\n\n  /**\n   * Edits the description of the current comment.\n   *\n   * @param body - The new description of the current issue or comment.\n   */\n  public editComment(body: string): void {\n    this.savingBody = true;\n    this.dataService.mutations.updateIssueComment(\n      Math.random().toString(),\n      this.commentId,\n      body\n    ).then(() => {\n      // only exit if successful\n      this.editBody = false;\n    }).finally(() => {\n      this.savingBody = false;\n    });\n  }\n\n  /**\n   * Deletes the current comment.\n   */\n  public deleteComment(): void {\n\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete comment ?',\n          messages: ['Are you sure you want to delete this comment ?',\n            'This action cannot be undone!']\n        }\n      });\n\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        // User confirmed deletion\n        this.dataService.mutations.deleteIssueComment(\n          Math.random().toString(),\n          this.issueId,\n          this.commentId\n        ).then(() => {\n          this.notify.notifyInfo('Successfully deleted comment');\n        });\n      }\n    },\n      error => this.notify.notifyError('Failed to delete project!', error));\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n         commented\n        \n          {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}\n        \n        \n          &sdot; edited\n          \n            {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}\n          \n        \n      \n\n      \n      \n      \n        Delete\n      \n      \n        Edit\n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      \n      \n\n      \n        \n        Cancel\n        \n        \n          Save\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./comment.component.scss\n                \n                @import '../issue-contents.component';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               commented                  {{this.timeFormatter.formatTimeDifference(comment.createdAt)}}                          ⋅ edited                      {{this.timeFormatter.formatTimeDifference(comment.lastEditedAt)}}                                                  Delete                    Edit                                                                      Cancel                          Save                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CommentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentContextMenuComponent.html":{"url":"components/ComponentContextMenuComponent.html","title":"component - ComponentContextMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ComponentContextMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component manages the component context menu as well as its content\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                component-context-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./component-context-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                height\n                            \n                            \n                                nodeDetailsReady\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                updatePosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ComponentContextMenuData, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ComponentContextMenuData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:175\n                \n            \n\n\n            \n                \n                    Close the context menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePosition\n                        \n                    \n                \n            \n            \n                \nupdatePosition(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:166\n                \n            \n\n\n            \n                \n                    Update the position of the context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y offset of the top left menu corner relative to the top left corner of the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentContextMenuData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(COMPONENT_CONTEXT_MENU_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_HEIGHT\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:119\n                        \n                    \n\n            \n                \n                    Current height of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeDetailsReady\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:121\n                        \n                    \n\n            \n                \n                    True if the node details component is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ComponentContextMenuComponent.LAST_WIDTH\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:117\n                        \n                    \n\n            \n                \n                    Current width of the dialog\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{this.nodeDetails.getNodeName()}}\n        \n        \n            \n        \n    \n\n    \n        {{this.data.nodeId}}\n        \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    component-context-menu.component.scss\n                \n                @import \"src/styles/variables\";\n\n.frame {\n  padding: 24px;\n  background-color: $background-controls;\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgb(0 0 0 / 20%), 0 24px 38px 3px rgb(0 0 0 / 14%), 0 9px 46px 8px rgb(0 0 0 / 12%);\n}\n\n.node-title {\n  width: 100%;\n  text-align: center;\n  margin: 0 0 20px;\n}\n\n.container{\n  height: calc(100% - 50px);\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{this.nodeDetails.getNodeName()}}                                                    {{this.data.nodeId}}                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ComponentContextMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentContextMenuData.html":{"url":"interfaces/ComponentContextMenuData.html","title":"interface - ComponentContextMenuData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentContextMenuData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the data required for the component context menu.\nNote that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\nmenu.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graph\n                                        \n                                \n                                \n                                        \n                                            nodeId\n                                        \n                                \n                                \n                                        \n                                            overlayRef\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graph:         IssueGraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A reference to the issue graph\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The node id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayRef:     OverlayRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OverlayRef\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reference to the overlay used to display the context menu\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         ConnectedPosition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConnectedPosition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The position of the overlay\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The project id string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeDetailsType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeDetailsType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of node, either interface or component. Controls the content shown in the context menu\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentContextMenuService.html":{"url":"injectables/ComponentContextMenuService.html","title":"injectable - ComponentContextMenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentContextMenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/component-context-menu/component-context-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Use this service to create a ComponentContextMenuComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(parent: Element, x: number, y: number, projectID: string, nodeID: string, nodeType: NodeDetailsType, issueGraph: IssueGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/component-context-menu/component-context-menu.component.ts:60\n                \n            \n\n\n            \n                \n                    Open a new component context menu\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                            Element\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The parent of the context menu\n\n                                    \n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The X position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The Y position relative to the top left corner of the parent\n\n                                    \n                                \n                                \n                                    projectID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the project the node belongs to\n\n                                    \n                                \n                                \n                                    nodeID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the node\n\n                                    \n                                \n                                \n                                    nodeType\n                                    \n                                                NodeDetailsType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The type of the node\n\n                                    \n                                \n                                \n                                    issueGraph\n                                    \n                                                IssueGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A reference to the issue graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentContextMenuComponent\n\n                    \n                    \n                        A reference to the context menu\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  ViewChild\n} from '@angular/core';\nimport {ConnectedPosition, Overlay, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, PortalInjector} from '@angular/cdk/portal';\nimport {IssueGraphComponent} from '@app/graphs/issue-graph/issue-graph.component';\nimport {NodeDetailsComponent, NodeDetailsType, NodeUpdatedCallbackFn} from '@app/node-details/node-details.component';\n\n/**\n * Interface specifying the data required for the component context menu.\n * Note that this should not be used directly, instead the ComponentContextMenuService should be used to open a context\n * menu.\n */\ninterface ComponentContextMenuData {\n  /** Reference to the overlay used to display the context menu */\n  overlayRef: OverlayRef;\n  /** The position of the overlay */\n  position: ConnectedPosition;\n  /** The project id string */\n  projectId: string;\n  /** The node id string */\n  nodeId: string;\n  /** The type of node, either interface or component. Controls the content shown in the context menu */\n  type: NodeDetailsType;\n  /** A reference to the issue graph */\n  graph: IssueGraphComponent;\n}\n\nconst COMPONENT_CONTEXT_MENU_DATA = new InjectionToken('COMPONENT_CONTEXT_MENU_DATA');\n\n/**\n * Use this service to create a {@link ComponentContextMenuComponent}.\n */\n@Injectable({providedIn: 'root'})\nexport class ComponentContextMenuService {\n  constructor(private overlay: Overlay, private injector: Injector) {\n  }\n\n  /**\n   * Open a new component context menu\n   * @param parent The parent of the context menu\n   * @param x The X position relative to the top left corner of the parent\n   * @param y The Y position relative to the top left corner of the parent\n   * @param projectID The id of the project the node belongs to\n   * @param nodeID The id of the node\n   * @param nodeType The type of the node\n   * @param issueGraph A reference to the issue graph\n   * @return A reference to the context menu\n   */\n  open(parent: Element,\n       x: number, y: number,\n       projectID: string,\n       nodeID: string,\n       nodeType: NodeDetailsType,\n       issueGraph: IssueGraphComponent): ComponentContextMenuComponent {\n    const position = this.overlay.position().flexibleConnectedTo(parent);\n    const pos: ConnectedPosition = {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n      offsetX: x,\n      offsetY: y\n    };\n    position.withPositions([pos]);\n\n    const ref = this.overlay.create({\n      minWidth: 400,\n      minHeight: 200,\n      positionStrategy: position\n    });\n\n    const map = new WeakMap();\n    map.set(COMPONENT_CONTEXT_MENU_DATA, {\n      overlayRef: ref,\n      position: pos,\n      projectId: projectID,\n      nodeId: nodeID,\n      type: nodeType,\n      graph: issueGraph\n    });\n    const injector = new PortalInjector(this.injector, map);\n    return ref.attach(new ComponentPortal(ComponentContextMenuComponent, null, injector)).instance;\n  }\n}\n\n/**\n * This component manages the component context menu as well as its content\n */\n@Component({\n  styleUrls: ['component-context-menu.component.scss'],\n  templateUrl: './component-context-menu.component.html'\n})\nexport class ComponentContextMenuComponent implements AfterViewInit, OnDestroy {\n  /** @ignore */\n  private static MIN_WIDTH = 700;\n  /** @ignore */\n  private static MIN_HEIGHT = 400;\n  /** @ignore */\n  private static LAST_WIDTH = ComponentContextMenuComponent.MIN_WIDTH;\n  /** @ignore */\n  private static LAST_HEIGHT = ComponentContextMenuComponent.MIN_HEIGHT;\n  /** @ignore */\n  private resize = false;\n\n  /** Current width of the dialog */\n  width = ComponentContextMenuComponent.LAST_WIDTH;\n  /** Current height of the dialog */\n  height = ComponentContextMenuComponent.LAST_HEIGHT;\n  /** True if the node details component is loaded */\n  nodeDetailsReady: boolean;\n\n  /** @ignore */\n  @ViewChild('frame') frame: ElementRef;\n\n  /** @ignore */\n  @ViewChild('resizeCorner') set resizeCorner(content: ElementRef) {\n    if (content) {\n      content.nativeElement.addEventListener('mousedown', () => this.resize = true);\n    }\n  }\n\n  /** @ignore */\n  @ViewChild(NodeDetailsComponent) nodeDetails: NodeDetailsComponent;\n\n  constructor(@Inject(COMPONENT_CONTEXT_MENU_DATA) public data: ComponentContextMenuData,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.frame.nativeElement.style.minWidth = ComponentContextMenuComponent.MIN_WIDTH + 'px';\n    this.frame.nativeElement.style.minHeight = ComponentContextMenuComponent.MIN_HEIGHT + 'px';\n    this.nodeDetailsReady = true;\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy(): void {\n    // TODO: Save in local storage?\n    ComponentContextMenuComponent.LAST_WIDTH = this.width;\n    ComponentContextMenuComponent.LAST_HEIGHT = this.height;\n  }\n\n  /** @ignore */\n  detailsCallback: NodeUpdatedCallbackFn = (nodeDeleted: boolean): void => {\n    this.data.graph.reload();\n    if (nodeDeleted) {\n      this.close();\n    }\n  }\n\n  /**\n   * Update the position of the context menu\n   * @param x The X offset of the top left menu corner relative to the top left corner of the parent\n   * @param y The Y offset of the top left menu corner relative to the top left corner of the parent\n   */\n  updatePosition(x: number, y: number): void {\n    this.data.position.offsetX = x;\n    this.data.position.offsetY = y;\n    this.data.overlayRef.getConfig().positionStrategy.apply();\n  }\n\n  /**\n   * Close the context menu\n   */\n  close(): void {\n    this.data.overlayRef.dispose();\n  }\n\n  /** @ignore */\n  @HostListener('window:mouseup')\n  private onMouseUp() {\n    this.resize = false;\n  }\n  \n  /** @ignore */\n  @HostListener('window:mousemove', ['$event'])\n  private onMouseMove(event: MouseEvent) {\n    if (!this.resize) {\n      return;\n    }\n\n    this.width = Math.max(this.width + event.movementX, ComponentContextMenuComponent.MIN_WIDTH);\n    this.height = Math.max(this.height + event.movementY, ComponentContextMenuComponent.MIN_HEIGHT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentNode.html":{"url":"interfaces/ComponentNode.html","title":"interface - ComponentNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         GraphComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentStoreService.html":{"url":"injectables/ComponentStoreService.html","title":"injectable - ComponentStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/component/component-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provides updating, deleting and retrieving components from the backend.\nObjects like updateComponentMutation are injected and were created by a codegenerator based on\nthe mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\nother mutation and query objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createComponent\n                            \n                            \n                                deleteComponent\n                            \n                            \n                                getBasicComponent\n                            \n                            \n                                getComponentInterfaces\n                            \n                            \n                                getComponentLabels\n                            \n                            \n                                getFullComponent\n                            \n                            \n                                updateComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateComponentMutation: UpdateComponentGQL, deleteComponentMutation: DeleteComponentGQL, getFullComponentQuery: GetComponentGQL, createComponentMutation: CreateComponentGQL, getLabelsQuery: GetComponentLabelsGQL, getBasicComponentQuery: GetBasicComponentGQL, getComponentInterfacesQuery: GetComponentInterfacesGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/component/component-store.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateComponentMutation\n                                                  \n                                                        \n                                                                    UpdateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteComponentMutation\n                                                  \n                                                        \n                                                                    DeleteComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullComponentQuery\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createComponentMutation\n                                                  \n                                                        \n                                                                    CreateComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getLabelsQuery\n                                                  \n                                                        \n                                                                    GetComponentLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicComponentQuery\n                                                  \n                                                        \n                                                                    GetBasicComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getComponentInterfacesQuery\n                                                  \n                                                        \n                                                                    GetComponentInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createComponent\n                        \n                    \n                \n            \n            \n                \ncreateComponent(input: CreateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            CreateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComponent\n                        \n                    \n                \n            \n            \n                \ndeleteComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicComponent\n                        \n                    \n                \n            \n            \n                \ngetBasicComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentInterfaces\n                        \n                    \n                \n            \n            \n                \ngetComponentInterfaces(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getComponentLabels\n                        \n                    \n                \n            \n            \n                \ngetComponentLabels(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullComponent\n                        \n                    \n                \n            \n            \n                \ngetFullComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComponent\n                        \n                    \n                \n            \n            \n                \nupdateComponent(input: UpdateComponentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/component/component-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {\n  CreateComponentGQL,\n  CreateComponentInput,\n  DeleteComponentGQL,\n  DeleteComponentInput,\n  GetBasicComponentGQL,\n  GetBasicComponentQuery,\n  GetComponentGQL,\n  GetComponentInterfacesGQL,\n  GetComponentInterfacesQuery,\n  GetComponentLabelsGQL,\n  GetComponentLabelsQuery,\n  GetComponentQuery,\n  UpdateComponentGQL,\n  UpdateComponentInput\n} from 'src/generated/graphql';\nimport {map} from 'rxjs/operators';\n\n/**\n * Provides updating, deleting and retrieving components from the backend.\n * Objects like updateComponentMutation are injected and were created by a codegenerator based on\n * the mutation UpdateComponent in the component.graphql file in this folder. The same hold for the\n * other mutation and query objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentStoreService {\n\n  constructor(private updateComponentMutation: UpdateComponentGQL,\n              private deleteComponentMutation: DeleteComponentGQL,\n              private getFullComponentQuery: GetComponentGQL,\n              private createComponentMutation: CreateComponentGQL,\n              private getLabelsQuery: GetComponentLabelsGQL,\n              private getBasicComponentQuery: GetBasicComponentGQL,\n              private getComponentInterfacesQuery: GetComponentInterfacesGQL) {\n  }\n\n  getComponentLabels(id: string): Observable {\n    return this.getLabelsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getBasicComponent(id: string): Observable {\n    return this.getBasicComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullComponent(id: string): Observable {\n    return this.getFullComponentQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getComponentInterfaces(id: string): Observable {\n    return this.getComponentInterfacesQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  deleteComponent(id: string) {\n    const input: DeleteComponentInput = {\n      component: id\n    };\n    return this.deleteComponentMutation.mutate({input});\n  }\n\n  createComponent(input: CreateComponentInput) {\n    return this.createComponentMutation.mutate({input});\n  }\n\n  updateComponent(input: UpdateComponentInput) {\n    return this.updateComponentMutation.mutate({input});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComponentsService.html":{"url":"injectables/ComponentsService.html","title":"injectable - ComponentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComponentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/components.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getComponent\n                            \n                            \n                                getInterface\n                            \n                            \n                                listProjectComponents\n                            \n                            \n                                listProjectInterfaces\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjectComponents: ListProjectComponentsGQL, qListProjectInterfaces: ListProjectInterfacesGQL, qGetComponent: GetComponentGQL, qGetInterface: GetInterfaceGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/components.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjectComponents\n                                                  \n                                                        \n                                                                    ListProjectComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qListProjectInterfaces\n                                                  \n                                                        \n                                                                    ListProjectInterfacesGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetComponent\n                                                  \n                                                        \n                                                                    GetComponentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetInterface\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getComponent\n                        \n                    \n                \n            \n            \n                \ngetComponent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInterface\n                        \n                    \n                \n            \n            \n                \ngetInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectComponents\n                        \n                    \n                \n            \n            \n                \nlistProjectComponents(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjectInterfaces\n                        \n                    \n                \n            \n            \n                \nlistProjectInterfaces(project: string, list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/components.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  ComponentFilter, ComponentInterfaceFilter,\n  GetComponentGQL, GetInterfaceGQL,\n  ListProjectComponentsGQL, ListProjectInterfacesGQL,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentsService {\n  constructor(\n    private qListProjectComponents: ListProjectComponentsGQL,\n    private qListProjectInterfaces: ListProjectInterfacesGQL,\n    private qGetComponent: GetComponentGQL,\n    private qGetInterface: GetInterfaceGQL,\n  ) {}\n\n  listProjectComponents(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectComponents.fetch({ project, ...list }));\n  }\n\n  listProjectInterfaces(project: string, list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjectInterfaces.fetch({ project, ...list }));\n  }\n\n  getComponent(id: string) {\n    return promisifyApolloFetch(this.qGetComponent.fetch({ id }));\n  }\n\n  getInterface(id: string) {\n    return promisifyApolloFetch(this.qGetInterface.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateComponentData.html":{"url":"interfaces/CreateComponentData.html","title":"interface - CreateComponentData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateComponentData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateComponentDialogComponent.html":{"url":"components/CreateComponentDialogComponent.html","title":"component - CreateComponentDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateComponentDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-component-dialog\n            \n\n            \n                styleUrls\n                ./create-component-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-component-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                queryComponent\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkImsType\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateComponentData, fb: FormBuilder, gs: IssueGraphStateService, componentStore: ComponentStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateComponentData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStore\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkImsType\n                        \n                    \n                \n            \n            \n                \ncheckImsType(returnFromSelect: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    returnFromSelect\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ImsType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, url: string, description: string, ims: string, provider: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ims\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateComponentData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', Validators.required)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.urlValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-component-dialog/create-component-dialog.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {CreateComponentInput, ImsType} from 'src/generated/graphql';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n@Component({\n  selector: 'app-create-component-dialog',\n  templateUrl: './create-component-dialog.component.html',\n  styleUrls: ['./create-component-dialog.component.scss']\n})\nexport class CreateComponentDialogComponent {\n  @Input() projectId: string;\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateComponentData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private componentStore: ComponentStoreService) {\n  }\n\n  // define validations\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationUrl = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationIMS = new FormControl('', [CCIMSValidators.urlValidator, Validators.required]);\n  validationProvider = new FormControl('', Validators.required);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  // close dialog on cancel\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  // callback method for component creation\n  onOkClick(name: string, url: string, description: string, ims: string, provider: string): void {\n    // define the input for the database mutation - required fields are specified by the graphQL schema\n    // TODO: Add component to IMS?\n    const input: CreateComponentInput = {\n      name,\n      projects: [this.data.projectId],\n      description,\n      repositoryURL: url\n    };\n\n    this.queryComponent.listenTo(this.componentStore.createComponent(input), () => this.dialogRef.close());\n  }\n\n  checkImsType(returnFromSelect: string): ImsType {\n    if (returnFromSelect.localeCompare(ImsType.Github) === 0) {\n      return ImsType.Github;\n    }\n  }\n}\n\ninterface CreateComponentData {\n  projectId: string;\n}\n\n    \n\n    \n        \n    Create Component\n    \n        \n            \n                Name\n                \n                Invalid component name\n            \n\n            \n                Repository-URL\n                \n                Enter a valid URL\n            \n\n            \n                Provider Type (IMS)\n                \n                    GitHub\n                \n                Select the Provider\n            \n\n            \n                IMS-URL\n                \n                Enter a valid URL\n            \n\n            \n                Description\n                \n            \n        \n    \n    \n        Cancel\n        \n            \n                Create\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./create-component-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Create Component                                        Name                                Invalid component name                                        Repository-URL                                Enter a valid URL                                        Provider Type (IMS)                                    GitHub                                Select the Provider                                        IMS-URL                                Enter a valid URL                                        Description                                                    Cancel                                    Create                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateComponentDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateEditLabelDialogComponent.html":{"url":"components/CreateEditLabelDialogComponent.html","title":"component - CreateEditLabelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateEditLabelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This dialog creates or edits a label.\nSee CreateEditLabelDialogData for parameters.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-edit-label-dialog-component\n            \n\n            \n                styleUrls\n                ./create-edit-label-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-edit-label-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allComponentsList\n                            \n                            \n                                color\n                            \n                            \n                                componentList\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                loading\n                            \n                            \n                                validationLabelDescription\n                            \n                            \n                                validationLabelName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmClick\n                            \n                            \n                                onLabelCancelClick\n                            \n                            \n                                randomizeColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialogRef, dataService: DataService, data: CreateEditLabelDialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateEditLabelDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmClick\n                        \n                    \n                \n            \n            \n                \nonConfirmClick(name: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:123\n                \n            \n\n\n            \n                \n                    When the user confirms their changes, attempt to mutate and return with the label data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLabelCancelClick\n                        \n                    \n                \n            \n            \n                \nonLabelCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:118\n                \n            \n\n\n            \n                \n                    When the user cancels label creation or editing, close and return with null.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeColor\n                        \n                    \n                \n            \n            \n                \nrandomizeColor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:163\n                \n            \n\n\n            \n                \n                    Randomizes the label color.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allComponentsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:43\n                        \n                    \n\n            \n                \n                    Source list of all components.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#000000'\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:36\n                        \n                    \n\n            \n                \n                    Color state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NodeId[] | ListId\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateEditLabelDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:38\n                        \n                    \n\n            \n                \n                    If true, the label that is to be edited is still loading.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:34\n                        \n                    \n\n            \n                \n                    Validator for the label description.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationLabelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, Validators.maxLength(30)])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts:32\n                        \n                    \n\n            \n                \n                    Validator for the label name.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n    \n        \n  \n    Update label\n  \n  \n    Create a new label\n  \n\n\n  \n    Components\n    Assign the label to a component\n    \n      {{item.name}}\n    \n  \n\n  \n    Label Name\n    \n    Invalid name\n  \n\n  \n    Description\n    \n  \n\n  \n    Color\n    \n    \n      refresh\n    \n  \n\n\n\n  Cancel\n  \n    \n      Apply\n    \n    \n      Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-edit-label-dialog.component.scss\n                \n                .component-selector {\n  margin-bottom: 16px;\n}\n\n.new-label-input {\n  padding: 6px;\n  width: 100%;\n}\n\n.error-label-create {\n  background-color: rgb(204, 58, 58);\n  color: white;\n  margin-top: 5px;\n}\n\n.color-randomize-button {\n  margin-left: 4px;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n.actions {\n  float: right;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Update label        Create a new label        Components    Assign the label to a component          {{item.name}}            Label Name        Invalid name        Description            Color              refresh        Cancel            Apply              Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateEditLabelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateEditLabelDialogData.html":{"url":"interfaces/CreateEditLabelDialogData.html","title":"interface - CreateEditLabelDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateEditLabelDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Parameters for the create/edit label dialog component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            editExisting\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueId\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        editExisting\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editExisting:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will edit an existing label instead of creating a new one.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueId:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, will select all components of this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The raw project id.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\nimport {encodeNodeId, ListId, ListType, NodeId} from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport { ComponentFilter, Label } from '../../../generated/graphql-dgql';\n\n/** Parameters for the create/edit label dialog component. */\nexport interface CreateEditLabelDialogData {\n  /** The raw project id. */\n  projectId: NodeId;\n  /** If set, will edit an existing label instead of creating a new one. */\n  editExisting?: NodeId;\n  /** If set, will select all components of this issue */\n  issueId?: NodeId[];\n}\n\n/**\n * This dialog creates or edits a label.\n *\n * See {@link CreateEditLabelDialogData} for parameters.\n */\n@Component({\n  selector: 'app-create-edit-label-dialog-component',\n  templateUrl: './create-edit-label-dialog.component.html',\n  styleUrls: ['./create-edit-label-dialog.component.scss']\n})\nexport class CreateEditLabelDialogComponent implements OnInit {\n  /** Validator for the label name. */\n  validationLabelName = new FormControl('', [Validators.required, Validators.maxLength(30)]);\n  /** Validator for the label description. */\n  validationLabelDescription = new FormControl('', CCIMSValidators.contentValidator);\n  /** Color state. */\n  color = '#000000';\n  /** If true, the label that is to be edited is still loading. */\n  loading = false;\n\n  /** Component list to be edited. For new labels, this is a list of node IDs. For existing labels, this is a ListId. */\n  componentList: NodeId[] | ListId = [];\n  /** Source list of all components. */\n  allComponentsList: ListId;\n\n  constructor(private dialog: MatDialogRef,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateEditLabelDialogData,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit() {\n    if (this.data.editExisting) {\n      this.componentList = {\n        node: this.data.editExisting,\n        type: ListType.Components\n      };\n\n      this.loading = true;\n      const node = this.dataService.getNode(this.data.editExisting);\n      // reload data from source\n      node.invalidate();\n      node.load();\n      node.dataAsPromise().then(data => {\n        this.validationLabelName.setValue(data.name);\n        this.color = data.color;\n        this.validationLabelDescription.setValue(data.description);\n      }).catch(error => {\n        this.notify.notifyError('Could not load label data for editing');\n        this.dialog.close(null);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.randomizeColor();\n\n      if (this.data.issueId) {\n        this.componentList = this.data.issueId;\n      }\n    }\n\n    this.allComponentsList = {\n      node: this.data.projectId,\n      type: ListType.Components\n    };\n  }\n\n  /** @ignore used for set editor */\n  makeComponentFilter(search): ComponentFilter {\n    return { name: search };\n  }\n  /** @ignore used for set editor */\n  applyComponentChangeset = async (additions: NodeId[], deletions: NodeId[]) => {\n    if (Array.isArray(this.componentList)) {\n      const keySet = new Set(this.componentList.map(id => encodeNodeId(id)));\n      for (const item of additions) {\n        if (!keySet.has(encodeNodeId(item))) {\n          this.componentList.push(item);\n          keySet.add(encodeNodeId(item));\n        }\n      }\n      for (const item of deletions) {\n        if (keySet.has(encodeNodeId(item))) {\n          this.componentList.splice(this.componentList.indexOf(item), 1);\n          keySet.delete(encodeNodeId(item));\n        }\n      }\n    } else {\n      for (const item of additions) {\n        await this.dataService.mutations.addLabelToComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n      for (const item of deletions) {\n        await this.dataService.mutations.removeLabelFromComponent(Math.random().toString(), this.data.editExisting, item);\n      }\n    }\n  }\n\n  /** When the user cancels label creation or editing, close and return with null. */\n  onLabelCancelClick(): void {\n    this.dialog.close(null);\n  }\n\n  /** When the user confirms their changes, attempt to mutate and return with the label data. */\n  onConfirmClick(name: string, description?: string) {\n    this.loading = true;\n\n    if (this.data.editExisting) {\n      this.dataService.mutations.updateLabel(\n        Math.random().toString(),\n        this.data.editExisting,\n        name,\n        this.color,\n        description\n      ).then(() => {\n        this.dialog.close({\n          id: this.data.editExisting.id,\n          name,\n          color: this.color,\n          description\n        } as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to update label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    } else {\n      this.dataService.mutations.createLabel(\n        Math.random().toString(),\n        this.componentList as NodeId[],\n        name,\n        this.color,\n        description\n      ).then(created => {\n        this.dialog.close(created as Label);\n      }).catch((error) => {\n        this.notify.notifyError('Failed to create label!', error);\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  }\n\n  /** Randomizes the label color. */\n  randomizeColor(): void {\n    const r = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const g = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n    const b = ('00' + (Math.random() * 0xFF).toString(16)).slice(-2);\n\n    this.color = '#' + r + g + b;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateInterfaceData.html":{"url":"interfaces/CreateInterfaceData.html","title":"interface - CreateInterfaceData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateInterfaceData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateInterfaceDialogComponent.html":{"url":"components/CreateInterfaceDialogComponent.html","title":"component - CreateInterfaceDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateInterfaceDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-interface-dialog\n            \n\n            \n                styleUrls\n                ./create-interface-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-interface-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: CreateInterfaceData, fb: FormBuilder, gs: IssueGraphStateService, authService: AuthenticationService, interfaceStore: InterfaceStoreService, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CreateInterfaceData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStore\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateInterfaceData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, Input} from '@angular/core';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {AuthenticationService} from '@app/auth/authentication.service';\nimport {IssueGraphStateService} from '@app/data/issue-graph/issue-graph-state.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n@Component({\n  selector: 'app-create-interface-dialog',\n  templateUrl: './create-interface-dialog.component.html',\n  styleUrls: ['./create-interface-dialog.component.scss']\n})\nexport class CreateInterfaceDialogComponent {\n  @Input()\n  projectId: string;\n\n  public loading: boolean;\n  public saveFailed: boolean;\n  validationName = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: CreateInterfaceData,\n              private fb: FormBuilder,\n              private gs: IssueGraphStateService,\n              private authService: AuthenticationService,\n              private interfaceStore: InterfaceStoreService,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onOkClick(name: string, description: string, type: string): void {\n    this.loading = true;\n\n    // db mutation to create an interface\n    this.interfaceStore.create(name, this.data.offeredById, description).subscribe(({data}) => {\n      this.loading = false;\n\n      // close dialog and return the interface id of the created dialog\n      this.dialogRef.close(data.createComponentInterface.componentInterface.id);\n    }, (error) => {\n      this.notify.notifyError('Failed to create interface!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n}\n\nexport interface CreateInterfaceData {\n  position: { x: number, y: number };\n  offeredById: string;\n}\n\n    \n\n    \n        \n  Create Interface\n  \n    \n      \n        Name\n        \n        Invalid interface name\n      \n\n      \n        Interface-Type\n        \n      \n\n      \n        Description\n        \n      \n\n      \n    \n  \n  \n    Cancel\n    Create\n    \n  \n\n\n    \n\n    \n                \n                    ./create-interface-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.dialog-wrapper {\n  max-width: 600px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create Interface                    Name                Invalid interface name                    Interface-Type                            Description                                Cancel    Create      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateInterfaceDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateIssueDialogComponent.html":{"url":"components/CreateIssueDialogComponent.html","title":"component - CreateIssueDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateIssueDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-issue-dialog\n            \n\n            \n                styleUrls\n                ./create-issue-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-issue-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                category\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                issueData\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onCreate\n                            \n                            \n                                onNoClick\n                            \n                            \n                                    Private\n                                updateSelectedItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, dataService: DataService, data: DialogData, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreate\n                        \n                    \n                \n            \n            \n                \nonCreate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick(showConfirmDialog: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    showConfirmDialog\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateSelectedItems\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Updates items to be selected in the Create Issue page,\nincluding 1) components and 2) locations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('body')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocalIssueData\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n    \n        \nCreate Issue\n\n\n\n  \n\n    \n    \n      Title\n      \n      Invalid issue title\n    \n\n    \n    \n\n    \n    \n      \n        \n        Unclassified\n      \n      \n        \n        Bug\n      \n      \n        \n        Feature Request\n      \n    \n\n    \n    \n\n    \n    \n  \n\n\n\n\n\n\n  \n   0 || title.value.length > 0)\">\n    Cancel\n  \n\n  \n  Create\n  \n\n\n    \n\n    \n                \n                    ./create-issue-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n@keyframes spinner {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Issue                Title            Invalid issue title                                          Unclassified                            Bug                            Feature Request                                 0 || title.value.length > 0)\">    Cancel      Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateIssueDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateProjectDialogComponent.html":{"url":"components/CreateProjectDialogComponent.html","title":"component - CreateProjectDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateProjectDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides a dialog for the project creation\nThe user can set a name and description\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-project-dialog\n            \n\n            \n                styleUrls\n                ./create-project-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-project-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                descriptionValidator\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                nameValidator\n                            \n                            \n                                    Public\n                                saveFailed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterAlertClose\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onOkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, ps: ProjectStoreService, fb: FormBuilder, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterAlertClose\n                        \n                    \n                \n            \n            \n                \nafterAlertClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOkClick\n                        \n                    \n                \n            \n            \n                \nonOkClick(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        descriptionValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/create-project-dialog/create-project-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder, FormControl, Validators} from '@angular/forms';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {CCIMSValidators} from \"@app/utils/validators\";\n\n/**\n * This component provides a dialog for the project creation\n * The user can set a name and description\n *\n */\n@Component({\n  selector: 'app-create-project-dialog',\n  templateUrl: './create-project-dialog.component.html',\n  styleUrls: ['./create-project-dialog.component.scss']\n})\nexport class CreateProjectDialogComponent {\n  @Input() name: string;\n  @Input() description: string;\n  public loading: boolean;\n  public saveFailed: boolean;\n\n  constructor(public dialogRef: MatDialogRef,\n              private ps: ProjectStoreService,\n              private fb: FormBuilder,\n              private notify: UserNotifyService) {\n    this.loading = false;\n  }\n\n  nameValidator = new FormControl('', [CCIMSValidators.nameFormatValidator, Validators.required]);\n  descriptionValidator = new FormControl('', CCIMSValidators.contentValidator);\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  // after the user clicked on the create button the project creation mutation is fired\n  onOkClick(name: string, description: string): void {\n    this.loading = true;\n    this.ps.create(name, description).subscribe(({data}) => {\n      this.loading = false;\n      this.dialogRef.close({createdProjectId: data.createProject.project.id});\n    }, (error) => {\n      this.notify.notifyError('Failed to create project!', error);\n      this.loading = false;\n      this.saveFailed = true;\n    });\n  }\n}\n\n    \n\n    \n        \nCreate Project\n\n\n\n\n  \n\n    \n    \n      Name\n      \n      \n        Invalid project name\n      \n    \n\n    \n    \n      Description\n      \n      Invalid project description\n    \n\n    \n    \n  \n\n\n\n\n\n  \n  \n    Cancel\n  \n  \n  \n  \n    Create\n  \n\n\n\n    \n\n    \n                \n                    ./create-project-dialog.component.scss\n                \n                @import 'src/styles/dialog';\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Create Project                Name                    Invalid project name                        Description            Invalid project description                      Cancel            Create  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CreateProjectDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CursorPaginatorComponent.html":{"url":"components/CursorPaginatorComponent.html","title":"component - CursorPaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CursorPaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/cursor-paginator/cursor-paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component controls the cursor in a DataList using arrows and a page size selector.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cursor-paginator\n            \n\n            \n                styleUrls\n                ./cursor-paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cursor-paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                pageSizes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:14\n                            \n                        \n                \n                    \n                        The DataList that will be controlled.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pageSizes\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/cursor-paginator/cursor-paginator.component.ts:16\n                            \n                        \n                \n                    \n                        Available page sizes; e.g. [10, 25, 100]\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataList } from '@app/data-dgql/query';\n\n/**\n * This component controls the cursor in a {@link DataList} using arrows and a page size selector.\n */\n@Component({\n  selector: 'app-cursor-paginator',\n  templateUrl: './cursor-paginator.component.html',\n  styleUrls: ['./cursor-paginator.component.scss']\n})\nexport class CursorPaginatorComponent {\n  /** The DataList that will be controlled. */\n  @Input() list: DataList;\n  /** Available page sizes; e.g. [10, 25, 100] */\n  @Input() pageSizes: number[];\n}\n\n    \n\n    \n        \n     1\">\n        Items per page:\n        \n            \n                \n                    {{size}}\n                \n            \n        \n    \n    \n        \n            first_page\n        \n        \n            chevron_left\n        \n        \n            chevron_right\n        \n    \n\n\n    \n\n    \n                \n                    ./cursor-paginator.component.scss\n                \n                .cursor-paginator {\n  display: flex;\n  justify-content: flex-end;\n  color: fade-in(black, 0.54);\n  padding: 8px 16px;\n\n  .page-size-control {\n    margin-right: 16px;\n\n    .page-size-label {\n      margin-right: 8px;\n      font-size: 12px;\n    }\n\n    .page-size-select {\n      width: 64px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     1\">        Items per page:                                                        {{size}}                                                                first_page                            chevron_left                            chevron_right            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'CursorPaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataNode.html":{"url":"classes/DataNode.html","title":"class - DataNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A cacheable node with no parameters.\nSee DataQuery for more information, and DataService to obtain a DataNode.\nNodes are identified by a NodeId.\nExample\n\n  Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n  Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n  \n    Thing data: {{thing.something}}\n  \nclass ExampleComponent implements OnInit, OnDestroy {\n  @Input() thingId: NodeId;\n\n  public thing$: DataNode;\n  public thingSub: Subscription; // subscription to thing$\n\n  constructor(private dataService: DataService) {}}\n\n  ngOnInit() {\n    // obtain the DataNode from the data service\n    this.thing$ = this.dataService.getNode(this.thingId);\n\n    // subscribe to indicate that we want some data\n    this.thingSub = this.thing$.subscribe();\n  }\n\n  ngOnDestroy() {\n    // remember to unsubscribe!!\n    this.thingSub.unsubscribe();\n  }\n}\n            \n\n            \n                Extends\n            \n            \n                        DataQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIfNeeded\n                            \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    params\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:56\n\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:145\n\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         DataQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         DataQuery:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:385\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:179\n\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:234\n\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:264\n\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:225\n\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:253\n\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Inherited from         DataQuery\n\n                \n            \n            \n                \n                        Defined in         DataQuery:295\n\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n\n                \n                    \n                        setparams(p)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:381\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam I - ID type (e.g. NodeId or ListId)\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /**\n   * @ignore\n   * Private: this is the currently loaded data, externally accessible via .current.\n   */\n  protected currentData?: T;\n  /**\n   * @ignore\n   * Private: this is the time the data was last loaded, to compare against the cache invalidation\n   * timeout. This is a millisecond epoch timestamp from Date.now().\n   */\n  protected lastLoadTime = 0;\n  /**\n   * @ignore\n   * Private: this flag may be set by subclasses to avoid having writes to .params load any data.\n   */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /**\n   * @ignore\n   * The current query parameters, externally accessible via .params.\n   */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /**\n   * @ignore\n   * Private: set of all subscribers to this data. This set is used to send updates.\n   */\n  protected subscribers: Set> = new Set();\n  // FIXME: innerQuery/MapFn is a bit inelegant; it may be possible to refactor this\n  /**\n   * @ignore\n   * Private: this is the inner query function that actually loads the data, provided by a subclass.\n   */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /**\n   * @ignore\n   * Private: this function maps data returned by the inner query into our format, if necessary.\n   */\n  protected innerMapFn: (r: R) => T;\n  /**\n   * @ignore\n   * Private: this is a simple counter used to determine whether the result of a load operation is\n   * still relevant.\n   */\n  protected stateLock = 0;\n  /**\n   * @ignore\n   * Private: this is a javascript timeout ID set when doing debounced loading.\n   */\n  protected loadTimeout = null;\n  /**\n   * @ignore\n   * Private: if true, the data will be hydrated (see {@link DataList#hydrateInitial}) and we should\n   * *not* trigger a load when a subscriber is added, until we have received the hydration.\n   */\n  protected hydrated = false;\n  /**\n   * @ignore\n   * Private: if true, the next call to subscribe will add a lazy subscriber.\n   * The flag will be reset automatically. Used in subscribeLazy.\n   */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  protected constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   * Private: the actual implementation of the load function.\n   */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /**\n   * @ignore\n   * Private: callback for adding a new subscriber.\n   */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /**\n   * @ignore\n   * Internal: will send an update with the current data (.current) to all subscribers.\n   */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /**\n   * @ignore\n   * Internal: will send the given error to all subscribers.\n   */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /**\n   * @ignore\n   * Updates current data with a result from innerQueryFn, and emits an update.\n   */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), data => data);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  // these are all just the private versions of the corresponding list properties.\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n\n  /**\n   * @ignore\n   * Private: page info for the currently loaded data.\n   */\n  private pageInfo?: PageInfo;\n  /**\n   * @ignore\n   * Private: accessible via .totalCount (read-only)\n   */\n  private pTotalCount?: number;\n  /**\n   * @ignore\n   * Private: used to correct hasPrevious/NextPage when receiving data.\n   */\n  private previouslyHadPageContents = false;\n  /**\n   * @ignore\n   * Private: pointer to the global node cache, used to insert results.\n   */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataQuery.html":{"url":"classes/DataQuery.html","title":"class - DataQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                A piece of observable data.\nDataQuery is a stateful interface for interacting with an API object.\nInstead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\nrequest parameters (in #params) of the data you want, and will automatically load the data when needed.\nData can then be accessed synchronously with the #current property.\nUpon adding a subscriber with #subscribe, data will loaded from the API and stored in the\ncache. Subsequent viewers can then immediately access the cached data.\n\nTo check if data is loaded, use #hasData,\nand to check if data is still loading, use #loading.\nTo (re-)load the data from the API, use #load.\nThis happens automatically upon subscription after a sufficient delay (see debounce time constants).\nTo add a subscriber without triggering this behavior, use #subscribeLazy, which will\nonly make an API request if the data is not cached.\nTo invalidate (i.e. delete) the cached data, use #invalidate.\nIf you only need the data right now and don't want to deal with subscriptions, use #dataAsPromise\nto access it as a promise that will either return cached data or load new data.\n\nWhen done using a DataQuery subscription, it must be manually destroyed by calling\nsub.unsubscribe() on the Subscription object returned by\nsubscribe, as it may leak memory otherwise.\nSee DataNode and DataList for the two main types of data that use DataQuery.\n\n            \n\n            \n                Extends\n            \n            \n                    Observable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                interactive\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dataAsPromise\n                            \n                            \n                                hydrateRaw\n                            \n                            \n                                invalidate\n                            \n                            \n                                load\n                            \n                            \n                                loadDebounced\n                            \n                            \n                                loadIfNeeded\n                            \n                            \n                                subscribeLazy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasData\n                                \n                                \n                                    current\n                                \n                                \n                                    params\n                                \n                                \n                                    subscriberCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     I\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:56\n                        \n                    \n\n            \n                \n                    The ID of this data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:145\n                        \n                    \n\n            \n                \n                    If true, will prolong debounce time a bit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataAsPromise\n                        \n                    \n                \n            \n            \n                \ndataAsPromise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:179\n                \n            \n\n\n            \n                \n                    Returns the data as a promise, without having to create a subscription.\nIf cached data is available, this will return the data immediately; otherwise, this will\nload the data with an API request.\nExample\nconst node = dataService.getNode(someNodeId);\nnode.dataAsPromise().then(data => {\n  console.log('node data:', data);\n}).catch(error => console.error('oh no'));\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hydrateRaw\n                        \n                    \n                \n            \n            \n                \nhydrateRaw(preparedData: Promise)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:234\n                \n            \n\n\n            \n                \n                    Use when data has not yet been loaded but is available from elsewhere.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    preparedData\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidate\n                        \n                    \n                \n            \n            \n                \ninvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:264\n                \n            \n\n\n            \n                \n                    Deletes current data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:225\n                \n            \n\n\n            \n                \n                    Loads data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDebounced\n                        \n                    \n                \n            \n            \n                \nloadDebounced(interactive)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:253\n                \n            \n\n\n            \n                \n                    Loads data after a short delay. Will debounce.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    interactive\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.interactive\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIfNeeded\n                        \n                    \n                \n            \n            \n                \nloadIfNeeded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:243\n                \n            \n\n\n            \n                \n                    Will load data if it's stale or not present.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeLazy\n                        \n                    \n                \n            \n            \n                \nsubscribeLazy(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:295\n                \n            \n\n\n            \n                \n                    Will subscribe to the data, but not cause a reload unless there is no data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        passed verbatim to #subscribe\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hasData\n                    \n                \n\n                \n                    \n                        gethasData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:76\n                                \n                            \n                    \n                        \n                                Returns true if data is currently available.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        current\n                    \n                \n\n                \n                    \n                        getcurrent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:81\n                                \n                            \n                    \n                        \n                                The currently loaded data.\n\n\n                                \n                                    Returns :     T\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        params\n                    \n                \n\n                \n                    \n                        getparams()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:94\n                                \n                            \n                    \n                        \n                                Parameters that will be passed to the request.\nChanging this property will automatically trigger a load.\n\n\n                                \n                                    Returns :     P | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setparams(p: P)\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:97\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            p\n                                                    \n                                                            \n                                                                        P\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        subscriberCount\n                    \n                \n\n                \n                    \n                        getsubscriberCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/data-dgql/query.ts:330\n                                \n                            \n                    \n                        \n                                Returns the number of subscribers for this data.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam I - ID type (e.g. NodeId or ListId)\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /**\n   * @ignore\n   * Private: this is the currently loaded data, externally accessible via .current.\n   */\n  protected currentData?: T;\n  /**\n   * @ignore\n   * Private: this is the time the data was last loaded, to compare against the cache invalidation\n   * timeout. This is a millisecond epoch timestamp from Date.now().\n   */\n  protected lastLoadTime = 0;\n  /**\n   * @ignore\n   * Private: this flag may be set by subclasses to avoid having writes to .params load any data.\n   */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /**\n   * @ignore\n   * The current query parameters, externally accessible via .params.\n   */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /**\n   * @ignore\n   * Private: set of all subscribers to this data. This set is used to send updates.\n   */\n  protected subscribers: Set> = new Set();\n  // FIXME: innerQuery/MapFn is a bit inelegant; it may be possible to refactor this\n  /**\n   * @ignore\n   * Private: this is the inner query function that actually loads the data, provided by a subclass.\n   */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /**\n   * @ignore\n   * Private: this function maps data returned by the inner query into our format, if necessary.\n   */\n  protected innerMapFn: (r: R) => T;\n  /**\n   * @ignore\n   * Private: this is a simple counter used to determine whether the result of a load operation is\n   * still relevant.\n   */\n  protected stateLock = 0;\n  /**\n   * @ignore\n   * Private: this is a javascript timeout ID set when doing debounced loading.\n   */\n  protected loadTimeout = null;\n  /**\n   * @ignore\n   * Private: if true, the data will be hydrated (see {@link DataList#hydrateInitial}) and we should\n   * *not* trigger a load when a subscriber is added, until we have received the hydration.\n   */\n  protected hydrated = false;\n  /**\n   * @ignore\n   * Private: if true, the next call to subscribe will add a lazy subscriber.\n   * The flag will be reset automatically. Used in subscribeLazy.\n   */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  protected constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   * Private: the actual implementation of the load function.\n   */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /**\n   * @ignore\n   * Private: callback for adding a new subscriber.\n   */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /**\n   * @ignore\n   * Internal: will send an update with the current data (.current) to all subscribers.\n   */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /**\n   * @ignore\n   * Internal: will send the given error to all subscribers.\n   */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /**\n   * @ignore\n   * Updates current data with a result from innerQueryFn, and emits an update.\n   */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), data => data);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  // these are all just the private versions of the corresponding list properties.\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n\n  /**\n   * @ignore\n   * Private: page info for the currently loaded data.\n   */\n  private pageInfo?: PageInfo;\n  /**\n   * @ignore\n   * Private: accessible via .totalCount (read-only)\n   */\n  private pTotalCount?: number;\n  /**\n   * @ignore\n   * Private: used to correct hasPrevious/NextPage when receiving data.\n   */\n  private previouslyHadPageContents = false;\n  /**\n   * @ignore\n   * Private: pointer to the global node cache, used to insert results.\n   */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/index.ts\n        \n\n\n            \n                Description\n            \n            \n                The data service provides access to the backend API.\nIt provides automatic caching of data to reducing unnecessary requests, and a mutation API that\nautomatically propagates updates to all observers of affected data.\nTo get data, use #getNode and #getList. To mutate data, use #mutations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mutations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getList\n                            \n                            \n                                getNode\n                            \n                            \n                                invalidateLists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/index.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getList\n                        \n                    \n                \n            \n            \n                \ngetList(id: ListId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Returns a new DataList for the given ListId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidateLists\n                        \n                    \n                \n            \n            \n                \ninvalidateLists(selector: ListId | ListType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/index.ts:45\n                \n            \n\n\n            \n                \n                    Invalidates all lists with the given id or type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selector\n                                    \n                                                ListId | ListType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mutations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Mutations\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/index.ts:30\n                        \n                    \n\n            \n                \n                    Data mutations.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { NodeId, ListId, ListType, encodeListId, decodeListId, ListIdEnc } from './id';\nimport { Injectable } from '@angular/core';\nimport { QueriesService } from './queries/queries.service';\nimport { DataNode, DataList, NodeCache } from './query';\nimport { Mutations } from '@app/data-dgql/mutate';\n\n/**\n * The data service provides access to the backend API.\n * It provides automatic caching of data to reducing unnecessary requests, and a mutation API that\n * automatically propagates updates to all observers of affected data.\n *\n * To get data, use {@link #getNode} and {@link #getList}. To mutate data, use {@link #mutations}.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport default class DataService {\n  /**\n   * @ignore\n   * Internal: node cache. You probably do not need to use this directly.\n   */\n  nodes: NodeCache;\n  /**\n   * @ignore\n   * internal: list of all lists. You probably do not need to use this directly.\n   */\n  lists: Map>> = new Map();\n\n  /** Data mutations. */\n  mutations: Mutations;\n\n  constructor(\n    private queries: QueriesService\n  ) {\n    this.nodes = new NodeCache(queries);\n    this.mutations = new Mutations(queries, this.nodes, this.invalidateLists.bind(this));\n  }\n\n  /** Returns the {@link DataNode} for the given {@link NodeId}. */\n  getNode(id: NodeId): DataNode {\n    return this.nodes.getNode(id);\n  }\n\n  /** Invalidates all lists with the given id or type. */\n  invalidateLists(selector: ListId | ListType) {\n    if (typeof selector === 'object') {\n      const id = encodeListId(selector);\n      if (!this.lists.has(id)) {\n        return;\n      }\n      const lists = this.lists.get(id);\n      for (const list of lists) {\n        if (list.subscriberCount) {\n          // invalidating the list causes layout changes we might not want (e.g. emptying a list)\n          // list.invalidate();\n          list.loadDebounced();\n        }\n      }\n    } else {\n      for (const [id, lists] of this.lists) {\n        if (decodeListId(id).type === selector) {\n          for (const list of lists) {\n            if (list.subscriberCount) {\n              list.loadDebounced();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** Returns a new {@link DataList} for the given {@link ListId}. */\n  getList(id: ListId): DataList {\n    const encodedId = encodeListId(id);\n    const list = new DataList(this.queries, this.nodes, id);\n    if (!this.lists.has(encodedId)) {\n      this.lists.set(encodedId, new Set());\n    }\n    this.lists.get(encodedId).add(list);\n    return list;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface that defines what data is injected to the dialog.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            locations\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        locations:         NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { FormControl, Validators } from '@angular/forms';\nimport { IssueCategory } from '../../../generated/graphql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { CCIMSValidators } from '@app/utils/validators';\nimport { CreateIssueInput } from '../../../generated/graphql-dgql';\nimport { NodeId, NodeType } from '@app/data-dgql/id';\nimport DataService from '@app/data-dgql';\nimport {LocalIssueData} from '@app/issue-detail/issue-sidebar.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\n\n@Component({\n  selector: 'app-create-issue-dialog',\n  templateUrl: './create-issue-dialog.component.html',\n  styleUrls: ['./create-issue-dialog.component.scss']\n})\n/**\n * This component opens a dialog for the issue creation.\n */\nexport class CreateIssueDialogComponent implements OnInit {\n  @ViewChild('body') body;\n\n  public loading = false;\n  public saveFailed = false;\n\n  constructor(public dialogRef: MatDialogRef,\n              private dialog: MatDialog,\n              private dataService: DataService,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private notify: UserNotifyService\n  ) {\n  }\n\n  // form controls for the form fields\n  title = new FormControl('', [CCIMSValidators.nameValidator, Validators.required]);\n  category = new FormControl('', [Validators.required]);\n\n  public issueData: LocalIssueData = {\n    components: [],\n    locations: [],\n    labels: [],\n    assignees: [],\n    linksToIssues: [],\n  };\n\n  ngOnInit(): void {\n    // sets up the issue category as Unclassified\n    this.category.setValue(IssueCategory.Unclassified);\n    this.dialogRef.disableClose = true;\n\n    // updates items to be selected\n    this.updateSelectedItems();\n  }\n\n  /**\n   * Updates items to be selected in the Create Issue page,\n   * including 1) components and 2) locations.\n   */\n  private updateSelectedItems() {\n    // updates components\n    for (const componentId of this.data.components) {\n      this.issueData.components.push(componentId);\n      this.issueData.locations.push(componentId);\n    }\n\n    if (this.data.locations) {\n      // updates locations\n      for (const componentId of this.data.locations) {\n        this.issueData.locations.push(componentId);\n      }\n    }\n  }\n\n  onNoClick(showConfirmDialog: boolean): void {\n    if (showConfirmDialog) {\n      this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really discard issue?',\n            messages: ['Are you sure you want to discard this issue?'],\n            confirmButtonText: 'Confirm'\n          }\n        }).afterClosed().subscribe((close) => {\n        if (close) {\n          this.dialogRef.close();\n        }\n      });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  afterAlertClose(): void {\n    this.saveFailed = false;\n  }\n\n  onCreate() {\n    const issueData: CreateIssueInput = {\n      title: this.title.value,\n      body: this.body.code,\n      category: this.category.value,\n      clientMutationID: Math.random().toString(36),\n      components: this.issueData.components.map(node => node.id),\n      locations: this.issueData.locations.map(node => node.id),\n      labels: this.issueData.labels.map(node => node.id),\n      assignees: this.issueData.assignees.map(node => node.id),\n    };\n    this.loading = true;\n    this.saveFailed = false;\n    this.dataService.mutations.createIssue(issueData).then(async result => {\n      const issueId = { type: NodeType.Issue, id: result.id };\n      const promises = [];\n      for (const linked of this.issueData.linksToIssues) {\n        promises.push(this.dataService.mutations.linkIssue(Math.random().toString(), issueId, linked).catch(err => {\n          this.notify.notifyError('Failed to link issue!', err);\n          // aborting on this error would cause weird non-recoverable state so we won't rethrow it\n        }));\n      }\n      await Promise.all(promises);\n\n      this.dialogRef.close(true);\n    }).catch(err => {\n      this.notify.notifyError('Failed to create issue!', err);\n      this.saveFailed = true;\n    }).finally(() => {\n      this.loading = false;\n    });\n  }\n}\n\n/**\n * Interface that defines what data is injected to the dialog.\n */\nexport interface DialogData {\n  projectId: string;\n  // initial state of the issue's component list\n  components: NodeId[];\n  // initial state of the issue's location list\n  locations: NodeId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dialogs/remove-dialog/remove-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            confirmButtonText\n                                        \n                                \n                                \n                                        \n                                            messages\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verificationName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows this text as the text in the confirm button. If not set, button shows 'Delete'\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        messages:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The list of lines shown in the dialog. If a line starts with a space, the line will be indented\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, shows a text box that forces the user to type the specified text before being able to click the confirm button\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterSelection.html":{"url":"interfaces/FilterSelection.html","title":"interface - FilterSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            labels\n                                        \n                                \n                                \n                                        \n                                            texts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        labels\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        labels:         FilterLabel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterLabel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texts:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterState.html":{"url":"interfaces/FilterState.html","title":"interface - FilterState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/shared.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            selectedCategories\n                                        \n                                \n                                \n                                        \n                                            selectedFilter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCategories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedCategories:         SelectedCategories\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SelectedCategories\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedFilter:         FilterSelection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterSelection\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IssueCategory } from 'src/generated/graphql';\nimport { FilterSelection } from './label-search/label-search.component';\n\ntype EnumDictionary = {\n  [K in T]: U;\n};\n\nexport type SelectedCategories = EnumDictionary;\n\nexport interface FilterState {\n  selectedCategories: SelectedCategories;\n  selectedFilter: FilterSelection;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameComponent.html":{"url":"components/FrameComponent.html","title":"component - FrameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FrameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/frame/frame.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component holds the 'frame' of the application\ncontaining the top bar, the side bar and the main container\ninto which individual views are rendered based on the url.\nIt also bridges between top bar and side menu:\n When the user clicks the menu icon in the topbar, this is communicated to\nthe navigation drawer via this.showDrawer\nThe component itself checks whether the user is currently in a project\nand passes this information down to the sidebar and topbar. It also checks the\ndisplay size and makes the side menu an overlay when on handset size.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-frame\n            \n\n            \n                styleUrls\n                ./frame.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./frame.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                isProjectSet$\n                            \n                            \n                                    Public\n                                showDrawer\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareRoute\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/frame/frame.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        prepareRoute\n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/frame/frame.component.ts:45\n                \n            \n\n\n            \n                \n                    When user clicks sandwich this.showDrawer boolean changes value.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isProjectSet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showDrawer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/frame/frame.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { StateService } from '@app/state.service';\nimport { RouterOutlet } from '@angular/router';\nimport { slider } from '../route-animations';\n\n/**\n * This component holds the 'frame' of the application\n * containing the top bar, the side bar and the main container\n * into which individual views are rendered based on the url.\n * It also bridges between top bar and side menu:\n *  When the user clicks the menu icon in the topbar, this is communicated to\n * the navigation drawer via this.showDrawer\n * The component itself checks whether the user is currently in a project\n * and passes this information down to the sidebar and topbar. It also checks the\n * display size and makes the side menu an overlay when on handset size.\n */\n@Component({\n  selector: 'app-frame',\n  templateUrl: './frame.component.html',\n  styleUrls: ['./frame.component.scss'],\n  animations: [slider]\n})\nexport class FrameComponent {\n  public isProjectSet$ = new BehaviorSubject(false);\n  public showDrawer = true;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver, public ss: StateService) {\n    ss.state$.pipe(\n      map(state => (state.project != null))\n    ).subscribe(this.isProjectSet$);\n  }\n\n  /**\n   * When user clicks sandwich this.showDrawer boolean changes value.\n   */\n  toggleMenu(): void {\n    this.showDrawer = !this.showDrawer;\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n  \n  \n    \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./frame.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n  grid-column: 1 / 2;\n  grid-row: 2 / 3;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.sidenav-content {\n  display: flex;\n  flex-flow: column;\n  height: 100%;\n}\n\n.container {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  flex: 1 1 auto;\n  overflow-y: auto;\n}\n\n.root {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  height: 100%;\n  overflow-y: hidden;\n}\n\n.header {\n  grid-column: 1 / 2;\n  grid-row: 1 / 2;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphComponent.html":{"url":"classes/GraphComponent.html","title":"class - GraphComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:133\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlGraphComponent: GQLGraphComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:141\n                \n            \n\n\n            \n                \n                    Convert backend representation of graph component to frontend representation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlGraphComponent\n                                    \n                                                GQLGraphComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlGraphComponents: GQLGraphComponent[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlGraphComponents\n                                    \n                                                GQLGraphComponent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphData.html":{"url":"interfaces/GraphData.html","title":"interface - GraphData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GraphData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes data needed by IssueGraphComponent to draw the graph.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                                \n                                        \n                                            graphLocations\n                                        \n                                \n                                \n                                        \n                                            interfaces\n                                        \n                                \n                                \n                                        \n                                            linkIssues\n                                        \n                                \n                                \n                                        \n                                            relatedFolders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        graphLocations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graphLocations:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interfaces\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        interfaces:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linkIssues:         GraphIssue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GraphIssue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relatedFolders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relatedFolders:         DefaultDictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultDictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphDataFactory.html":{"url":"classes/GraphDataFactory.html","title":"class - GraphDataFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphDataFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                graphDataFromGQL\n                            \n                            \n                                    Static\n                                removeFilteredData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        graphDataFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    graphDataFromGQL(data: GetIssueGraphDataQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:48\n                \n            \n\n\n            \n                \n                    Converts the data required for the graph from the format the backend delivers into a\nGraphData object as needed by the IssueGraphComponent for rendering.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetIssueGraphDataQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        removeFilteredData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:37\n                \n            \n\n\n            \n                \n                    Removes the counts for issue categories which are filtered. This is a workaround\nneeded because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graphData\n                                    \n                                                GraphData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the data with the unnecessary counts\n\n                                    \n                                \n                                \n                                    activeCategories\n                                    \n                                            IssueCategory[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the categories corresponding to the activated toggles of the graph component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphData\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphInterface.html":{"url":"classes/GraphInterface.html","title":"class - GraphInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consumedBy\n                            \n                            \n                                id\n                            \n                            \n                                issues\n                            \n                            \n                                name\n                            \n                            \n                                offeredBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                mapFromGQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consumedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offeredBy\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:102\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlInterface: GQLInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterface\n                                    \n                                                GQLInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapFromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapFromGQL(gqlInterfaces: GQLInterface[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gqlInterfaces\n                                    \n                                                GQLInterface[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphIssue.html":{"url":"classes/GraphIssue.html","title":"class - GraphIssue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/graph-data.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                linksIssues\n                            \n                            \n                                locations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromGQL\n                            \n                            \n                                    Static\n                                fromGQLNoLinks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        linksIssues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GraphIssue[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LocationId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/graph-data.ts:171\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQL\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQL(gqlIssue: GQLIssue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:190\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlIssue\n                                    \n                                                GQLIssue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of Issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphIssue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromGQLNoLinks\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromGQLNoLinks(gqlPartialIssue: Pick)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/graph-data.ts:178\n                \n            \n\n\n            \n                \n                    Convert issue from backend to frontend format ignoring links between issues\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    gqlPartialIssue\n                                    \n                                                Pick\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        backend representation of issue\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { id: any; category: any; locations: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Component,\n  ComponentInterface, GetIssueGraphDataDocument,\n  GetIssueGraphDataQuery,\n  Issue,\n  IssueCategory,\n  IssuePage,\n  Maybe,\n  Scalars\n} from 'src/generated/graphql';\nimport {DefaultDictionary} from 'typescript-collections';\n\n\ntype LocationId = Scalars['ID'];\ntype GraphFolder = [LocationId, IssueCategory];\ntype GraphLocation = GraphInterface | GraphComponent;\n\n/**\n * Describes data needed by IssueGraphComponent to draw the graph.\n */\nexport interface GraphData {\n  components: Map;\n  interfaces: Map;\n  // graphLocations is the union of all components and interfaces\n  graphLocations: Map;\n  relatedFolders: DefaultDictionary;\n  linkIssues: GraphIssue[];\n}\n\nexport class GraphDataFactory {\n  /**\n   * Removes the counts for issue categories which are filtered. This is a workaround\n   * needed because the backend doesn't allow us to only ask for the counts of non-filtered categories.\n   * @param graphData the data with the unnecessary counts\n   * @param activeCategories the categories corresponding to the activated toggles of the graph component\n   */\n  static removeFilteredData(graphData: GraphData, activeCategories: IssueCategory[]) {\n    for (const location of graphData.graphLocations.values()) {\n      location.issues = new Map([...location.issues].filter(([category, count]) => activeCategories.includes(category)));\n    }\n    return graphData;\n  }\n\n  /**\n   * Converts the data required for the graph from the format the backend delivers into a\n   * GraphData object as needed by the IssueGraphComponent for rendering.\n   */\n  static graphDataFromGQL(data: GetIssueGraphDataQuery): GraphData {\n    const components = GraphComponent.mapFromGQL(data.node.components.nodes);\n    const interfaces = GraphInterface.mapFromGQL(data.node.interfaces.nodes);\n    const graphLocations: Map = new Map([...components, ...interfaces]);\n    const linkIssues = data.node.linkingIssues.nodes.map(gqlIssue => GraphIssue.fromGQL(gqlIssue));\n    const relatedFolders = computeRelatedFolders(linkIssues, interfaces);\n    return {\n      components, interfaces, graphLocations, relatedFolders, linkIssues\n    };\n  }\n}\n\n/**\n * @param locationIds ids of components and interfaces\n * @param interfaces mapping from\n * @returns locationIds with ids of components offering interfaces whoose id is alo in locationIds removed\n */\nfunction removeOfferingComponents(locationIds: string[], interfaces: Map) {\n  // compute components that offer an interface whoose id is in locationIds\n  const interfaceOfferingComponents: Set = new Set(locationIds.filter(locationId => interfaces.has(locationId)).map(interfaceId =>\n    interfaces.get(interfaceId).offeredBy\n  ));\n  // return location ids with the components offering an interface with id in locationIds removed\n  return locationIds.filter(id => !interfaceOfferingComponents.has(id));\n}\n\n/**\n * Issues counts\n * @param bugCount number of bugs\n * @param featureRequestCount number of feature requests\n * @param unclassifiedCount number of unclassified issues\n * @returns counts mapping IssueCategory values to the count specified by arguments\n */\nfunction issueCounts(bugCount: number, featureRequestCount: number, unclassifiedCount: number): Map {\n  return new Map([\n    [IssueCategory.Bug, bugCount],\n    [IssueCategory.FeatureRequest, featureRequestCount],\n    [IssueCategory.Unclassified, unclassifiedCount]\n  ]);\n}\n\n// backend data format for interface\ntype GQLInterface = Pick & {\n  component?: Maybe>;\n  bugs?: Maybe>;\n  featureRequests?: Maybe>;\n  unclassified?: Maybe>;\n  consumedBy?: Maybe>>> }>\n};\n\n// desired frontend data format for interface\nexport class GraphInterface {\n  id: Scalars['ID'];\n  name: string;\n  offeredBy: Scalars['ID'];\n  consumedBy: Scalars['ID'][];\n  issues: Map;\n\n  static fromGQL(gqlInterface: GQLInterface): GraphInterface {\n    const issues = issueCounts(gqlInterface.bugs.totalCount,\n      gqlInterface.featureRequests.totalCount,\n      gqlInterface.unclassified.totalCount);\n    return {\n      id: gqlInterface.id,\n      name: gqlInterface.name,\n      offeredBy: gqlInterface.component.id,\n      consumedBy: gqlInterface.consumedBy.nodes.map(component => component.id),\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlInterfaces: GQLInterface[]): Map {\n    return new Map(gqlInterfaces.map(gqlInterface => [gqlInterface.id, GraphInterface.fromGQL(gqlInterface)]));\n  }\n}\n\n// backend data format for component\ntype GQLGraphComponent = Pick & {\n  bugs?: Pick;\n  featureRequests?: Pick;\n  unclassified?: Pick;\n};\n\n// desired frontend data format for component\nexport class GraphComponent {\n  name: string;\n  id: Scalars['ID'];\n  issues: Map;\n\n  /**\n   * Convert backend representation of graph component to frontend representation.\n   * @param gqlGraphComponent backend representation of component\n   */\n  static fromGQL(gqlGraphComponent: GQLGraphComponent): GraphComponent {\n    const issues = issueCounts(gqlGraphComponent.bugs.totalCount,\n      gqlGraphComponent.featureRequests.totalCount,\n      gqlGraphComponent.unclassified.totalCount);\n    return {\n      id: gqlGraphComponent.id,\n      name: gqlGraphComponent.name,\n      issues\n    };\n  }\n\n  static mapFromGQL(gqlGraphComponents: GQLGraphComponent[]): Map {\n    return new Map(gqlGraphComponents.map(gqlComponent => [gqlComponent.id, GraphComponent.fromGQL(gqlComponent)]));\n  }\n}\n\n// backend data fromat for issue\ntype GQLIssue = Pick & {\n  locations?: {\n    nodes?: (Pick | Pick)[];\n  };\n  linksToIssues?: {\n    nodes?: (Pick & { locations?: { nodes?: (Pick | Pick)[]; }; })[];\n  };\n};\n\n// desired frontend data format for issue\nclass GraphIssue {\n  id: Scalars['ID'];\n  category: IssueCategory;\n  locations: LocationId[];\n  linksIssues?: GraphIssue[];\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlPartialIssue backend representation of issue\n   */\n  static fromGQLNoLinks(gqlPartialIssue: Pick) {\n    return {\n      id: gqlPartialIssue.id,\n      category: gqlPartialIssue.category,\n      locations: gqlPartialIssue.locations.nodes.map(location => location.id)\n    };\n  }\n\n  /**\n   * Convert issue from backend to frontend format ignoring links between issues\n   * @param gqlIssue backend representation of Issues\n   */\n  static fromGQL(gqlIssue: GQLIssue): GraphIssue {\n    const issue: GraphIssue = this.fromGQLNoLinks(gqlIssue);\n    issue.linksIssues = gqlIssue.linksToIssues.nodes.map(gqlPartialIssue => this.fromGQLNoLinks(gqlPartialIssue));\n    return issue;\n  }\n}\n\n/**\n * The graph displays edges between issue folders that contain issues which link\n * to each other. This function computes this information. Drawing is handled in\n * IssueGraphComponent.\n * @param linkIssues contains only issues that link to other issues\n * @param interfaces mapping from ids of locations to interfaces attached to locations\n */\nfunction computeRelatedFolders(linkIssues: GraphIssue[], interfaces: Map):\n  DefaultDictionary {\n  let targetFolders: GraphFolder[];\n  const relatedFolders: DefaultDictionary = new DefaultDictionary(() => []);\n  for (const issue of linkIssues) {\n    const sourceLocationIds = removeOfferingComponents(issue.locations, interfaces);\n    const sourceFolders: GraphFolder[] = sourceLocationIds.map(locationId => [locationId, issue.category]);\n    targetFolders = [];\n    for (const linkedIssue of issue.linksIssues) {\n      const targetLocationIds = removeOfferingComponents(linkedIssue.locations, interfaces);\n      // @ts-ignore\n      targetFolders = targetFolders.concat(targetLocationIds.map(locationId => [locationId, linkedIssue.category]));\n    }\n    sourceFolders.forEach(folder =>\n      relatedFolders.setValue(folder,\n        (relatedFolders.getValue(folder).concat(targetFolders))));\n  }\n  return relatedFolders;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphQLModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS, NamedOptions} from 'apollo-angular';\nimport {ApolloClientOptions, ApolloLink, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\nimport {setContext} from '@apollo/link-context';\nimport {onError} from '@apollo/client/link/error';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthenticationService} from './auth/authentication.service';\nimport {environment} from '@environments/environment';\nimport {IndividualConfig, ToastrModule, ToastrService} from 'ngx-toastr';\nimport {DefaultOptions} from '@apollo/client/core/ApolloClient';\n\n/**\n * This modules purpose is to provide define functions returning configurations\n * for the automatic creation of ApolloClients for graphql communication with the backend.\n * The key functions are providePublicApollo and provideDefaultApollo. The apollo instance\n * constructed from providePublicApollo is only used for registering.\n */\n\nconst defaultOptions: DefaultOptions = {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n};\n\n/**\n * Congiuration for network error toast on register page.\n */\nconst networkErrorToast: Partial = {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n};\n\nconst basic = setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}));\n\nexport function createErrorLink(authService: AuthenticationService, toastr: ToastrService): ApolloLink {\n  const errorLink = onError(({graphQLErrors, networkError, operation, forward}) => {\n      if (graphQLErrors) {\n        const message = graphQLErrors.map(err => err.message).join('');\n        console.log(`[Graphql errors]: ${message}`);\n        toastr.error(message, 'GraphQL error', networkErrorToast);\n      }\n\n      if (networkError) {\n        console.log(`[Network error]: ${networkError.name}\\n${networkError.message}\\n${networkError.stack}`);\n        // @ts-ignore\n        if (networkError.status === 401) {\n          authService.logout();\n        } else {\n          toastr.error(networkError.message, 'Server/Connection error', networkErrorToast);\n        }\n      }\n    }\n  );\n  return errorLink;\n}\n\n/**\n * Create Apollo instance where credentials from local storage are attached to requests\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function provideDefaultApollo(httpLink: HttpLink, authService: AuthenticationService,\n                                     toastr: ToastrService): ApolloClientOptions {\n  const token = localStorage.getItem('token');\n  const auth = setContext((_, {headers}) => {\n    // get the authentication token from local storage if it exists\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        Authorization: localStorage.getItem('token') ? `Bearer ${localStorage.getItem('token')}` : ''\n      }\n    };\n  });\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, auth, httpLink.create({uri: environment.apiUrl})]);\n  const cache = new InMemoryCache();\n  return {link, cache, defaultOptions};\n}\n\n/**\n * Creates Apollo Client used for user registration with public endpoint. In contrast to\n * provideDefaultApollo no token is attached to reqeusts.\n * @param httpLink\n * @param authService\n * @param toastr\n */\nexport function providePublicApollo(httpLink: HttpLink, authService: AuthenticationService, toastr: ToastrService): NamedOptions {\n  const errorLink = createErrorLink(authService, toastr);\n  const link = ApolloLink.from([basic, errorLink, httpLink.create({uri: environment.signUpUrl})]);\n  const cache = new InMemoryCache();\n  return {\n    publicClient: {\n      link,\n      cache,\n      defaultOptions\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    ToastrModule,\n  ],\n  exports: [\n    HttpClientModule\n  ],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: provideDefaultApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    },\n    {\n      provide: APOLLO_NAMED_OPTIONS,\n      useFactory: providePublicApollo,\n      deps: [HttpLink, AuthenticationService, ToastrService],\n    }\n  ],\n})\nexport class GraphQLModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphsModule.html":{"url":"modules/GraphsModule.html","title":"module - GraphsModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\n\n\nGraphsModule\n\nGraphsModule\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/graphs/graphs.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\nand imported into the main app.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddProjectMemberDialogComponent\n                        \n                        \n                            CacheNodeComponent\n                        \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueFilterComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            LabelSearchComponent\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            ProjectIssueListComponent\n                        \n                        \n                            ProjectMembersComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            SetEditorDialogComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CursorPaginatorComponent\n                        \n                        \n                            IssueCategoryComponent\n                        \n                        \n                            IssueGraphComponent\n                        \n                        \n                            IssueGraphControlsComponent\n                        \n                        \n                            IssueIconComponent\n                        \n                        \n                            IssueItemComponent\n                        \n                        \n                            IssueLabelComponent\n                        \n                        \n                            IssueListComponent\n                        \n                        \n                            IssueLocationComponent\n                        \n                        \n                            IssueSidebarComponent\n                        \n                        \n                            ItemDirective\n                        \n                        \n                            ProjectHeaderComponent\n                        \n                        \n                            QueryBodyDirective\n                        \n                        \n                            QueryButtonDirective\n                        \n                        \n                            QueryComponent\n                        \n                        \n                            SetEditorComponent\n                        \n                        \n                            UserItemComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IssueGraphComponent } from './issue-graph/issue-graph.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport '@ustutt/grapheditor-webcomponent/lib/index';\nimport { IssueGraphControlsComponent } from './issue-graph-controls/issue-graph-controls.component';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { IssueListComponent } from '@app/issue-list/issue-list.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatSortModule } from '@angular/material/sort';\nimport { LabelSearchComponent } from './label-search/label-search.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgOptionHighlightModule } from '@ng-select/ng-option-highlight';\nimport { ProjectIssueListComponent } from '@app/project-issue-list/project-issue-list.component';\nimport { ProjectMembersComponent } from '@app/project-members/project-members.component';\nimport { AddProjectMemberDialogComponent } from '../dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport { CursorPaginatorComponent } from '@app/components/cursor-paginator/cursor-paginator.component';\nimport { SetEditorComponent } from '@app/components/set-editor/set-editor.component';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { IssueLabelComponent } from '@app/components/issue-label/issue-label.component';\nimport { SetEditorDialogComponent } from '@app/components/set-editor/set-editor-dialog.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { IssueItemComponent } from '@app/components/issue-item/issue-item.component';\nimport { UserItemComponent } from '@app/components/user-item/user-item.component';\nimport { IssueIconComponent } from '@app/components/issue-icon/issue-icon.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { IssueSidebarComponent } from '@app/issue-detail/issue-sidebar.component';\nimport { CacheNodeComponent } from '@app/components/cache-node.component';\nimport { ProjectHeaderComponent } from '@app/project-header/project-header.component';\nimport { IssueFilterComponent } from '@app/issue-list/issue-filter.component';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {QueryBodyDirective, QueryButtonDirective, QueryComponent} from '@app/utils/query-component/query.component';\nimport {MatProgressSpinnerModule, MatSpinner} from '@angular/material/progress-spinner';\nimport {IssueLocationComponent} from '@app/components/issue-location/issue-location.component';\nimport {IssueCategoryComponent} from '@app/components/issue-category/issue-category.component';\n\n/**\n * The IssueGraphComponent and IssueGraphControlsComponent form their own module declared here\n * and imported into the main app.\n * @export\n * @class GraphsModule\n */\n@NgModule({\n  declarations: [\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    LabelSearchComponent,\n    ProjectIssueListComponent,\n    ProjectMembersComponent,\n    AddProjectMemberDialogComponent,\n    CursorPaginatorComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    SetEditorDialogComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CacheNodeComponent,\n    ProjectHeaderComponent,\n    IssueFilterComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    NgSelectModule,\n    NgOptionHighlightModule,\n    MatCheckboxModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    IssueGraphComponent,\n    IssueGraphControlsComponent,\n    IssueListComponent,\n    SetEditorComponent,\n    ItemDirective,\n    IssueLabelComponent,\n    IssueItemComponent,\n    UserItemComponent,\n    IssueIconComponent,\n    IssueSidebarComponent,\n    CursorPaginatorComponent,\n    ProjectHeaderComponent,\n    QueryComponent,\n    QueryBodyDirective,\n    QueryButtonDirective,\n    IssueLocationComponent,\n    IssueCategoryComponent\n  ],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ],\n  providers: [\n    {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}},\n  ]\n})\nexport class GraphsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InterfaceNode.html":{"url":"interfaces/InterfaceNode.html","title":"interface - InterfaceNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InterfaceNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IssueNode\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            offeredById\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        offeredById\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offeredById:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterfaceStoreService.html":{"url":"injectables/InterfaceStoreService.html","title":"injectable - InterfaceStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InterfaceStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/interface-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides creation, retrievel, update and deletion of interfaces offered by components.\nThe GQL object are generated by the code generator based on interface.graphql in the same directory\nas this file.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                getConsumingComponents\n                            \n                            \n                                    Public\n                                getInterface\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createInterfaceMutation: CreateComponentInterfaceGQL, updateInterfaceMutation: UpdateComponentInterfaceGQL, deleteInterfaceMutation: DeleteComponentInterfaceGQL, getInterfaceQuery: GetInterfaceGQL, getConsumingComponentsQuery: GetConsumingComponentsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/interface/interface-store.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createInterfaceMutation\n                                                  \n                                                        \n                                                                    CreateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateInterfaceMutation\n                                                  \n                                                        \n                                                                    UpdateComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteInterfaceMutation\n                                                  \n                                                        \n                                                                    DeleteComponentInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getInterfaceQuery\n                                                  \n                                                        \n                                                                    GetInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getConsumingComponentsQuery\n                                                  \n                                                        \n                                                                    GetConsumingComponentsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(name: string, offeringComponentId: string, description?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    offeringComponentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConsumingComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConsumingComponents(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInterface(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(input: UpdateComponentInterfaceInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/interface/interface-store.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            UpdateComponentInterfaceInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  CreateComponentInterfaceGQL,\n  CreateComponentInterfaceInput,\n  DeleteComponentInterfaceGQL,\n  DeleteComponentInterfaceInput,\n  GetConsumingComponentsGQL,\n  GetConsumingComponentsQuery,\n  GetInterfaceGQL,\n  GetInterfaceQuery,\n  UpdateComponentInterfaceGQL,\n  UpdateComponentInterfaceInput\n} from '../../../generated/graphql';\nimport {map} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\n\n/**\n * This service provides creation, retrievel, update and deletion of interfaces offered by components.\n * The GQL object are generated by the code generator based on interface.graphql in the same directory\n * as this file.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterfaceStoreService {\n\n  constructor(private createInterfaceMutation: CreateComponentInterfaceGQL,\n              private updateInterfaceMutation: UpdateComponentInterfaceGQL,\n              private deleteInterfaceMutation: DeleteComponentInterfaceGQL,\n              private getInterfaceQuery: GetInterfaceGQL,\n              private getConsumingComponentsQuery: GetConsumingComponentsGQL) {\n  }\n\n  public create(name: string, offeringComponentId: string, description?: string) {\n    const input: CreateComponentInterfaceInput = {\n      name,\n      description,\n      component: offeringComponentId\n    };\n    return this.createInterfaceMutation.mutate({input});\n  }\n\n  public getInterface(id: string): Observable {\n    return this.getInterfaceQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  public getConsumingComponents(id: string): Observable {\n    return this.getConsumingComponentsQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  public update(input: UpdateComponentInterfaceInput) {\n    return this.updateInterfaceMutation.mutate({input});\n  }\n\n  public delete(id: string) {\n    const input: DeleteComponentInterfaceInput = {\n      componentInterface: id\n    };\n    return this.deleteInterfaceMutation.mutate({input});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueCategoryComponent.html":{"url":"components/IssueCategoryComponent.html","title":"component - IssueCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-category/issue-category.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-category\n            \n\n            \n                styleUrls\n                ./issue-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     IssueCategory\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-category/issue-category.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {IssueCategory} from '../../../generated/graphql-dgql';\n\n@Component({\n  selector: 'app-issue-category',\n  templateUrl: './issue-category.component.html',\n  styleUrls: ['./issue-category.component.scss']\n})\nexport class IssueCategoryComponent {\n  @Input() category: IssueCategory;\n}\n\n    \n\n    \n        \n  \n    \n    Uncategorized\n  \n\n  \n    \n    Bug\n  \n\n  \n    \n    Feature Request\n  \n\n\n    \n\n    \n                \n                    ./issue-category.component.scss\n                \n                .category-icon {\n  vertical-align: middle;\n  margin-bottom: 3px;\n}\n\n.category-box {\n  background: rgba(0, 0, 0, 0.06);\n  border-radius: 8px;\n  align-items: center;\n  padding: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Uncategorized            Bug            Feature Request  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueContentsComponent.html":{"url":"components/IssueContentsComponent.html","title":"component - IssueContentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueContentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-contents.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders the contents of the issue: the issue body, timeline, and comment box.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-contents\n            \n\n            \n                styleUrls\n                issue-contents.component.scss\n            \n\n\n\n            \n                templateUrl\n                issue-contents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                commentEditor\n                            \n                            \n                                    Public\n                                savingComment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeIssue\n                            \n                            \n                                    Public\n                                commentIssue\n                            \n                            \n                                    Public\n                                reopenIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue$\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue$\n                    \n                \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:19\n                            \n                        \n                \n                    \n                        The issue to be rendered.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/issue-contents.component.ts:21\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:56\n                \n            \n\n\n            \n                \n                    Closes the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        commentIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:66\n                \n            \n\n\n            \n                \n                    Adds a comment to the current issue with the data provided in the comment box.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reopenIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    reopenIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-contents.component.ts:61\n                \n            \n\n\n            \n                \n                    Reopens the currently closed issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        commentEditor\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('comment')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:35\n                        \n                    \n\n            \n                \n                    The comment editor (app-markdown-editor).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingComment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-contents.component.ts:33\n                        \n                    \n\n            \n                \n                    True if the issue comment is currently being saved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { DataList, DataNode } from '@app/data-dgql/query';\nimport { Issue } from '../../generated/graphql';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { CURRENT_USER_NODE, ListType, NodeType } from '@app/data-dgql/id';\nimport { User } from '../../generated/graphql-dgql';\n\n/**\n * This component renders the contents of the issue: the issue body, timeline, and comment box.\n */\n@Component({\n  selector: 'app-issue-contents',\n  templateUrl: 'issue-contents.component.html',\n  styleUrls: ['issue-contents.component.scss']\n})\nexport class IssueContentsComponent implements OnInit, OnDestroy {\n  /** The issue to be rendered. */\n  @Input() issue$: DataNode;\n  /** The raw project ID. */\n  @Input() projectId: string;\n\n  /** @ignore */\n  public linkedIssues$: DataList;\n  /** @ignore */\n  public linkedIssueSub: Subscription;\n  /** @ignore */\n  public currentUser$: DataNode;\n  /** @ignore */\n  public currentUserSub: Subscription;\n\n  /** True if the issue comment is currently being saved. */\n  public savingComment = false;\n  /** The comment editor (app-markdown-editor). */\n  @ViewChild('comment') commentEditor;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.linkedIssues$ = this.dataService.getList({\n      node: this.issue$.id,\n      type: ListType.LinkedIssues\n    });\n    this.linkedIssueSub = this.linkedIssues$.subscribe();\n\n    this.currentUser$ = this.dataService.getNode(CURRENT_USER_NODE);\n    this.currentUserSub = this.currentUser$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.linkedIssueSub.unsubscribe();\n    this.currentUserSub.unsubscribe();\n  }\n\n  /** Closes the current issue. */\n  public closeIssue(): void {\n    this.dataService.mutations.closeIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Reopens the currently closed issue. */\n  public reopenIssue(): void {\n    this.dataService.mutations.reopenIssue(Math.random().toString(), this.issue$.id);\n  }\n\n  /** Adds a comment to the current issue with the data provided in the comment box. */\n  public commentIssue(): void {\n    this.savingComment = true;\n    this.dataService.mutations.addIssueComment(\n      Math.random().toString(),\n      this.issue$.id,\n      this.commentEditor.code\n    ).then(() => {\n      // only clear if successful\n      this.commentEditor.code = '';\n    }).finally(() => {\n      this.savingComment = false;\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n     0\" class=\"timeline-item\">\n        \n            \n                link\n                \n                    Linked Issues\n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                        \n                    \n                \n                 10\"\n                    [list]=\"linkedIssues$\"\n                    [pageSizes]=\"[10]\">\n            \n        \n    \n\n    \n\n    \n\n    \n    \n        \n            \n                \n                    Comment this issue as \n                \n            \n            \n                \n                \n                    Close Issue\n                    \n                    Reopen\n                        Issue\n                    \n                    Comment\n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    issue-contents.component.scss\n                \n                @import 'src/styles/spinner';\n\n.timeline-item {\n  position: relative;\n  margin-left: 36px;\n  padding: 12px 0;\n\n  &:first-child {\n    padding-top: 0;\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -1px;\n    bottom: 0;\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n  }\n\n  .item-box {\n    position: relative;\n    background: white;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n    margin-left: -36px;\n\n    .item-header {\n      background: rgba(0, 0, 0, 0.06);\n      border-bottom: rgba(0, 0, 0, 0.1);\n      border-radius: 4px 4px 0 0;\n      padding: 8px 16px;\n      display: flex;\n      align-items: center;\n\n      mat-icon {\n        margin-right: 8px;\n        margin-left: -8px;\n      }\n\n      .item-title {\n        flex: 1;\n        margin: 0 16px 0 0;\n        overflow: hidden;\n        font-size: inherit;\n        font-weight: inherit;\n\n        .item-edited {\n          opacity: 0.5;\n        }\n      }\n    }\n\n    .item-body {\n      padding: 16px;\n\n      &.is-editing {\n        padding: 8px;\n      }\n\n      .edit-body-buttons {\n        text-align: right;\n        margin-top: 5px;\n        margin-bottom: 3px;\n      }\n    }\n  }\n}\n\n.comment-form {\n  padding-bottom: 0;\n\n  .comment-buttons {\n    text-align: right;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 0\" class=\"timeline-item\">                                    link                                    Linked Issues                                                                                                                                                                                                                                         10\"                    [list]=\"linkedIssues$\"                    [pageSizes]=\"[10]\">                                                                                                Comment this issue as                                                                                             Close Issue                                        Reopen                        Issue                                        Comment                                                            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueContentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueDetailComponent.html":{"url":"components/IssueDetailComponent.html","title":"component - IssueDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/issue-detail.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail\n            \n\n            \n                styleUrls\n                ./issue-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activatedRoute\n                            \n                            \n                                category\n                            \n                            \n                                inputTitle\n                            \n                            \n                                    Public\n                                issue$\n                            \n                            \n                                    Public\n                                issueEditable\n                            \n                            \n                                    Public\n                                issueId\n                            \n                            \n                                    Public\n                                issueSub\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                    Public\n                                savingChanges\n                            \n                            \n                                    Public\n                                timeFormatter\n                            \n                            \n                                    Public\n                                userCanEditIssue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                            \n                                    Public\n                                finishEditing\n                            \n                            \n                                formatIssueOpenTime\n                            \n                            \n                                    Private\n                                saveChanges\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:76\n                \n            \n\n\n            \n                \n                    Begins the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        finishEditing\n                        \n                    \n                \n            \n            \n                \n                    \n                    finishEditing(save?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:94\n                \n            \n\n\n            \n                \n                    Finishes the editing process in which:\n\nthe issue title and\nthe issue category can be changed.\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    save\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        \nBoolean that indicates whether to save the new title.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatIssueOpenTime\n                        \n                    \n                \n            \n            \n                \nformatIssueOpenTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveChanges\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/issue-detail.component.ts:115\n                \n            \n\n\n            \n                \n                    Saves all changes to the current issue.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required])\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueEditable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        savingChanges\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userCanEditIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/issue-detail.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Subscription } from 'rxjs';\nimport { NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { TimeFormatter } from '@app/issue-detail/time-formatter';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-issue-detail',\n  templateUrl: './issue-detail.component.html',\n  styleUrls: ['./issue-detail.component.scss']\n})\n/**\n * This component provides detailed information about an issue.\n * It also lets the user edit properties of an issue.\n */\nexport class IssueDetailComponent implements OnInit, OnDestroy {\n\n  // current project id\n  public projectId: string;\n\n  // current issue id\n  public issueId: string;\n\n  // mark whether the current issue is editable\n  public issueEditable = false;\n\n  // mark whether changes to the current issue are being saved,\n  // used for the loading spinner of the Save button\n  public savingChanges = false;\n\n  // provides functions for time formatting\n  public timeFormatter = new TimeFormatter();\n\n  // FIXME: replace with issue$.current?.userCanEditIssue in HTML once that works\n  public userCanEditIssue = true;\n\n  public issue$: DataNode;\n  public issueSub: Subscription;\n\n  // new title of the current issue\n  @ViewChild('titleInput') inputTitle: ElementRef;\n\n  // new category of the current issue\n  category = new FormControl('', [Validators.required]);\n\n  constructor(private dataService: DataService, public activatedRoute: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.projectId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.issueId = this.activatedRoute.snapshot.paramMap.get('issueId');\n    const issueNodeId = { type: NodeType.Issue, id: this.issueId };\n\n    this.issue$ = this.dataService.getNode(issueNodeId);\n    this.issueSub = this.issue$.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.issueSub.unsubscribe();\n  }\n\n  formatIssueOpenTime(): string {\n    if (this.issue$.hasData) {\n      return this.timeFormatter.formatTimeDifference(this.issue$.current.createdAt);\n    }\n  }\n\n  /**\n   * Begins the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   */\n  beginEditing() {\n\n    // marks the issue as editable\n    this.issueEditable = true;\n\n    // sets up the issue category\n    this.issue$.dataAsPromise().then(data =>\n      {\n        this.category.setValue(data.category);\n      });\n  }\n\n  /**\n   * Finishes the editing process in which:\n   * 1) the issue title and\n   * 2) the issue category can be changed.\n   * @param save - Boolean that indicates whether to save the new title.\n   */\n  public finishEditing(save?: boolean): void {\n\n    // case: the new changes are to be saved\n    if (save) {\n\n      // marks the saving process as started\n      this.savingChanges = true;\n\n      // saves all changes\n      this.saveChanges();\n    }\n\n    // case: the new changes are not to be saved\n    else {\n      this.issueEditable = false;\n    }\n  }\n\n  /**\n   * Saves all changes to the current issue.\n   */\n  private saveChanges() {\n\n    // 1) saves the new title\n    this.dataService.mutations.renameIssueTitle(\n      Math.random().toString(),\n      this.issue$.id,\n      this.inputTitle.nativeElement.value\n    );\n\n    // 2) saves the new category\n    this.dataService.mutations.changeIssueCategory(\n      Math.random().toString(),\n      this.issue$.id,\n      this.category.value\n    ).then(() => {\n      // marks the issue as uneditable\n      this.issueEditable = false;\n    }).finally(() => {\n      // marks the saving process as finished\n      this.savingChanges = false;\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n\n      \n      \n        {{issue.title}}\n      \n\n      \n      \n        \n      \n\n      \n\n        \n        \n          Edit\n        \n\n        \n\n          \n          \n            Cancel\n          \n\n          &nbsp;\n\n          \n          \n            Save\n          \n        \n      \n    \n\n    \n    \n\n      \n      \n        \n          \n          Unclassified\n        \n        \n          \n          Bug\n        \n        \n          \n          Feature Request\n        \n      \n    \n\n    \n    \n\n      \n      \n        \n        \n          Open\n          Closed\n        \n      \n\n      \n      \n        \n        opened this issue\n        \n          {{this.formatIssueOpenTime()}}\n        \n      \n\n      \n      \n        &nbsp;&sdot; {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, 'comment')}}\n      \n    \n  \n\n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./issue-detail.component.scss\n                \n                @import 'src/styles/variables.scss';\n@import 'src/styles/spinner';\n\n.category-selector {\n  width: 100%;\n  margin-bottom: 8px;\n\n  mat-button-toggle {\n    width: 100%;\n\n    ::ng-deep &.mat-button-toggle-checked {\n      font-weight: 600;\n    }\n  }\n}\n\n.issue-details {\n  padding: 16px;\n\n  .issue-header {\n    padding-bottom: 16px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n    margin-bottom: 16px;\n  }\n\n  .issue-page {\n    display: flex;\n\n    .issue-contents {\n      flex: 2;\n    }\n\n    .issue-sidebar {\n      flex: 1;\n      max-width: 300px;\n      margin-left: 16px;\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  // put issue sidebar below on narrow displays\n  .issue-details .issue-page {\n    display: block;\n  }\n}\n\n.issue-header {\n  .issue-title {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n\n    .title-text {\n      margin: 0;\n      margin-right: 16px;\n      flex: 1;\n    }\n\n    .title-input {\n      flex: 1;\n      margin-right: 16px;\n\n      ::ng-deep .mat-form-field-wrapper {\n        padding-bottom: 0;\n\n        .mat-form-field-infix {\n          border-top-width: 0.5em;\n        }\n      }\n    }\n  }\n\n  .issue-category {\n    display: flex;\n    align-items: center;\n    margin-bottom: 8px;\n  }\n\n  .issue-subheading {\n    display: flex;\n    align-items: center;\n\n    .issue-status {\n      display: inline-flex;\n      padding: 2px 8px 2px 4px;\n      border-radius: 100px;\n      border: 1px solid rgba(0, 0, 0, 0.1);\n      align-items: center;\n      font-weight: 500;\n      margin-right: 8px;\n\n      .status-icon {\n        margin-right: 2px;\n      }\n      .status-label {\n        display: block;\n      }\n\n      .status-icon ::ng-deep svg {\n        .state[fill] {\n          fill: white;\n        }\n        .state[stroke] {\n          stroke: white;\n        }\n        .arrow-in, .arrow-out, .assigned-star {\n          fill: rgba(255, 255, 255, 0.7);\n        }\n      }\n\n      &.is-open {\n        color: white;\n        background: #00ba39;\n      }\n      &.is-closed {\n        color: white;\n        background: #ff0036;\n      }\n    }\n\n    .issue-opened, .issue-stats {\n      display: inline-block;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{issue.title}}                                                                Edit                                                Cancel                                                     Save                                                                            Unclassified                                    Bug                                    Feature Request                                                                Open          Closed                                          opened this issue                  {{this.formatIssueOpenTime()}}                                   ⋅ {{this.timeFormatter.pluralize(issue.issueComments?.totalCount + 1, \\'comment\\')}}                          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueFilterComponent.html":{"url":"components/IssueFilterComponent.html","title":"component - IssueFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-filter.component.ts\n\n\n\n    \n        Description\n    \n    \n        Edits an IssueFilter object.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-filter\n            \n\n            \n                styleUrls\n                ./issue-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePredicates\n                            \n                            \n                                predicateCount\n                            \n                            \n                                predicates\n                            \n                            \n                                predicateValues\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPredicateAfter\n                            \n                            \n                                applyIdChangeset\n                            \n                            \n                                buildFilter\n                            \n                            \n                                getRemainingTypes\n                            \n                            \n                                removePredicateAt\n                            \n                            \n                                setInEnumArray\n                            \n                            \n                                setPredicateType\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allLabelsList\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allLabelsList\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:118\n                            \n                        \n                \n                    \n                        The list from which to source labels in the label picker.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:116\n                            \n                        \n                \n                    \n                        Raw project ID.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-filter.component.ts:120\n                            \n                        \n                \n                    \n                        Emitted every time the filter is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPredicateAfter\n                        \n                    \n                \n            \n            \n                \naddPredicateAfter(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:167\n                \n            \n\n\n            \n                \n                    Adds a new predicate after the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        applyIdChangeset\n                        \n                    \n                \n            \n            \n                \napplyIdChangeset(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:195\n                \n            \n\n\n            \n                \n                    Returns a function that can be passed to an app-set-editor to apply the changeset to the\nvalue of the id predicate.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        predicate name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (added: any, removed: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildFilter\n                        \n                    \n                \n            \n            \n                \nbuildFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:210\n                \n            \n\n\n            \n                \n                    Builds an IssueFilter from the search query and selected filters.\n\n\n                    \n                        Returns :     IssueFilter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRemainingTypes\n                        \n                    \n                \n            \n            \n                \ngetRemainingTypes(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:137\n                \n            \n\n\n            \n                \n                    Returns all types of predicates that were not taken in previous items.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePredicateAt\n                        \n                    \n                \n            \n            \n                \nremovePredicateAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:157\n                \n            \n\n\n            \n                \n                    Removes the predicate at the given index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInEnumArray\n                        \n                    \n                \n            \n            \n                \nsetInEnumArray(array, item, inArray)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:180\n                \n            \n\n\n            \n                \n                    Sets the presence of a value in an array of enum variants.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the array to mutate\n\n                                    \n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the enum variant\n\n                                    \n                                \n                                \n                                    inArray\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether or not it should be in the array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPredicateType\n                        \n                    \n                \n            \n            \n                \nsetPredicateType(index: number, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:147\n                \n            \n\n\n            \n                \n                    Sets the type of the predicate at index in activePredicates.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index in activePredicates\n\n                                    \n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new type (must be unique!)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-filter.component.ts:222\n                \n            \n\n\n            \n                \n                    Emits a change event.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePredicates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:127\n                        \n                    \n\n            \n                \n                    The names of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateCount\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(PREDICATES).length\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : PREDICATES\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        predicateValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:129\n                        \n                    \n\n            \n                \n                    The values of currently active predicates.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-filter.component.ts:131\n                        \n                    \n\n            \n                \n                    Current search query.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IssueCategory, IssueFilter } from '../../generated/graphql-dgql';\nimport { ListId, ListType, NodeType, ROOT_NODE } from '@app/data-dgql/id';\n\n/** Returns the ListId for listing all project issues. */\nconst listAllIssues = (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n});\n\n/**\n * List of all possible issue filter predicates.\n *\n * Keyed by their name, each predicate has a type, label,\n * and possibly additional options depending on their type.\n */\nconst PREDICATES = {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n};\n\n/** Returns the default value for a predicate type. */\nfunction getDefaultForType(type: string) {\n  switch (type) {\n    case 'bool':\n      return true;\n    case 'enum':\n    case 'ids':\n      return [];\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n\n/** Converts a predicate value into the backend representation for use in the filter. */\nfunction convertValueForFilter(type: string, value: any) {\n  switch (type) {\n    case 'ids':\n      return value.map(item => item.id);\n    default:\n      return value;\n  }\n}\n\n/**\n * Edits an IssueFilter object.\n */\n@Component({\n  selector: 'app-issue-filter',\n  templateUrl: './issue-filter.component.html',\n  styleUrls: ['./issue-filter.component.scss']\n})\nexport class IssueFilterComponent {\n  /** Raw project ID. */\n  @Input() projectId: string;\n  /** The list from which to source labels in the label picker. */\n  @Input() allLabelsList: ListId;\n  /** Emitted every time the filter is changed. */\n  @Output() filterChange = new EventEmitter();\n\n  // constants as class properties because angular\n  predicates = PREDICATES;\n  predicateCount = Object.keys(PREDICATES).length;\n\n  /** The names of currently active predicates. */\n  activePredicates: string[] = [];\n  /** The values of currently active predicates. */\n  predicateValues: { [key: string]: any } = {};\n  /** Current search query. */\n  searchQuery = '';\n\n  /**\n   * Returns all types of predicates that were not taken in previous items.\n   * @param index index in activePredicates\n   */\n  getRemainingTypes(index: number): string[] {\n    const previousItems = this.activePredicates.slice(0, index);\n    return Object.keys(PREDICATES).filter(id => !previousItems.includes(id));\n  }\n\n  /**\n   * Sets the type of the predicate at index in activePredicates.\n   * @param index index in activePredicates\n   * @param type new type (must be unique!)\n   */\n  setPredicateType(index: number, type: string) {\n    this.activePredicates[index] = type;\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Removes the predicate at the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  removePredicateAt(index: number) {\n    const type = this.activePredicates.splice(index, 1)[0];\n    delete this.predicateValues[type];\n    this.update();\n  }\n\n  /**\n   * Adds a new predicate after the given index in activePredicates.\n   * @param index index in activePredicates\n   */\n  addPredicateAfter(index: number) {\n    const type = this.getRemainingTypes(index + 1)[0];\n    this.activePredicates.splice(index + 1, 0, type);\n    this.predicateValues[type] = getDefaultForType(PREDICATES[type].type);\n    this.update();\n  }\n\n  /**\n   * Sets the presence of a value in an array of enum variants.\n   * @param array the array to mutate\n   * @param item the enum variant\n   * @param inArray whether or not it should be in the array\n   */\n  setInEnumArray(array, item, inArray) {\n    if (inArray && !array.includes(item)) {\n      array.push(item);\n    }\n    if (!inArray && array.includes(item)) {\n      array.splice(array.indexOf(item), 1);\n    }\n    this.update();\n  }\n\n  /**\n   * Returns a function that can be passed to an app-set-editor to apply the changeset to the\n   * value of the id predicate.\n   * @param id predicate name\n   */\n  applyIdChangeset(id) {\n    return async (added, removed) => {\n      for (const item of added) {\n        this.predicateValues[id].push(item);\n      }\n      for (const item of removed) {\n        this.predicateValues[id].splice(this.predicateValues[id].indexOf(item), 1);\n      }\n      this.update();\n    };\n  }\n\n  /**\n   * Builds an IssueFilter from the search query and selected filters.\n   */\n  buildFilter(): IssueFilter {\n    const filter: IssueFilter = {};\n    if (this.searchQuery.trim()) {\n      filter.fullSearch = { text: this.searchQuery.trim() };\n    }\n    for (const id of this.activePredicates) {\n      filter[id] = convertValueForFilter(PREDICATES[id].type, this.predicateValues[id]);\n    }\n    return filter;\n  }\n\n  /** Emits a change event. */\n  update() {\n    this.filterChange.emit(this.buildFilter());\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Search\n            \n        \n        \n            filter_list\n        \n    \n\n    \n        \n            Filter\n        \n        \n            \n                \n                    \n                        \n                            {{predicates[type].label}}\n                        \n                    \n                \n            \n            \n\n                \n\n                \n                    \n                        \n                            Yes\n                        \n                        \n                            No\n                        \n                    \n                \n                \n                    \n                        \n                            {{entry[1]}}\n                        \n                    \n                \n                \n                    \n                        {{predicates[id].label}}\n                        {{predicates[id].ifEmpty}}\n                        \n                            \n                            \n                            \n                            \n                                \n                                    {{item.name}}\n                                \n                                \n                                    \n                                        {{item.component.name}} ›\n                                    \n                                    {{item.name}}\n                                \n                            \n                        \n                    \n                \n\n                \n\n            \n            \n                \n                    remove\n                \n                \n                    add\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./issue-filter.component.scss\n                \n                .filter-box {\n  padding: 8px;\n\n  // we do not want the extra spacing around form fields\n  // (we wont be showing any helper text or errors anyway)\n  ::ng-deep .mat-form-field-wrapper {\n    padding-bottom: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .pred-add, .pred-remove {\n    min-width: 48px;\n    width: 48px;\n    padding: 0 8px;\n  }\n\n  .search-box {\n    display: flex;\n    align-items: center;\n\n    .search-field {\n      flex: 1;\n    }\n\n    .pred-add {\n      margin-left: 16px;\n    }\n  }\n\n  .filter-predicates {\n    margin-top: 8px;\n\n    .filter-title {\n      font-weight: bold;\n      padding-left: 8px;\n    }\n\n    .filter-predicate {\n      display: flex;\n      align-items: flex-start;\n\n      .predicate-type {\n        margin-right: 16px;\n      }\n      .predicate-value {\n        flex: 1;\n      }\n\n      .predicate-mgmt {\n        margin-left: 16px;\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        border-radius: 4px;\n\n        .pred-add {\n          margin-left: 4px;\n        }\n      }\n\n      @media (max-width: 500px) {\n        display: block;\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\n        padding: 8px 0;\n\n        .predicate-type {\n          margin-right: 0;\n          margin-bottom: 8px;\n\n          .predicate-type-selector {\n            width: 100%;\n          }\n        }\n        .predicate-value {\n          .bool-value {\n            width: 100%;\n            mat-button-toggle {\n              width: 100%;\n            }\n          }\n        }\n        .predicate-mgmt {\n          border: none;\n          margin-left: 0;\n          text-align: right;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Search                                        filter_list                                    Filter                                                                                                                    {{predicates[type].label}}                                                                                                                                                                                            Yes                                                                            No                                                                                                                                                    {{entry[1]}}                                                                                                                        {{predicates[id].label}}                        {{predicates[id].ifEmpty}}                                                                                                                                                                                                            {{item.name}}                                                                                                                                            {{item.component.name}} ›                                                                        {{item.name}}                                                                                                                                                                                                    remove                                                    add                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueFolderNode.html":{"url":"interfaces/IssueFolderNode.html","title":"interface - IssueFolderNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueFolderNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueCount\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueCount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     IssueCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IssueCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphApiService.html":{"url":"injectables/IssueGraphApiService.html","title":"injectable - IssueGraphApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Responsible for retrieval and conversion of data needed for graph rendering from backend.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                loadIssueGraphData\n                            \n                            \n                                removeConsumedInterface\n                            \n                            \n                                textsToRegex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getFullIssueGraphDataQuery: GetIssueGraphDataGQL, addConsumedInterfaceMutation: AddConsumedInterfaceGQL, removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL, getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-api.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getFullIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    AddConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeConsumedInterfaceMutation\n                                                  \n                                                        \n                                                                    RemoveConsumedInterfaceGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getSearchIssueGraphDataQuery\n                                                  \n                                                        \n                                                                        GetIssueGraphDataForSearchGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:80\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadIssueGraphData\n                        \n                    \n                \n            \n            \n                \nloadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:42\n                \n            \n\n\n            \n                \n                    Queries backend for data needed to render graph when given parameters restricting what information is requested.\nThis method handels the construction of the parameters to the graphql query,\nand makes the query. To carry out the conversion from backend to frontend format,\nit invokes GraphDataFactory.graphDataFromGQL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    categories\n                                    \n                                                SelectedCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        describes which issue categories (e.g. BUG) are of interest\n\n                                    \n                                \n                                \n                                    labels\n                                    \n                                                FilterLabel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of issue labels the user has entered into the query bar\n\n                                    \n                                \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a list of text fragments the user has entered into the query bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(component: string, componentInterface: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:89\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    componentInterface\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textsToRegex\n                        \n                    \n                \n            \n            \n                \ntextsToRegex(texts: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-api.service.ts:68\n                \n            \n\n\n            \n                \n                    Creates a regular expression denoting a language of the union of the strings in texts\ntextsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    texts\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            textsToRegex([&quot;newest issues&quot;, &quot;test&quot;]) == &quot;(newest issues | test)&quot;&quot;\n                        \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  AddConsumedInterfaceGQL,\n  GetIssueGraphDataForSearchGQL,\n  GetIssueGraphDataGQL,\n  IssueCategory,\n  RemoveConsumedInterfaceGQL\n} from 'src/generated/graphql';\nimport {GraphData, GraphDataFactory} from './graph-data';\nimport {Observable} from 'rxjs';\nimport {SelectedCategories} from '@app/graphs/shared';\nimport {FilterLabel} from '../label/label-store.service';\n\n/**\n * Responsible for retrieval and conversion of data needed for graph rendering from backend.\n *\n * @export\n * @class IssueGraphApiService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphApiService {\n\n  constructor(private getFullIssueGraphDataQuery: GetIssueGraphDataGQL,\n              private addConsumedInterfaceMutation: AddConsumedInterfaceGQL,\n              private removeConsumedInterfaceMutation: RemoveConsumedInterfaceGQL,\n              private getSearchIssueGraphDataQuery: GetIssueGraphDataForSearchGQL) {\n  }\n\n  /**\n   * Queries backend for data needed to render graph when given parameters restricting what information is requested.\n   * This method handels the construction of the parameters to the graphql query,\n   * and makes the query. To carry out the conversion from backend to frontend format,\n   * it invokes GraphDataFactory.graphDataFromGQL\n   * @param projectId\n   * @param categories describes which issue categories (e.g. BUG) are of interest\n   * @param labels a list of issue labels the user has entered into the query bar\n   * @param texts a list of text fragments the user has entered into the query bar\n   */\n  loadIssueGraphData(projectId: string, categories: SelectedCategories, labels: FilterLabel[], texts: string[]): Observable {\n    const activeCategories: IssueCategory[] = [];\n    for (const key of Object.values(IssueCategory)) {\n      if (categories[key]) {\n        activeCategories.push(key as IssueCategory);\n      }\n    }\n    if (labels.length === 0 && texts.length === 0) {\n      return this.getFullIssueGraphDataQuery.fetch({projectId, activeCategories}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    } else {\n      const selectedLabels: string[] = labels.map(label => label.id);\n      const issueRegex = this.textsToRegex(texts);\n      return this.getSearchIssueGraphDataQuery.fetch({projectId, activeCategories, selectedLabels, issueRegex}).pipe(\n        map(result => GraphDataFactory.removeFilteredData(GraphDataFactory.graphDataFromGQL(result.data), activeCategories)\n        ));\n    }\n  }\n\n  /**\n   * Creates a regular expression denoting a language of the union of the strings in texts\n   * @param texts\n   * @example\n   * textsToRegex([\"newest issues\", \"test\"]) == \"(newest issues | test)\"\"\n   */\n  textsToRegex(texts: string[]): string {\n    if (texts.length === 0) {\n      return undefined;\n    }\n    return texts.map(text => '(' + text + ')').join('|');\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  addConsumedInterface(component: string, componentInterface: string) {\n    return this.addConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   * @param component\n   * @param componentInterface\n   */\n  removeConsumedInterface(component: string, componentInterface: string) {\n    return this.removeConsumedInterfaceMutation.mutate({input: {component, componentInterface}});\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphClassSettersService.html":{"url":"injectables/IssueGraphClassSettersService.html","title":"injectable - IssueGraphClassSettersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphClassSettersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the class setters\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageClassSetters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageClassSetters\n                        \n                    \n                \n            \n            \n                \nmanageClassSetters(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts:24\n                \n            \n\n\n            \n                \n                    Manages node / edge class setters so that node / edge classes\nof given GraphEditor instances match their corresponding class names.\nThe setters return true if the class name is applied to the corresponding node / edge.\nThey are called on all nodes, pairs of edges and class names.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the class setters \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphClassSettersService {\n\n  /**\n   * Manages node / edge class setters so that node / edge classes \n   * of given GraphEditor instances match their corresponding class names.\n   * The setters return true if the class name is applied to the corresponding node / edge.\n   * They are called on all nodes, pairs of edges and class names.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageClassSetters(graph: GraphEditor, minimap: GraphEditor) {\n\n    // node class setter\n    const nodeClassSetter = (className: string, node: Node) => {\n      if (className === node.type) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies noce class setter\n    graph.setNodeClass = nodeClassSetter;\n    minimap.setNodeClass = nodeClassSetter;\n\n    // edge class setter\n    const edgeClassSetter = (\n      className: string,\n      edge: Edge,\n      sourceNode: Node,\n      targetNode: Node\n    ) => {\n      if (className === edge.type) {\n        return true;\n      }\n      if (className === 'related-to' && edge.type === 'relatedTo') {\n        return true;\n      }\n      if (className === 'issue-relation' &&\n        (edge.type === 'relatedTo' ||\n          edge.type === 'duplicate' ||\n          edge.type === 'dependency')) {\n        return true;\n      }\n      return false;\n    };\n\n    // applies edge class setter\n    graph.setEdgeClass = edgeClassSetter;\n    minimap.setEdgeClass = edgeClassSetter;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueGraphControlsComponent.html":{"url":"components/IssueGraphControlsComponent.html","title":"component - IssueGraphControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueGraphControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains the graph toggles, the search bar and the button\nfor creating new components. Additionally it contains the actual graph component and feeds\ndata to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\nAnother observable retrieved from the IssueGraphStateService maps these values into the graph\ndata matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-graph-controls\n            \n\n            \n                styleUrls\n                ./issue-graph-controls.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-graph-controls.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bug\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                featureRequests\n                            \n                            \n                                filter$\n                            \n                            \n                                issueGraph\n                            \n                            \n                                labelSearch\n                            \n                            \n                                projectId\n                            \n                            \n                                    Public\n                                selectedCategories$\n                            \n                            \n                                showRelations\n                            \n                            \n                                unclassified\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getSelectedCategories\n                            \n                            \n                                layoutGraph\n                            \n                            \n                                setRelationVisibility\n                            \n                            \n                                    Public\n                                updateSelectedCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, gs: IssueGraphStateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gs\n                                                  \n                                                        \n                                                                        IssueGraphStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:66\n                \n            \n\n\n            \n                \n                    Gathers booleans indicating whether the toggle switches\ncoressponding to values in IssueCategory are turned on or off\n\n\n                    \n                        Returns :         SelectedCategories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        layoutGraph\n                        \n                    \n                \n            \n            \n                \nlayoutGraph()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRelationVisibility\n                        \n                    \n                \n            \n            \n                \nsetRelationVisibility()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:108\n                \n            \n\n\n            \n                \n                    Tell the graph component whether to show issue relations or not.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSelectedCategories\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelectedCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:57\n                \n            \n\n\n            \n                \n                    Emit newly selected categories via this.selectedCategories$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featureRequests\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueGraph\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssueGraphComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(IssueGraphComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LabelSearchComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(LabelSearchComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedCategories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\n    this.getSelectedCategories()\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRelations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unclassified\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnDestroy, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {IssueGraphComponent} from '../issue-graph/issue-graph.component';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {BehaviorSubject, combineLatest, ReplaySubject} from 'rxjs';\nimport {SelectedCategories} from '../shared';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {LabelSearchComponent} from '../label-search/label-search.component';\nimport {map, takeUntil} from 'rxjs/operators';\nimport {FilterState} from '@app/graphs/shared';\n\n/**\n * This component contains the graph toggles, the search bar and the button\n * for creating new components. Additionally it contains the actual graph component and feeds\n * data to it. This component collects the state of the search bar and graph toggles, combines it and emits it via this.filter$.\n * Another observable retrieved from the IssueGraphStateService maps these values into the graph\n * data matching the filters. Whenever new graph data arrives it is feed to the actual graph component. (see ngAfterViewInit)\n */\n@Component({\n  selector: 'app-issue-graph-controls',\n  templateUrl: './issue-graph-controls.component.html',\n  styleUrls: ['./issue-graph-controls.component.scss']\n})\nexport class IssueGraphControlsComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(IssueGraphComponent) issueGraph: IssueGraphComponent;\n  @ViewChild(LabelSearchComponent) labelSearch: LabelSearchComponent;\n\n  projectId: string;\n\n  // these 3 booleans are bound to the issue category toggles via ngModel\n  featureRequests = true;\n  bug = true;\n  unclassified = true;\n\n  showRelations = true;\n  // emits state of toggles and search bar combined\n  filter$: BehaviorSubject;\n  private destroy$ = new ReplaySubject(1);\n\n  constructor(public dialog: MatDialog, private gs: IssueGraphStateService, private route: ActivatedRoute) {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.filter$ = new BehaviorSubject({\n      selectedCategories: this.getSelectedCategories(), selectedFilter: {\n        labels: [], texts: []\n      }\n    });\n  }\n\n  public selectedCategories$ = new BehaviorSubject(\n    this.getSelectedCategories()\n  );\n\n  /**\n   * Emit newly selected categories via this.selectedCategories$\n   */\n  public updateSelectedCategories() {\n    this.selectedCategories$.next(\n      this.getSelectedCategories());\n  }\n\n  /**\n   * Gathers booleans indicating whether the toggle switches\n   * coressponding to values in IssueCategory are turned on or off\n   */\n  private getSelectedCategories(): SelectedCategories {\n    return {\n      [IssueCategory.Bug]: this.bug,\n      [IssueCategory.FeatureRequest]: this.featureRequests,\n      [IssueCategory.Unclassified]: this.unclassified,\n    };\n  }\n\n  layoutGraph(): void {\n    this.issueGraph.layoutGraph();\n    this.issueGraph.drawGraph();\n    this.issueGraph.fitGraphInView();\n  }\n\n  /**\n   * Setup this.filter$ and create subscription for observable returned from graphDataForFilter\n   */\n  ngAfterViewInit(): void {\n    // sets up emission of values representing the state of the graph toggles and the search bar via this.filter$\n    combineLatest([this.selectedCategories$, this.labelSearch.filterSelection$]).pipe(\n      takeUntil(this.destroy$),\n      map(([selectedCategories, filterSelection]) => ({selectedCategories, selectedFilter: filterSelection}))\n    ).subscribe(filterState => this.filter$.next(filterState));\n\n    // gets an obervable from GraphStateService that emits the matching graph state\n    // after this component emits values on this.filter$ or the IssueGraphComponent\n    // signals the need for a reload via this.issueGraph.reload$. Whenever new graph state\n    // arrives we pass it to the graph and issue a redraw on it.\n    this.gs.graphDataForFilter(this.filter$, this.issueGraph.reload$, this.destroy$).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(\n      graphData => {\n        this.issueGraph.graphData = graphData;\n        this.issueGraph.drawGraph();\n      }\n    );\n  }\n\n  /**\n   * Tell the graph component whether to show issue relations or not.\n   *\n   */\n  setRelationVisibility(): void {\n    this.issueGraph.setRelationVisibility(this.showRelations);\n  }\n\n  /**\n   * Cancel subscriptions by emitting a value on this.destroy$\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n      emoji_objects\n    \n\n    \n    \n      bug_report\n    \n\n      \n    \n      help\n    \n\n    \n    \n      \n    \n\n    \n    \n      center_focus_strong\n    \n\n    \n    \n      dashboard\n    \n\n    \n    \n\n    \n    \n      add\n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./issue-graph-controls.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\n.container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n}\n.container app-issue-graph {\n  flex-grow: 1;\n}\n\n.controls {\n  display: flex;\n  flex-direction: row;\n  background-color: $background-controls;\n  border-bottom: 1px solid $border-color-controls;\n}\n\n.controls app-label-search {\n  display: inline-block;\n    height: 44px;\n    flex-grow: 1;\n    margin-left: 20px;\n}\n\n.slide-toggle {\n  margin-left: 20px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.bug-report-icon {\n  color: red;\n}\n\n.feature-request-icon {\n  color: #005eff;\n}\n\n.feature-request-icon, .bug-report-icon, .notification-icon, .unclassified-icon {\n  margin-top: 7px;\n}\n\n.relation-edge-icon {\n  margin-top: 12px;\n}\n.create-component-button {\n  margin: 10px;\n  margin-left: 20px;\n  right: 10px;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  emoji_objects                  bug_report                    help                                    center_focus_strong                  dashboard                          add          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueGraphControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphDynamicTemplateRegistryService.html":{"url":"injectables/IssueGraphDynamicTemplateRegistryService.html","title":"injectable - IssueGraphDynamicTemplateRegistryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphDynamicTemplateRegistryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the dynamic template registry\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageDynamicTemplateRegistry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        manageDynamicTemplateRegistry\n                        \n                    \n                \n            \n            \n                \nmanageDynamicTemplateRegistry(graph: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts:21\n                \n            \n\n\n            \n                \n                    Manages the dynamic template registry of given GraphEditor instance.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as dynamicTemplate from '@ustutt/grapheditor-webcomponent/lib/dynamic-templates/dynamic-template';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {LinkHandle} from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the dynamic template registry \n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphDynamicTemplateRegistryService {\n\n  /**\n   * Manages the dynamic template registry of given GraphEditor instance.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   */\n  manageDynamicTemplateRegistry(graph: GraphEditor) {\n    graph.dynamicTemplateRegistry.addDynamicTemplate('issue-group-container', {\n      renderInitialTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n        g.append('circle')\n          .attr('x', 0)\n          .attr('y', 0)\n          .attr('r', 1)\n          .style('opacity', 0);\n      },\n      updateTemplate(\n        g,\n        grapheditor: GraphEditor,\n        context: dynamicTemplate.DynamicTemplateContext\n      ): void {\n        // template is empty\n      },\n      getLinkHandles(g, grapheditor: GraphEditor): LinkHandle[] {\n        // template has no link handles\n        return [];\n      },\n    } as dynamicTemplate.DynamicNodeTemplate);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphLinkHandlesService.html":{"url":"injectables/IssueGraphLinkHandlesService.html","title":"injectable - IssueGraphLinkHandlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphLinkHandlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is respoonsible for managing the link handles\nof a given GraphEditor instance.\nUsed in method initGraph of IssueGraphComponent.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateSourceHandles\n                            \n                            \n                                    Private\n                                calculateTargetHandles\n                            \n                            \n                                manageLinkHandles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateSourceHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateSourceHandles(source: Node, handles: literal type, sourceHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:65\n                \n            \n\n\n            \n                \n                    Calculates the source handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    sourceHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSource handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        calculateTargetHandles\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateTargetHandles(target: Node, handles: literal type, targetHandles: LinkHandle[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:101\n                \n            \n\n\n            \n                \n                    Calculates the target handles of a given edge.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget of the edge that is handled.\n\n\n                                    \n                                \n                                \n                                    handles\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nHandles of the edge.\n\n\n                                    \n                                \n                                \n                                    targetHandles\n                                    \n                                            LinkHandle[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nTarget handles of the edge.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        manageLinkHandles\n                        \n                    \n                \n            \n            \n                \nmanageLinkHandles(graph: GraphEditor, minimap: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts:22\n                \n            \n\n\n            \n                \n                    Manages calculation of the link handles of given GraphEditor instances.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    graph\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the graph that is handled.\n\n\n                                    \n                                \n                                \n                                    minimap\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nReference to the GraphEditor instance of the minimap that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {DraggedEdge, Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport { LinkHandle } from '@ustutt/grapheditor-webcomponent/lib/link-handle';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\n\n/**\n * This service is respoonsible for managing the link handles\n * of a given GraphEditor instance.\n * Used in method initGraph of IssueGraphComponent.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphLinkHandlesService {\n\n  /**\n   * Manages calculation of the link handles of given GraphEditor instances.\n   * @param  {GraphEditor} graph - Reference to the GraphEditor instance of the graph that is handled.\n   * @param  {GraphEditor} minimap - Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  manageLinkHandles(graph: GraphEditor, minimap: GraphEditor) {\n\n    // calculation for link handles\n    const linkHandleCalculation = (\n      edge: Edge | DraggedEdge,\n      sourceHandles: LinkHandle[],\n      source: Node,\n      targetHandles: LinkHandle[],\n      target: Node\n    ) => {\n\n      // handles at the source / target of a given edge\n      const handles = {\n        sourceHandles,\n        targetHandles,\n      };\n\n      // case: source of edge has allowed anchors\n      // => calculates source handles\n      if (source?.allowedAnchors != null) {\n        this.calculateSourceHandles(source, handles, sourceHandles);\n      }\n\n      // case: target of edge has allowed anchors\n      // => calculates target handles\n      if (target?.allowedAnchors != null) {\n        this.calculateTargetHandles(target, handles, targetHandles);\n      }\n\n      return handles;\n    };\n\n    // applies calculaiton for link handles\n    graph.calculateLinkHandlesForEdge = linkHandleCalculation;\n    minimap.calculateLinkHandlesForEdge = linkHandleCalculation;\n  }\n\n  /**\n   * Calculates the source handles of a given edge.\n   * @param  {Node} source - Source of the edge that is handled.\n   * @param  {{sourceHandles:LinkHandle[];targetHandles:LinkHandle[];}} handles - Handles of the edge.\n   * @param  {LinkHandle[]} sourceHandles - Source handles of the edge.\n   */\n  private calculateSourceHandles(source: Node, \n    handles: { sourceHandles: LinkHandle[]; targetHandles: LinkHandle[]; }, \n    sourceHandles: LinkHandle[]) {\n\n    handles.sourceHandles = sourceHandles.filter((linkHandle) => {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && source.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && source.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y  {\n\n      // case: X coordinate of link handle further than the Y coordinate\n      if (Math.abs(linkHandle.x) > Math.abs(linkHandle.y)) {\n        if (linkHandle.x > 0 && target.allowedAnchors.has('right')) {\n          return true;\n        }\n        if (linkHandle.x  0 && target.allowedAnchors.has('bottom')) {\n          return true;\n        }\n        if (linkHandle.y \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueGraphStateService.html":{"url":"injectables/IssueGraphStateService.html","title":"injectable - IssueGraphStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueGraphStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue-graph/issue-graph-state.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConsumedInterface\n                            \n                            \n                                graphDataForFilter\n                            \n                            \n                                removeConsumedInterface\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: IssueGraphApiService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        IssueGraphApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addConsumedInterface\n                        \n                    \n                \n            \n            \n                \naddConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:44\n                \n            \n\n\n            \n                \n                    Make the interface with interfaceId a consumed interface of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphDataForFilter\n                        \n                    \n                \n            \n            \n                \ngraphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject, destroy$: ReplaySubject)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:28\n                \n            \n\n\n            \n                \n                    Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\nemitting graph state for these filters retrieved from the backend.\nthe filter$ or reload$ observables emit a value.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter$\n                                    \n                                                BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting a sequence of values describing the state of the filter bar above the graph\n\n                                    \n                                \n                                \n                                    reload$\n                                    \n                                            BehaviorSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n\n                                    \n                                \n                                \n                                    destroy$\n                                    \n                                            ReplaySubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        used to signal that the caller is no longer interested. On emission the returned observable finishes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\nthe filter$ or reload$ observables emit a value.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeConsumedInterface\n                        \n                    \n                \n            \n            \n                \nremoveConsumedInterface(componentId: string, interfaceId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue-graph/issue-graph-state.service.ts:51\n                \n            \n\n\n            \n                \n                    Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interfaceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/issue-graph/issue-graph-state.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, ReplaySubject} from 'rxjs';\nimport {StateService} from '@app/state.service';\nimport {GraphData} from './graph-data';\nimport {filter, shareReplay, switchMap, takeUntil} from 'rxjs/operators';\nimport {IssueGraphApiService} from './issue-graph-api.service';\nimport {FilterState} from '@app/graphs/shared';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueGraphStateService {\n\n  state$: Observable;\n\n  constructor(private apiService: IssueGraphApiService, private ss: StateService) {\n  }\n\n  /**\n   * Maps an observable of the state of the graph filters (toggles and queries in search bar) onto an observable\n   * emitting graph state for these filters retrieved from the backend.\n   * @param filter$ an observable emitting a sequence of values describing the state of the filter bar above the graph\n   * @param reload$ an observable emitting irrelevant values to signal a reload is required, after a manipulation of graph data\n   * @param destroy$ used to signal that the caller is no longer interested. On emission the returned observable finishes.\n   * @returns observable emitting sequence of graph states containing e.g. components and interfaces. It will emit new values when\n   * the filter$ or reload$ observables emit a value.\n   */\n  graphDataForFilter(filter$: BehaviorSubject, reload$: BehaviorSubject,\n                     destroy$: ReplaySubject): Observable {\n    // Whenever a new value arrives from reload$, loadIssueGraphData is executed\n    this.state$ = combineLatest([this.ss.state$, filter$, reload$]).pipe(\n      takeUntil(destroy$),\n      filter(([appState, _]) => appState.project?.node.id != null),\n      switchMap(([appState, filterState]) => this.apiService.loadIssueGraphData(appState.project.node.id,\n        filterState.selectedCategories, filterState.selectedFilter.labels, filterState.selectedFilter.texts)),\n      shareReplay(1)\n    );\n    return this.state$;\n  }\n\n  /**\n   * Make the interface with interfaceId a consumed interface of the component with id componentId\n   */\n  addConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.addConsumedInterface(componentId, interfaceId);\n  }\n\n  /**\n   * Remove the interface with interfaceId from consumed interfaces of the component with id componentId\n   */\n  removeConsumedInterface(componentId: string, interfaceId: string) {\n    return this.apiService.removeConsumedInterface(componentId, interfaceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerBehaviour.html":{"url":"classes/IssueGroupContainerBehaviour.html","title":"class - IssueGroupContainerBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captureChildMovement\n                            \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterNodeJoinedGroup\n                            \n                            \n                                afterNodeLeftGroup\n                            \n                            \n                                relativePositionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        captureChildMovement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:93\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeJoinedGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterNodeLeftGroup\n                        \n                    \n                \n            \n            \n                \nafterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                                IssueGroupContainerNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relativePositionChanged\n                        \n                    \n                \n            \n            \n                \nrelativePositionChanged(group: string, groupNode: Node, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueGroupContainerNode.html":{"url":"interfaces/IssueGroupContainerNode.html","title":"interface - IssueGroupContainerNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueGroupContainerNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroupNodeIds\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupNodeIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupNodeIds:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IssueGroupContainerParentBehaviour.html":{"url":"classes/IssueGroupContainerParentBehaviour.html","title":"class - IssueGroupContainerParentBehaviour","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IssueGroupContainerParentBehaviour\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/group-behaviours.ts\n        \n\n\n            \n                Description\n            \n            \n                See the graph_structure_documentation.png in the src/app/graphs folder for how\nthe two GroupBehaviour implementations interplay with the graph.\n\n            \n\n\n            \n                Implements\n            \n            \n                        GroupBehaviour\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                childNodePositions\n                            \n                            \n                                moveChildrenAlongGoup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beforeNodeMove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialPosition: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialPosition\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        childNodePositions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveChildrenAlongGoup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/issue-graph/group-behaviours.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beforeNodeMove\n                        \n                    \n                \n            \n            \n                \nbeforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/issue-graph/group-behaviours.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    childNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newPosition\n                                    \n                                            Point\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphEditor\n                                    \n                                            GraphEditor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {GroupBehaviour} from '@ustutt/grapheditor-webcomponent/lib/grouping';\nimport {Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {IssueGroupContainerNode, NodeType} from './issue-graph-nodes';\n\nfunction distance(x, y, x2, y2) {\n  return ((x - x2) ** 2) + ((y - y2) ** 2);\n}\n\n/**\n * See the graph_structure_documentation.png in the src/app/graphs folder for how\n * the two GroupBehaviour implementations interplay with the graph.\n */\n\nexport class IssueGroupContainerParentBehaviour implements GroupBehaviour {\n  moveChildrenAlongGoup = true;\n  childNodePositions = new Map();\n\n  constructor(private initialPosition: string) {\n  }\n\n  beforeNodeMove(group: string, childGroup: string, groupNode: Node, childNode: Node, newPosition: Point, graphEditor: GraphEditor) {\n    // calculate groupNode (the parent node) dimensions\n    const width = groupNode.type === NodeType.Interface ? 10 : 100;\n    const height = groupNode.type === NodeType.Interface ? 10 : 60;\n    // find nearest side\n    let best = 'bottom';\n    if (newPosition != null && (newPosition.x !== 0 || newPosition.y !== 0)) {\n      let bestDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y + (height / 2) + 25);\n      const rightDistance = distance(newPosition.x, newPosition.y, groupNode.x + (width / 2) + 30, groupNode.y);\n      const leftDistance = distance(newPosition.x, newPosition.y, groupNode.x - (width / 2) - 30, groupNode.y);\n      const topDistance = distance(newPosition.x, newPosition.y, groupNode.x, groupNode.y - (height / 2) - 25);\n      if (rightDistance  0 ? (places / 2) : 0;\n    let xOffset = 0;\n    let yOffset = 0;\n\n    if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n      xOffset = startOffset * 45;\n    }\n    if (groupNode.position === 'right' || groupNode.position === 'left') {\n      yOffset = -startOffset * 35;\n    }\n\n    // order of sortedChildIds decides order of rendering\n    const sortedChildIds = Object.keys(IssueCategory)\n      .map(key => `${parent}__${IssueCategory[key]}`)\n      .filter(childId => children.has(childId));\n\n    // pre sorted list\n    /*\n    const sortedChildIds = [\n        `${parent}__undecided`,\n        `${parent}__bug`,\n        `${parent}__feature`,\n    ].filter(childId => children.has(childId));\n    */\n    sortedChildIds.forEach((childId, index) => {\n      this.childNodePositions.set(childId, {x: xOffset, y: yOffset});\n      const child = graphEditor.getNode(childId);\n      if (child != null) {\n        child.x = groupNode.x + xOffset;\n        child.y = groupNode.y + yOffset;\n      }\n      if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n        xOffset -= 45;\n      }\n      if (groupNode.position === 'right' || groupNode.position === 'left') {\n        yOffset += 35;\n      }\n      // set allowed link anchors\n      const allowedAnchors = new Set();\n      allowedAnchors.add(groupNode.position);\n      if (index === 0) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('right');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('top');\n        }\n      }\n      if (index === (sortedChildIds.length - 1)) {\n        if (groupNode.position === 'bottom' || groupNode.position === 'top') {\n          allowedAnchors.add('left');\n        }\n        if (groupNode.position === 'right' || groupNode.position === 'left') {\n          allowedAnchors.add('bottom');\n        }\n      }\n      const childNode = graphEditor.getNode(childId);\n      if (childNode != null) {\n        childNode.allowedAnchors = allowedAnchors;\n      }\n    });\n  }\n\n  afterNodeJoinedGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.add(childGroup);\n  }\n\n  afterNodeLeftGroup(group: string, childGroup: string, groupNode: IssueGroupContainerNode, childNode: Node, graphEditor: GraphEditor) {\n    this.relativePositionChanged(group, groupNode, graphEditor);\n    groupNode.issueGroupNodeIds.delete(childGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueIconComponent.html":{"url":"components/IssueIconComponent.html","title":"component - IssueIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-icon/issue-icon.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component automatically displays the appropriate mat-icon for the given issue.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-icon\n            \n\n            \n                styleUrls\n                ./issue-icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIconLabel\n                            \n                            \n                                getIconName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-icon/issue-icon.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIconLabel\n                        \n                    \n                \n            \n            \n                \ngetIconLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIconName\n                        \n                    \n                \n            \n            \n                \ngetIconName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-icon/issue-icon.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue, IssueCategory } from 'src/generated/graphql-dgql';\n\n/**\n * This component automatically displays the appropriate mat-icon for the given issue.\n */\n@Component({\n  selector: 'app-issue-icon',\n  templateUrl: './issue-icon.component.html',\n  styleUrls: ['./issue-icon.component.scss']\n})\nexport class IssueIconComponent {\n  @Input() issue: Issue;\n\n  getIconName() {\n    let category;\n    if (this.issue.category === IssueCategory.Bug) {\n      category = 'bug';\n    } else if (this.issue.category === IssueCategory.FeatureRequest) {\n      category = 'feature';\n    } else {\n      category = 'uncategorized';\n    }\n    const closed = this.issue.isOpen ? null : '-closed';\n\n    const hasIn = this.issue.linkedByIssues?.totalCount;\n    const hasOut = this.issue.linksToIssues?.totalCount;\n    const edgeType = (hasIn ? 'in' : '') + (hasOut ? 'out' : '');\n\n    return ['issue-', category, closed, edgeType && '-', edgeType].filter(part => part).join('');\n  }\n\n  getIconLabel() {\n    const category = this.issue.category === IssueCategory.Bug ? 'bug'\n      : this.issue.category === IssueCategory.FeatureRequest ? 'feature' : 'issue';\n    return this.issue.isOpen ? `Open ${category}` : `Closed ${category}`;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./issue-icon.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n:host > * {\n  // get rid of bottom space caused by line height\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueItemComponent.html":{"url":"components/IssueItemComponent.html","title":"component - IssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-item/issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays an issue (for use in e.g. a list).\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-item\n            \n\n            \n                styleUrls\n                ./issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                extended\n                            \n                            \n                                interactive\n                            \n                            \n                                issue\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        extended\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:17\n                            \n                        \n                \n                    \n                        Whether to show extended info, such as the issue's locations.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        interactive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:19\n                            \n                        \n                \n                    \n                        If true, this component will display a hyperlink.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        issue\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:15\n                            \n                        \n                \n                    \n                        The issue object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-item/issue-item.component.ts:13\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIssueLink\n                        \n                    \n                \n            \n            \n                \ngetIssueLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-item/issue-item.component.ts:24\n                \n            \n\n\n            \n                \n                    Returns the link URL for the issue.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Issue } from 'src/generated/graphql-dgql';\nimport { Router } from '@angular/router';\n\n/** This component displays an issue (for use in e.g. a list). */\n@Component({\n  selector: 'app-issue-item',\n  templateUrl: './issue-item.component.html',\n  styleUrls: ['./issue-item.component.scss']\n})\nexport class IssueItemComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The issue object that will be displayed. */\n  @Input() issue: Issue;\n  /** Whether to show extended info, such as the issue's locations. */\n  @Input() extended = false;\n  /** If true, this component will display a hyperlink. */\n  @Input() interactive = false;\n\n  constructor(private router: Router) {}\n\n  /** Returns the link URL for the issue. */\n  getIssueLink() {\n    return this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issue.id]\n    ));\n  }\n}\n\n    \n\n    \n        \n  \n  {{issue.title}}\n\n\n  \n  {{issue.title}}\n\n\n  \n    {{component.name}}\n  \n\n\n    \n\n    \n                \n                    ./issue-item.component.scss\n                \n                :host {\n  line-height: 1.4em;\n\n  .issue-icon {\n    vertical-align: middle;\n  }\n\n  .linked-issue-locations {\n    font-size: 0.8em;\n    font-weight: normal;\n\n    .inner-item {\n      display: inline-block;\n      line-height: 1.2em;\n      background: rgba(0, 0, 0, 0.2);\n      border-radius: 2px;\n      padding: 1px 2px;\n      margin-right: 2px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{issue.title}}    {{issue.title}}      {{component.name}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLabelComponent.html":{"url":"components/IssueLabelComponent.html","title":"component - IssueLabelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLabelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-label/issue-label.component.ts\n\n\n\n    \n        Description\n    \n    \n        Renders an issue label.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-label\n            \n\n            \n                styleUrls\n                ./issue-label.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-label.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isColorDark\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     Label\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-label/issue-label.component.ts:37\n                            \n                        \n                \n                    \n                        The label to display. Nullable. Should have properties name and color.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isColorDark\n                        \n                    \n                \n            \n            \n                \n                    \n                    isColorDark(color?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-label/issue-label.component.ts:44\n                \n            \n\n\n            \n                \n                    Determines whether the color is light or dark.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        label color - any CSS color string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Label } from 'src/generated/graphql-dgql';\n\nconst colorTestCanvas = document.createElement('canvas');\ncolorTestCanvas.width = colorTestCanvas.height = 1;\nconst colorTestCtx = colorTestCanvas.getContext('2d');\n\n/**\n * Reads a CSS color into an RGB tuple.\n * Undefined behavior if the string is not a valid color.\n *\n * @param color a CSS color string\n * @return RGB tuple in the 0..255 range\n */\nfunction readCssColor(color: string): [number, number, number] {\n  try {\n    colorTestCtx.fillStyle = color;\n    colorTestCtx.fillRect(0, 0, 1, 1);\n    const imageData = colorTestCtx.getImageData(0, 0, 1, 1);\n    return [imageData.data[0], imageData.data[1], imageData.data[2]];\n  } catch {\n    // getImageData may fail in rare cases(?) so we'll simply return garbage\n    return [NaN, NaN, NaN];\n  }\n}\n\n/**\n * Renders an issue label.\n */\n@Component({\n  selector: 'app-issue-label',\n  templateUrl: './issue-label.component.html',\n  styleUrls: ['./issue-label.component.scss']\n})\nexport class IssueLabelComponent {\n  /** The label to display. Nullable. Should have properties `name` and `color`. */\n  @Input() label: Label;\n\n  /**\n   * Determines whether the color is light or dark.\n   *\n   * @param color label color - any CSS color string\n   */\n  public isColorDark(color?: string) {\n    if (!color) {\n      return false;\n    }\n\n    const [r, g, b] = readCssColor(color);\n\n    // HSP (Hue-Sat-Perceived-brightness) equation from http://alienryderflex.com/hsp.html\n    const hsp = Math.sqrt(\n      0.299 * (r * r) +\n      0.587 * (g * g) +\n      0.114 * (b * b)\n    );\n\n    // Using the HSP value, determine whether the color is light or dark\n    // Compare against gamma-adjusted tipping point\n    return hsp > Math.sqrt(0.5) * 255;\n  }\n}\n\n    \n\n    \n        \n    {{label?.name}}\n\n\n    \n\n    \n                \n                    ./issue-label.component.scss\n                \n                :host {\n  display: inline-block;\n}\n\n.inner-label {\n  display: inline-block;\n  color: white;\n  border-radius: 4px;\n  padding: 1px 2px;\n  margin: 1px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  &.is-dark-text {\n    color: black;\n    border: 1px solid rgba(0, 0, 0, 0.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label?.name}}'\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLabelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueListComponent.html":{"url":"components/IssueListComponent.html","title":"component - IssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-list/issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows all issues for a given component / interface.\nIt lets the user 1) filter through all the issues,\n2) create new issues and also 3) sort all issues in a separate table view.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-list\n            \n\n            \n                styleUrls\n                ./issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                allLabelsList\n                            \n                            \n                                    Public\n                                canCreateNewIssue\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                    Public\n                                    Optional\n                                component$\n                            \n                            \n                                    Public\n                                    Optional\n                                componentInterface$\n                            \n                            \n                                    Public\n                                componentInterfaceProvider\n                            \n                            \n                                    Private\n                                    Optional\n                                componentInterfaceSub\n                            \n                            \n                                    Private\n                                    Optional\n                                componentSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                    Optional\n                                list$\n                            \n                            \n                                paginator\n                            \n                            \n                                query\n                            \n                            \n                                    Public\n                                queryParamFilter\n                            \n                            \n                                searchIssuesDataArray\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                formatCategoryDescription\n                            \n                            \n                                formatCategoryIcon\n                            \n                            \n                                    Private\n                                getQueryParamFilter\n                            \n                            \n                                onAddClick\n                            \n                            \n                                    Private\n                                prepareIssueArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                listId\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, dialog: MatDialog, router: Router, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        listId\n                    \n                \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-list/issue-list.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filter: IssueFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:188\n                \n            \n\n\n            \n                \n                    Applies a given filter.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IssueFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nGiven filter to be applied.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(row: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:197\n                \n            \n\n\n            \n                \n                    Gets activated when an issue is clicked.\nNavigates the user to the corresponding issue page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nIssue that is clicked.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryDescription\n                        \n                    \n                \n            \n            \n                \nformatCategoryDescription(category: IssueCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:93\n                \n            \n\n\n            \n                \n                    Determines issue description depending on the given categiry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                            IssueCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue category.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue description.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatCategoryIcon\n                        \n                    \n                \n            \n            \n                \nformatCategoryIcon(issue: Issue)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:77\n                \n            \n\n\n            \n                \n                    Determines issue icon depending on the given category.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    issue\n                                    \n                                            Issue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe given issue.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Issue icon id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getQueryParamFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getQueryParamFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:163\n                \n            \n\n\n            \n                \n                    Gets the query param filter.\nIf it is set, the issue list shows only issues that match the given keyword.\nOtherwise all issues are displayed.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:245\n                \n            \n\n\n            \n                \n                    Opens a Create Issue dialog.\nAlso selects components and locations depending from which\nComponent / Interface page the Create Issue dialog was initiated.\nex. Interface I1 with Prvider Component C1 lead to an Interface Issue\nwith components: Component C1 and locations: Component C1, Interface I1\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        prepareIssueArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareIssueArray()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-list/issue-list.component.ts:207\n                \n            \n\n\n            \n                \n                    Prepares the issue array for the filter function.\nFor each issue a search string is defined.\nThe search string contains assignees, labels, and the author.\nThe filter funcion can search inside the string for keywords matching the given search string.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        allLabelsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canCreateNewIssue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['title', 'author', 'assignees', 'labels', 'category']\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        component$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        componentInterface$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentInterfaceProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentInterfaceSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        componentSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        list$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queryParamFilter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchIssuesDataArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-list/issue-list.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {CreateIssueDialogComponent} from '@app/dialogs/create-issue-dialog/create-issue-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {FormControl} from '@angular/forms';\nimport DataService from '@app/data-dgql';\nimport {ListId, ListType, NodeId, NodeType} from '@app/data-dgql/id';\nimport {DataList, DataNode} from '@app/data-dgql/query';\nimport {\n  Component as IComponent,\n  ComponentInterface,\n  Issue,\n  IssueCategory,\n  IssueFilter\n} from '../../generated/graphql-dgql';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component shows all issues for a given component / interface.\n * It lets the user 1) filter through all the issues,\n * 2) create new issues and also 3) sort all issues in a separate table view.\n */\n@Component({\n  selector: 'app-issue-list',\n  templateUrl: './issue-list.component.html',\n  styleUrls: ['./issue-list.component.scss']\n})\nexport class IssueListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() listId: ListId;\n  @Input() projectId: string;\n  public queryParamFilter = '';\n  public list$?: DataList;\n\n  // component that is observed\n  public component$?: DataNode;\n  private componentSub?: Subscription;\n\n  // interface that is observed\n  public componentInterface$?: DataNode;\n  private componentInterfaceSub?: Subscription;\n\n  // provider of the interface that is observed\n  public componentInterfaceProvider: NodeId;\n\n  // determines whether one can create new issues from a given component / interface page\n  // FIXME remove and use proper logic instead\n  public canCreateNewIssue = false;\n\n  public allLabelsList: ListId;\n\n  dataSource: MatTableDataSource;\n  columnsToDisplay = ['title', 'author', 'assignees', 'labels', 'category'];\n  searchIssuesDataArray: any;\n  validationFilter = new FormControl('');\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(QueryComponent) query: QueryComponent;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private dialog: MatDialog,\n    private router: Router,\n    private dataService: DataService\n  ) {\n  }\n\n  /**\n   * Determines issue icon depending on the given category.\n   * @param issue - The given issue.\n   * @returns Issue icon id.\n   */\n  formatCategoryIcon(issue: Issue): string {\n    switch (issue.category) {\n      case IssueCategory.Bug:\n        return issue.isOpen ? 'issue-bug' : 'issue-bug-closed';\n      case IssueCategory.FeatureRequest:\n        return issue.isOpen ? 'issue-feature' : 'issue-feature-closed';\n      case IssueCategory.Unclassified:\n        return issue.isOpen ? 'issue-uncategorized' : 'issue-uncategorized-closed';\n    }\n  }\n\n  /**\n   * Determines issue description depending on the given categiry.\n   * @param category - The given issue category.\n   * @returns Issue description.\n   */\n  formatCategoryDescription(category: IssueCategory): string {\n    switch (category) {\n      case IssueCategory.Bug:\n        return 'Bug';\n      case IssueCategory.FeatureRequest:\n        return 'Feature request';\n      case IssueCategory.Unclassified:\n        return 'Unclassified';\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.allLabelsList = {\n      node: this.listId.node,\n      type: ListType.Labels\n    };\n\n    if (this.listId.node.type === NodeType.Component) {\n      this.canCreateNewIssue = true;\n      this.component$ = this.dataService.getNode(this.listId.node);\n      this.componentSub = this.component$.subscribe();\n    } else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.canCreateNewIssue = true;\n      this.componentInterface$ = this.dataService.getNode(this.listId.node);\n      this.componentInterfaceSub = this.componentInterface$.subscribe();\n\n      this.componentInterface$.dataAsPromise().then(data => {\n        this.componentInterfaceProvider = {type: NodeType.Component, id: data.component.id};\n      });\n    }\n\n    // FIXME: a hack to fix the labels list on interfaces\n    if (this.listId.node.type === NodeType.ComponentInterface) {\n      const interfaceNode = this.dataService.getNode(this.listId.node);\n      interfaceNode.dataAsPromise().then(data => {\n        this.allLabelsList = {\n          node: {type: NodeType.Component, id: data.component.id},\n          type: ListType.Labels\n        };\n      });\n    }\n\n    this.list$ = this.dataService.getList(this.listId);\n    this.list$.count = 25;\n  }\n\n  ngAfterViewInit() {\n    this.query.listenTo(this.list$, data => {\n      this.dataSource = new MatTableDataSource(data ? [...data.values()] : []);\n      this.sort.sort(({id: 'category', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n      // FIXME use bespoke pagination/sorting/filtering\n      // this.dataSource.paginator = this.paginator;\n      this.dataSource.filter = this.getQueryParamFilter();\n      this.validationFilter.setValue(this.getQueryParamFilter());\n      this.prepareIssueArray();\n    });\n  }\n\n  ngOnDestroy() {\n    this.componentSub?.unsubscribe();\n    this.componentInterfaceSub?.unsubscribe();\n  }\n\n  /**\n   * Gets the query param filter.\n   * If it is set, the issue list shows only issues that match the given keyword.\n   * Otherwise all issues are displayed.\n   */\n  private getQueryParamFilter(): string {\n    let returnedFilter = '';\n    this.activatedRoute.queryParams.subscribe(\n      params => {\n\n        // case: query param filter is set\n        // => shows only matching issues\n        if (params.filter) {\n          this.queryParamFilter = params.filter;\n          returnedFilter = params.filter;\n        }\n\n          // case: query param filter is not set\n        // => shows all issues\n        else {\n          returnedFilter = '';\n        }\n      });\n    return returnedFilter;\n  }\n\n  /**\n   * Applies a given filter.\n   * @param filter - Given filter to be applied.\n   */\n  applyFilter(filter: IssueFilter) {\n    this.list$.filter = filter;\n  }\n\n  /**\n   * Gets activated when an issue is clicked.\n   * Navigates the user to the corresponding issue page.\n   * @param row - Issue that is clicked.\n   */\n  clickedOnRow(row: any) {\n    this.router.navigate(['/projects', this.projectId, 'issues', row.id]);\n  }\n\n  /**\n   * Prepares the issue array for the filter function.\n   * For each issue a search string is defined.\n   * The search string contains assignees, labels, and the author.\n   * The filter funcion can search inside the string for keywords matching the given search string.\n   */\n  private prepareIssueArray() {\n\n    // FIXME use API search\n    if (!this.list$.hasData) {\n      return;\n    }\n    this.searchIssuesDataArray = [...this.list$.current.values()];\n    for (const issue of this.searchIssuesDataArray) {\n      let additionalSearchString = '';\n      issue.assigneesString = '';\n      issue.labelsString = '';\n\n      // adds all assignees\n      for (const assignee of issue.assignees.nodes) {\n        additionalSearchString += ' ' + assignee.displayName;\n        issue.assigneesString += ' ' + assignee.displayName;\n      }\n\n      // adds all labels\n      for (const label of issue.labels.nodes) {\n        additionalSearchString += ' ' + label.name;\n        issue.labelsString += ' ' + label.name;\n      }\n\n      // adds the author\n      additionalSearchString += ' ' + issue.createdBy.displayName;\n\n      issue.search = additionalSearchString;\n    }\n  }\n\n  /**\n   * Opens a Create Issue dialog.\n   * Also selects components and locations depending from which\n   * Component / Interface page the Create Issue dialog was initiated.\n   * ex. Interface I1 with Prvider Component C1 lead to an Interface Issue\n   * with components: Component C1 and locations: Component C1, Interface I1\n   */\n  onAddClick() {\n\n    // FIXME move functionality so that the component can be reusable as a list\n\n    // case: node is a component\n    if (this.listId.node.type === NodeType.Component) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.component$.id]\n          },\n          width: '600px'\n        });\n    }\n\n    // case: node is an interface\n    else if (this.listId.node.type === NodeType.ComponentInterface) {\n      this.dialog.open(CreateIssueDialogComponent,\n        {\n          data: {\n            projectId: this.projectId,\n            components: [this.componentInterfaceProvider],\n            locations: [this.componentInterface$.id]\n          },\n          width: '600px'\n        });\n    }\n  }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n      \n      \n\n      \n      \n        \n          Create issue\n        \n      \n\n      \n      \n        \n\n          \n          \n            Title\n            \n             {{element.title}} \n          \n\n          \n          \n            Author\n            \n             {{element.createdBy.displayName}} \n          \n\n          \n          \n            Assignees\n            \n             {{element.assigneesString}} \n          \n\n          \n          \n            Labels\n            \n            \n              \n                \n              \n            \n          \n\n          \n          \n            Category\n            \n            \n              \n                \n                \n                {{this.formatCategoryDescription(element.category)}}\n              \n            \n          \n          \n          \n        \n      \n      \n      \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./issue-list.component.scss\n                \n                .mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201, 195, 201, 1);\n  cursor: pointer;\n}\n\n.table-container {\n  overflow: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      Create issue                                                                  Title                         {{element.title}}                                           Author                         {{element.createdBy.displayName}}                                           Assignees                         {{element.assigneesString}}                                           Labels                                                                                                                          Category                                                                                      {{this.formatCategoryDescription(element.category)}}                                                                                              '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssueLocationComponent.html":{"url":"components/IssueLocationComponent.html","title":"component - IssueLocationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssueLocationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/issue-location/issue-location.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays an issue location.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-location\n            \n\n            \n                styleUrls\n                ./issue-location.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue-location.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToLocationDetails\n                            \n                            \n                                isComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                location\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        location\n                    \n                \n                \n                    \n                        Type :     IssueLocation\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:17\n                            \n                        \n                \n                    \n                        The location object that will be displayed.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/issue-location/issue-location.component.ts:15\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToLocationDetails\n                        \n                    \n                \n            \n            \n                \ngoToLocationDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:28\n                \n            \n\n\n            \n                \n                    Navigates to the location's detail page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isComponent\n                        \n                    \n                \n            \n            \n                \nisComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/issue-location/issue-location.component.ts:23\n                \n            \n\n\n            \n                \n                    Returns true if the location refers to a component.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IssueLocation} from '../../../generated/graphql-dgql';\n\n/**\n * Displays an issue location.\n */\n@Component({\n  selector: 'app-issue-location',\n  styleUrls: ['./issue-location.component.scss'],\n  templateUrl: './issue-location.component.html'\n})\nexport class IssueLocationComponent {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** The location object that will be displayed. */\n  @Input() location: IssueLocation;\n\n  constructor(private router: Router) {\n  }\n\n  /** Returns true if the location refers to a component. */\n  isComponent(): boolean {\n    return (this.location as any).__typename === 'Component';\n  }\n\n  /** Navigates to the location's detail page. */\n  goToLocationDetails(): void {\n    if (this.isComponent()) {\n      this.router.navigate(['projects', this.projectId, 'component', this.location.id]);\n    } else {\n      this.router.navigate(['projects', this.projectId, 'interface', this.location.id]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{location.name}}\n    \n  \n\n\n\n  \n    \n    \n      {{location.name}}\n    \n  \n\n\n    \n\n    \n                \n                    ./issue-location.component.scss\n                \n                .dot {\n  height: 10px;\n  width: 10px;\n  background-color: black;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.interface-box {\n  background-color: rgb(0, 0, 0, 0.1);\n  border-radius: 5px;\n  text-align: center;\n  margin: 2px;\n  padding: 2px 4px 2px 4px;\n}\n\n.component-box {\n  background-color: rgb(9, 109, 217, 0.5);\n  border-color: black;\n  border-width: 2px;\n  border-style: solid;\n  border-radius: 5px 5px 5px 5px;\n  text-align: center;\n  margin: 2px;\n}\n\n.component-text {\n  font-size: 11pt;\n  font-family: 'Arial Narrow', Arial, sans-serif;\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{location.name}}                      {{location.name}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'IssueLocationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IssueNode.html":{"url":"interfaces/IssueNode.html","title":"interface - IssueNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IssueNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n            \n                Description\n            \n            \n                This file includes type definitions and creation functions (think constructors)\nfor nodes and edges that are added to the graph editor in order to visualize the project.\nSince the data that is stored with these differs based on what they represent (e.g.\ninterface vs component node) we give each their own type. We do this by extending\nthe Node class or the Edge class of the grapheditor. These classes are instantiated\nvia calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n\n            \n\n            \n                Extends\n            \n            \n                    Node\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            issueGroupContainer\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroupContainer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroupContainer:         IssueGroupContainerNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IssueGroupContainerNode\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IssueStoreService.html":{"url":"injectables/IssueStoreService.html","title":"injectable - IssueStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IssueStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/issue/issue-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides CRUD operations and linking for issues\nThe code for the mutations are automaticly generated by a code generator for the GraphQL schema\nbased on the definitions in the issue.graphql file in the same folder\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToLocation\n                            \n                            \n                                changeIssueCategory\n                            \n                            \n                                close\n                            \n                            \n                                commentIssue\n                            \n                            \n                                create\n                            \n                            \n                                deleteComment\n                            \n                            \n                                getAllTimelineItems\n                            \n                            \n                                getFullIssue\n                            \n                            \n                                link\n                            \n                            \n                                removeFromLocation\n                            \n                            \n                                rename\n                            \n                            \n                                reopen\n                            \n                            \n                                unlink\n                            \n                            \n                                updateComment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createIssue: CreateIssueGQL, linkIssue: LinkIssueGQL, getFullIssueQuery: GetIssueGQL, commentIssueMutation: CommentIssueGQL, deleteIssueCommentMutation: DeleteIssueCommentGQL, unlinkIssueMutation: UnlinkIssueGQL, closeIssueMutation: CloseIssueGQL, reopenIssueMutation: ReopenIssueGQL, renameIssueMutation: RenameIssueTitleGQL, changeIssueCategoryMutation: ChangeIssueCategoryGQL, addIssueToLocationMutation: AddIssueToLocationGQL, removeIssueFromLocationMutation: RemoveIssueFromLocationGQL, updateCommentMutation: UpdateCommentGQL, getAllTimelineItemsQuery: GetAllTimelineItemsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/issue/issue-store.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createIssue\n                                                  \n                                                        \n                                                                    CreateIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        linkIssue\n                                                  \n                                                        \n                                                                    LinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullIssueQuery\n                                                  \n                                                        \n                                                                    GetIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentIssueMutation\n                                                  \n                                                        \n                                                                    CommentIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteIssueCommentMutation\n                                                  \n                                                        \n                                                                    DeleteIssueCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unlinkIssueMutation\n                                                  \n                                                        \n                                                                    UnlinkIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        closeIssueMutation\n                                                  \n                                                        \n                                                                    CloseIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reopenIssueMutation\n                                                  \n                                                        \n                                                                    ReopenIssueGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renameIssueMutation\n                                                  \n                                                        \n                                                                    RenameIssueTitleGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeIssueCategoryMutation\n                                                  \n                                                        \n                                                                    ChangeIssueCategoryGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addIssueToLocationMutation\n                                                  \n                                                        \n                                                                    AddIssueToLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        removeIssueFromLocationMutation\n                                                  \n                                                        \n                                                                    RemoveIssueFromLocationGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateCommentMutation\n                                                  \n                                                        \n                                                                    UpdateCommentGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllTimelineItemsQuery\n                                                  \n                                                        \n                                                                    GetAllTimelineItemsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToLocation\n                        \n                    \n                \n            \n            \n                \naddToLocation(addLocationInput: AddIssueToLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addLocationInput\n                                    \n                                            AddIssueToLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIssueCategory\n                        \n                    \n                \n            \n            \n                \nchangeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changeIssueCategoryInput\n                                    \n                                            ChangeIssueCategoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(closeInput: CloseIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    closeInput\n                                    \n                                            CloseIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        commentIssue\n                        \n                    \n                \n            \n            \n                \ncommentIssue(commentIssueInput: AddIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentIssueInput\n                                    \n                                            AddIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(issueInput: CreateIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    issueInput\n                                    \n                                            CreateIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteComment\n                        \n                    \n                \n            \n            \n                \ndeleteComment(deleteIssueCommentInput: DeleteIssueCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteIssueCommentInput\n                                    \n                                            DeleteIssueCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllTimelineItems\n                        \n                    \n                \n            \n            \n                \ngetAllTimelineItems(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullIssue\n                        \n                    \n                \n            \n            \n                \ngetFullIssue(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n            \n                \nlink(linkIssueInput: LinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    linkIssueInput\n                                    \n                                            LinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromLocation\n                        \n                    \n                \n            \n            \n                \nremoveFromLocation(removeLocationInput: RemoveIssueFromLocationInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removeLocationInput\n                                    \n                                            RemoveIssueFromLocationInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rename\n                        \n                    \n                \n            \n            \n                \nrename(renameInput: RenameIssueTitleInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    renameInput\n                                    \n                                            RenameIssueTitleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reopen\n                        \n                    \n                \n            \n            \n                \nreopen(reopenInput: ReopenIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reopenInput\n                                    \n                                            ReopenIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlink\n                        \n                    \n                \n            \n            \n                \nunlink(unlinkIssueInput: UnlinkIssueInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unlinkIssueInput\n                                    \n                                            UnlinkIssueInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateComment\n                        \n                    \n                \n            \n            \n                \nupdateComment(updateCommentInput: UpdateCommentInput)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/issue/issue-store.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCommentInput\n                                    \n                                            UpdateCommentInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport {\n  AddIssueCommentInput,\n  CloseIssueGQL,\n  CommentIssueGQL,\n  CreateIssueGQL,\n  CreateIssueInput,\n  GetIssueGQL,\n  GetIssueQuery,\n  LinkIssueGQL,\n  LinkIssueInput,\n  UnlinkIssueGQL,\n  CloseIssueInput,\n  UnlinkIssueInput,\n  ReopenIssueGQL,\n  ReopenIssueInput,\n  RenameIssueTitleInput,\n  RenameIssueTitleGQL,\n  AddIssueToLocationInput,\n  RemoveIssueFromLocationInput,\n  AddIssueToLocationGQL,\n  RemoveIssueFromLocationGQL,\n  DeleteIssueCommentInput,\n  DeleteIssueCommentGQL,\n  UpdateCommentInput,\n  UpdateCommentGQL,\n  GetAllTimelineItemsGQL,\n  GetAllTimelineItemsQuery,\n  ChangeIssueCategoryGQL,\n  ChangeIssueCategoryInput\n} from 'src/generated/graphql';\nimport { Observable } from 'rxjs';\n/**\n * This service provides CRUD operations and linking for issues\n * The code for the mutations are automaticly generated by a code generator for the GraphQL schema\n * based on the definitions in the issue.graphql file in the same folder\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IssueStoreService {\n\n  constructor(private createIssue: CreateIssueGQL, private linkIssue: LinkIssueGQL, private getFullIssueQuery: GetIssueGQL,\n              private commentIssueMutation: CommentIssueGQL, private deleteIssueCommentMutation: DeleteIssueCommentGQL,\n              private unlinkIssueMutation: UnlinkIssueGQL,\n              private closeIssueMutation: CloseIssueGQL, private reopenIssueMutation: ReopenIssueGQL,\n              private renameIssueMutation: RenameIssueTitleGQL, \n              private changeIssueCategoryMutation: ChangeIssueCategoryGQL,\n              private addIssueToLocationMutation: AddIssueToLocationGQL,\n              private removeIssueFromLocationMutation: RemoveIssueFromLocationGQL,\n              private updateCommentMutation: UpdateCommentGQL,\n              private getAllTimelineItemsQuery: GetAllTimelineItemsGQL) {\n  }\n\n  create(issueInput: CreateIssueInput) {\n    return this.createIssue.mutate({input: issueInput});\n  }\n\n  link(linkIssueInput: LinkIssueInput) {\n    return this.linkIssue.mutate({input: linkIssueInput});\n  }\n\n  unlink(unlinkIssueInput: UnlinkIssueInput) {\n    return this.unlinkIssueMutation.mutate({input: unlinkIssueInput});\n  }\n\n  commentIssue(commentIssueInput: AddIssueCommentInput) {\n    return this.commentIssueMutation.mutate({input: commentIssueInput});\n  }\n\n  deleteComment(deleteIssueCommentInput: DeleteIssueCommentInput) {\n    return this.deleteIssueCommentMutation.mutate({input: deleteIssueCommentInput});\n  }\n\n  close(closeInput: CloseIssueInput) {\n    return this.closeIssueMutation.mutate({input: closeInput});\n  }\n\n  reopen(reopenInput: ReopenIssueInput) {\n    return this.reopenIssueMutation.mutate({input: reopenInput});\n  }\n\n  rename(renameInput: RenameIssueTitleInput) {\n    return this.renameIssueMutation.mutate({input: renameInput});\n  }\n\n  changeIssueCategory(changeIssueCategoryInput: ChangeIssueCategoryInput) {\n    return this.changeIssueCategoryMutation.mutate({input: changeIssueCategoryInput});\n  }\n\n  addToLocation(addLocationInput: AddIssueToLocationInput) {\n    return this.addIssueToLocationMutation.mutate({input: addLocationInput});\n  }\n\n  removeFromLocation(removeLocationInput: RemoveIssueFromLocationInput) {\n    return this.removeIssueFromLocationMutation.mutate({input: removeLocationInput});\n  }\n\n  updateComment(updateCommentInput: UpdateCommentInput) {\n    return this.updateCommentMutation.mutate({input: updateCommentInput});\n  }\n\n  getFullIssue(id: string): Observable {\n    return this.getFullIssueQuery.fetch({id}).pipe(\n      map(({data}) => data)\n    );\n  }\n\n  getAllTimelineItems(id: string): Observable{\n    return this.getAllTimelineItemsQuery.fetch({input: id}).pipe(\n      map(({data}) => data)\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ItemDirective.html":{"url":"directives/ItemDirective.html","title":"directive - ItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/item.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Used in various components as an Angular structural directive to define item templates.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appItem]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\n\n/** Used in various components as an Angular structural directive to define item templates. */\n@Directive({\n  selector: '[appItem]'\n})\nexport class ItemDirective {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LabelSearchComponent.html":{"url":"components/LabelSearchComponent.html","title":"component - LabelSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LabelSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/graphs/label-search/label-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the display of the search bar above the graph.\nIt allows for filtering issues by multiple labels and text fragments.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-label-search\n            \n\n            \n                styleUrls\n                ./label-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./label-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterSelection$\n                            \n                            \n                                labels$\n                            \n                            \n                                labelsInput$\n                            \n                            \n                                labelsLoading\n                            \n                            \n                                selectedLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitSelectedLabels\n                            \n                            \n                                    Private\n                                loadLabels\n                            \n                            \n                                trackByFn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(labelStore: LabelStoreService, ss: StateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        labelStore\n                                                  \n                                                        \n                                                                        LabelStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emitSelectedLabels\n                        \n                    \n                \n            \n            \n                \nemitSelectedLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:38\n                \n            \n\n\n            \n                \n                    Emit value representing label and text fragments in the search bar via this.filterSelection$\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLabels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:49\n                \n            \n\n\n            \n                \n                    Load all labels from backend that match the currently typed in ng-select element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(item: FilterLabel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/label-search/label-search.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                FilterLabel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterSelection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({labels: [], texts: []})\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labels$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsInput$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        labelsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterElement[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/label-search/label-search.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./label-search.component.scss\n                \n                .ng-select.label-select ::ng-deep .ng-select-container {\n  min-height: 0;\n}\n\n.ng-select.label-select ::ng-deep .ng-value-container {\n  border-top: 7px solid transparent;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LabelSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LabelStoreService.html":{"url":"injectables/LabelStoreService.html","title":"injectable - LabelStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LabelStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/label/label-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAllFilter\n                            \n                            \n                                getMatchingLabels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(getLabelsGQL: GetLabelsGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/label/label-store.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        getLabelsGQL\n                                                  \n                                                        \n                                                                    GetLabelsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getAllFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFilter(projectId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:36\n                \n            \n\n\n            \n                \n                    Retrieve all labels from backend\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of current project\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMatchingLabels\n                        \n                    \n                \n            \n            \n                \ngetMatchingLabels(projectId: string, term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/label/label-store.service.ts:23\n                \n            \n\n\n            \n                \n                    Retrieve labels matching term.\nwhoose name contains term\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    projectId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        id of current project\n\n                                    \n                                \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        coming from search bar above graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        observable emitting objects standing for labels that exist on backend\nwhoose name contains term\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  GetLabelsGQL,\n  Label,\n} from '../../../generated/graphql';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LabelStoreService {\n\n  constructor(private getLabelsGQL: GetLabelsGQL) {}\n\n  /**\n   * Retrieve labels matching term.\n   * @param projectId id of current project\n   * @param term coming from search bar above graph\n   * @returns observable emitting objects standing for labels that exist on backend\n   * whoose name contains term\n   */\n  getMatchingLabels(projectId: string, term: string = null): Observable {\n    if (!term) {\n      return this.getAllFilter(projectId);\n    }\n    return this.getAllFilter(projectId).pipe(\n      map(items => items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1))\n    );\n  }\n\n  /**\n   * Retrieve all labels from backend\n   * @param projectId id of current project\n   */\n  private getAllFilter(projectId: string): Observable {\n    return this.getLabelsGQL.fetch({projectId}).pipe(\n      map(({data}) => data.node.labels.nodes)\n    );\n  }\n}\n\nexport type FilterLabel = Pick;\n\nexport function isFilterLabel(label: any) {\n  return 'id' in label && 'name' in label && 'color' in label;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LayoutNode.html":{"url":"classes/LayoutNode.html","title":"class - LayoutNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LayoutNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is an abstract representation of a node in a graph\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connectedTo\n                            \n                            \n                                    Public\n                                fixed\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                MAX_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_CONNECTED\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_EDGE\n                            \n                            \n                                    Static\n                                    Readonly\n                                MIN_DISTANCE_NOT_CONNECTED\n                            \n                            \n                                    Readonly\n                                padding\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_COMPONENT\n                            \n                            \n                                    Static\n                                    Readonly\n                                PADDING_INTERFACE\n                            \n                            \n                                    Public\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                calculateMovement\n                            \n                            \n                                    Public\n                                connectTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string | number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionX\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        positionY\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nodeType\n                                                  \n                                                        \n                                                                        NodeType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:170\n                        \n                    \n\n            \n                \n                    Set of edges this node is connected to\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fixed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:167\n                        \n                    \n\n            \n                \n                    If true, this node will not move under any circumstance\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:161\n                        \n                    \n\n            \n                \n                    Node id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MAX_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:146\n                        \n                    \n\n            \n                \n                    The maximum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:149\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_EDGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:152\n                        \n                    \n\n            \n                \n                    The minimum spacing between a node and an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        MIN_DISTANCE_NOT_CONNECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 80\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:143\n                        \n                    \n\n            \n                \n                    The minimum spacing between two nodes if they are not connected by an edge\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        padding\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:173\n                        \n                    \n\n            \n                \n                    Padding to be added to this node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_COMPONENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:155\n                        \n                    \n\n            \n                \n                    The padding around a component node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        PADDING_INTERFACE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:158\n                        \n                    \n\n            \n                \n                    The padding around an interface node\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Vector\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:164\n                        \n                    \n\n            \n                \n                    Position of this node\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        calculateMovement\n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateMovement(allNodes: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:195\n                \n            \n\n\n            \n                \n                    Calculate the movement direction that this node should move in, based on all other nodes around it\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allNodes\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        All nodes, can include this node as well\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        The direction in which this node wants to travel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connectTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectTo(other: LayoutNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:186\n                \n            \n\n\n            \n                \n                    Create an edge between this node and another node.\nDoes not create a connection from the other node to this node!\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                LayoutNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other node\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkedIssueItemComponent.html":{"url":"components/LinkedIssueItemComponent.html","title":"component - LinkedIssueItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinkedIssueItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/linked-issue-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a linked issue in a list.\nBy default, only information from #issueStub will be displayed. When the user expands\nthe accordion card, the issue's body will be loaded separately.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue-detail-linked-issue-item\n            \n\n            \n                styleUrls\n                linked-issue-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                linked-issue-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullIssueLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                didOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                issueStub\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        issueStub\n                    \n                \n                \n                    \n                        Type :     Issue\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:24\n                            \n                        \n                \n                    \n                        Cursory information about the linked issue.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/linked-issue-item.component.ts:22\n                            \n                        \n                \n                    \n                        The raw project ID.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        didOpen\n                        \n                    \n                \n            \n            \n                \ndidOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/linked-issue-item.component.ts:42\n                \n            \n\n\n            \n                \n                    Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fullIssueLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/linked-issue-item.component.ts:27\n                        \n                    \n\n            \n                \n                    Link to the full issue page.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Issue } from '../../generated/graphql-dgql';\nimport { DataNode } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { NodeType } from '@app/data-dgql/id';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n/**\n * Displays a linked issue in a list.\n *\n * By default, only information from {@link #issueStub} will be displayed. When the user expands\n * the accordion card, the issue's body will be loaded separately.\n */\n@Component({\n  selector: 'app-issue-detail-linked-issue-item',\n  templateUrl: 'linked-issue-item.component.html',\n  styleUrls: ['linked-issue-item.component.scss']\n})\nexport class LinkedIssueItemComponent implements OnInit, OnDestroy {\n  /** The raw project ID. */\n  @Input() projectId: string;\n  /** Cursory information about the linked issue. */\n  @Input() issueStub: Issue;\n\n  /** Link to the full issue page. */\n  public fullIssueLink: string;\n  /** @ignore */\n  public fullIssue?: DataNode;\n  /** @ignore */\n  private fullIssueSub: Subscription;\n\n  constructor(private dataService: DataService, private router: Router) {}\n\n  ngOnInit() {\n    this.fullIssueLink = this.router.serializeUrl(this.router.createUrlTree(\n      ['/projects', this.projectId, 'issues', this.issueStub.id]\n    ));\n  }\n\n  /** Event handler for when the accordion is opened. Loads the full issue if it hasn't been loaded yet. */\n  didOpen() {\n    if (!this.fullIssue) {\n      this.fullIssue = this.dataService.getNode({\n        type: NodeType.Issue,\n        id: this.issueStub.id\n      });\n      this.fullIssueSub = this.fullIssue.subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this.fullIssueSub?.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            {{issueStub.title}}\n        \n        \n            {{component.name}}\n        \n    \n    \n        Loading…\n    \n    \n    \n        View Issue chevron_right\n    \n\n\n    \n\n    \n                \n                    linked-issue-item.component.scss\n                \n                .linked-issue-components {\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  .linked-issue-component {\n    &::after {\n      content: ',';\n      margin-right: 0.3em;\n    }\n    &:last-child::after {\n      content: none;\n    }\n  }\n}\n\n.body-loading {\n  min-height: 56px; // some sort of body height so that the animation doesn't glitch out *too* badly\n  text-align: center;\n  opacity: 0.7;\n}\n\n.issue-buttons {\n  text-align: right;\n  margin-top: 8px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{issueStub.title}}                            {{component.name}}                        Loading…                    View Issue chevron_right    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LinkedIssueItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListId.html":{"url":"interfaces/ListId.html","title":"interface - ListId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a list of items.\nLists are always attached to a specific node.\nFor example, a list of issues may be attached to a project or a component.\nLists that do not have a specific parent node in the backend API are attached to the\nROOT_NODE.\nExamples\nThe list of all issues on a component:\n{ node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }The list of linked issues on an issue:\n{ node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            node\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The parent node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         ListType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of list.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListParams.html":{"url":"interfaces/ListParams.html","title":"interface - ListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                List cursor and filter.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cursor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            forward\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Max number of items to load.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cursor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cursor:         NodeId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Cursor node.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forward:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to look forward from the cursor, or backwards.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for the login screen. It gather username and password\nand tries to login the user via the AuthenticationService.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                invalidCredentials\n                            \n                            \n                                isLoading\n                            \n                            \n                                returnUrl\n                            \n                            \n                                unknownError\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, router: Router, authService: AuthenticationService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:29\n                \n            \n\n\n            \n                \n                    Gather username and password from form and try login via AuthenticationService.\nIf successfull redirect to root url or to the redirectUrl the user originally wanted to access.\nIf login fails, set this.invalidCredentials so that gui shows error.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        invalidCredentials\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unknownError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {first} from 'rxjs/operators';\nimport {AuthenticationService} from '../auth/authentication.service';\nimport {HttpErrorResponse} from '@angular/common/http';\n\n/**\n * This component is responsible for the login screen. It gather username and password\n * and tries to login the user via the AuthenticationService.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  validateForm!: FormGroup;\n  returnUrl: string;\n  isLoading = false;\n  invalidCredentials = false;\n  unknownError = false;\n\n  /**\n   * Gather username and password from form and try login via AuthenticationService.\n   * If successfull redirect to root url or to the redirectUrl the user originally wanted to access.\n   * If login fails, set this.invalidCredentials so that gui shows error.\n   */\n  submitForm(): void {\n    Object.keys(this.validateForm.controls).forEach(controlKey => {\n      this.validateForm.controls[controlKey].markAsDirty();\n      this.validateForm.controls[controlKey].updateValueAndValidity();\n    });\n    this.isLoading = true;\n    this.authService.login(this.validateForm.controls.userName.value, this.validateForm.controls.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.router.navigate([this.returnUrl]);\n        },\n        (error: HttpErrorResponse) => {\n          this.validateForm.controls.password.reset();\n          this.isLoading = false;\n          this.invalidCredentials = error.status === 401;\n          this.unknownError = error.status === 0;\n        });\n  }\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private authService: AuthenticationService, private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.validateForm = this.fb.group({\n      userName: [null, [Validators.required]],\n      password: [null, [Validators.required]],\n    });\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Login\n    \n    \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n      \n      \n      Log in\n      \n      Or register!\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .login-form {\n  max-width: 300px;\n  margin: auto;\n}\n\n.login-form-margin {\n  margin-bottom: 16px;\n}\n\n.login-form-forgot {\n  float: right;\n}\n\n.login-form-button {\n  width: 100%;\n}\n\n.error-message {\n  margin-bottom: 24px;\n}\n\n#register-link {\n  font-size: larger;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Login                                                                                                                                                  Log in            Or register!      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownEditorComponent.html":{"url":"components/MarkdownEditorComponent.html","title":"component - MarkdownEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-editor/markdown-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component contains a monaco markdown editor with syntax highlighting\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-markdown-editor\n            \n\n            \n                styleUrls\n                ./markdown-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editorOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeDidChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                codeChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:20\n                            \n                        \n                \n                    \n                        This code is initially displayed in the editor\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        codeChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:24\n                            \n                        \n                \n                    \n                        Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        codeDidChange\n                        \n                    \n                \n            \n            \n                \ncodeDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:29\n                \n            \n\n\n            \n                \n                    Send changes in the editor to the parent component over the EventEmitter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {theme: 'vs', language: 'markdown'}\n                    \n                \n                    \n                        \n                                Defined in src/app/markdown/markdown-editor/markdown-editor.component.ts:16\n                        \n                    \n\n            \n                \n                    necessary options for usage of ngx-monaco-editor\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * This component contains a monaco markdown editor with syntax highlighting\n */\n@Component({\n  selector: 'app-markdown-editor',\n  templateUrl: './markdown-editor.component.html',\n  styleUrls: ['./markdown-editor.component.scss']\n})\nexport class MarkdownEditorComponent {\n\n  /**\n   * necessary options for usage of ngx-monaco-editor\n   */\n  editorOptions = {theme: 'vs', language: 'markdown'};\n  /**\n   * This code is initially displayed in the editor\n   */\n  @Input() code: string;\n  /**\n   * Necessary for communicating changes to the parent when changes have been made to the code in the editor.\n   */\n  @Output() codeChange = new EventEmitter();\n\n  /**\n   * Send changes in the editor to the parent component over the EventEmitter\n   */\n  codeDidChange() {\n    this.codeChange.emit(this.code);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n\n    \n\n    \n                \n                    ./markdown-editor.component.scss\n                \n                .editorContainer{\n  margin-bottom: 20px;\n  border-color: #e6e6e6;\n  border-style: solid;\n  border-width: 1px;\n  border-radius: 6px;\n\n}\n\n.preview{\n  white-space: pre-wrap;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownPreviewComponent.html":{"url":"components/MarkdownPreviewComponent.html","title":"component - MarkdownPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MarkdownPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/markdown/markdown-preview/markdown-preview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component renders and displays markdown\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                true\n            \n\n\n\n            \n                selector\n                app-markdown-preview\n            \n\n            \n                styleUrls\n                ./markdown-preview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./markdown-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayedCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayedCode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/markdown/markdown-preview/markdown-preview.component.ts:17\n                            \n                        \n                \n                    \n                        The markdown code as a string which will be rendered\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n/**\n * This component renders and displays markdown\n */\n@Component({\n  selector: 'app-markdown-preview',\n  templateUrl: './markdown-preview.component.html',\n  styleUrls: ['./markdown-preview.component.scss'],\n  preserveWhitespaces: true\n})\nexport class MarkdownPreviewComponent implements OnInit {\n\n  /**\n   * The markdown code as a string which will be rendered\n   */\n  @Input() displayedCode: string;\n\n  /**\n   * @ignore (Keyword for compodoc documentation generator)\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./markdown-preview.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MultiSourceList.html":{"url":"classes/MultiSourceList.html","title":"class - MultiSourceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MultiSourceList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMore\n                            \n                            \n                                    Public\n                                limit\n                            \n                            \n                                    Public\n                                query\n                            \n                            \n                                    Public\n                                    Optional\n                                results\n                            \n                            \n                                    Public\n                                scoreKeys\n                            \n                            \n                                    Public\n                                    Optional\n                                sourceNodeList\n                            \n                            \n                                    Public\n                                sources\n                            \n                            \n                                    Public\n                                spec\n                            \n                            \n                                    Public\n                                    Optional\n                                staticSourceNodeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromSingleList\n                            \n                            \n                                isLoading\n                            \n                            \n                                score\n                            \n                            \n                                setFilter\n                            \n                            \n                                unsubscribe\n                            \n                            \n                                update\n                            \n                            \n                                updateResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spec: SetMultiSource, scoreKeys: string[], dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spec\n                                                  \n                                                        \n                                                                        SetMultiSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scoreKeys\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:60\n                        \n                    \n\n            \n                \n                    If true, there are more than limit items in the source data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:56\n                        \n                    \n\n            \n                \n                    Max number of items in results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:65\n                        \n                    \n\n            \n                \n                    Current search query. Used to rank results by relevance.\nThe filters are computed separately! Use #setFilter to set both simultaneously.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:58\n                        \n                    \n\n            \n                \n                    Current results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        scoreKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        sourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A DataList that loads the value of sourceNodes, if it's a ListId.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sources\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:49\n                        \n                    \n\n            \n                \n                    List of all sources that will be included in the results.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spec\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SetMultiSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        staticSourceNodeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeId[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:47\n                        \n                    \n\n            \n                \n                    The list of nodes specified in sourceNodes, if it's a NodeId[].\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fromSingleList\n                        \n                    \n                \n            \n            \n                \n                    \n                    fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:78\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        F\n                    \n                \n            \n\n            \n                \n                    Creates a new MultiSourceList that actually just loads a single list.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                ListId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreKeys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataService\n                                    \n                                                DataService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MultiSourceList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n            \n                \nisLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:165\n                \n            \n\n\n            \n                \n                    If true, something is loading somewhere.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n            \n                \nscore(item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:122\n                \n            \n\n\n            \n                \n                    Scores an item for ranking in results.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilter\n                        \n                    \n                \n            \n            \n                \nsetFilter(query: string, filter: F)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:114\n                \n            \n\n\n            \n                \n                    Sets a filter on all lists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:179\n                \n            \n\n\n            \n                \n                    Unsubscribes from all subscriptions. This object should no longer be used afterwards.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:83\n                \n            \n\n\n            \n                \n                    Updates lists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResults\n                        \n                    \n                \n            \n            \n                \nupdateResults()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:141\n                \n            \n\n\n            \n                \n                    Updates the results array from loaded data.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NodeCache.html":{"url":"classes/NodeCache.html","title":"class - NodeCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NodeCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/query.ts\n        \n\n\n            \n                Description\n            \n            \n                Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createNode\n                            \n                            \n                                getNode\n                            \n                            \n                                insertNodes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(queries: QueriesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/query.ts:653\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queries\n                                                  \n                                                        \n                                                                        QueriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/query.ts:653\n                        \n                    \n\n            \n                \n                    Internal node storage. Do not use directly.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createNode\n                        \n                    \n                \n            \n            \n                \n                    \n                    createNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:658\n                \n            \n\n\n            \n                \n                    Creates a new node.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNode\n                        \n                    \n                \n            \n            \n                \ngetNode(id: NodeId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:664\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Returns the DataNode for the given NodeId.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                NodeId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DataNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        insertNodes\n                        \n                    \n                \n            \n            \n                \ninsertNodes(nodes: T[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/query.ts:678\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Inserts nodes into the cache and returns them as a map (in the same order).\nNote: the ID parameter of the node is only optional for type compatibility with the GQL schema.\nNodes without an ID will be ignored.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Map\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subscriber } from 'rxjs';\nimport {\n  decodeNodeId,\n  encodeNodeId,\n  ListId,\n  ListParams,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename,\n} from './id';\nimport { QueriesService } from './queries/queries.service';\nimport { ListResult, queryList, queryNode } from './load';\nimport { PageInfo } from '../../generated/graphql-dgql';\n\n/** How long {@link DataQuery} will wait to debounce requests until actually sending a request, in milliseconds. */\nconst CACHE_FAST_DEBOUNCE_TIME_MS = 200;\n/** How long {@link DataQuery} will wait to debounce requests, if the {@link DataQuery#interactive} flag is set, in milliseconds. */\nconst CACHE_INTERACTIVE_DEBOUNCE_TIME_MS = 500;\n/** Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added. */\nconst CACHE_STALE_TIME_MS = 5000;\n\n/**\n * A piece of observable data.\n *\n * DataQuery is a stateful interface for interacting with an API object.\n * Instead of calling a function to make an API request, DataQuery lets you declare the ID (like an endpoint) and\n * request parameters (in {@link #params}) of the data you want, and will automatically load the data when needed.\n * Data can then be accessed synchronously with the {@link #current} property.\n *\n * Upon adding a subscriber with [#subscribe]{@link Observable#subscribe}, data will loaded from the API and stored in the\n * cache. Subsequent viewers can then immediately access the cached data.\n *\n * - To check if data is loaded, use {@link #hasData},\n *   and to check if data is still loading, use {@link #loading}.\n * - To (re-)load the data from the API, use {@link #load}.\n *   This happens automatically upon subscription after a sufficient delay (see debounce time constants).\n * - To add a subscriber without triggering this behavior, use {@link #subscribeLazy}, which will\n *   only make an API request if the data is not cached.\n * - To invalidate (i.e. delete) the cached data, use {@link #invalidate}.\n * - If you only need the data right now and don't want to deal with subscriptions, use {@link #dataAsPromise}\n *   to access it as a promise that will either return cached data or load new data.\n *\n * When done using a DataQuery subscription, it *must* be manually destroyed by calling\n * [`sub.unsubscribe()`]{@link Subscription#unsubscribe} on the Subscription object returned by\n * [subscribe]{@link Observable#subscribe}, as it may leak memory otherwise.\n *\n * See {@link DataNode} and {@link DataList} for the two main types of data that use DataQuery.\n *\n * @typeParam I - ID type (e.g. NodeId or ListId)\n * @typeParam T - type of data accessible via .current\n * @typeParam R - type returned by innerQueryFn\n * @typeParam P - parameter type for innerQueryFn\n */\nexport abstract class DataQuery extends Observable {\n  /** The ID of this data. */\n  id: I;\n  loading = false; // TODO: maybe make this value observable too?\n  /**\n   * @ignore\n   * Private: this is the currently loaded data, externally accessible via .current.\n   */\n  protected currentData?: T;\n  /**\n   * @ignore\n   * Private: this is the time the data was last loaded, to compare against the cache invalidation\n   * timeout. This is a millisecond epoch timestamp from Date.now().\n   */\n  protected lastLoadTime = 0;\n  /**\n   * @ignore\n   * Private: this flag may be set by subclasses to avoid having writes to .params load any data.\n   */\n  protected pSetParamsNoUpdate = false;\n\n  /** Returns true if data is currently available. */\n  get hasData(): boolean {\n    return this.currentData !== undefined;\n  }\n\n  /** The currently loaded data. */\n  get current(): T {\n    return this.currentData;\n  }\n\n  /**\n   * @ignore\n   * The current query parameters, externally accessible via .params.\n   */\n  protected currentQueryParams?: P;\n  /**\n   * Parameters that will be passed to the request.\n   * Changing this property will automatically trigger a load.\n   */\n  get params(): P | undefined {\n    return this.currentQueryParams;\n  }\n  set params(p: P) {\n    this.currentQueryParams = p;\n    if (!this.pSetParamsNoUpdate) {\n      this.loadDebounced();\n    }\n  }\n\n  /**\n   * @ignore\n   * Private: set of all subscribers to this data. This set is used to send updates.\n   */\n  protected subscribers: Set> = new Set();\n  // FIXME: innerQuery/MapFn is a bit inelegant; it may be possible to refactor this\n  /**\n   * @ignore\n   * Private: this is the inner query function that actually loads the data, provided by a subclass.\n   */\n  protected innerQueryFn: (id: I, p: P) => Promise;\n  /**\n   * @ignore\n   * Private: this function maps data returned by the inner query into our format, if necessary.\n   */\n  protected innerMapFn: (r: R) => T;\n  /**\n   * @ignore\n   * Private: this is a simple counter used to determine whether the result of a load operation is\n   * still relevant.\n   */\n  protected stateLock = 0;\n  /**\n   * @ignore\n   * Private: this is a javascript timeout ID set when doing debounced loading.\n   */\n  protected loadTimeout = null;\n  /**\n   * @ignore\n   * Private: if true, the data will be hydrated (see {@link DataList#hydrateInitial}) and we should\n   * *not* trigger a load when a subscriber is added, until we have received the hydration.\n   */\n  protected hydrated = false;\n  /**\n   * @ignore\n   * Private: if true, the next call to subscribe will add a lazy subscriber.\n   * The flag will be reset automatically. Used in subscribeLazy.\n   */\n  protected isNextSubLazy = false;\n\n  /** If true, will prolong debounce time a bit. */\n  interactive = false;\n\n  /**\n   * @ignore\n   * Creates a new DataQuery (you should never need to use this directly)\n   *\n   * @param id an identifier for the data being loaded\n   * @param query the inner query function\n   * @param map maps returned data from the query R to usable data T\n   */\n  protected constructor(id: I, query: (id: I, p: P) => Promise, map: (r: R) => T) {\n    super(subscriber => {\n      this.addSubscriber(subscriber, this.isNextSubLazy);\n      this.isNextSubLazy = false;\n    });\n    this.id = id;\n    this.innerQueryFn = query;\n    this.innerMapFn = map;\n  }\n\n  /**\n   * Returns the data as a promise, without having to create a subscription.\n   *\n   * If cached data is available, this will return the data immediately; otherwise, this will\n   * load the data with an API request.\n   *\n   * #### Example\n   * ```ts\n   * const node = dataService.getNode(someNodeId);\n   * node.dataAsPromise().then(data => {\n   *   console.log('node data:', data);\n   * }).catch(error => console.error('oh no'));\n   * ```\n   */\n  dataAsPromise(): Promise {\n    if (this.hasData) {\n      return Promise.resolve(this.current);\n    }\n    return new Promise((resolve, reject) => {\n      const sub = this.subscribe(data => {\n        resolve(data);\n        sub.unsubscribe();\n      }, error => {\n        reject(error);\n        sub.unsubscribe();\n      });\n    });\n  }\n\n  /**\n   * @ignore\n   * Private: the actual implementation of the load function.\n   */\n  private loadImpl(fut: Promise) {\n    clearTimeout(this.loadTimeout);\n    this.loadTimeout = null;\n    this.lastLoadTime = Date.now();\n    this.loading = true;\n\n    // if load is called twice; only the newest load call will have an effect\n    const stateLock = ++this.stateLock;\n\n    fut.then(data => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.insertResult(data);\n      this.loading = false;\n      this.hydrated = false;\n    }).catch(error => {\n      if (stateLock !== this.stateLock) {\n        return;\n      }\n      this.emitErrorToAllSubscribers(error);\n      this.loading = false;\n      this.hydrated = false;\n    });\n  }\n\n  /** Loads data. */\n  load() {\n    this.hydrated = false;\n    this.loadImpl(this.innerQueryFn(this.id, this.currentQueryParams));\n  }\n\n  /**\n   * @internal\n   * Use when data has not yet been loaded but is available from elsewhere.\n   */\n  hydrateRaw(preparedData: Promise) {\n    if (this.hasData) {\n      return; // don't need hydration\n    }\n    this.hydrated = true;\n    this.loadImpl(preparedData);\n  }\n\n  /** Will load data if it's stale or not present. */\n  loadIfNeeded() {\n    if (this.loading) {\n      return;\n    }\n    if (!this.hasData || Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n\n  /** Loads data after a short delay. Will debounce. */\n  loadDebounced(interactive = this.interactive) {\n    if (this.loadTimeout) {\n      return;\n    }\n    this.loadTimeout = setTimeout(() => {\n      this.loadTimeout = null;\n      this.load();\n    }, interactive ? CACHE_INTERACTIVE_DEBOUNCE_TIME_MS : CACHE_FAST_DEBOUNCE_TIME_MS);\n  }\n\n  /** Deletes current data. */\n  invalidate() {\n    this.currentData = undefined;\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /**\n   * @ignore\n   * Private: callback for adding a new subscriber.\n   */\n  protected addSubscriber(subscriber: Subscriber, lazy: boolean) {\n    this.subscribers.add(subscriber);\n    if (this.current !== undefined) {\n      // data is available right now! emit current state\n      subscriber.next(this.current);\n    }\n\n    if (!this.hydrated && (!lazy || !this.hasData)) {\n      this.loadIfNeeded();\n    }\n\n    return {\n      unsubscribe: () => {\n        this.subscribers.delete(subscriber);\n      },\n    };\n  }\n\n  /**\n   * Will subscribe to the data, but not cause a reload unless there is no data.\n   * @param args passed verbatim to [#subscribe]{@link Observable#subscribe}\n   */\n  subscribeLazy(...args) {\n    this.isNextSubLazy = true;\n    return this.subscribe(...args);\n  }\n\n  /**\n   * @ignore\n   * Internal: will send an update with the current data (.current) to all subscribers.\n   */\n  emitUpdateToAllSubscribers() {\n    for (const sub of this.subscribers) {\n      sub.next(this.current);\n    }\n  }\n\n  /**\n   * @ignore\n   * Internal: will send the given error to all subscribers.\n   */\n  emitErrorToAllSubscribers(error: unknown) {\n    for (const sub of this.subscribers) {\n      sub.error(error);\n    }\n  }\n\n  /**\n   * @ignore\n   * Updates current data with a result from innerQueryFn, and emits an update.\n   */\n  insertResult(result: R) {\n    this.currentData = this.innerMapFn(result);\n    this.emitUpdateToAllSubscribers();\n  }\n\n  /** Returns the number of subscribers for this data. */\n  get subscriberCount(): number {\n    return this.subscribers.size;\n  }\n}\n\n/**\n * A cacheable node with no parameters.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataNode.\n * Nodes are identified by a {@link NodeId}.\n *\n * #### Example\n * ```html\n * \n *   Is it loading? {{thing$.loading ? 'yes' : 'no'}}\n *   Is the thing loaded? {{thing$.hasData ? 'yes' : 'no'}}\n *   \n *     Thing data: {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingId: NodeId;\n *\n *   public thing$: DataNode;\n *   public thingSub: Subscription; // subscription to thing$\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain the DataNode from the data service\n *     this.thing$ = this.dataService.getNode(this.thingId);\n *\n *     // subscribe to indicate that we want some data\n *     this.thingSub = this.thing$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataNode extends DataQuery {\n  /** @ignore */\n  constructor(queries: QueriesService, id: NodeId) {\n    super(id, queryNode(queries), data => data);\n  }\n\n  set params(p) {\n    throw new Error('parameters not available on nodes');\n  }\n\n  loadIfNeeded() {\n    if (!this.loading && Date.now() - this.lastLoadTime > CACHE_STALE_TIME_MS) {\n      this.load();\n    }\n  }\n}\n\n/**\n * Provides a view into a list of items.\n *\n * See {@link DataQuery} for more information, and {@link DataService} to obtain a DataList.\n * Lists are identified by a {@link ListId}.\n *\n * - To access list items, use {@link #currentItems}.\n * - If you need the IDs as well, use {@link #current} (note that the Map is ordered).\n *\n * The current view is defined by following properties:\n *\n * - {@link #cursor}: the current NodeId cursor (see backend API documentation for details)\n * - {@link #count}: number of items to load\n * - {@link #forward}: if true, will load items after the cursor. If false, will load items before.\n * - {@link #filter}: filter object (type parameter F)\n *\n * Changing any of these properties will reload the list (debounced).\n *\n * @typeParam T - list item type\n * @typeParam F - list filter type\n *\n * #### Example\n * ```html\n * \n *   \n *     a thing! {{thing.something}}\n *   \n * \n * ```\n * ```ts\n * class ExampleComponent implements OnInit, OnDestroy {\n *   @Input() thingsListId: ListId;\n *\n *   things$: DataList; // filter type unknown because we're not using here\n *   thingsSub: Subscription;\n *\n *   constructor(private dataService: DataService) {}}\n *\n *   ngOnInit() {\n *     // obtain a list view from the data service\n *     this.things$ = this.dataService.getList(this.thingsListId);\n *\n *     // subscribe to the list to indicate that we want some data\n *     this.thingsSub = this.things$.subscribe();\n *   }\n *\n *   ngOnDestroy() {\n *     // remember to unsubscribe!!\n *     this.thingsSub.unsubscribe();\n *   }\n * }\n * ```\n */\nexport class DataList extends DataQuery, ListResult, ListParams> {\n  // these are all just the private versions of the corresponding list properties.\n  /** @ignore */\n  private pCursor?: NodeId;\n  /** @ignore */\n  private pCount = 10;\n  /** @ignore */\n  private pFilter?: F;\n  /** @ignore */\n  private pForward = true;\n\n  /**\n   * @ignore\n   * Private: page info for the currently loaded data.\n   */\n  private pageInfo?: PageInfo;\n  /**\n   * @ignore\n   * Private: accessible via .totalCount (read-only)\n   */\n  private pTotalCount?: number;\n  /**\n   * @ignore\n   * Private: used to correct hasPrevious/NextPage when receiving data.\n   */\n  private previouslyHadPageContents = false;\n  /**\n   * @ignore\n   * Private: pointer to the global node cache, used to insert results.\n   */\n  private pNodes: NodeCache;\n\n  /** @ignore */\n  constructor(queries: QueriesService, nodes: NodeCache, id: ListId) {\n    super(id, queryList(queries, nodes), result => {\n      this.pageInfo = result.pageInfo;\n      this.pTotalCount = result.totalCount;\n\n      // API *only* reports hasPreviousPage or hasNextPage correctly if we are navigating in that\n      // same direction. Hence, we need to amend pageInfo with prior knowledge.\n      if (this.forward) {\n        this.pageInfo.hasPreviousPage = this.previouslyHadPageContents;\n      } else {\n        this.pageInfo.hasNextPage = this.previouslyHadPageContents;\n      }\n      this.previouslyHadPageContents = !!result.items.size;\n\n      return result.items;\n    });\n    this.pNodes = nodes;\n    this.pSetParamsNoUpdate = true;\n    this.setParams();\n    this.pSetParamsNoUpdate = false;\n  }\n\n  /**\n   * @internal\n   * Updates the `params` value from list parameters\n   */\n  setParams() {\n    this.params = {\n      cursor: this.pCursor,\n      count: this.pCount,\n      forward: this.pForward,\n      filter: this.pFilter,\n    };\n  }\n\n  /** Returns the total number of items. Null if not loaded. */\n  get totalCount() {\n    return this.pTotalCount;\n  }\n\n  /** Returns the currently loaded items in an array. */\n  get currentItems(): T[] {\n    if (!this.hasData) {\n      return [];\n    }\n    return [...this.current.values()];\n  }\n\n  /** Current list filter object. */\n  get filter(): F | undefined {\n    return this.pFilter;\n  }\n  set filter(f: F) {\n    this.pFilter = f;\n    this.setParams();\n  }\n\n  /** The current pagination cursor (a node relative to which items will be loaded). Nullable. */\n  get cursor(): NodeId {\n    return this.pCursor;\n  }\n  set cursor(c: NodeId) {\n    this.pCursor = c;\n    this.setParams();\n  }\n\n  /** The max amount of items to be loaded. */\n  get count(): number {\n    return this.pCount;\n  }\n  set count(c: number) {\n    this.pCount = c;\n    this.setParams();\n  }\n\n  /** Whether to load items after the cursor (true), or items before the cursor (false). */\n  get forward(): boolean {\n    return this.pForward;\n  }\n  set forward(f: boolean) {\n    this.pForward = f;\n    this.setParams();\n  }\n\n  /** Returns the node ID of the first item on the current page. */\n  get firstPageItemId(): NodeId | null {\n    const firstKey = this.current ? this.current.keys().next()?.value || null : null;\n    return firstKey ? decodeNodeId(firstKey) : null;\n  }\n\n  /** Returns the node ID of the last item on the current page. */\n  get lastPageItemId(): NodeId | null {\n    if (!this.current) {\n      return;\n    }\n    const keys = [...this.current.keys()];\n    return keys[keys.length - 1] ? decodeNodeId(keys[keys.length - 1]) : null;\n  }\n\n  /** Returns true if the current result contains the given node. */\n  currentHasNode(key: NodeId): boolean {\n    return this.current?.has(encodeNodeId(key));\n  }\n\n  get hasPrevPage() {\n    return !this.pageInfo || this.pageInfo.hasPreviousPage;\n  }\n  get hasNextPage() {\n    return !this.pageInfo || this.pageInfo.hasNextPage;\n  }\n\n  /** Moves the view to the first page. */\n  firstPage() {\n    this.cursor = null;\n    this.forward = true;\n    this.previouslyHadPageContents = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the previous page. */\n  prevPage() {\n    if (this.pageInfo && !this.pageInfo.hasPreviousPage) {\n      return false;\n    }\n    this.cursor = this.firstPageItemId;\n    this.forward = false;\n    this.invalidate();\n    return true;\n  }\n\n  /** Moves the view to the next page. */\n  nextPage() {\n    if (this.pageInfo && !this.pageInfo.hasNextPage) {\n      return false;\n    }\n    this.cursor = this.lastPageItemId;\n    this.forward = true;\n    this.invalidate();\n    return true;\n  }\n\n  /**\n   * Hydrates this list with initial data in the API format\n   *\n   * If you've already got data from the API that contains the first page of this list, you can use\n   * this method to insert that data directly and avoid triggering a redundant API request.\n   *\n   * @param data a promise that returns the API data\n   * @typeParam IdT - equivalent to T\n   */\n  hydrateInitial(data: Promise>) {\n    this.hydrateRaw(data.then(value => ({\n      totalCount: value.totalCount,\n      pageInfo: value.pageInfo,\n      items: this.pNodes.insertNodes(value.nodes || [])\n    })));\n  }\n}\n\n/** List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects) */\nexport type HydrateList = {\n  totalCount: number,\n  pageInfo: PageInfo,\n  /** This is nullable because it's nullable in the GQL schema. In practice it should always exist */\n  nodes?: (T | null)[]\n};\n\n/** Keeps a cache of DataNodes such that each NodeId has at most one associated DataNode. */\nexport class NodeCache {\n  // TODO: garbage collection? (nodes with zero subscribers)\n  /**\n   * @internal\n   * Internal node storage. Do not use directly.\n   */\n  nodes: Map> = new Map();\n\n  constructor(private queries: QueriesService) {}\n\n  /** Creates a new node. */\n  private createNode(id: NodeId) {\n    const encodedId = encodeNodeId(id);\n    this.nodes.set(encodedId, new DataNode(this.queries, id));\n  }\n\n  /** Returns the DataNode for the given NodeId. */\n  getNode(id: NodeId): DataNode {\n    const encodedId = encodeNodeId(id);\n    if (!this.nodes.has(encodedId)) {\n      this.createNode(id);\n    }\n    return this.nodes.get(encodedId) as DataNode;\n  }\n\n  /**\n   * Inserts nodes into the cache and returns them as a map (in the same order).\n   *\n   * Note: the ID parameter of the node is only optional for type compatibility with the GQL schema.\n   * Nodes without an ID will be ignored.\n   */\n  insertNodes(nodes: T[]): Map {\n    const map = new Map();\n\n    for (const node of nodes) {\n      if (!node?.id) {\n        continue;\n      }\n      const type = nodeTypeFromTypename(node.__typename);\n      const id = { type, id: node.id };\n      const dataNode: DataNode = this.getNode(id);\n      if (!dataNode.hasData) {\n        // FIXME: different queries load different amounts of data, simple overwriting doesn't always have the desired effect\n        //  S1: distinguish between nodes and \"partial nodes\"?\n        //  S2: deep merge data?\n        dataNode.insertResult(node);\n      }\n      map.set(encodeNodeId(id), node);\n    }\n\n    return map;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsComponent.html":{"url":"components/NodeDetailsComponent.html","title":"component - NodeDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details/node-details.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component shows details of components or interfaces\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-node-details\n            \n\n            \n                styleUrls\n                ./node-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                editMode\n                            \n                            \n                                interface\n                            \n                            \n                                issueListId\n                            \n                            \n                                placeholder\n                            \n                            \n                                showName\n                            \n                            \n                                validationDescription\n                            \n                            \n                                validationIMS\n                            \n                            \n                                validationName\n                            \n                            \n                                validationProvider\n                            \n                            \n                                validationType\n                            \n                            \n                                validationUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNodeName\n                            \n                            \n                                    Public\n                                getNodeTypeString\n                            \n                            \n                                    Public\n                                node\n                            \n                            \n                                    Public\n                                onCancelClick\n                            \n                            \n                                    Public\n                                onDeleteClick\n                            \n                            \n                                    Public\n                                onEditClick\n                            \n                            \n                                    Public\n                                onSaveClick\n                            \n                            \n                                    Private\n                                resetValues\n                            \n                            \n                                    Private\n                                showDeleteDialog\n                            \n                            \n                                    Private\n                                updateComponent\n                            \n                            \n                                    Private\n                                updateInterface\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callback\n                            \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, componentStoreService: ComponentStoreService, interfaceStoreService: InterfaceStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details/node-details.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        componentStoreService\n                                                  \n                                                        \n                                                                        ComponentStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interfaceStoreService\n                                                  \n                                                        \n                                                                        InterfaceStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callback\n                    \n                \n                \n                    \n                        Type :         NodeUpdatedCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:55\n                            \n                        \n                \n                    \n                        Function to be called if a node was updated or deleted\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:47\n                            \n                        \n                \n                    \n                        Id of the node\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        nodeType\n                    \n                \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:51\n                            \n                        \n                \n                    \n                        Either component or interface\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/node-details/node-details.component.ts:43\n                            \n                        \n                \n                    \n                        The project that contains the node\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:130\n                \n            \n\n\n            \n                \n                    Get the name of the node, or an empty string if it has not been fetched yet\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNodeTypeString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeTypeString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:145\n                \n            \n\n\n            \n                \n                    Get the type of the node as a formatted string\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        node\n                        \n                    \n                \n            \n            \n                \n                    \n                    node()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:152\n                \n            \n\n\n            \n                \n                    Access the node\n\n\n                    \n                        Returns :     GetComponentQuery | GetInterfaceQuery\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancelClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onEditClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onEditClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSaveClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSaveClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resetValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showDeleteDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDeleteDialog(affected: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    affected\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateInterface\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateInterface()\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details/node-details.component.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetBasicComponentQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interface\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetInterfaceQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'placeholder'\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', CCIMSValidators.contentValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationIMS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', [Validators.required, CCIMSValidators.urlValidator])\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details/node-details.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {\n  GetBasicComponentQuery,\n  GetComponentQuery,\n  GetInterfaceQuery,\n  UpdateComponentInput,\n  UpdateComponentInterfaceInput\n} from '../../generated/graphql';\nimport {FormControl, Validators} from '@angular/forms';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport {Router} from '@angular/router';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {CCIMSValidators} from '@app/utils/validators';\n\n/**\n * A node shown in the details component can either be a component or an interface\n */\nexport enum NodeDetailsType {\n  Component,\n  Interface\n}\n\nexport declare type NodeUpdatedCallbackFn = (nodeDeleted: boolean) => void;\n\n/**\n * This component shows details of components or interfaces\n */\n@Component({\n  selector: 'app-node-details',\n  templateUrl: './node-details.component.html',\n  styleUrls: ['./node-details.component.scss']\n})\nexport class NodeDetailsComponent implements OnInit, AfterViewInit {\n\n  /**\n   * The project that contains the node\n   */\n  @Input() projectId: string;\n  /**\n   * Id of the node\n   */\n  @Input() nodeId: string;\n  /**\n   * Either component or interface\n   */\n  @Input() nodeType: NodeDetailsType;\n  /**\n   * Function to be called if a node was updated or deleted\n   */\n  @Input() callback?: NodeUpdatedCallbackFn;\n  /** @ignore */\n  @ViewChild('nodeQuery') nodeQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('deleteQuery') deleteQuery: QueryComponent;\n  /** @ignore */\n  @ViewChild('updateQuery') updateQuery: QueryComponent;\n\n  /** @ignore */\n  Type = NodeDetailsType;\n\n  issueListId: ListId;\n  component: GetBasicComponentQuery;\n  interface: GetInterfaceQuery;\n  editMode: boolean;\n  showName = false;\n  placeholder = 'placeholder';\n\n  // TODO: Validators\n  validationProvider = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationName = new FormControl('', [Validators.required, CCIMSValidators.nameFormatValidator]);\n  validationUrl = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationIMS = new FormControl('', [Validators.required, CCIMSValidators.urlValidator]);\n  validationType = new FormControl('');\n  validationDescription = new FormControl('', CCIMSValidators.contentValidator);\n\n  constructor(private router: Router,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.editMode = false;\n\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.issueListId = {node: {type: NodeType.Component, id: this.nodeId}, type: ListType.Issues};\n    } else {\n      this.issueListId = {\n        node: {type: NodeType.ComponentInterface, id: this.nodeId},\n        type: ListType.IssuesOnLocation\n      };\n    }\n\n\n    this.validationIMS.setValue('?');\n    this.validationUrl.setValue('?');\n  }\n\n  ngAfterViewInit() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.nodeQuery.listenTo(this.componentStoreService.getBasicComponent(this.nodeId), component => {\n        if (component.node) {\n          this.component = component;\n          this.validationIMS.setValue('This is a placeholder');\n          this.validationUrl.setValue(component.node.repositoryURL);\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.nodeQuery.listenTo(this.interfaceStoreService.getInterface(this.nodeId), int => {\n        if (int.node) {\n          this.interface = int;\n        } else {\n          this.nodeQuery.setError();\n        }\n      });\n    }\n  }\n\n  /**\n   * Get the name of the node, or an empty string if it has not been fetched yet\n   */\n  public getNodeName(): string {\n    if (!this.nodeQuery) {\n      return '';\n    }\n\n    if (this.nodeQuery.ready()) {\n      return this.node().node.name;\n    }\n\n    return '';\n  }\n\n  /**\n   * Get the type of the node as a formatted string\n   */\n  public getNodeTypeString(): string {\n    return (this.nodeType === NodeDetailsType.Interface ? 'Interface' : 'Component');\n  }\n\n  /**\n   * Access the node\n   */\n  public node(): GetComponentQuery | GetInterfaceQuery {\n    if (this.nodeType === NodeDetailsType.Component) {\n      return this.component;\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      return this.interface;\n    }\n  }\n\n  public onCancelClick() {\n    this.resetValues();\n    this.editMode = false;\n  }\n\n  public onEditClick() {\n    this.editMode = true;\n  }\n\n  public onDeleteClick(): void {\n    const affected: string[] = [];\n    // Collect affected interfaces and components, then show the delete dialog\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.deleteQuery.listenTo(this.componentStoreService.getComponentInterfaces(this.nodeId), interfaces => {\n        for (const i of interfaces.node.interfaces.nodes) {\n          let affectedInterface = 'Interface \"' + i.name + '\" will be deleted';\n          if (i.consumedBy.nodes.length > 0) {\n            affectedInterface += ', which will affect the following component(s):';\n          }\n\n          affected.push(affectedInterface);\n          for (const component of i.consumedBy.nodes) {\n            affected.push(' ' + component.name);\n          }\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.deleteQuery.listenTo(this.interfaceStoreService.getConsumingComponents(this.nodeId), components => {\n        affected.push('Deleting this interface will affect the following component(s):');\n        affected.push(' ' + components.node.component.name);\n        for (const c of components.node.consumedBy.nodes) {\n          affected.push(' ' + c.name);\n        }\n\n        this.showDeleteDialog(affected);\n      });\n    }\n  }\n\n  private showDeleteDialog(affected: string[]): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete component \\\"' + this.component.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the component \\\"' + this.component.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.component.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.componentStoreService.deleteComponent(this.nodeId), () => {\n              this.notify.notifyInfo('Successfully deleted component \\\"' + this.component.node.name + '\\\"\"');\n              if (this.callback) {\n                this.callback(true);\n              }\n            }\n          );\n        }\n      });\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n        {\n          data: {\n            title: 'Really delete interface \\\"' + this.interface.node.name + '\\\"?',\n            messages: ['Are you sure you want to delete the interface \\\"' + this.interface.node.name + '\\\"?',\n              'This action cannot be undone!'].concat(affected),\n            verificationName: this.interface.node.name\n          }\n        });\n\n      confirmDeleteDialogRef.afterClosed().subscribe(deleteData => {\n        // dialog returns if the deleting was successful\n        if (deleteData) {\n          this.deleteQuery.listenTo(this.interfaceStoreService.delete(this.nodeId), () => {\n            this.notify.notifyInfo('Successfully deleted interface \\\"' + this.interface.node.name + '\\\"');\n            if (this.callback) {\n              this.callback(true);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  public onSaveClick(): void {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.component.node.name = this.validationName.value;\n      // FIXME\n      // this.component.node.ims.imsType = this.validationProvider.value;\n      this.component.node.description = this.validationDescription.value;\n      this.updateComponent();\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.interface.node.name = this.validationName.value;\n      this.interface.node.description = this.validationDescription.value;\n      this.updateInterface();\n    }\n  }\n\n  private resetValues() {\n    if (this.nodeType === NodeDetailsType.Component) {\n      this.validationName.setValue(this.component.node.name);\n      this.validationIMS.setValue('http://example.ims.com');\n      // FIXME\n      // this.validationProvider.setValue(this.component.node.ims.imsType);\n      this.validationUrl.setValue('http://example.repo.com');\n      this.validationDescription.setValue(this.component.node.description);\n    } else if (this.nodeType === NodeDetailsType.Interface) {\n      this.validationName.setValue(this.interface.node.name);\n      this.validationDescription.setValue(this.interface.node.description);\n    }\n  }\n\n  private updateComponent(): void {\n    const input: UpdateComponentInput = {\n      component: this.component.node.id,\n      name: this.component.node.name,\n      description: this.component.node.description\n    };\n\n    this.updateQuery.listenTo(this.componentStoreService.updateComponent(input), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n\n  private updateInterface(): void {\n    const MutationinputData: UpdateComponentInterfaceInput = {\n      componentInterface: this.interface.node.id,\n      name: this.interface.node.name,\n      description: this.interface.node.description\n    };\n\n    this.updateQuery.listenTo(this.interfaceStoreService.update(MutationinputData), () => {\n      this.editMode = false;\n      if (this.callback) {\n        this.callback(false);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n      \n\n      \n        \n          \n            \n              \n                Name\n                \n                \n                  Invalid component name\n                \n              \n              \n                Repository-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Provider Type\n                \n                \n                  Enter a valid URL\n                \n              \n              \n                Provider Type (IMS)\n                \n                  GitHub\n                \n                \n                  Select the Provider\n                \n              \n\n              \n                IMS-URL\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n          \n            \n              \n                Name\n                \n                \n                  Name your Interface\n                \n              \n\n              \n                Interface Type\n                \n                \n                  Enter a valid URL\n                \n              \n            \n\n            \n              \n                Description\n                \n              \n            \n          \n\n          \n            \n              edit\n              Edit {{getNodeTypeString().toLowerCase()}}\n            \n\n            \n              \n                \n                  save\n                  Save changes\n                \n              \n            \n\n            \n              cancel\n              Discard changes\n            \n\n            \n              \n                delete\n                Delete {{getNodeTypeString().toLowerCase()}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./node-details.component.scss\n                \n                .description-field {\n  min-height: 50px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.row > * {\n  margin-right: 4px;\n  flex-grow: 1;\n}\n\n.row > *:last-child {\n  margin-right: 0;\n  flex-grow: 1;\n}\n\n:host ::ng-deep .mat-tab-body-wrapper {\n  height: 100%;\n}\n\n:host ::ng-deep .mat-tab-body.mat-tab-body-active {\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                              Name                                                  Invalid component name                                                            Repository-URL                                                  Enter a valid URL                                                                                    Provider Type                                                  Enter a valid URL                                                            Provider Type (IMS)                                  GitHub                                                  Select the Provider                                                            IMS-URL                                                  Enter a valid URL                                                                                    Description                                                                                                        Name                                                  Name your Interface                                                            Interface Type                                                  Enter a valid URL                                                                                    Description                                                                                        edit              Edit {{getNodeTypeString().toLowerCase()}}                                                                        save                  Save changes                                                                    cancel              Discard changes                                                      delete                Delete {{getNodeTypeString().toLowerCase()}}                                                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NodeDetailsPageComponent.html":{"url":"components/NodeDetailsPageComponent.html","title":"component - NodeDetailsPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NodeDetailsPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/node-details-page/node-details-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./node-details-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./node-details-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nodeId\n                            \n                            \n                                nodeType\n                            \n                            \n                                projectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNodeUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, changeDetector: ChangeDetectorRef, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNodeUpdate\n                        \n                    \n                \n            \n            \n                \nonNodeUpdate(deleted: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/node-details-page/node-details-page.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleted\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nodeId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeDetailsType\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/node-details-page/node-details-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\n\n@Component({\n  templateUrl: './node-details-page.component.html',\n  styleUrls: ['./node-details-page.component.scss']\n})\nexport class NodeDetailsPageComponent implements OnInit {\n  nodeType: NodeDetailsType = null;\n  nodeId: string = null;\n  projectId: string = null;\n\n  constructor(private route: ActivatedRoute,\n              private changeDetector: ChangeDetectorRef,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const componentId = this.route.snapshot.paramMap.get('componentId');\n    const interfaceId = this.route.snapshot.paramMap.get('interfaceId');\n\n    if (componentId !== null) {\n      this.nodeId = componentId;\n      this.nodeType = NodeDetailsType.Component;\n    } else if (interfaceId !== null) {\n      this.nodeId = interfaceId;\n      this.nodeType = NodeDetailsType.Interface;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  onNodeUpdate(deleted: boolean): void {\n    if (deleted) {\n      this.router.navigate(['/projects/' + this.projectId + '/graph']);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./node-details-page.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'NodeDetailsPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NodeId.html":{"url":"interfaces/NodeId.html","title":"interface - NodeId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NodeId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/id.ts\n        \n\n\n            \n                Description\n            \n            \n                Uniquely identifies a node.\nNode IDs are composed of a #type and an #id.\nThe #id corresponds to the ID used in the backend API.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this node. This is the same as the node ID in the backend API.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         NodeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NodeType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of this node.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export type NodeIdEnc = string;\nexport type ListIdEnc = string;\n\n/**\n * Backend API node types.\n * The names should match the respective value of `__typename` in the GraphQL data for any given node.\n */\nexport enum NodeType {\n  Root,\n  Component,\n  ComponentInterface,\n  Issue,\n  IssueTimelineItem,\n  Label,\n  Project,\n  Artifact,\n  User,\n  IssueComment\n}\n\n/**\n * Returns the NodeType for a given `__typename` value.\n * `__typename` is a tag found in GraphQL data.\n *\n * @param typename the __typename value\n */\nexport function nodeTypeFromTypename(typename: string) {\n  return NodeType[typename] || null;\n}\n\n/**\n * Uniquely identifies a node.\n *\n * Node IDs are composed of a {@link #type} and an {@link #id}.\n * The {@link #id} corresponds to the ID used in the backend API.\n */\nexport interface NodeId {\n  /**\n   * The type of this node.\n   */\n  type: NodeType;\n  /**\n   * The ID of this node. This is the same as the node ID in the backend API.\n   */\n  id: string;\n}\n\n/**\n * See {@link encodeNodeId}.\n * @param id the encoded node ID\n */\nexport function decodeNodeId(id: NodeIdEnc): NodeId {\n  if (!id) {\n    throw new Error('Could not decode node ID: no id given');\n  }\n  const parts = id.split('/');\n  return { type: NodeType[parts[0]], id: parts[1] };\n}\n\n/**\n * Encodes a {@link NodeId} into a string.\n * This is due to a limitation in Javascript where objects cannot be `==` compared with each other\n * apart from identity. Encoding them as a string allows `NodeId`s to be used as object or `Map` keys.\n *\n * @param nd the node ID\n */\nexport function encodeNodeId(nd: NodeId): NodeIdEnc {\n  return NodeType[nd.type] + '/' + nd.id;\n}\n\n/** The ID of the root node. */\nexport const ROOT_NODE = { type: NodeType.Root, id: '' };\n\n/** The special ID of the current user node. */\nexport const CURRENT_USER_NODE = { type: NodeType.User, id: 'self' };\n\n/**\n * All list types represent their respective list queries in the backend API.\n */\nexport enum ListType {\n  Projects,\n  Components,\n  ComponentInterfaces,\n  Issues,\n  IssuesOnLocation,\n  IssueLocations,\n  TimelineItems,\n  Labels,\n  Artifacts,\n  Participants,\n  Assignees,\n  SearchUsers,\n  LinkedIssues,\n  LinkedByIssues\n}\n\n/**\n * Uniquely identifies a list of items.\n *\n * Lists are always attached to a specific node.\n * For example, a list of issues may be attached to a project or a component.\n *\n * Lists that do not have a specific parent node in the backend API are attached to the\n * {@link ROOT_NODE}.\n *\n * #### Examples\n * The list of all issues on a component:\n * ```ts\n * { node: { type: NodeType.Component, id: '...' }, type: ListType.Issues }\n * ```\n *\n * The list of linked issues on an issue:\n * ```ts\n * { node: { type: NodeType.Issue, id: '...' }, type: ListType.LinkedIssues }\n * ```\n */\nexport interface ListId {\n  /**\n   * The parent node.\n   */\n  node: NodeId;\n  /**\n   * The type of list.\n   */\n  type: ListType;\n}\n\n/** List cursor and filter. */\nexport interface ListParams {\n  /** Cursor node. */\n  cursor?: NodeId;\n  /** Max number of items to load. */\n  count: number;\n  /** Whether to look forward from the cursor, or backwards. */\n  forward: boolean;\n  /** The filter. */\n  filter?: F;\n}\n\n/**\n * See {@link decodeListId}.\n * @param id an encoded List ID\n */\nexport function decodeListId(id: ListIdEnc): ListId {\n  if (!id) {\n    throw new Error('Could not decode list ID: no id given');\n  }\n  const parts = id.split('#');\n  return { node: decodeNodeId(parts[0]), type: ListType[parts[1]] };\n}\n\n/**\n * Encodes a List ID into a string.\n *\n * See {@link encodeNodeId} for more details.\n * @param ld a List ID\n */\nexport function encodeListId(ld: ListId): ListIdEnc {\n  return encodeNodeId(ld.node) + '#' + ListType[ld.type];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Position.html":{"url":"interfaces/Position.html","title":"interface - Position","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Position\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Positions.html":{"url":"interfaces/Positions.html","title":"interface - Positions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Positions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface specifying the content of the graph component local storage\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            issueGroups\n                                        \n                                \n                                \n                                        \n                                            nodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        issueGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issueGroups:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions (north, south, east, west) of the issue groups\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Positions of the nodes as the user arranged them\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {AfterViewInit, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DraggedEdge, Edge, Point} from '@ustutt/grapheditor-webcomponent/lib/edge';\nimport GraphEditor from '@ustutt/grapheditor-webcomponent/lib/grapheditor';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Rect} from '@ustutt/grapheditor-webcomponent/lib/util';\nimport {BehaviorSubject, ReplaySubject, Subject} from 'rxjs';\nimport {debounceTime, takeUntil} from 'rxjs/operators';\nimport {IssueGraphStateService} from '../../data/issue-graph/issue-graph-state.service';\nimport {IssueGroupContainerBehaviour, IssueGroupContainerParentBehaviour} from './group-behaviours';\nimport {CreateInterfaceDialogComponent} from '@app/dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {StateService} from '@app/state.service';\nimport {CreateInterfaceData} from '../../dialogs/create-interface-dialog/create-interface-dialog.component';\nimport {GraphData} from '../../data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport * as issueGraphNodes from './issue-graph-nodes';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CreateComponentDialogComponent} from '@app/dialogs/create-component-dialog/create-component-dialog.component';\nimport {ComponentStoreService} from '@app/data/component/component-store.service';\nimport {InterfaceStoreService} from '@app/data/interface/interface-store.service';\nimport * as componentContextMenuComponent from '@app/graphs/component-context-menu/component-context-menu.component';\nimport {NodeDetailsType} from '@app/node-details/node-details.component';\nimport {doGraphLayout, LayoutNode} from '@app/graphs/automatic-layout';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { IssueGraphClassSettersService } from './class-setters/issue-graph-class-setters.service';\nimport { IssueGraphLinkHandlesService } from './link-handles/issue-graph-link-handles.service';\nimport { IssueGraphDynamicTemplateRegistryService } from './dynamic-template-registry/issue-graph-dynamic-template-registry.service';\n\n/**\n * Interface specifying the content of the graph component local storage\n */\ninterface Positions {\n  /** Positions of the nodes as the user arranged them */\n  nodes: { [prop: string]: Point; };\n  /** Positions (north, south, east, west) of the issue groups */\n  issueGroups: { [node: string]: string };\n}\n\n/**\n * This component creates nodes and edges in the embedded MICO GraphEditor\n * (html tag: ) to reflect the data for the current project.\n * This data consists of the project's interfaces, components, issues and their relations and\n * is stored in this.graphData. The key method for this purpose is drawGraph().\n * This component is also responsible for registering event listeners with the GraphEditor.\n */\n@Component({\n  selector: 'app-issue-graph',\n  templateUrl: './issue-graph.component.html',\n  styleUrls: ['./issue-graph.component.css'],\n})\nexport class IssueGraphComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  constructor(private dialog: MatDialog,\n              private gs: IssueGraphStateService,\n              private ss: StateService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private componentStoreService: ComponentStoreService,\n              private interfaceStoreService: InterfaceStoreService,\n              private componentContextMenuService: componentContextMenuComponent.ComponentContextMenuService,\n              private breakPointObserver: BreakpointObserver,\n              private issueGraphClassSettersService: IssueGraphClassSettersService,\n              private issueGraphLinkHandlesService: IssueGraphLinkHandlesService,\n              private issueGraphDynamicTemplateRegistryService: IssueGraphDynamicTemplateRegistryService) {\n  }\n\n  // references the graph template\n  @ViewChild('graph', {static: true}) graphWrapper: { nativeElement: GraphEditor; };\n\n  // references the minimap template\n  @ViewChild('minimap', {static: true}) minimap: { nativeElement: GraphEditor; };\n\n  currentVisibleArea: Rect = {x: 0, y: 0, width: 1, height: 1};\n  @Input() projectId: string;\n\n  readonly zeroPosition = {x: 0, y: 0};\n\n  private componentContextMenu: componentContextMenuComponent.ComponentContextMenuComponent;\n  private componentContextMenuNodeId: number | string;\n  private destroy$ = new ReplaySubject(1);\n\n  // reference to the GraphEditor instance of the graph\n  private graph: GraphEditor;\n\n  // contains all data about the projects interfaces, components, issues and their relations\n  // that is needed in order to create nodes and edges in the grapheditor to visualize the project\n  public graphData: GraphData;\n  private graphFirstRender = true;\n\n  // indicates whether graph is initialized\n  private graphInitialized = false;\n  private isHandset = false;\n\n  // contains nodes representing interfaces and components which utilize node groups for display of issue folders\n  private issueGroupParents: Node[] = [];\n\n  // local storage key for positions of graph elements\n  private projectStorageKey: string;\n\n  // The component details page moves the graph sometimes a bit,\n  // so dont move back when closing the component details page\n  private redrawByCloseOfComponentDetails = false;\n\n  // when a new graph state arrives it is passed to the graph\n  // and a graph redraw is issued\n  // (check IssueGraphControlsComponents ngAfterViewInit for more information)\n  public reload$: BehaviorSubject = new BehaviorSubject(null);\n  private reloadOnMouseUp = false;\n\n  // Saved positions of the nodes and the issue groups\n  private savedPositions: Positions = {nodes: {}, issueGroups: {}};\n  // Responsible for saving the node positions to local storage\n  private savePositionsSubject = new Subject();\n\n  // used in the drawGraph method true on first draw and after component creation, effects a zoom to bounding box\n  private zoomOnRedraw = true;\n\n  /**\n   * Gets reference to the MICO GraphEditor instance of the graph and initializes it.\n   */\n  ngAfterViewInit(): void {\n    this.graph = this.graphWrapper.nativeElement;\n    this.initGraph();\n  }\n\n  /**\n   * Sets up a local storage key for graph element positions.\n   */\n  ngOnInit() {\n    this.projectStorageKey = `CCIMS-Project_${this.projectId}`;\n    this.breakPointObserver.observe(Breakpoints.Handset)\n      .subscribe(r => this.isHandset = r.matches);\n  }\n\n  /**\n   * Cancels all subscriptions on component destruction.\n   */\n  ngOnDestroy() {\n    // saves the current zoom details of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomTransform_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentZoomTransform));\n\n    // saves the current bounding box of the graph for when the user comes back to the graph\n    localStorage.setItem(`zoomBoundingBox_${this.projectStorageKey}`,\n      JSON.stringify(this.graph.currentViewWindow));\n\n    this.destroy$.next();\n    this.closeComponentActions();\n  }\n\n  /**\n   * 1) Sets up a subscription for node positions\n   * 2) and initializes the graph.\n   * Also manages:\n   * 3) class setters with the graph editor\n   * that apply css classes based on the edge and node types,\n   * 4) the link handle calculation,\n   * 5) the edge drag behaviour,\n   * 6) the dynamic template registry.\n   * 7) and various event listeners on the graph.\n   */\n  initGraph() {\n    // case: graph already initialized\n    if (this.graphInitialized) {\n      return;\n    }\n\n    // loads saved positions\n    this.savedPositions = this.loadSavedPositions();\n\n    // 1) subscribes to the subject emitting node positions\n    this.subscribeToSubject();\n\n    // 2) initializes the graph\n    this.graphInitialized = true;\n\n    // references to the GraphEditor instance of the graph / minimap\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const minimap: GraphEditor = this.minimap.nativeElement;\n\n    // 3) manages the node / edge class setters\n    this.issueGraphClassSettersService.manageClassSetters(graph, minimap);\n\n    // 4) manages the edge link handles\n    this.issueGraphLinkHandlesService.manageLinkHandles(graph, minimap);\n\n    // 5) manages the edge drag behaviour\n    this.manageDragBehaviour(graph);\n\n    // 6) manages the dynamic template registry\n    this.issueGraphDynamicTemplateRegistryService.manageDynamicTemplateRegistry(graph);\n\n    // 7) manages the event listeners\n    this.manageEventListeners(graph, minimap);\n  }\n\n  /**\n   * Loads positions of graph elements from the local storage.\n   * @returns Parsed positions\n   */\n  private loadSavedPositions(): Positions {\n    // gets data from the local storage\n    const data = localStorage.getItem(this.projectStorageKey);\n\n    // case: there is no data\n    if (data == null) {\n      return {nodes: {}, issueGroups: {}};\n    }\n\n    return JSON.parse(data);\n  }\n\n  /**\n   * Subscribes to the subject emitting node positions.\n   */\n  private subscribeToSubject() {\n    this.savePositionsSubject\n      .pipe(takeUntil(this.destroy$), debounceTime(300))\n      .subscribe(() => {\n        console.log('Setting: ', this.projectStorageKey);\n\n        // case: there are saved positions\n        if (this.savedPositions != null) {\n          const newData = JSON.stringify(this.savedPositions);\n          localStorage.setItem(this.projectStorageKey, newData);\n        }\n      });\n  }\n\n  /**\n   * Manages the edge drag behaviour of given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   */\n  private manageDragBehaviour(graph: GraphEditor) {\n    // applies functionality for when an edge is created\n    graph.onCreateDraggedEdge = this.onCreateEdge;\n\n    // applies functionality for when an edge is dragged (and its target is changed)\n    graph.onDraggedEdgeTargetChange = this.onDraggedEdgeTargetChanged;\n\n    // applies functionality for when an edge is added\n    graph.addEventListener('edgeadd', this.onEdgeAdd);\n\n    // applies functionality for when an edge is removed\n    graph.addEventListener('edgeremove', this.onEdgeRemove);\n\n    // applies functionality for when an edge is dropped\n    graph.addEventListener('edgedrop', this.onEdgeDrop);\n  }\n\n  /**\n   * Method gets triggered after an edge gets created,\n   * it can either be of type provider or consumer.\n   * @param edge Edge that is handled.\n   */\n  private onCreateEdge = (edge: DraggedEdge) => {\n    const graph: GraphEditor = this.graphWrapper.nativeElement;\n    const sourceNode = graph.getNode(edge.source);\n\n    // case: edge created from an existing edge\n    // => allows deletion or dropping at the same node\n    if (edge.createdFrom != null) {\n      const original = graph.getEdge(edge.createdFrom);\n      edge.validTargets.clear();\n      edge.validTargets.add(original.target.toString());\n      return edge;\n    }\n\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // updates edge properties (no drag handles)\n      edge.type = issueGraphNodes.NodeType.Interface;\n      edge.dragHandles = [];\n\n      // updates valid targets\n      edge.validTargets.clear();\n\n      // updates marker at the end of the edge\n      edge.markerEnd = {\n        template: 'interface-connector-initial',\n        relativeRotation: 0,\n        absoluteRotation: 0\n      };\n\n      // allows only interfaces as targets\n      graph.nodeList.forEach((node) => {\n        if (node.type === issueGraphNodes.NodeType.Interface) {\n          edge.validTargets.add(node.id.toString());\n        }\n      });\n\n      // allows only new targets\n      graph.getEdgesBySource(sourceNode.id).forEach((existingEdge) => {\n        edge.validTargets.delete(existingEdge.target.toString());\n      });\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets dragged\n   * and its target is changed:\n   * ex. consumer edge gets moved away from the provider edge.\n   * @param edge Edge that is handled.\n   * @param sourceNode Source of the handled edge.\n   * @param targetNode Target of the handled edge.\n   * @returns Edge that is handled.\n   */\n  private onDraggedEdgeTargetChanged = (\n    edge: DraggedEdge,\n    sourceNode: Node,\n    targetNode: Node\n  ) => {\n    // case: edge originates from a component\n    if (sourceNode.type === issueGraphNodes.NodeType.Component) {\n      // case: target of edge is an interface\n      // => handles edge as of type consumer\n      if (targetNode?.type === issueGraphNodes.NodeType.Interface) {\n\n        // updates edge properties (default drag handle)\n        edge.type = issueGraphNodes.NodeType.InterfaceConsumer;\n        delete edge.dragHandles;\n\n        // updates marker at the end of the edge\n        edge.markerEnd = {\n          template: 'interface-connector',\n          relativeRotation: 0,\n        };\n      }\n      // case: target of edge is not an interface (aka. null)\n      // => handles edge as of type provider\n      else {\n        // updates edge properties (no drag handles)\n        edge.type = issueGraphNodes.NodeType.Interface;\n        edge.dragHandles = [];\n\n        // updates marker at the end of the edge\n        // ? delete edge.markerEnd; ?\n        edge.markerEnd = {\n          template: 'interface-connector-initial',\n          relativeRotation: 0,\n          absoluteRotation: 0\n        };\n      }\n    }\n\n    return edge;\n  }\n\n  /**\n   * Method gets triggered after an edge gets added.\n   * @param event Event that is handled.\n   */\n  private onEdgeAdd = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge creation\n      event.preventDefault();\n\n      // updates the graph via the API\n      const sourceNode = this.graph.getNode(edge.source);\n      const targetNode = this.graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => adds edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.addConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Method gets triggered after an edge gets dropped.\n   * @param event Event that is handled.\n   */\n  private onEdgeDrop = (event: CustomEvent) => {\n    const edge: DraggedEdge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge created from an existing edge\n    if (edge.createdFrom != null) {\n      return;\n    }\n\n    // case: edge of type interface\n    // => opens the interface creation dialog\n    if (edge.type === issueGraphNodes.NodeType.Interface) {\n      this.addInterfaceToComponent(event.detail.sourceNode.id, event.detail.dropPosition);\n    }\n  }\n\n  /**\n   * Opens the interface creation dialog. If the user actually creates the interface\n   * it is added to the providing component at the position\n   * where the dragged edge was dropped by the user (before opening the interface creation dialog).\n   * @param offeredById Id of the component that will provide the interface.\n   * @param position Position of the interface.\n   */\n  private addInterfaceToComponent(offeredById: string, position: issueGraphNodes.Position) {\n    // interface data\n    const data: CreateInterfaceData = {\n      position,\n      offeredById\n    };\n\n    // interface dialog reference\n    const createInterfaceDialogRef = this.dialog.open(CreateInterfaceDialogComponent, {\n      data\n    });\n\n    // subscribes ...\n    createInterfaceDialogRef.afterClosed().subscribe((interfaceId) => {\n      this.savedPositions.nodes[interfaceId] = {\n        x: position.x,\n        y: position.y\n      };\n      this.savePositionsSubject.next();\n      this.reload$.next(null);\n    });\n  }\n\n  /**\n   * Method gets triggered after an edge gets removed.\n   * @param event Event that is handled.\n   */\n  private onEdgeRemove = (event: CustomEvent) => {\n    const edge: Edge = event.detail.edge;\n\n    // case: source of event is the API\n    if (event.detail.eventSource === 'API') {\n      return;\n    }\n\n    // case: edge of type interface consumer\n    if (edge.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n\n      // cancels edge deletion\n      event.preventDefault();\n\n      // updates the graph via the API\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const sourceNode = graph.getNode(edge.source);\n      const targetNode = graph.getNode(edge.target);\n\n      // case: edge has source and target\n      // => removes edge of type interface provider\n      if (sourceNode != null && targetNode != null) {\n        this.gs.removeConsumedInterface(sourceNode.id.toString(), targetNode.id.toString()).subscribe(() => this.reload$.next(null));\n      }\n    }\n  }\n\n  /**\n   * Adds event listeners to a given GraphEditor instance.\n   * @param graph Reference to the GraphEditor instance of the graph that is handled.\n   * @param minimap Reference to the GraphEditor instance of the minimap that is handled.\n   */\n  private manageEventListeners(graph: GraphEditor, minimap: GraphEditor) {\n    // applies functionality for when a node is clicked\n    graph.addEventListener('nodeclick', this.onNodeClick);\n\n    // applies functionality for when the position of a node is changed\n    graph.addEventListener('nodepositionchange', (e: CustomEvent) => {\n      if (this.closeComponentActions(false)) {\n        this.reloadOnMouseUp = true;\n      }\n    });\n\n    // TODO: document and extract\n    graph.addEventListener('nodedragend', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        this.savedPositions.issueGroups[node.id] = node.position;\n      }\n\n      // store node positioning information\n      this.savedPositions.nodes[node.id] = {\n        x: node.x,\n        y: node.y,\n      };\n      this.savePositionsSubject.next();\n      if (this.reloadOnMouseUp) {\n        this.reloadOnMouseUp = false;\n        this.zoomOnRedraw = false;\n        this.reload();\n      }\n    });\n\n    // applies functionality for when a node is added to the minimap\n    graph.addEventListener('nodeadd', (event: CustomEvent) => {\n      if (event.detail.node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        return;\n      }\n      const node = event.detail.node;\n      minimap.addNode(node);\n    });\n\n    // applies functionality for when a node is removed from the minimap\n    graph.addEventListener('noderemove', (event: CustomEvent) => {\n      const node = event.detail.node;\n      if (event.detail.node.type !== issueGraphNodes.NodeType.IssueGroupContainer) {\n        minimap.removeNode(node);\n      }\n    });\n\n    // applies functionality for when an edge is added to the minimap\n    graph.addEventListener('edgeadd', (event: CustomEvent) => {\n      minimap.addEdge(event.detail.edge);\n    });\n\n    // applies functionality for when an edge is removed from the minimap\n    graph.addEventListener('edgeremove', (event: CustomEvent) => {\n      minimap.removeEdge(event.detail.edge);\n    });\n\n    // applies functionality for when the minimap is rendered\n    graph.addEventListener('render', this.onMinimapRender(minimap));\n\n    // Close the component context menu when clicking anywhere in the graph\n    graph.addEventListener('click', (e) => this.closeComponentActions());\n\n    // applies functionality for when the zoom is changed\n    graph.addEventListener('zoomchange', (event: CustomEvent) => {\n      this.currentVisibleArea = event.detail.currentViewWindow;\n      if (!this.componentContextMenu) {\n        return;\n      }\n\n      // Update component context menu position when zoom changed\n      const node = this.graph.getNode(this.componentContextMenuNodeId);\n      const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n      this.componentContextMenu.updatePosition(Math.max(x, 0), Math.max(y, 0));\n    });\n  }\n\n  /**\n   * Method gets triggered after a node is clicked.\n   * @param event Event that is handled.\n   */\n  private onNodeClick = (event: CustomEvent) => {\n    // cancels node selection\n    event.preventDefault();\n\n    const node: Node = event.detail.node;\n\n    // Close existing context menu if the user clicked twice on the same node\n    if (this.componentContextMenu && this.componentContextMenu.data.nodeId === node.id) {\n      this.closeComponentActions();\n      return;\n    }\n\n    // Close context menu if one is already open\n    this.closeComponentActions();\n\n    // doesn't allow the view of the graph to change after the Details page has been closed\n    this.redrawByCloseOfComponentDetails = true;\n\n    // Open the details in a new page if a phone is used or if shift is pressed\n    if (event.detail.sourceEvent.shiftKey || this.isHandset) {\n      // case: node of type Component\n      // => opens View Component page\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        this.router.navigate(['./component/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n\n      // case: node of type Interface\n      // => opens View Interface page\n      if (node.type === issueGraphNodes.NodeType.Interface) {\n        this.router.navigate(['./interface/', node.id], {relativeTo: this.activatedRoute.parent});\n        return;\n      }\n    } else {\n      // sets the context menu type\n      const contextMenuType = this.contextMenuTypeForNodeType(node);\n\n      // case: context menu has a type\n      if (contextMenuType != null) {\n        this.nodeClickContextMenuHasType(node, event, contextMenuType);\n        return;\n      }\n    }\n\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    this.nodeClickIssueFolder(node);\n  }\n\n  /**\n   * Sets the context menu type.\n   * @param node Node that is handled.\n   */\n  private contextMenuTypeForNodeType(node: Node): NodeDetailsType {\n    // case: node of type Component\n    // => sets the context menu type as Component\n    if (node.type === issueGraphNodes.NodeType.Component) {\n      return NodeDetailsType.Component;\n    }\n\n    // case: node of type Interface\n    // => sets the context menu type as Interface\n    if (node.type === issueGraphNodes.NodeType.Interface) {\n      return NodeDetailsType.Interface;\n    }\n\n    return null;\n  }\n\n  /**\n   * Open the component context menu\n   * @param node Node that is handled\n   * @param event Event that is handled\n   * @param contextMenuType Type of the context menu that is handled\n   */\n  private nodeClickContextMenuHasType(node: Node, event: CustomEvent, contextMenuType: NodeDetailsType) {\n    // Transform the node graph coordinates to screen coordinates\n    const [x, y] = this.graph.currentZoomTransform.apply([node.x, node.y]);\n\n    // Only open the dialog if it will fit into view\n    if (x >= 0 && y >= 0) {\n      this.componentContextMenuNodeId = node.id;\n\n      // Cancel the click event that would otherwise close the dialog again\n      event.detail.sourceEvent.stopImmediatePropagation();\n\n      this.componentContextMenu =\n        this.componentContextMenuService.open(\n          this.graphWrapper.nativeElement,\n          x,\n          y,\n          this.projectId,\n          node.id.toString(),\n          contextMenuType,\n          this);\n\n      // Make sure that the context menu is visible if it extends over the right/bottom edge\n      const visible = this.graph.currentViewWindow;\n      const scale = this.graph.currentZoomTransform.k;\n      // FIXME: this isn't ideal, as the padding is somewhat dependent on the aspect ratio\n      const padding = 85 / scale;\n      const edgeX = visible.width * scale;\n      const edgeY = visible.height * scale;\n      const moveX = Math.max(0, this.componentContextMenu.width + x - edgeX) / scale;\n      const moveY = Math.max(0, this.componentContextMenu.height + y - edgeY) / scale;\n\n      // case: Zoom has to change to make overlay visible\n      if (moveX || moveY) {\n        this.graph.zoomToBox({\n          x: visible.x + moveX + padding, y: visible.y + moveY + padding,\n          width: visible.width - 2 * padding, height: visible.height - 2 * padding\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which an issue folder is clicked.\n   * Determines the number of issues in the issue folder\n   * and opens the corresponding issue page.\n   * @param node Issue folder that is handled.\n   */\n  private nodeClickIssueFolder(node: Node) {\n    // case: clicked issue folder\n    // => determines issue count, opens corresponding issue page\n    if (node.type === 'BUG' || node.type === 'UNCLASSIFIED' || node.type === 'FEATURE_REQUEST') {\n\n      // reference to the GraphEditor instance of the graph, the root ID and the root node\n      const graph: GraphEditor = this.graphWrapper.nativeElement;\n      const rootId = graph.groupingManager.getTreeRootOf(node.id);\n      const rootNode = graph.getNode(rootId);\n\n      // case: only one issue inside the clicked issue folder\n      // => opens Issue Details page\n      if (node.issueCount === 1) {\n        this.nodeClickOneIssue(rootId, rootNode, node);\n        return;\n      }\n\n      // case: many issues inside the clicked issue folder\n      // => opens Component Issues / Interface Issues page\n      else {\n        this.nodeClickManyIssues(rootNode);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains only one issues.\n   * @param rootNode Root node that is handled.\n   * @param rootId Root id that is handled.\n   * @param node Clicked node that is handled.\n   */\n  private nodeClickOneIssue(rootId: string, rootNode: Node, node: Node) {\n    // case: root node of type Component\n    // => handles a single component issue, opens its Issue Details page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.componentStoreService.getFullComponent(rootId).subscribe(component => {\n        const currentIssueId = this.extractIssueId(component.node.issues.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n\n    // case: root node of type Interface\n    // => handles a single interface issue, opens its Issue Details page\n    else if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.interfaceStoreService.getInterface(rootId).subscribe(interfaceComponent => {\n        const currentIssueId = this.extractIssueId(interfaceComponent.node.issuesOnLocation.nodes, node.type);\n        this.router.navigate(['./', 'issues', currentIssueId], { relativeTo: this.activatedRoute.parent });\n      });\n    }\n  }\n\n  /**\n   * Extracts the id of an issue in a given issue list.\n   * @param issueList Ids of the issues that are handled.\n   * @param category Category of issues that are handled.\n   * @returns Id of the first issue (in the issue list) with matching category.\n   */\n  private extractIssueId(issueList, category: string): string {\n    for (const issue of issueList) {\n      if (issue.category === category) {\n        return issue.id;\n      }\n    }\n  }\n\n  /**\n   * Handles the case in which the clicked issue folder contains many issues.\n   * @param rootNode Root node that is handled.\n   */\n  private nodeClickManyIssues(rootNode: Node) {\n    // case: root node of type Component\n    // => handles many component issues, opens their Component Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Component) {\n      this.router.navigate(['./component/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n\n    // case: root node of type Interface\n    // => handles many interface issues, opens their Interface Issues page\n    if (rootNode.type === issueGraphNodes.NodeType.Interface) {\n      this.router.navigate(['./interface/', rootNode.id], { relativeTo: this.activatedRoute.parent });\n    }\n  }\n\n  /**\n   * Closes the component context menu, if one is open\n   * @param reload If true, reloads the graph if a context menu was closed\n   */\n  private closeComponentActions(reload: boolean = true): boolean {\n    // case: there are actions to close\n    if (this.componentContextMenu) {\n      // case: redraw of the graph needed\n      // => issues redraw\n      if (reload) {\n        this.reload();\n      }\n\n      // cancels component actions\n      this.componentContextMenu.close();\n      this.componentContextMenu = null;\n      this.componentContextMenuNodeId = null;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Issues a redraw of the graph. ?\n   */\n  public reload(): void {\n    this.reload$.next(null);\n  }\n\n  /**\n   * Method gets triggered when the minimap renders.\n   * @param minimap Minimap that is handled.\n   */\n  private onMinimapRender(minimap: GraphEditor): EventListenerOrEventListenerObject {\n    return (event: CustomEvent) => {\n      // case: renders the minimap completely\n      if (event.detail.rendered === 'complete') {\n        minimap.completeRender();\n        minimap.zoomToBoundingBox();\n      }\n\n      // case: renders texts\n      else if (event.detail.rendered === 'text') {\n        // irrelevant for the minimap\n      }\n\n      // case: renders node classes\n      else if (event.detail.rendered === 'classes') {\n        minimap.updateNodeClasses();\n      }\n\n      // case: renders node positions\n      else if (event.detail.rendered === 'positions') {\n        minimap.updateGraphPositions();\n        minimap.zoomToBoundingBox();\n      }\n    };\n  }\n\n  /**\n   * Responsible for drawing the graph based on this.graphData.\n   * Takes care of adding interfaces and components, and their connections.\n   * Additionally adds issue folders attached to each component and the dashed edges\n   * between them based on this.graphData.relatedFolders\n   */\n  drawGraph() {\n    const boundingBox = this.calculateBoundingBox();\n    // reset graph and remove all elements, gives us clean slate\n    this.resetGraph();\n\n    const layoutGraph = Object.keys(this.savedPositions.nodes).length === 0;\n    // create nodes corresponding to the components and interfaces of the project\n    const componentNodes = Array.from(this.graphData.components.values()).map(component =>\n      issueGraphNodes.createComponentNode(component, this.findIdealComponentPosition(component.id, boundingBox)));\n    const interfaceNodes = Array.from(this.graphData.interfaces.values()).map(\n      intrface => issueGraphNodes.createInterfaceNode(intrface, this.savedPositions.nodes[intrface.id]));\n    // issueNodes contains BOTH componentNodes and interfaceNodes\n    const issueNodes = (componentNodes as issueGraphNodes.IssueNode[]).concat(interfaceNodes as issueGraphNodes.IssueNode[]);\n    // For components AND interfaces: add the edges, issue folders and relations between folders\n    issueNodes.forEach(node => {\n      this.graph.addNode(node);\n      this.addIssueFolders(node);\n      this.drawFolderRelations(node);\n    });\n    // ONLY for interfaces: create edges connecting interface to offering component and consuming components to interface\n    interfaceNodes.forEach(interfaceNode => {\n      this.connectToOfferingComponent(interfaceNode);\n      this.connectConsumingComponents(interfaceNode);\n    });\n\n    // render all changes\n    this.graph.completeRender();\n    this.setGraphToLastView();\n    if (layoutGraph && issueNodes.length > 0) {\n      this.layoutGraph();\n      this.drawGraph();\n    }\n  }\n\n  /**\n   * Resets graph state. Called at start of draw(). Enables logic in draw()\n   * to assume a 'blank sheet' state avoiding complex updating logic.\n   */\n  resetGraph() {\n    this.graph.edgeList = [];\n    this.graph.nodeList = [];\n    this.issueGroupParents = [];\n    this.graph.groupingManager.clearAllGroups();\n  }\n\n  /**\n   * Finds the ideal component position if none is saved.\n   * @param id Id of component that is handled.\n   * @param boundingBox Bounding box of the component that is handled.\n   */\n  findIdealComponentPosition(id: string, boundingBox: Rect): Point {\n\n    // saved position\n    const saved = this.savedPositions.nodes[id];\n\n    // case: there is a saved position\n    // => return it\n    if (saved) {\n      return saved;\n    }\n\n    // calculates the ideal position\n    const point = {x: 0, y: 0};\n    if (boundingBox) {\n      point.x = boundingBox.x + boundingBox.width + 60;\n      point.y = boundingBox.y + boundingBox.height / 2;\n    }\n\n    // saves the ideal position\n    this.savedPositions.nodes[id] = point;\n\n    return point;\n  }\n\n  /**\n   * Creates and adds an edge between the node representing a component\n   * an the node representing the interface itself.\n   * @param node - Interface that is handled.\n   */\n  connectToOfferingComponent(node: issueGraphNodes.InterfaceNode) {\n    this.graph.addEdge(issueGraphNodes.createInterfaceProvisionEdge(node.offeredById, node.id));\n  }\n\n  /**\n   * Adds an edge from each connected component to the interface.\n   * @param interfaceNode - Interface (visualized by lollipop notation) that is handled.\n   */\n  connectConsumingComponents(interfaceNode: issueGraphNodes.InterfaceNode) {\n    for (const consumerId of this.graphData.interfaces.get(interfaceNode.id).consumedBy) {\n      this.graph.addEdge(issueGraphNodes.createConsumptionEdge(consumerId, interfaceNode.id));\n    }\n  }\n\n  /**\n   * Adds the issue folders with counts for each IssueCategory (currently 3)\n   * to the component or interface represented by node. The first methods call\n   * sets up invisible nodes in the graph to make the folders display properly.\n   * The second method takes care of actually adding the visible folders with\n   * the correct counts.\n   * @param node - Interface / component that is handled.\n   */\n  private addIssueFolders(node: issueGraphNodes.IssueNode) {\n    this.addIssueGroupContainer(node);\n    this.addIssueFolderNodes(node);\n  }\n\n  /**\n   * Creates the node groups necessary for displaying issue folders attached to a node.\n   * A Node represents a component or an interface.\n   * It also gets an issue group of IssueGroupContainerParentBehaviour,\n   * issueGroupContainerNode with IssueGroupContainerBehaviour gets added to it.\n   * This corresponds to the 4 'Grouping Manager' object\n   * on the upper two levels in the graph_structure_documentation.png.\n   * @param node - Node (component or interface) which can have issue folders attached.\n   */\n  private addIssueGroupContainer(node: issueGraphNodes.IssueNode) {\n    const gm = this.graph.groupingManager;\n    gm.markAsTreeRoot(node.id);\n    const issueGroupContainerNode = issueGraphNodes.createIssueGroupContainerNode(node);\n    const initialPosition = this.savedPositions.issueGroups[issueGroupContainerNode.id];\n    gm.setGroupBehaviourOf(\n      node.id,\n      new IssueGroupContainerParentBehaviour(initialPosition)\n    );\n\n    // the issueGroupContainerNode has no visual representation but contains the visible issue folders\n    node.issueGroupContainer = issueGroupContainerNode;\n    this.graph.addNode(issueGroupContainerNode);\n    gm.addNodeToGroup(node.id, issueGroupContainerNode.id);\n    gm.setGroupBehaviourOf(\n      issueGroupContainerNode.id,\n      new IssueGroupContainerBehaviour()\n    );\n    this.issueGroupParents.push(node);\n  }\n\n  /**\n   * This method presumes that node has the 4 'Grouping Manager Objects'\n   * depicted on the the upper levels in the graph_structure_documentation.png.\n   * correctly setup.\n   * @param node Interface / component that is handled.\n   */\n  private addIssueFolderNodes(node: issueGraphNodes.IssueNode) {\n    // get mapping from IssueCategory to number for the component or interface represented by node\n    const issueCounts = this.graphData.graphLocations.get(node.id).issues;\n    // iterate over issue categories and create a node if there is at least one issue of it\n    Object.keys(IssueCategory).forEach(key => {\n      const issueCategory = IssueCategory[key];\n      if (issueCounts.has(issueCategory)) {\n        const count = issueCounts.get(issueCategory);\n        // only show folders for issue categories with at least one issue\n        if (count > 0) {\n          const issueFolderNode = issueGraphNodes.createIssueFolderNode(node, issueCategory, count.toString());\n          this.graph.addNode(issueFolderNode);\n          this.graph.groupingManager.addNodeToGroup(node.issueGroupContainer.id, issueFolderNode.id);\n        }\n      }\n    });\n  }\n\n  /**\n   * Draws folder relations originating from the issue folder represented by node.\n   * @param node - Issue folder (for issues of a certain type) that is handled.\n   */\n  private drawFolderRelations(node: issueGraphNodes.IssueNode) {\n    // @ts-ignore\n    const folderNodes: IssueFolderNode[] = Array.from(node.issueGroupContainer.issueGroupNodeIds).map(\n      (id: string) => this.graph.getNode(id));\n    for (const folderNode of folderNodes) {\n      const relatedFolders = this.graphData.relatedFolders.getValue([node.id.toString(), folderNode.type]);\n      for (const relatedFolder of relatedFolders) {\n        const [issueNodeId, category] = relatedFolder;\n        const edge = issueGraphNodes.createRelationEdge(folderNode.id, issueGraphNodes.getIssueFolderId(issueNodeId, category));\n        this.graph.addEdge(edge);\n      }\n    }\n  }\n\n  /**\n   * Sets the view and the bounding box of the graph to how it was when the user left the graph with the help of localStorage.\n   * When theres no previous session available set the view to the optimized bounding box for the graph.\n   */\n  private setGraphToLastView() {\n    // The previous currentViewWindow of the graph as JSON string\n    const previousBoundingBoxAsString = localStorage.getItem(`zoomBoundingBox_${this.projectStorageKey}`);\n    // The previous zoomTransform of the graph as JSON string\n    const zoomTransformAsString = localStorage.getItem(`zoomTransform_${this.projectStorageKey}`);\n    // Only set the bounding box to the optimized bounding box for the graph when creating the first component\n    const firstComponent = this.graphData.components.size === 1 ? true : false;\n\n    // Set the bounding box to the bounding box of the last session or to the optimized bounding box if there wasnt a last session\n    if ((JSON.parse(previousBoundingBoxAsString) !== null) && (JSON.parse(zoomTransformAsString) !== null) && this.graphFirstRender\n      && !this.redrawByCloseOfComponentDetails && !firstComponent) {\n      const previousBoundingBox = JSON.parse(previousBoundingBoxAsString);\n      /* These calculations are necessary because of how GraphEditor.zoomToBox(box: Rect) works. GraphEditor.zoomToBox zooms to\n      the given box and adds some padding.These calculations get rid of the padding. Otherwise the padding would be added to the graph\n       with every execution of the setGraphToLastView() method. */\n      previousBoundingBox.width = previousBoundingBox.width * 0.9;\n      previousBoundingBox.height = previousBoundingBox.height * 0.9;\n      // Difference between Rect.x that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.x\n      const paddingX = 57.75 / JSON.parse(zoomTransformAsString).k;\n      // Difference between Rect.y that is given into the GraphEdit.zoomToBox(box: Rect) method and the resulting Rect.y\n      const paddingY = 17.2 / JSON.parse(zoomTransformAsString).k;\n      previousBoundingBox.x = previousBoundingBox.x + paddingX;\n      previousBoundingBox.y = previousBoundingBox.y + paddingY;\n      this.graph.zoomToBox(previousBoundingBox);\n      this.graphFirstRender = false;\n    }\n    // Zoom to the optimized bounding box if no graph view is stored from the last session or when the first component is created\n    else if ((this.zoomOnRedraw && !this.redrawByCloseOfComponentDetails) || firstComponent) {\n      this.fitGraphInView();\n      this.zoomOnRedraw = false;\n    }\n  }\n\n  /**\n   * Fits the graph into view.\n   */\n  fitGraphInView(): void {\n    // calculates the bounding box of the view\n    const rect = this.calculateBoundingBox();\n\n    // case: bounding box is calculated\n    // => zoom to bounding box\n    if (rect) {\n      this.graph.zoomToBox(rect);\n    }\n  }\n\n  /**\n   * Calculates the bounding box of the view.\n   * @returns The calculated bounding box.\n   */\n  calculateBoundingBox(): Rect {\n    const componentSize = {width: 100, height: 60};\n    const interfaceSize = {width: 14, height: 14};\n    const issueContainerSize = {width: 40, height: 30};\n\n    // calculates bounding box\n    let rect = null;\n    for (const node of this.graph.nodeList) {\n      let size;\n      if (node.type === issueGraphNodes.NodeType.Component) {\n        size = componentSize;\n      } else if (node.type === issueGraphNodes.NodeType.Interface || node.type === issueGraphNodes.NodeType.InterfaceConsumer) {\n        size = interfaceSize;\n      } else if (node.type === issueGraphNodes.NodeType.IssueGroupContainer) {\n        if (node.issueGroupNodeIds.size === 0) {\n          // irrelevant for empty issue group containers\n          continue;\n        }\n\n        size = issueContainerSize;\n      } else {\n        continue;\n      }\n\n      const nodeX = node.x - size.width / 2;\n      const nodeY = node.y - size.height / 2;\n\n      if (rect === null) {\n        rect = {xMin: nodeX, yMin: nodeY, xMax: nodeX + size.width, yMax: nodeY + size.height};\n      } else {\n        rect.xMin = Math.min(nodeX, rect.xMin);\n        rect.yMin = Math.min(nodeY, rect.yMin);\n\n        rect.xMax = Math.max(nodeX + size.width, rect.xMax);\n        rect.yMax = Math.max(nodeY + size.height, rect.yMax);\n      }\n    }\n\n    return rect ? {x: rect.xMin, y: rect.yMin, width: rect.xMax - rect.xMin, height: rect.yMax - rect.yMin} : null;\n  }\n\n  /**\n   * Handles the layour graph.\n   */\n  layoutGraph(): void {\n    const nodes = new Map();\n\n    for (const node of this.graph.nodeList) {\n      if (node.type === issueGraphNodes.NodeType.Component || node.type === issueGraphNodes.NodeType.Interface) {\n        nodes.set(node.id, new LayoutNode(node.id, node.x, node.y, node.type));\n      }\n    }\n\n    for (const edge of this.graph.edgeList) {\n      if (nodes.has(edge.source) && nodes.has(edge.target)) {\n        nodes.get(edge.source).connectTo(nodes.get(edge.target));\n        nodes.get(edge.target).connectTo(nodes.get(edge.source));\n      }\n    }\n\n    const nodeList = Array.from(nodes.values());\n    doGraphLayout(nodeList);\n\n    for (const node of nodeList) {\n      const layoutNode = nodes.get(node.id);\n      this.savedPositions.nodes[layoutNode.id] = {x: layoutNode.position.x, y: layoutNode.position.y};\n    }\n\n    this.savePositionsSubject.next();\n  }\n\n  /**\n   * Sets --show-relations css variable to initial or none. It is the value\n   * of the display attribute of the edges. If we set it to none the edges disappear.\n   * @param showRelations - Boolean derived from the setting of the switch slider for relation edges above the graph.\n   */\n  setRelationVisibility(showRelations: boolean) {\n    this.graph.getSVG().style('--show-relations', showRelations ? 'initial' : 'none');\n  }\n\n  /**\n   * Opens create component dialog and triggers reload of data after the dialog is closed.\n   */\n  public openCreateComponentDialog(): void {\n    const createComponentDialogRef = this.dialog.open(CreateComponentDialogComponent, {\n      data: {projectId: this.projectId}\n    });\n    createComponentDialogRef.afterClosed().subscribe(componentInformation => {\n      this.zoomOnRedraw = false;\n      this.reload$.next(null);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileSettingsDialogComponent.html":{"url":"components/ProfileSettingsDialogComponent.html","title":"component - ProfileSettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileSettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-settings-dialog\n            \n\n            \n                styleUrls\n                ./profile-settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                hide\n                            \n                            \n                                updatePasswordFieldsShown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                changePassword\n                            \n                            \n                                    Public\n                                closeDialog\n                            \n                            \n                                projectNameEdited\n                            \n                            \n                                    Public\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        closeDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    closeDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordFieldsShown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-profile-settings-dialog',\n  templateUrl: './profile-settings-dialog.component.html',\n  styleUrls: ['./profile-settings-dialog.component.scss']\n})\nexport class ProfileSettingsDialogComponent implements OnInit {\n\n  hide = true;\n  updatePasswordFieldsShown = false;\n  description = '';\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //close profile settings dialog\n  public closeDialog() {\n    this.dialogRef.close();\n  }\n\n  //TODO\n  public changePassword() {\n    this.updatePasswordFieldsShown = true;\n  }\n\n  //TODO\n  public cancel() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  //TODO\n  public updatePassword() {\n    this.updatePasswordFieldsShown = false;\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n}\n\n    \n\n    \n        \n\n    \n        close_ios\n    \n    Profile Settings\n    \n    \n\n    \n    \n    \n\n    \n        Change Password\n    \n\n    \n\n    \n    \n\n        \n        \n            Enter old password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n        \n            Enter new password\n            \n            \n                {{hide ? 'visibility_off' : 'visibility'}}\n            \n        \n\n        \n            Update Password\n        \n\n        \n            Cancel\n        \n\n    \n\n\n\n    \n\n    \n                \n                    ./profile-settings-dialog.component.scss\n                \n                .dialog{\n    width: 500px;\n}\n\n.new-item-button{\n    float: right;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close_ios        Profile Settings                                Change Password                                            Enter old password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                                Enter new password                                        {{hide ? \\'visibility_off\\' : \\'visibility\\'}}                                        Update Password                            Cancel            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileSettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectHeaderComponent.html":{"url":"components/ProjectHeaderComponent.html","title":"component - ProjectHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-header/project-header.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays the name and the id of a project\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-header\n            \n\n            \n                styleUrls\n                ./project-header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                projectId\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        projectId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        projectName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/project-header/project-header.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * This component displays the name and the id of a project\n */\n@Component({\n  selector: 'app-project-header',\n  templateUrl: './project-header.component.html',\n  styleUrls: ['./project-header.component.scss']\n})\nexport class ProjectHeaderComponent {\n  @Input() projectName: string;\n  @Input() projectId: string;\n}\n\n\n    \n\n    \n        \n  \n  \n\n  \n    {{projectName}}\n    Project ID: {{projectId}}\n  \n\n\n    \n\n    \n                \n                    ./project-header.component.scss\n                \n                .project-title-row {\n  align-items: center;\n  width: fit-content;\n}\n\n.icon {\n  float: left;\n  vertical-align: top;\n  margin-right: 5px;\n  max-height: 64px;\n  max-width: 64px;\n}\n\n.content {\n  float: left;\n}\n\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{projectName}}    Project ID: {{projectId}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectIssueListComponent.html":{"url":"components/ProjectIssueListComponent.html","title":"component - ProjectIssueListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectIssueListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-issue-list/project-issue-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is displayed when clicking on issues on the sidebar.\nIt contains the IssueHeaderComponent and the IssueListComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-issue-list\n            \n\n            \n                styleUrls\n                ./project-issue-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-issue-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                issueListId\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for retrieving the id of the project through the url\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for connection to API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issueListId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListId\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:24\n                        \n                    \n\n            \n                \n                    ID of the list which is shown in the IssueListComponent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-issue-list/project-issue-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ListId, ListType, NodeType } from '@app/data-dgql/id';\nimport { DataNode } from '@app/data-dgql/query';\nimport { Project } from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\n\n/**\n * This component is displayed when clicking on issues on the sidebar.\n * It contains the IssueHeaderComponent and the IssueListComponent.\n */\n@Component({\n  selector: 'app-project-issue-list',\n  templateUrl: './project-issue-list.component.html',\n  styleUrls: ['./project-issue-list.component.scss']\n})\nexport class ProjectIssueListComponent implements OnInit {\n\n  public projectId: string;\n  public project$: DataNode;\n  /**\n   * ID of the list which is shown in the IssueListComponent\n   */\n  public issueListId: ListId;\n\n  /**\n   * @param route for retrieving the id of the project through the url\n   * @param dataService for connection to API\n   */\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    const node = { type: NodeType.Project, id: this.projectId };\n    this.project$ = this.dataService.getNode(node);\n    this.issueListId = { node, type: ListType.Issues };\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./project-issue-list.component.scss\n                \n                .center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n.project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectIssueListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectListComponent.html":{"url":"components/ProjectListComponent.html","title":"component - ProjectListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-list-component/project-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is the landing page for the user after loggin in to the system\nIt shows a list of all projects the user can access\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-list\n            \n\n            \n                styleUrls\n                ./project-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastQueriedProjectName\n                            \n                            \n                                loading\n                            \n                            \n                                pendingCreate\n                            \n                            \n                                projectName\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeColour\n                            \n                            \n                                    Public\n                                nothing\n                            \n                            \n                                    Public\n                                openCreateProjectDialog\n                            \n                            \n                                    Public\n                                reloadProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectStore: ProjectStoreService, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        changeColour\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeColour()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        nothing\n                        \n                    \n                \n            \n            \n                \n                    \n                    nothing(e: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openCreateProjectDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openCreateProjectDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        reloadProjects\n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadProjects()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-list-component/project-list.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastQueriedProjectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pendingCreate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Pick[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/project-list-component/project-list.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {CreateProjectDialogComponent} from 'src/app/dialogs/create-project-dialog/create-project-dialog.component';\nimport {Project} from 'src/generated/graphql';\nimport {ProjectStoreService} from '../data/project/project-store.service';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component is the landing page for the user after loggin in to the system\n * It shows a list of all projects the user can access\n */\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss']\n})\nexport class ProjectListComponent implements OnInit {\n  pendingCreate = false;\n  projectName = '';\n  lastQueriedProjectName: string;\n  projects: Pick[] = [];\n  loading: boolean;\n\n  constructor(private projectStore: ProjectStoreService,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    // get all projects from the database\n    this.reloadProjects();\n  }\n\n  public reloadProjects(): void {\n    if (this.lastQueriedProjectName === this.projectName && this.lastQueriedProjectName) {\n      return;\n    }\n\n    this.loading = true;\n    this.projectStore.getAll(this.projectName).subscribe(projects => {\n      this.loading = false;\n      this.projects = projects;\n      this.lastQueriedProjectName = this.projectName;\n    }, error => {\n      this.loading = false;\n      this.notify.notifyError('Failed to load projects', error);\n    });\n  }\n\n  public openCreateProjectDialog(): void {\n    const createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent);\n    createProjectDialogRef.afterClosed().subscribe(result => {\n      this.changeColour();\n      if (result?.createdProjectId) {\n        this.projectName = '';\n        this.reloadProjects();\n      }\n    });\n  }\n\n  // remove the focus from the create project button after the project is created\n  private changeColour(): void {\n    const b = document.querySelector('#buttonCreateProject') as HTMLElement;\n    b.blur();\n  }\n\n  // if the shortcut icon to the graph view of a project is clicked the list view fires a event that a row was clicked\n  // and the user jumps to the project overview. This method prevents the default event and enable the shortcut button\n  // to perform its action\n  public nothing(e: Event): void {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n}\n\n\n    \n\n    \n        \n  My Projects\n\n\n  Project-List\n  Create Project\n  \n  \n  Create Demo Project-->\n  -->\n\n\n\n\n\n  \n    \n  \n  \n  \n    \n      \n    \n  \n\n  \n  \n  \n    \n\n      \n      {{ project.name }}\n      \n        account_tree\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-list.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n@import 'src/styles/spinner';\n\nspan[matLine] {\n  padding-left: 16px;\n}\n\n.nz-input-group{\nmax-width: 100%;\n}\n.nz-input-group{\n  max-width: 100%;\n}\n.listWrapper{\n  max-width: 50%;\n  //background-color: black;\n  -webkit-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\n-moz-box-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nbox-shadow: 2px 3px 18px -6px rgba(0,0,0,0.75);\nmargin-top: 15px;\nmargin-left: auto;\nmargin-right: auto;\n}\n.centered-headline{\n  margin: auto;\n}\n\n\n\n.mat-nav-list-padding-removed{\n  padding-top: 0;\n}\n.floating-button{\nfloat: right;\n}\n.list-header{\nmax-width: 50%;\nmargin-left: auto;\nmargin-right: auto;\nheight: 36px;\nmargin-bottom: 5px;\n}\n.list-h2{\n  max-width: 50%;\n  float: left;\n  margin-bottom: 0;\n}\n\n.graph-icon {\n  color: $icon-gray;\n}\n\n#buttonDeleteProject{\n  margin: 5px;\n}\n\n#buttonCreateProject{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  My Projects  Project-List  Create Project      Create Demo Project-->  -->                                                  {{ project.name }}              account_tree                  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectMembersComponent.html":{"url":"components/ProjectMembersComponent.html","title":"component - ProjectMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-members/project-members.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is an example for the manage members view\nAll users are displayed in a paginated list. The list can be filtered.\nThe members are hardcoded\nIf the backend offers an interface to get all users the mockUsers list schould be replaced\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-members\n            \n\n            \n                styleUrls\n                ./project-members.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-members.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addableUsers\n                            \n                            \n                                columnsToDisplay\n                            \n                            \n                                dataSource\n                            \n                            \n                                mockUsers\n                            \n                            \n                                paginator\n                            \n                            \n                                paginatorModule\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                project$\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                sort\n                            \n                            \n                                validationFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                clickedOnRow\n                            \n                            \n                                onAddClick\n                            \n                            \n                                onDeleteClick\n                            \n                            \n                                onPageChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, projectStore: ProjectStoreService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-members/project-members.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(filterValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickedOnRow\n                        \n                    \n                \n            \n            \n                \nclickedOnRow(rowData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rowData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddClick\n                        \n                    \n                \n            \n            \n                \nonAddClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPageChange\n                        \n                    \n                \n            \n            \n                \nonPageChange(event: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-members/project-members.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addableUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Name', 'Role', 'email']\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Array\n\n                    \n                \n                \n                    \n                        Default value : [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginator)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatorModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginatorModule\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatPaginatorModule)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetFullProjectQuery\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sort\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSort\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(MatSort)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validationFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/project-members/project-members.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n\n      \n        add\n      \n\n      \n        remove\n      \n\n\n      \n        \n          Filter\n          \n        \n      \n\n\n      \n\n        \n        \n\n          \n          \n             Name \n             {{element.displayName}} \n          \n\n          \n          \n             Role \n             Administrator \n          \n\n          \n          \n             Email \n             {{element.email}} \n          \n\n\n          \n          \n        \n\n      \n\n      \n      \n      \n    \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./project-members.component.scss\n                \n                .project-title-row {\n  width: 100%;\n  margin-bottom: 12px;\n  align-items: center;\n  height: 85px;\n}\n.box {\n  float: left;\n  //display: inline-block;\n  vertical-align: top;\n  width: 85px;\n  height: auto;\n  margin-right: 5px;\n}\n.content {\n  //display: inline-block;\n  float: left;\n\n}\n.title, .sub-title {\n  margin: 0;\n  padding: 3px 10px 3px 0;\n}\n.title {\n  font-size: 17px;\n  font-weight: bold;\n}\n.sub-title {\n  font-weight: bold;\n  color: #3F3F3F;\n}\n\nimg {\n  width:100%;\n}\n\n.pagefill {\n  width: 100%;\n  height: 300px;\n}\n.margin-left-top {\n  margin-top: 3px;\n  margin-left: 3px;\n}\n.text-left {\n  text-align: left;\n}\n.mat-row:hover {\n  box-shadow: inset 0 0 43px -17px rgba(201,195,201,1);\n  cursor: pointer;\n}\n.button-add {\n  margin: 10px 5px 10px 10px;\n  float: left;\n}\n\n.button-remove {\n  margin: 10px 15px 10px 5px;\n  float: left;\n}\n\n.table-container {\n  max-height: 500px;\n  overflow: auto;\n}\n.center-horizontal{\n  width: 100%;\n  text-align: center;\n  margin-top: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            add                    remove                              Filter                                                                               Name              {{element.displayName}}                                            Role              Administrator                                            Email              {{element.email}}                                                                         '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectOverviewComponent.html":{"url":"components/ProjectOverviewComponent.html","title":"component - ProjectOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/project-overview/project-overview.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component offers a view showing the project name,\nowner, id and description.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-overview\n            \n\n            \n                styleUrls\n                ./project-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./project-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Public\n                                project\n                            \n                            \n                                    Public\n                                projectId\n                            \n                            \n                                queryComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProject\n                            \n                            \n                                projectNameEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, projectStore: ProjectStoreService, route: ActivatedRoute, router: Router, changeDetector: ChangeDetectorRef, dialog: MatDialog, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectStore\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectNameEdited\n                        \n                    \n                \n            \n            \n                \nprojectNameEdited(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/project-overview/project-overview.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataNode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(QueryComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/project-overview/project-overview.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {RemoveDialogComponent} from '@app/dialogs/remove-dialog/remove-dialog.component';\nimport {DataNode} from '@app/data-dgql/query';\nimport {Project} from '../../generated/graphql-dgql';\nimport DataService from '@app/data-dgql';\nimport {NodeType} from '@app/data-dgql/id';\nimport {QueryComponent} from '@app/utils/query-component/query.component';\n\n/**\n * This component offers a view showing the project name,\n * owner, id and description.\n */\n@Component({\n  selector: 'app-project-overview',\n  templateUrl: './project-overview.component.html',\n  styleUrls: ['./project-overview.component.scss']\n})\nexport class ProjectOverviewComponent implements OnInit, AfterViewInit {\n  @ViewChild(QueryComponent) queryComponent: QueryComponent;\n\n  public projectId: string;\n  public project: DataNode;\n  description = '';\n\n  constructor(private dataService: DataService,\n              private projectStore: ProjectStoreService,\n              private route: ActivatedRoute,\n              private router: Router,\n              private changeDetector: ChangeDetectorRef,\n              private dialog: MatDialog,\n              private notify: UserNotifyService) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project = this.dataService.getNode({type: NodeType.Project, id: this.projectId});\n  }\n\n  ngAfterViewInit() {\n    this.queryComponent.listenTo(this.project, project => this.description = project.description);\n  }\n\n  projectNameEdited(saved: boolean): void {\n    if (!saved) {\n      return;\n    }\n\n    alert('TODO: Save');\n  }\n\n  deleteProject(): void {\n    const confirmDeleteDialogRef = this.dialog.open(RemoveDialogComponent,\n      {\n        data: {\n          title: 'Really delete project \\\"' + this.project.current.name + '\\\"?',\n          messages: ['Are you sure you want to delete the project \\\"' + this.project.current.name + '\\\"?',\n            'This action cannot be undone!'],\n          verificationName: this.project.current.name\n        }\n      });\n    confirmDeleteDialogRef.afterClosed().subscribe(del => {\n      if (del) {\n        this.projectStore.delete(this.projectId).subscribe(() => {\n            this.notify.notifyInfo('Successfully deleted project \\\"' + this.project.current.name + '\\\"');\n            this.router.navigate(['/']);\n          },\n          error => this.notify.notifyError('Failed to delete project!', error));\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n\n        \n        \n          Delete\n        \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./project-overview.component.scss\n                \n                .delete-button-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n}\n\n.project-overview-container {\n  margin: 4px;\n}\n\n#button{\n  margin: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              Delete                                '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProjectOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectStoreService.html":{"url":"injectables/ProjectStoreService.html","title":"injectable - ProjectStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/project/project-store.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides get, create and delete operations for projects\nWith the get-method only the id and name of one project, specified by the id, will be fetched\nThe getFulProject method fetches all the information of a project the database provides\nThe getAll method fetches the name and id for all projects. This is used to reduce\ntransfered data while showing the projects list\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getBasicProject\n                            \n                            \n                                getFullProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, getAllQuery: GetAllProjectsGQL, getBasicProjectQuery: GetBasicProjectGQL, getFullQuery: GetFullProjectGQL, createProject: CreateProjectGQL, deleteProject: DeleteProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data/project/project-store.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getAllQuery\n                                                  \n                                                        \n                                                                    GetAllProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getBasicProjectQuery\n                                                  \n                                                        \n                                                                    GetBasicProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        getFullQuery\n                                                  \n                                                        \n                                                                    GetFullProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createProject\n                                                  \n                                                        \n                                                                    CreateProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deleteProject\n                                                  \n                                                        \n                                                                    DeleteProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(filterText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBasicProject\n                        \n                    \n                \n            \n            \n                \ngetBasicProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFullProject\n                        \n                    \n                \n            \n            \n                \ngetFullProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data/project/project-store.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {\n  CreateProjectGQL,\n  CreateProjectInput,\n  DeleteProjectGQL,\n  DeleteProjectInput,\n  GetAllProjectsGQL,\n  GetBasicProjectGQL,\n  GetBasicProjectQuery,\n  GetFullProjectGQL,\n  GetFullProjectQuery,\n  Project,\n  ProjectFilter\n} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from '@app/auth/authentication.service';\n\n/**\n * This service provides get, create and delete operations for projects\n * With the get-method only the id and name of one project, specified by the id, will be fetched\n * The getFulProject method fetches all the information of a project the database provides\n * The getAll method fetches the name and id for all projects. This is used to reduce\n * transfered data while showing the projects list\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectStoreService {\n\n  constructor(private authService: AuthenticationService, private getAllQuery: GetAllProjectsGQL,\n              private getBasicProjectQuery: GetBasicProjectGQL, private getFullQuery: GetFullProjectGQL,\n              private createProject: CreateProjectGQL, private deleteProject: DeleteProjectGQL) {\n  }\n\n  create(name: string, description: string) {\n    const input: CreateProjectInput = {\n      name,\n      description\n    };\n    return this.createProject.mutate({input});\n  }\n\n  delete(id: string) {\n    const input: DeleteProjectInput = {\n      project: id\n    };\n    return this.deleteProject.mutate({input});\n  }\n\n  getBasicProject(id: string): Observable {\n    return this.getBasicProjectQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getFullProject(id: string): Observable {\n    return this.getFullQuery.fetch({id}).pipe(map(({data}) => data));\n  }\n\n  getAll(filterText: string): Observable[]> {\n    const filter: ProjectFilter = {\n      name: filterText\n    };\n    return this.getAllQuery.fetch({filter}).pipe(\n      map(({data}) => data.projects.edges.map(edge => edge.node))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProject\n                            \n                            \n                                listProjects\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qListProjects: ListProjectsGQL, qGetProject: GetProjectGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/projects.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qListProjects\n                                                  \n                                                        \n                                                                    ListProjectsGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qGetProject\n                                                  \n                                                        \n                                                                    GetProjectGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProject\n                        \n                    \n                \n            \n            \n                \ngetProject(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listProjects\n                        \n                    \n                \n            \n            \n                \nlistProjects(list: QueryListParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/projects.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                            QueryListParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  GetProjectGQL,\n  ListProjectsGQL,\n  ProjectFilter,\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch, QueryListParams } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  constructor(\n    private qListProjects: ListProjectsGQL,\n    private qGetProject: GetProjectGQL,\n  ) {}\n\n  listProjects(list: QueryListParams) {\n    return promisifyApolloFetch(this.qListProjects.fetch({ ...list }));\n  }\n\n  getProject(id: string) {\n    return promisifyApolloFetch(this.qGetProject.fetch({ id }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QueriesService.html":{"url":"injectables/QueriesService.html","title":"injectable - QueriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QueriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/queries.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                components\n                            \n                            \n                                    Public\n                                issues\n                            \n                            \n                                    Public\n                                projects\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(components: ComponentsService, issues: IssuesService, projects: ProjectsService, users: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/queries.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        components\n                                                  \n                                                        \n                                                                        ComponentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        issues\n                                                  \n                                                        \n                                                                        IssuesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projects\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        issues\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IssuesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectsService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data-dgql/queries/queries.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IssuesService } from './issues.service';\nimport { ProjectsService } from './projects.service';\nimport { ComponentsService } from './components.service';\nimport { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueriesService {\n  constructor(\n    public components: ComponentsService,\n    public issues: IssuesService,\n    public projects: ProjectsService,\n    public users: UsersService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryBodyDirective.html":{"url":"directives/QueryBodyDirective.html","title":"directive - QueryBodyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryBodyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on an ng-template, to indicate that the contents of it should be shown once\nthe query finished successfully\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryBody]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonDirective.html":{"url":"directives/QueryButtonDirective.html","title":"directive - QueryButtonDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  QueryButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/query-component/query.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used on a button, to inidcate that the QueryComponent should manage the state of this\nbutton\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appQueryButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                element\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: MatButton)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    MatButton\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatButton\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueryComponent.html":{"url":"components/QueryComponent.html","title":"component - QueryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/utils/query-component/query.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is intended to be used in combination with an Observable.\nThe component expects that either an ng-template or a MatButton is in the body and that the appropriate directive\nis used on it (QueryBodyDirective with ng-template, QueryButtonDirective with button).\nOnce the appropriate function is called, the component subscribes to the observable, showing the user a loading\nindication and, if applicable, disables the button.\nOnce the query finished, the content in the ng-template is shown or the button is enabled again.\nIf the subscription yielded an error, a message is shown instead of the ng-template, or the button is re-enabled.\nNote that no verification has to be made if the query was successful, when using an ng-template.\nThe content of the ng-template is only executed once the #queryState is Ready.\nExample 1: Using ng-template\nThis example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n\n  \n    This will only be shown if the query was successful!\n     Not required! -->\n    Result is: {{this.data}}\n     -->\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nngAfterViewInit() {\n  // Have to use ngAfterViewInit, otherwise query will be undefined!\n\n  this.query.listenTo(this.someObservable,\n    result => {\n      this.data = result;\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}Example 2: Using button\nThis example will subscribe to the observable as soon as the button is clicked.\nThe button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n\n  \n    Do something that takes a while...\n  \n// ...\n\n@ViewChild(QueryComponent) query: QueryComponent;\n\n// ...\n\nonClick() {\n  this.query.listenTo(this.somethingThatTakesAWhile,\n    result => {\n      console.log('Result callback');\n    },\n    error => {\n      console.log('Error callback');\n    }\n  );\n}\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-query-component\n            \n\n            \n                styleUrls\n                query.component.scss\n            \n\n\n\n            \n                templateUrl\n                query.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                button\n                            \n                            \n                                buttonMode\n                            \n                            \n                                queryState\n                            \n                            \n                                    Private\n                                    Optional\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                listenTo\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                    Public\n                                setError\n                            \n                            \n                                    Private\n                                updateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notify: UserNotifyService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Failed to run query!'\n                    \n                \n                        \n                            \n                                    Defined in src/app/utils/query-component/query.component.ts:134\n                            \n                        \n                \n                    \n                        Error message to be shown if the subscription failed\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        listenTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    listenTo(query: Observable, success?: (value?: T) => void, error?: (error?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:173\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Subscribe the query component to the observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The observable\n\n                                    \n                                \n                                \n                                    success\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query was successful\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        The function to be called if the query had an error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ready\n                        \n                    \n                \n            \n            \n                \n                    \n                    ready()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:163\n                \n            \n\n\n            \n                \n                    Quick way of checking if this.query.queryState === QueryComponentState.Ready\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setError\n                        \n                    \n                \n            \n            \n                \n                    \n                    setError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:206\n                \n            \n\n\n            \n                \n                    Manually sets this query component to the error state.\nThis may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/utils/query-component/query.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryBodyDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryBodyDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        button\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryButtonDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(QueryButtonDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buttonMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:144\n                        \n                    \n\n            \n                \n                    If true, a button is in the query body, not a template\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryComponentState\n\n                    \n                \n                \n                    \n                        Default value : QueryComponentState.Loading\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:141\n                        \n                    \n\n            \n                \n                    The current state of the query\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/utils/query-component/query.component.ts:142\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\nimport {MatButton} from '@angular/material/button';\n\n/**\n * The current state of the query\n */\nexport enum QueryComponentState {\n  /** The query was executed successfully */\n  Ready,\n  /** The query has not yet finished */\n  Loading,\n  /** The query returned an error */\n  Error\n}\n\n/**\n * This directive is used on an `ng-template`, to indicate that the contents of it should be shown once\n * the query finished successfully\n */\n@Directive({\n  selector: '[appQueryBody]'\n})\nexport class QueryBodyDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used on a `button`, to inidcate that the {@link QueryComponent} should manage the state of this\n * button\n */\n@Directive({\n  selector: '[appQueryButton]'\n})\nexport class QueryButtonDirective {\n  constructor(public element: MatButton) {\n  }\n}\n\n/**\n * This component is intended to be used in combination with an `Observable`.\n * The component expects that either an `ng-template` or a `MatButton` is in the body and that the appropriate directive\n * is used on it ({@link QueryBodyDirective} with `ng-template`, {@link QueryButtonDirective} with `button`).\n * Once the appropriate function is called, the component subscribes to the observable, showing the user a loading\n * indication and, if applicable, disables the `button`.\n * Once the query finished, the content in the `ng-template` is shown or the button is enabled again.\n * If the subscription yielded an error, a message is shown instead of the `ng-template`, or the button is re-enabled.\n * Note that no verification has to be made if the query was successful, when using an `ng-template`.\n * The content of the `ng-template` is only executed once the {@link #queryState} is `Ready`.\n *\n * #### Example 1: Using `ng-template`\n * This example will show, instead of the content directly, a loading indicator as soon as the page is loaded.\n * ```html\n * \n *   \n *     This will only be shown if the query was successful!\n *      Not required! -->\n *     Result is: {{this.data}}\n *      -->\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * ngAfterViewInit() {\n *   // Have to use ngAfterViewInit, otherwise query will be undefined!\n *\n *   this.query.listenTo(this.someObservable,\n *     result => {\n *       this.data = result;\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n *\n * #### Example 2: Using `button`\n * This example will subscribe to the observable as soon as the button is clicked.\n * The button is disabled and a loading indicator is shown as long as the subscription has not yielded a result.\n * ```html\n * \n *   \n *     Do something that takes a while...\n *   \n * \n * ```\n *\n * ```ts\n * // ...\n *\n * @ViewChild(QueryComponent) query: QueryComponent;\n *\n * // ...\n *\n * onClick() {\n *   this.query.listenTo(this.somethingThatTakesAWhile,\n *     result => {\n *       console.log('Result callback');\n *     },\n *     error => {\n *       console.log('Error callback');\n *     }\n *   );\n * }\n * ```\n */\n@Component({\n  templateUrl: 'query.component.html',\n  selector: 'app-query-component',\n  styleUrls: ['query.component.scss']\n})\nexport class QueryComponent implements OnDestroy, AfterViewInit {\n  /** Error message to be shown if the subscription failed */\n  @Input() errorMessage = 'Failed to run query!';\n  @ContentChild(QueryBodyDirective) body: QueryBodyDirective;\n  @ContentChild(QueryButtonDirective) button: QueryButtonDirective;\n\n  /** @ignore */\n  readonly State = QueryComponentState;\n  /** The current state of the query */\n  queryState: QueryComponentState = QueryComponentState.Loading;\n  private subscription?: Subscription;\n  /** If true, a button is in the query body, not a template*/\n  buttonMode: boolean;\n\n  constructor(private notify: UserNotifyService,\n              private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    this.buttonMode = !this.body && !!this.button;\n    if (this.buttonMode) {\n      this.queryState = QueryComponentState.Ready;\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n\n  /** Quick way of checking if `this.query.queryState === QueryComponentState.Ready` */\n  public ready(): boolean {\n    return this.queryState === QueryComponentState.Ready;\n  }\n\n  /**\n   * Subscribe the query component to the observable\n   * @param query The observable\n   * @param success The function to be called if the query was successful\n   * @param error The function to be called if the query had an error\n   */\n  public listenTo(query: Observable, success?: (value: T) => void, error?: (error: any) => void): void {\n    this.queryState = QueryComponentState.Loading;\n    this.changeDetector.detectChanges();\n    this.subscription?.unsubscribe();\n    this.updateButton();\n\n    this.subscription = query.subscribe((value: T) => {\n      if (success) {\n        success(value);\n\n        // Check if the callback changed the query state, e.g. by calling setError()\n        if (this.queryState === QueryComponentState.Error) {\n          return;\n        }\n      }\n\n      this.queryState = QueryComponentState.Ready;\n      this.changeDetector.detectChanges();\n      this.updateButton();\n    }, err => {\n      if (error) {\n        error(err);\n      }\n\n      this.setError();\n      this.notify.notifyError(this.errorMessage, err);\n    });\n  }\n\n  /**\n   * Manually sets this query component to the error state.\n   * This may be useful if e.g. the query ran successfully, the contained data in it however is not valid.\n   */\n  public setError(): void {\n    this.queryState = QueryComponentState.Error;\n    this.changeDetector.detectChanges();\n    this.updateButton();\n  }\n\n  private updateButton(): void {\n    if (!this.buttonMode) {\n      return;\n    }\n\n    this.button.element.disabled = this.queryState === QueryComponentState.Loading;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n    \n  \n\n\n\n  \n    \n  \n\n  \n    \n      {{errorMessage}}\n    \n  \n\n  \n    \n      \n      Loading...\n    \n  \n\n\n\n\n    \n\n    \n                \n                    query.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  margin: 10px;\n}\n\n.error {\n  border: red 1px solid;\n  border-radius: 10px;\n  padding: 18px;\n  width: fit-content;\n  background-color: rgba(255, 0, 0, 0.1);\n}\n\n.load-container{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n  height: fit-content;\n  background-color: #ababab;\n  padding: 10px 16px 10px 16px;\n  border-radius: 100px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  font-weight: 500;\n  color: whitesmoke;\n}\n\n.error-text {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{errorMessage}}                        Loading...      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'QueryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryListParams.html":{"url":"interfaces/QueryListParams.html","title":"interface - QueryListParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryListParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/util.ts\n        \n\n\n            \n                Description\n            \n            \n                Generic interface for backend list parameters.\nThis represents the actual data sent in the request, as our representation in the frontend\ndiffers slightly (see ListParams).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filterBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            first\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filterBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filterBy:     F\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     F\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Apollo's GraphQL fetch method returns an Observable even though we only ever see one update\n * emitted from it.\n *\n * Hence, we just convert it to a promise here.\n *\n * @param f the observable\n * @return a promise that resolves as soon as the observable emits an update\n */\nexport function promisifyApolloFetch(f: Observable): Promise {\n  return new Promise((resolve, reject) => {\n    f.subscribe(({ data }) => resolve(data), error => reject(error));\n  });\n}\n\n/**\n * Generic interface for backend list parameters.\n * This represents the actual data sent in the request, as our representation in the frontend\n * differs slightly (see {@link ListParams}).\n */\nexport interface QueryListParams {\n  after?: string;\n  before?: string;\n  filterBy?: F;\n  first?: number;\n  last?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n    \n        Description\n    \n    \n        Allows the user to register for a Gropius account.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmValidator\n                            \n                            \n                                isLoading\n                            \n                            \n                                publicClientName\n                            \n                            \n                                userNameAsyncValidator\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToLogin\n                            \n                            \n                                resetForm\n                            \n                            \n                                submitForm\n                            \n                            \n                                validateConfirmPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apollo: Apollo, router: Router, registerUserMutation: RegisterUserGQL, userAvailablyQuery: CheckUsernameGQL, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apollo\n                                                  \n                                                        \n                                                                    Apollo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registerUserMutation\n                                                  \n                                                        \n                                                                        RegisterUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAvailablyQuery\n                                                  \n                                                        \n                                                                        CheckUsernameGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToLogin\n                        \n                    \n                \n            \n            \n                \nbackToLogin(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:131\n                \n            \n\n\n            \n                \n                    Loads the login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm(e: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:118\n                \n            \n\n\n            \n                \n                    Resets form fields and marks all controls as pristine.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEvent affecting the form reset.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm(value: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:95\n                \n            \n\n\n            \n                \n                    Given data needed for account creation\nand carries out the creation by issuing a mutation to the backend.\nIf successfull, the user is redirected to the Login page.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nData (from the register form) that is handled.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateConfirmPassword\n                        \n                    \n                \n            \n            \n                \nvalidateConfirmPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:85\n                \n            \n\n\n            \n                \n                    Recalculates the value and validation status of the password confirmation field.\nThis is triggered whenever the user changes the password in the register form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:67\n                        \n                    \n\n            \n                \n                    Checks that the password in the Confirm Password field\nmatches the password in the Password field.\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            Password that is handled.\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publicClientName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.publicClientName\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNameAsyncValidator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:44\n                        \n                    \n\n            \n                \n                    Checks with backend to ensure that entered username is valid.\nA username is invalid when its taken or contains symbols like '*', etc.\ncontrol is not a valid username. Emits null when username is valid\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                                Description\n                                        \n                                    \n                                    \n                                            \n                                                    control\n                                                    \n                                                            \nUsername that is handled.\n\n\n                                                    \n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Apollo} from 'apollo-angular';\nimport {Observable, Observer} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {CheckUsernameGQL, RegisterUserGQL, RegisterUserInput} from 'src/generated/public-graphql';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * Allows the user to register for a Gropius account.\n */\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  validateForm: FormGroup;\n  isLoading = false;\n  publicClientName = environment.publicClientName;\n\n  constructor(private fb: FormBuilder, private apollo: Apollo, private router: Router,\n              private registerUserMutation: RegisterUserGQL, private userAvailablyQuery: CheckUsernameGQL,\n              private notify: UserNotifyService) {\n    this.registerUserMutation.client = this.publicClientName;\n    this.userAvailablyQuery.client = this.publicClientName;\n    this.validateForm = this.fb.group({\n      username: ['', [Validators.required], [this.userNameAsyncValidator]],\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]],\n      confirm: ['', [this.confirmValidator]],\n    });\n  }\n\n  /**\n   * Checks with backend to ensure that entered username is valid.\n   * A username is invalid when its taken or contains symbols like '*', etc.\n   * @param control - Username that is handled.\n   * @returns Observable emitting values indicating error when string entered in\n   * control is not a valid username. Emits null when username is valid\n   */\n  userNameAsyncValidator = (control: FormControl) =>\n   new Observable((observer: Observer) => {\n     this.userAvailablyQuery.fetch({username: control.value}).subscribe(({data}) => {\n\n       // case: username already taken\n       // => marks event as error\n       if (!data.checkUsername) {\n         // returns `{error: true}` to mark event as an error\n         observer.next({error: true, duplicated: true});\n       } else {\n         observer.next(null);\n       }\n       observer.complete();\n     }, (error) => {\n       this.notify.notifyError('Failed to verify user name!', error);\n     });\n   });\n\n  /**\n   * Checks that the password in the Confirm Password field \n   * matches the password in the Password field.\n   * @param control Password that is handled.\n   */\n  confirmValidator = (control: FormControl): { [s: string]: boolean } => {\n\n    // case: no password given\n    if (!control.value) {\n      return {error: true, required: true};\n    }\n    \n    // case: password does not match\n    else if (control.value !== this.validateForm.controls.password.value) {\n      return {confirm: true, error: true};\n    }\n    return {};\n  };\n\n  /**\n   * Recalculates the value and validation status of the password confirmation field.\n   * This is triggered whenever the user changes the password in the register form.\n   */\n  validateConfirmPassword(): void {\n    setTimeout(() => this.validateForm.controls.confirm.updateValueAndValidity());\n  }\n\n  /**\n   * Given data needed for account creation\n   * and carries out the creation by issuing a mutation to the backend. \n   * If successfull, the user is redirected to the Login page.\n   * @param value - Data (from the register form) that is handled.\n   */\n  submitForm(value: { username: string; email: string; password: string; confirm: string }): void {\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsDirty();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n    const input: RegisterUserInput = {\n      username: value.username,\n      displayName: value.username,\n      password: value.password,\n      email: value.email\n    };\n\n    this.registerUserMutation.mutate({input}).subscribe(({data}) => {\n      this.router.navigate(['login']);\n    }, (error) => {\n      this.notify.notifyError('Failed to register the user!', error);\n    });\n  }\n\n  /**\n   * Resets form fields and marks all controls as pristine.\n   * @param e - Event affecting the form reset.\n   */\n  resetForm(e: MouseEvent): void {\n    e.preventDefault();\n    this.validateForm.reset();\n    for (const key of Object.keys(this.validateForm.controls)) {\n      this.validateForm.controls[key].markAsPristine();\n      this.validateForm.controls[key].updateValueAndValidity();\n    }\n  }\n  \n  /**\n   * Loads the login page.\n   * @param e - Event affecting the form reset.\n   */\n  backToLogin(e: MouseEvent): void {\n    e.preventDefault();\n    this.router.navigate(['login']);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n      \n      \n        \n      \n\n      \n      \n        Register\n      \n\n    \n\n    \n\n      \n      \n\n        \n        \n          Username\n        \n\n        \n        \n          \n          \n            \n              Please enter a Username!\n            \n            \n              This Username is taken!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Email\n        \n\n        \n        \n          \n          \n            \n              Please enter a valid Email!\n            \n            \n              Please enter your Email!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n          Password\n        \n\n        \n        \n          \n        \n      \n\n      \n      \n\n        \n        \n          Confirm Password\n        \n\n        \n        \n          \n          \n            \n              Please enter your Password!\n            \n            \n              Passwords do not match!\n            \n          \n        \n      \n\n      \n      \n\n        \n        \n\n          \n          Register\n\n          \n          Reset\n\n          \n          Back\n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n      [nz-form] {\n        max-width: 600px;\n      }\n\n      button {\n        margin-left: 8px;\n      }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Register                                                    Username                                                                      Please enter a Username!                                      This Username is taken!                                                                          Email                                                                      Please enter a valid Email!                                      Please enter your Email!                                                                          Password                                                                                      Confirm Password                                                                      Please enter your Password!                                      Passwords do not match!                                                                                    Register                    Reset                    Back                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelationEdge.html":{"url":"interfaces/RelationEdge.html","title":"interface - RelationEdge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelationEdge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/issue-graph/issue-graph-nodes.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Edge\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sourceIssues\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sourceIssues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceIssues:     Set\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Set\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GraphComponent, GraphInterface} from '@app/data/issue-graph/graph-data';\nimport {IssueCategory} from 'src/generated/graphql';\nimport {Node} from '@ustutt/grapheditor-webcomponent/lib/node';\nimport {Edge} from '@ustutt/grapheditor-webcomponent/lib/edge';\n\nexport {\n  IssueNode, ComponentNode, InterfaceNode, IssueGroupContainerNode, RelationEdge,\n  createComponentNode, createInterfaceNode, createIssueGroupContainerNode, createIssueFolderNode,\n  createRelationEdge, createConsumptionEdge, createInterfaceProvisionEdge,\n  Position,\n  getIssueFolderId\n};\n\nexport enum NodeType {\n  Component = 'component',\n  Interface = 'interface',\n  InterfaceConsumer = 'interface-connect',\n  IssueGroupContainer = 'issue-group-container'\n}\n\n/**\n * This file includes type definitions and creation functions (think constructors)\n * for nodes and edges that are added to the graph editor in order to visualize the project.\n * Since the data that is stored with these differs based on what they represent (e.g.\n * interface vs component node) we give each their own type. We do this by extending\n * the Node class or the Edge class of the grapheditor. These classes are instantiated\n * via calls to the contained create* functions within the drawGraph method of the IssueGraphComponent.\n */\n\ninterface IssueNode extends Node {\n  id: string;\n  title: string;\n  issueGroupContainer?: IssueGroupContainerNode;\n}\n\ninterface ComponentNode extends IssueNode {\n  data: GraphComponent;\n}\n\nfunction createComponentNode(component: GraphComponent, position: Position): ComponentNode {\n  return {\n    ...(position || zeroPosition),\n    id: component.id,\n    title: component.name,\n    type: NodeType.Component,\n    data: component\n  };\n}\n\ninterface InterfaceNode extends IssueNode {\n  offeredById: string;\n}\n\nfunction createInterfaceNode(intrface: GraphInterface, position: Position): InterfaceNode {\n  return {\n    ...(position || zeroPosition),\n    id: intrface.id,\n    title: intrface.name,\n    type: NodeType.Interface,\n    offeredById: intrface.offeredBy,\n  };\n}\n\ninterface IssueGroupContainerNode extends Node {\n  position: string;\n  issueGroupNodeIds: Set;\n}\n\nfunction createIssueGroupContainerNode(node: IssueNode): IssueGroupContainerNode {\n  return {\n    id: `${node.id}__issue-group-container`,\n    type: NodeType.IssueGroupContainer,\n    dynamicTemplate: 'issue-group-container',\n    x: 0,\n    y: 0,\n    position: 'bottom',\n    issueGroupNodeIds: new Set(),\n  };\n}\n\ninterface IssueFolderNode extends Node {\n  type: IssueCategory;\n  issueCount: string;\n}\n\nfunction createIssueFolderNode(node: IssueNode, issueCategory: IssueCategory, issueCount: string): IssueFolderNode {\n  return {\n    id: getIssueFolderId(node.id, issueCategory),\n    type: issueCategory,\n    x: 0,\n    y: 0,\n    issues: new Set(),\n    issueCount\n  };\n}\n\ninterface RelationEdge extends Edge {\n  sourceIssues: Set;\n}\n\nfunction createRelationEdge(sourceId: string, targetId: string, edgeType = folderEdgeTypes.RelatedTo): RelationEdge {\n  return {\n    id: `s${sourceId}t${targetId}r${edgeType}`,\n    source: sourceId,\n    target: targetId,\n    type: folderEdgeTypes.RelatedTo,\n    markerEnd: {\n      template: 'arrow',\n      relativeRotation: 0,\n    },\n    dragHandles: [],\n    sourceIssues: new Set()\n  };\n}\n\nfunction createConsumptionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.InterfaceConsumer,\n    markerEnd: {\n      template: 'interface-connector',\n      relativeRotation: 0,\n    },\n  };\n}\n\nfunction createInterfaceProvisionEdge(componentId: string, interfaceId: string): Edge {\n  return {\n    source: componentId,\n    target: interfaceId,\n    type: NodeType.Interface,\n    dragHandles: [],\n  };\n}\n\nfunction getIssueFolderId(id: string, issueCategory: IssueCategory): string {\n  return `${id}__${issueCategory}`;\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\nconst zeroPosition = {x: 0, y: 0};\n\nenum folderEdgeTypes {\n  RelatedTo = 'relatedTo',\n  Depends = 'dependency',\n  Duplicates = 'duplicate'\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveDialogComponent.html":{"url":"components/RemoveDialogComponent.html","title":"component - RemoveDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-dialog/remove-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is a confirmation dialog for anything that involves deleting\nExample\n// ...\n\nconstructor(private dialog: MatDialog, ...)\n\n// ...\n\nconst dialogRef = this.dialog.open(RemoveDialogComponent,\n{\n  data: {\n    title: 'This is the title of the dialog',\n    messages: ['Every entry is a new line',\n               'This is the next line',\n               ' Lines beginning with a space will be indented'],\n    verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n    confirmButtonText: 'This is the text of the confirm button'\n  }\n});\n\ndialogRef.afterClosed().subscribe(confirm => {\n  if (confirm) {\n    console.log('Deleted!');\n  } else {\n    console.log('Not deleted!');\n  }\n});\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-dialog\n            \n\n            \n                styleUrls\n                ./remove-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                matchValidator\n                            \n                            \n                                verificationNameInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verificationNameInput\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('', this.matchValidator)\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-dialog/remove-dialog.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormControl, ValidatorFn} from '@angular/forms';\n\n/**\n * This component is a confirmation dialog for anything that involves deleting\n *\n * #### Example\n * ```ts\n * // ...\n *\n * constructor(private dialog: MatDialog, ...)\n *\n * // ...\n *\n * const dialogRef = this.dialog.open(RemoveDialogComponent,\n * {\n *   data: {\n *     title: 'This is the title of the dialog',\n *     messages: ['Every entry is a new line',\n *                'This is the next line',\n *                ' Lines beginning with a space will be indented'],\n *     verificationName: 'In order for the user to be able to click the confirm button, this text has to be typed',\n *     confirmButtonText: 'This is the text of the confirm button'\n *   }\n * });\n *\n * dialogRef.afterClosed().subscribe(confirm => {\n *   if (confirm) {\n *     console.log('Deleted!');\n *   } else {\n *     console.log('Not deleted!');\n *   }\n * });\n * ```\n */\n@Component({\n  selector: 'app-remove-dialog',\n  templateUrl: './remove-dialog.component.html',\n  styleUrls: ['./remove-dialog.component.scss']\n})\nexport class RemoveDialogComponent implements OnInit {\n  matchValidator: ValidatorFn = control => {\n    return control.value === this.data.verificationName ? null : {'Names don\\'t match': true};\n  }\n\n  verificationNameInput = new FormControl('', this.matchValidator);\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n  }\n\n  ngOnInit(): void {\n    this.verificationNameInput.markAsTouched();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onDeleteClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\nexport interface DialogData {\n  title: string;\n  /** The list of lines shown in the dialog. If a line starts with a space, the line will be indented */\n  messages: Array;\n  /** If set, shows a text box that forces the user to type the specified text before being able to click the confirm button */\n  verificationName?: string;\n  /** If set, shows this text as the text in the confirm button. If not set, button shows 'Delete' */\n  confirmButtonText?: string;\n}\n\n    \n\n    \n        \n  delete\n  {{data.title}}\n\n\n\n  \n    \n      &nbsp;&nbsp;&nbsp;&nbsp;\n      {{message.startsWith(' ') ? message.substring(1) : message}}\n    \n  \n  \n    \n      Type &quot;{{data.verificationName}}&quot; to confirm:\n      \n        Confirm name\n        \n        Names don't match!\n      \n    \n\n    \n      \n    \n  \n\n\n\n  Cancel\n  \n    {{this.data.confirmButtonText ? this.data.confirmButtonText : 'Delete'}}\n  \n\n\n    \n\n    \n                \n                    ./remove-dialog.component.scss\n                \n                .mat-dialog-content{\n  display: flex;\n  flex-direction: column;\n}\n\n.content {\n  display: inline-block;\n  align-self: center;\n  place-self: center;\n  vertical-align: middle;\n  border-top: lightgray;\n  border-top-style: solid;\n  border-bottom: lightgray;\n  border-bottom-style: solid;\n  font-weight: bold;\n  font-size: 1.1em;\n  padding: 8px;\n  margin: 0;\n  width: 100%;\n  overflow: auto;\n  flex: 1 1 auto;\n  white-space: nowrap;\n}\n\n.title{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.delete-icon {\n  flex: 0 0 auto;\n}\n\n.mat-success {\n  background-color: green;\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  delete  {{data.title}}                      {{message.startsWith(\\' \\') ? message.substring(1) : message}}                  Type \"{{data.verificationName}}\" to confirm:              Confirm name                Names don\\'t match!                            Cancel      {{this.data.confirmButtonText ? this.data.confirmButtonText : \\'Delete\\'}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RemoveProjectMemberComponentComponent.html":{"url":"components/RemoveProjectMemberComponentComponent.html","title":"component - RemoveProjectMemberComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RemoveProjectMemberComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-remove-project-member-component\n            \n\n            \n                styleUrls\n                ./remove-project-member-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./remove-project-member-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteClick\n                        \n                    \n                \n            \n            \n                \nonDeleteClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-remove-project-member-component',\n  templateUrl: './remove-project-member-component.component.html',\n  styleUrls: ['./remove-project-member-component.component.scss']\n})\nexport class RemoveProjectMemberComponentComponent implements OnInit {\n\n\n  constructor(public dialogRef: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data) { }\n\n  //users selected in the dialog to be deleted\n  selectedUsers = [];\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onDeleteClick() {\n    const data = {usersToDelete: this.selectedUsers};\n    this.dialogRef.close(data);\n  }\n\n}\n\n    \n\n    \n        Remove Project Member\n\n\n  \n    \n    \n    \n\n      {{user.displayName}}\n    \n  \n\n\n\n  Cancel\n  Delete User \n\n\n    \n\n    \n                \n                    ./remove-project-member-component.component.scss\n                \n                .dialog-content {\n    min-height: 400px;\n    min-width: 400px;\n    max-width: 600px;\n  }\n  .actions {\n    float:right\n  }\n  .stretch {\n    width: 100%;\n  }\n\n  .mat-success {\n    background-color: green;\n    color: #fff;\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Remove Project Member                    {{user.displayName}}        Cancel  Delete User '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'RemoveProjectMemberComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorComponent.html":{"url":"components/SetEditorComponent.html","title":"component - SetEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor.component.ts\n\n\n\n    \n        Description\n    \n    \n        The set editor displays and edits a list of items (used in the issue detail sidebar).\n\nThe list of selected items listSet may be either a local array of IDs or a ListId.\nWhen editing, items may be selected from a list of all available items #listAll.\nThe list of items may be searched using a search box (#makeFilter and #scoreKeys).\nUpon closing the edit dialog, a changeset of additions and deletions is passed to a callback (#applyChangeset).\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor\n            \n\n            \n                styleUrls\n                ./set-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                beginEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyChangeset\n                            \n                            \n                                createItem\n                            \n                            \n                                editable\n                            \n                            \n                                emptyResultsLabel\n                            \n                            \n                                emptySuggestionsLabel\n                            \n                            \n                                hydrate\n                            \n                            \n                                itemOps\n                            \n                            \n                                listAll\n                            \n                            \n                                listSet\n                            \n                            \n                                makeFilter\n                            \n                            \n                                scoreKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteItem\n                            \n                            \n                                editItem\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    totalCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, dialogService: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor.component.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogService\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        applyChangeset\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:42\n                            \n                        \n                \n                    \n                        Callback for applying a changeset to the listSet.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createItem\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:59\n                            \n                        \n                \n                    \n                        Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:48\n                            \n                        \n                \n                    \n                        Set editable to false to just display items in the set, without being able to edit them.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyResultsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No results'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:52\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears when there is a search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emptySuggestionsLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No suggestions'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:50\n                            \n                        \n                \n                    \n                        Set to override the “no results” text in the dialog. Appears only when there is no search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hydrate\n                    \n                \n                \n                    \n                        Type :         Promise>\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:54\n                            \n                        \n                \n                    \n                        Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        itemOps\n                    \n                \n                \n                    \n                        Type :         ItemOps\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:56\n                            \n                        \n                \n                    \n                        Additional operations available from the set editor.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listAll\n                    \n                \n                \n                    \n                        Type :     ListId | SetMultiSource\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:40\n                            \n                        \n                \n                    \n                        The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listSet\n                    \n                \n                \n                    \n                        Type :     ListId | NodeId[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:38\n                            \n                        \n                \n                    \n                        The list that contains all nodes that are part of the set. string[] is treated as local state.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        makeFilter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:44\n                            \n                        \n                \n                    \n                        Callback for making a filter for the given search query.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        scoreKeys\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:46\n                            \n                        \n                \n                    \n                        Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:63\n                            \n                        \n                \n                    \n                        Callback to delete an item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        editItem\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:61\n                            \n                        \n                \n                    \n                        Callback to edit an item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginEditing\n                        \n                    \n                \n            \n            \n                \nbeginEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor.component.ts:171\n                \n            \n\n\n            \n                \n                    Opens the editor dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        totalCount\n                    \n                \n\n                \n                    \n                        gettotalCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/set-editor/set-editor.component.ts:142\n                                \n                            \n                    \n                        \n                                Returns the number of selected items.\nMay be NaN if it hasn't been loaded yet.\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  ContentChild,\n  ElementRef, EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit, Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ListId, NodeId } from '@app/data-dgql/id';\nimport { DataList, HydrateList } from '@app/data-dgql/query';\nimport DataService from '@app/data-dgql';\nimport { Subscription } from 'rxjs';\nimport { ItemDirective } from '@app/components/item.directive';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SetEditorDialogComponent, SetEditorDialogData, SetMultiSource } from './set-editor-dialog.component';\n\ntype ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\n/**\n * The set editor displays and edits a list of items (used in the issue detail sidebar).\n *\n * - The list of selected items {@link listSet} may be either a local array of IDs or a {@link ListId}.\n * - When editing, items may be selected from a list of all available items {@link #listAll}.\n * - The list of items may be searched using a search box ({@link #makeFilter} and {@link #scoreKeys}).\n * - Upon closing the edit dialog, a changeset of additions and deletions is passed to a callback ({@link #applyChangeset}).\n */\n@Component({\n  selector: 'app-set-editor',\n  templateUrl: './set-editor.component.html',\n  styleUrls: ['./set-editor.component.scss']\n})\nexport class SetEditorComponent implements OnInit, OnChanges, OnDestroy {\n  /** The list that contains all nodes that are part of the set. string[] is treated as local state. */\n  @Input() listSet: ListId | NodeId[];\n  /** The list of all possible items. Should be a superset of listSet, as otherwise the user may not be able to deselect items. */\n  @Input() listAll: ListId | SetMultiSource;\n  /** Callback for applying a changeset to the listSet. */\n  @Input() applyChangeset: (additions: NodeId[], deletions: NodeId[]) => Promise;\n  /** Callback for making a filter for the given search query. */\n  @Input() makeFilter: (searchQuery: string) => F;\n  /** Object keys used for scoring a search result. (e.g. 'title') Should correspond to fields searched in makeFilter. */\n  @Input() scoreKeys: string[];\n  /** Set editable to false to just display items in the set, without being able to edit them. */\n  @Input() editable = true;\n  /** Set to override the “no results” text in the dialog. Appears only when there is no search query. */\n  @Input() emptySuggestionsLabel = 'No suggestions';\n  /** Set to override the “no results” text in the dialog. Appears when there is a search query. */\n  @Input() emptyResultsLabel = 'No results';\n  /** Pass a HydrateList object to load the listSet with existing data instead of sending a request to the server. */\n  @Input() hydrate: Promise>;\n  /** Additional operations available from the set editor. */\n  @Input() itemOps: ItemOps = 'none';\n\n  /** Callback to create a new item (enabled using itemOps). If the promise returns a node ID, it will be added to the set. */\n  @Input() createItem: () => Promise;\n  /** Callback to edit an item. */\n  @Output() editItem = new EventEmitter();\n  /** Callback to delete an item. */\n  @Output() deleteItem = new EventEmitter();\n\n  /**\n   * @ignore\n   * Pointer to the title text element. Used to read the title, because we can't read angular components directly.\n   */\n  @ViewChild('titleText') titleText: ElementRef;\n  /**\n   * @ignore\n   * Pointer to the *appItem directive. Used to instantiate list items.\n   */\n  @ContentChild(ItemDirective, { read: TemplateRef }) itemTemplate;\n\n  /**\n   * @ignore\n   * List that fetches the first few items of the list of items in the set.\n   */\n  public listSet$: DataList;\n  /**\n   * @ignore\n   * The subscription to listSet$.\n   */\n  private listSetSub: Subscription;\n\n  /**\n   * @ignore\n   * If true, the listSet$ variable is null and listSet contains an array of node IDs.\n   */\n  public isLocalSet = false;\n\n  constructor(\n    private dataService: DataService,\n    private dialogService: MatDialog\n  ) {}\n\n  /**\n   * @ignore\n   * Internal: (re-)loads the subscription to whatever the user put in listSet.\n   */\n  private reloadListSet() {\n    if (Array.isArray(this.listSet)) {\n      this.isLocalSet = true;\n      if (this.listSet$) {\n        this.listSetSub.unsubscribe();\n        this.listSet$ = null;\n      }\n    } else {\n      this.isLocalSet = false;\n      this.listSetSub?.unsubscribe();\n      this.listSet$ = this.dataService.getList(this.listSet);\n      this.listSetSub = this.listSet$.subscribe();\n    }\n  }\n\n  ngOnInit() {\n    this.reloadListSet();\n    if (this.hydrate && this.listSet$) {\n      this.listSet$.hydrateInitial(this.hydrate);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.listSet) {\n      const newValue = changes.listSet.currentValue;\n      if (this.isLocalSet !== (typeof newValue !== 'string')) {\n        this.reloadListSet();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n  }\n\n  /**\n   * Returns the number of selected items.\n   *\n   * May be NaN if it hasn't been loaded yet.\n   */\n  get totalCount(): number {\n    if (this.isLocalSet) {\n      return (this.listSet as NodeId[]).length;\n    } else {\n      if (this.listSet$.loading) {\n        return NaN;\n      }\n      return this.listSet$.totalCount;\n    }\n  }\n\n  // Callbacks for the set editor dialog.\n  // They all forward to the user-provided function.\n  // We do not pass the user-provided function directly because they may change while the dialog is open.\n  /** @ignore */\n  private onDialogApplyChangeset = (additions: NodeId[], deletions: NodeId[]): Promise => {\n    return this.applyChangeset(additions, deletions);\n  }\n  /** @ignore */\n  private onDialogCreateItem = () => this.createItem();\n  /** @ignore */\n  private onDialogEditItem = (item) => this.editItem.emit(item);\n  /** @ignore */\n  private onDialogDeleteItem = (item) => this.deleteItem.emit(item);\n\n  /**\n   * @internal\n   * Opens the editor dialog.\n   */\n  beginEditing() {\n    this.dialogService.open>(SetEditorDialogComponent, {\n      width: '400px',\n      data: {\n        title: this.titleText?.nativeElement.textContent || '',\n        listSet: this.listSet,\n        listAll: this.listAll,\n        itemTemplate: this.itemTemplate,\n        applyChangeset: this.onDialogApplyChangeset,\n        makeFilter: this.makeFilter,\n        scoreKeys: this.scoreKeys,\n        emptySuggestionsLabel: this.emptySuggestionsLabel,\n        emptyResultsLabel: this.emptyResultsLabel,\n        createItem: this.itemOps.includes('create') ? this.onDialogCreateItem : null,\n        editItem: this.itemOps.includes('edit') ? this.onDialogEditItem : null,\n        deleteItem: this.itemOps.includes('delete') ? this.onDialogDeleteItem : null\n      } as SetEditorDialogData\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            settings\n        \n    \n    \n        \n            \n                \n                    \n                        \n                    \n                \n            \n        \n        \n            \n                \n            \n            \n                ...\n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor.component.scss\n                \n                :host {\n  display: block;\n}\n\n.app-set-editor {\n  .set-editor-title {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-height: 36px;\n\n    .title-text-container {\n      font-weight: bold;\n      line-height: 1.5;\n    }\n  }\n\n  .items-empty {\n    opacity: 0.5;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    settings                                                                                                                                                                                                                                    ...                                                    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SetEditorDialogComponent.html":{"url":"components/SetEditorDialogComponent.html","title":"component - SetEditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SetEditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/set-editor/set-editor-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This is an internal component used in the set editor.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-editor-dialog\n            \n\n            \n                styleUrls\n                ./set-editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./set-editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                additions\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Private\n                                deletions\n                            \n                            \n                                    Public\n                                isLocalSet\n                            \n                            \n                                    Public\n                                listAll\n                            \n                            \n                                    Public\n                                listSet$\n                            \n                            \n                                    Private\n                                listSetSub\n                            \n                            \n                                    Public\n                                localSet\n                            \n                            \n                                    Public\n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                apply\n                            \n                            \n                                createItem\n                            \n                            \n                                getEncodedId\n                            \n                            \n                                getNodeId\n                            \n                            \n                                isInSet\n                            \n                            \n                                searchQueryDidChange\n                            \n                            \n                                toggleInSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, notifyService: UserNotifyService, dialogRef: MatDialogRef>, data: SetEditorDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:217\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    SetEditorDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        apply\n                        \n                    \n                \n            \n            \n                \napply()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:286\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createItem\n                        \n                    \n                \n            \n            \n                \ncreateItem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:299\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEncodedId\n                        \n                    \n                \n            \n            \n                \ngetEncodedId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeIdEnc\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNodeId\n                        \n                    \n                \n            \n            \n                \ngetNodeId(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NodeId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInSet\n                        \n                    \n                \n            \n            \n                \nisInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQueryDidChange\n                        \n                    \n                \n            \n            \n                \nsearchQueryDidChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleInSet\n                        \n                    \n                \n            \n            \n                \ntoggleInSet(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/set-editor/set-editor-dialog.component.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        additions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:215\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SetEditorDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:223\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deletions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:216\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLocalSet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listAll\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MultiSourceList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:213\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        listSet$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataList\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listSetSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:214\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localSet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeIdEnc[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:211\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/set-editor/set-editor-dialog.component.ts:217\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n    {{data.title}}\n    \n        \n            \n                Search\n                search\n                \n            \n        \n        \n            \n                \n                    \n                        \n                    \n\n                    \n                        \n                            \n                                \n                                    Edit\n                                \n                                \n                                    Delete\n                                \n                            \n                        \n                        \n                            more_vert\n                        \n                    \n                \n            \n            \n                \n                    \n                    \n                    \n                    \n                \n                Use search to find more items\n            \n            \n                \n                    {{data.emptyResultsLabel}}\n                \n                \n                    {{data.emptySuggestionsLabel}}\n                \n            \n            \n                \n                    add\n                    Create new\n                \n            \n        \n    \n    \n        \n            Cancel\n        \n        \n            Apply\n        \n    \n\n\n    \n\n    \n                \n                    ./set-editor-dialog.component.scss\n                \n                .set-editor-dialog {\n  .dialog-search {\n    .search-field {\n      width: 100%;\n    }\n  }\n\n  .dialog-items {\n    margin-bottom: 16px;\n\n    .selectable-item {\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\n      display: flex;\n\n      &:first-child {\n        border-top: none;\n      }\n\n      .inner-checkbox {\n        display: block;\n        flex: 1;\n        padding: 8px 16px;\n      }\n    }\n\n    .items-more {\n      text-align: center;\n      opacity: 0.7;\n      font-size: smaller;\n\n      .more-dots {\n        display: block;\n        margin-bottom: 4px;\n\n        .dot {\n          display: block;\n          width: 4px;\n          height: 4px;\n          border-radius: 2px;\n          background: currentColor;\n          margin: 0 auto 3px auto;\n\n          &:nth-child(2) { opacity: 0.6; }\n          &:nth-child(3) { opacity: 0.27; }\n          &:nth-child(4) { opacity: 0.08; }\n        }\n      }\n    }\n\n    .items-empty {\n      text-align: center;\n      opacity: 0.5;\n    }\n\n    .items-create {\n      text-align: center;\n      margin-top: 16px;\n      margin-bottom: 8px;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{data.title}}                                        Search                search                                                                                                                                                                                                                                                                                    Edit                                                                                                    Delete                                                                                                                                        more_vert                                                                                                                                                                                                                    Use search to find more items                                                            {{data.emptyResultsLabel}}                                                    {{data.emptySuggestionsLabel}}                                                                            add                    Create new                                                                Cancel                            Apply            '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SetEditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetEditorDialogData.html":{"url":"interfaces/SetEditorDialogData.html","title":"interface - SetEditorDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetEditorDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            applyChangeset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleteItem\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            editItem\n                                        \n                                \n                                \n                                        \n                                            emptyResultsLabel\n                                        \n                                \n                                \n                                        \n                                            emptySuggestionsLabel\n                                        \n                                \n                                \n                                        \n                                            itemTemplate\n                                        \n                                \n                                \n                                        \n                                            listAll\n                                        \n                                \n                                \n                                        \n                                            listSet\n                                        \n                                \n                                \n                                        \n                                            makeFilter\n                                        \n                                \n                                \n                                        \n                                            scoreKeys\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        applyChangeset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        applyChangeset:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        editItem\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        editItem:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyResultsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptyResultsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptySuggestionsLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emptySuggestionsLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemTemplate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemTemplate:     TemplateRef<>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TemplateRef<>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listAll\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listAll:     ListId | SetMultiSource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | SetMultiSource\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listSet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listSet:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        makeFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        makeFilter:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scoreKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scoreKeys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SetMultiSource.html":{"url":"interfaces/SetMultiSource.html","title":"interface - SetMultiSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SetMultiSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/set-editor/set-editor-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This interface is used to source items from multiple sources in the set editor.\nstaticSources specifies lists whose items will always be loaded.\nsourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            listFromNode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceNodes\n                                        \n                                \n                                \n                                        \n                                            staticSources\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listFromNode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listFromNode:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maps nodes from sourceNodes to lists from which items will be sourced.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceNodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceNodes:     ListId | NodeId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ListId | NodeId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A list of nodes that will be passed to listFromNode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticSources\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticSources:         ListId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListId[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A static list of source lists.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit, TemplateRef } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  decodeListId,\n  decodeNodeId,\n  encodeListId,\n  encodeNodeId,\n  ListId,\n  ListIdEnc,\n  NodeId,\n  NodeIdEnc,\n  nodeTypeFromTypename\n} from '@app/data-dgql/id';\nimport { DataList } from '@app/data-dgql/query';\nimport { Subscription } from 'rxjs';\nimport DataService from '@app/data-dgql';\nimport { UserNotifyService } from '@app/user-notify/user-notify.service';\nimport { quickScore } from 'quick-score';\n\n/**\n * This interface is used to source items from multiple sources in the set editor.\n *\n * staticSources specifies lists whose items will always be loaded.\n * sourceNodes specifies a list of nodes whose the sub-items will be loaded (e.g. a list of components whose labels will be loaded).\n */\nexport interface SetMultiSource {\n  /** A static list of source lists. */\n  staticSources: ListId[];\n  /** A list of nodes that will be passed to listFromNode. */\n  sourceNodes?: ListId | NodeId[];\n  /** Maps nodes from sourceNodes to lists from which items will be sourced. */\n  listFromNode?: (n: NodeId) => ListId;\n}\n\n/**\n * This is an internal component used to load data from multiple sources and through a layer of indirection (also see SetMultiSource).\n */\nclass MultiSourceList {\n  /** A DataList that loads the value of sourceNodes, if it's a ListId. */\n  public sourceNodeList?: DataList;\n  /**\n   * @ignore\n   * Internal: subscription to the sourceNodeList.\n   */\n  private sourceNodeListSub?: Subscription;\n  /** The list of nodes specified in sourceNodes, if it's a NodeId[]. */\n  public staticSourceNodeList?: NodeId[];\n  /** List of all sources that will be included in the results. */\n  public sources: Map> = new Map();\n  /**\n   * @ignore\n   * Internal: subscriptions to all of the sources.\n   */\n  private sourceSubs: Map = new Map();\n  /** Max number of items in results. */\n  public limit = 10;\n  /** Current results. */\n  public results?: T[];\n  /** If true, there are more than `limit` items in the source data. */\n  public hasMore = false;\n  /**\n   * Current search query. Used to rank results by relevance.\n   * The filters are computed separately! Use {@link #setFilter} to set both simultaneously.\n   */\n  public query = '';\n\n  constructor(public spec: SetMultiSource, public scoreKeys: string[], private dataService: DataService) {\n    if (Array.isArray(spec.sourceNodes)) {\n      this.staticSourceNodeList = spec.sourceNodes;\n    } else if (typeof spec.sourceNodes === 'object') {\n      this.sourceNodeList = dataService.getList(spec.sourceNodes);\n      this.sourceNodeListSub = this.sourceNodeList.subscribe(() => this.update());\n    }\n    this.update();\n  }\n\n  /** Creates a new MultiSourceList that actually just loads a single list. */\n  static fromSingleList(list: ListId, scoreKeys: string[], dataService: DataService) {\n    return new this({ staticSources: [list] }, scoreKeys, dataService);\n  }\n\n  /** Updates lists. */\n  update() {\n    const newSourceSet = new Set();\n    for (const id of this.sourceNodeList?.current?.keys() || []) {\n      const nodeId = decodeNodeId(id);\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const nodeId of this.staticSourceNodeList || []) {\n      newSourceSet.add(encodeListId(this.spec.listFromNode(nodeId)));\n    }\n    for (const source of this.spec.staticSources) {\n      newSourceSet.add(encodeListId(source));\n    }\n\n    for (const source of newSourceSet) {\n      if (!this.sources.has(source)) {\n        const list = this.dataService.getList(decodeListId(source));\n        list.interactive = true;\n        this.sources.set(source, list);\n        this.sourceSubs.set(source, list.subscribe(() => this.updateResults()));\n      }\n    }\n    for (const source of [...this.sources.keys()]) {\n      if (!newSourceSet.has(source)) {\n        this.sourceSubs.get(source).unsubscribe();\n        this.sourceSubs.delete(source);\n        this.sources.delete(source);\n      }\n    }\n  }\n\n  /** Sets a filter on all lists. */\n  setFilter(query: string, filter: F) {\n    this.query = query;\n    for (const source of this.sources.values()) {\n      source.filter = filter;\n    }\n  }\n\n  /** Scores an item for ranking in results. */\n  score(item: T) {\n    const matchStrings = [];\n    for (const key of this.scoreKeys) {\n      let cursor = item;\n      for (const objKey of key.split('.')) {\n        cursor = cursor[objKey];\n        if (!cursor) {\n          break;\n        }\n      }\n      if (cursor) {\n        matchStrings.push(cursor);\n      }\n    }\n\n    return quickScore(matchStrings.join(' '), this.query);\n  }\n\n  /** Updates the results array from loaded data. */\n  updateResults() {\n    const seenItems = new Set();\n    const items = [];\n    this.hasMore = false;\n    for (const source of this.sources.values()) {\n      if (!source.hasData) {\n        continue;\n      }\n      for (const [id, item] of source.current.entries()) {\n        if (!seenItems.has(id)) {\n          seenItems.add(id);\n          items.push(item);\n        }\n      }\n      this.hasMore = this.hasMore || (source.current.size  this.score(a) - this.score(b));\n    items.splice(this.limit);\n\n    this.results = items;\n  }\n\n  /** If true, something is loading somewhere. */\n  isLoading() {\n    if (this.sourceNodeList?.loading) {\n      return true;\n    }\n    for (const source of this.sources.values()) {\n      if (source.loading) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Unsubscribes from all subscriptions. This object should no longer be used afterwards. */\n  unsubscribe() {\n    this.sourceNodeListSub?.unsubscribe();\n    this.sourceSubs.forEach(sub => sub.unsubscribe());\n  }\n}\n\n/** Types of item operations that may be made available. */\nexport type ItemOps = 'none' | 'edit' | 'create-edit' | 'create-edit-delete';\n\nexport interface SetEditorDialogData {\n  title: string;\n  listSet: ListId | NodeId[];\n  listAll: ListId | SetMultiSource;\n  applyChangeset: (add: NodeId[], del: NodeId[]) => Promise;\n  itemTemplate: TemplateRef;\n  makeFilter: (query: string) => F;\n  scoreKeys: string[];\n  emptySuggestionsLabel: string;\n  emptyResultsLabel: string;\n  createItem?: () => Promise;\n  editItem?: ({ id: NodeId, preview: T }) => void;\n  deleteItem?: ({ id: NodeId, preview: T }) => void;\n}\n\n/** This is an internal component used in the set editor. */\n@Component({\n  selector: 'app-set-editor-dialog',\n  templateUrl: './set-editor-dialog.component.html',\n  styleUrls: ['./set-editor-dialog.component.scss']\n})\nexport class SetEditorDialogComponent implements OnInit, OnDestroy {\n  public isLocalSet = false;\n  public localSet: NodeIdEnc[] = [];\n  public listSet$: DataList;\n  public listAll: MultiSourceList;\n  private listSetSub: Subscription;\n  private additions: Set = new Set();\n  private deletions: Set = new Set();\n  public searchQuery = '';\n\n  constructor(\n    private dataService: DataService,\n    private notifyService: UserNotifyService,\n    private dialogRef: MatDialogRef>,\n    @Inject(MAT_DIALOG_DATA) public data: SetEditorDialogData\n  ) {}\n\n  ngOnInit() {\n    if (Array.isArray(this.data.listSet)) {\n      this.isLocalSet = true;\n      this.localSet = [...this.data.listSet].map(id => encodeNodeId(id));\n    } else {\n      this.listSet$ = this.dataService.getList(this.data.listSet);\n    }\n    this.listAll = ('staticSources' in this.data.listAll)\n      ? new MultiSourceList(this.data.listAll, this.data.scoreKeys, this.dataService)\n      : MultiSourceList.fromSingleList(this.data.listAll, this.data.scoreKeys, this.dataService);\n\n    if (this.listSet$) {\n      this.listSetSub = this.listSet$?.subscribe();\n      // TODO: is this a reasonable heuristic for the listSet count? we need to cover >= results from listAll\n      this.listSet$.count = 10;\n      this.listSet$.interactive = true;\n    }\n  }\n\n  searchQueryDidChange() {\n    if (this.listSet$) {\n      this.listSet$.filter = this.data.makeFilter(this.searchQuery);\n    }\n    this.listAll.setFilter(this.searchQuery, this.data.makeFilter(this.searchQuery));\n  }\n\n  getNodeId(item): NodeId {\n    const type = nodeTypeFromTypename(item.__typename);\n    return { type, id: item.id };\n  }\n\n  getEncodedId(item): NodeIdEnc {\n    return encodeNodeId(this.getNodeId(item));\n  }\n\n  isInSet(item): boolean {\n    const id = this.getEncodedId(item);\n    if (this.additions.has(id)) {\n      return true;\n    }\n    if (this.deletions.has(id)) {\n      return false;\n    }\n    if (this.isLocalSet) {\n      return this.localSet.includes(id);\n    }\n    return this.listSet$.current?.has(id) || false;\n  }\n\n  toggleInSet(item): void {\n    const id = this.getEncodedId(item);\n    if (this.isInSet(item)) {\n      this.additions.delete(id);\n      this.deletions.add(id);\n    } else {\n      this.deletions.delete(id);\n      this.additions.add(id);\n    }\n  }\n\n  apply() {\n    if (this.additions.size + this.deletions.size === 0) {\n      this.dialogRef.close(null);\n      return;\n    }\n\n    this.data.applyChangeset([...this.additions].map(decodeNodeId), [...this.deletions].map(decodeNodeId)).then(() => {\n      this.dialogRef.close(null);\n    }).catch(error => {\n      this.notifyService.notifyError('Failed to apply changes', error);\n    });\n  }\n\n  createItem() {\n    this.data.createItem().then(node => {\n      if (node) {\n        this.additions.add(encodeNodeId(node));\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.listSetSub?.unsubscribe();\n    this.listAll.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsDialogComponent.html":{"url":"components/SettingsDialogComponent.html","title":"component - SettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dialogs/settings-dialog/settings-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-dialog\n            \n\n            \n                styleUrls\n                ./settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                mode\n                            \n                            \n                                modeIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                openAccessTokenSettings\n                            \n                            \n                                    Public\n                                openProfileSettings\n                            \n                            \n                                    Public\n                                switchTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openAccessTokenSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openAccessTokenSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openProfileSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    openProfileSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        switchTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    switchTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Dark Mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"dark_mode\"\n                    \n                \n                    \n                        \n                                Defined in src/app/dialogs/settings-dialog/settings-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Inject } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProfileSettingsDialogComponent } from '../profile-settings-dialog/profile-settings-dialog.component';\nimport { AccessTokenDialogComponent } from '../access-token-dialog/access-token-dialog.component';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.scss']\n})\nexport class SettingsDialogComponent implements OnInit {\n\n  mode = \"Dark Mode\"\n  modeIcon = \"dark_mode\"\n\n  constructor(public dialogRef: MatDialogRef, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  //open the dialog with profile settings\n  public openProfileSettings() {\n    this.dialogRef.close();\n    this.dialog.open(ProfileSettingsDialogComponent);\n  }\n\n  //open the dialog with access token settings\n  public openAccessTokenSettings() {\n    this.dialogRef.close();\n    this.dialog.open(AccessTokenDialogComponent);\n  }\n\n  //switch to dark mode / light mode (TODO)\n  public switchTheme() {\n\n    if(this.mode === 'Light Mode') { \n      this.mode = 'Dark Mode'\n    } else {\n      this.mode = 'Light Mode'\n    }\n\n    if(this.modeIcon === 'light_mode') { \n      this.modeIcon = 'dark_mode'\n    } else {\n      this.modeIcon = 'light_mode'\n    }\n\n    console.log('dark mode / light mode');\n  }\n\n}\n\n    \n\n    \n        \nSettings\n\n      \n        account_circle\n          Profile Settings\n      \n        token\n         Access Token\n      \n        {{modeIcon}}\n         {{mode}} \n\n    \n\n    \n                \n                    ./settings-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Settings              account_circle          Profile Settings              token         Access Token              {{modeIcon}}         {{mode}} '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/side-nav/side-nav.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays and manages the sidemenu showing\nthe name of the current project at the top. Beneath it\nnavigation points e.g. 'Graph' are displayed.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                defaultMenuTitle\n                            \n                            \n                                graphLink\n                            \n                            \n                                issuesLink\n                            \n                            \n                                membersLink\n                            \n                            \n                                    Public\n                                menuTitle\n                            \n                            \n                                    Public\n                                notify\n                            \n                            \n                                overviewLink\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                ss\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ss: StateService, router: Router, notify: UserNotifyService)\n                    \n                \n                        \n                            \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ss\n                                                  \n                                                        \n                                                                        StateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                        UserNotifyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        defaultMenuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Menu'\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuesLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        membersLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuTitle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.defaultMenuTitle\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        notify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserNotifyService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overviewLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/']\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/side-nav/side-nav.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {StateService} from '@app/state.service';\nimport {Router} from '@angular/router';\nimport {UserNotifyService} from '@app/user-notify/user-notify.service';\n\n/**\n * This component displays and manages the sidemenu showing\n * the name of the current project at the top. Beneath it\n * navigation points e.g. 'Graph' are displayed.\n */\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent {\n  readonly defaultMenuTitle = 'Menu';\n  public menuTitle = this.defaultMenuTitle;\n  overviewLink = ['/'];\n  graphLink = ['/'];\n  issuesLink = ['/'];\n  membersLink = ['/'];\n\n  constructor(public ss: StateService,\n              public router: Router,\n              public notify: UserNotifyService) {\n    ss.state$.subscribe(appState => {\n      if (!appState.project) {\n        return;\n      }\n\n      if (appState.project.node) {\n        this.menuTitle = appState.project.node.name;\n        this.overviewLink = ['/projects', appState.project.node.id];\n        this.graphLink = ['/projects', appState.project.node.id, 'graph'];\n        this.issuesLink = ['/projects', appState.project.node.id, 'issues'];\n        this.membersLink = ['/projects', appState.project.node.id, 'members'];\n      } else {\n        this.router.navigate(['/']);\n        notify.notifyError('The specified project does not exist!');\n      }\n    });\n  }\n\n\n}\n\n    \n\n    \n        {{menuTitle}}\n\n    \n        info\n        Overview\n    \n    \n        account_tree\n        Graph\n    \n    \n        bug_report\n        Issues\n    \n    \n        group\n        Members\n    \n\n\n    \n\n    \n                \n                    ./side-nav.component.scss\n                \n                @import '~@angular/material/theming';\n@import 'variables';\n\nmat-icon {\n  color: rgba(0, 0, 0, 0.54);\n  margin-right: 20px;\n  padding-left: 4px;\n}\n\n.list-item-active {\n  font-weight: bold;\n  background-color: mat-color($accent, 300) !important;\n}\n\nmat-nav-list {\n  padding-top: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{menuTitle}}            info        Overview                account_tree        Graph                bug_report        Issues                group        Members    '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateService.html":{"url":"injectables/StateService.html","title":"injectable - StateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service exposes an observable of the name and id of the current project.\nIt determines the current project by listening for url changes and parsing the url.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                            \n                                state$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isProjectURL\n                            \n                            \n                                syncStateWithUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, ps: ProjectStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ps\n                                                  \n                                                        \n                                                                        ProjectStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isProjectURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProjectURL(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:57\n                \n            \n\n\n            \n                \n                    Caution:\nIf you change the routing you might have to change this function too.\nThat is if it has the form 'projects/:id' + further stuff.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true iff url is a route pertaining to a project\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncStateWithUrl\n                        \n                    \n                \n            \n            \n                \nsyncStateWithUrl(router: Router, ps: ProjectStoreService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\nurl referring to a project or not. If we are at a project we retrieve information about it\nfrom the backend and make it available in the state observable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    router\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        allows to listen for routing events\n\n                                    \n                                \n                                \n                                    ps\n                                    \n                                                ProjectStoreService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppState\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/state.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {NavigationEnd, PRIMARY_OUTLET, Router} from '@angular/router';\nimport {ReplaySubject} from 'rxjs';\nimport {filter, switchMap} from 'rxjs/operators';\nimport {GetBasicProjectQuery} from 'src/generated/graphql';\nimport {ProjectStoreService} from './data/project/project-store.service';\n\n/**\n * This service exposes an observable of the name and id of the current project.\n * It determines the current project by listening for url changes and parsing the url.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n  state: AppState = {};\n  state$ = new ReplaySubject(1);\n\n  constructor(private router: Router, private ps: ProjectStoreService) {\n    this.syncStateWithUrl(router, ps);\n  }\n\n  /**\n   * Sets up two mutually exclusive (look at filter) subscriptions to track whether we are at a\n   * url referring to a project or not. If we are at a project we retrieve information about it\n   * from the backend and make it available in the state observable\n   *\n   * @param router allows to listen for routing events\n   * @param ps\n   */\n  syncStateWithUrl(router: Router, ps: ProjectStoreService) {\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && this.isProjectURL(event.url))),\n      switchMap((event: NavigationEnd) =>\n        ps.getBasicProject(this.router.parseUrl(event.url).root?.children[PRIMARY_OUTLET].segments[1].path)\n      )\n    ).subscribe(project => {\n      this.state.project = project;\n      this.state$.next(this.state);\n    });\n    // set project to null if new url is not specific to a project\n    router.events.pipe(\n      filter(event => (event instanceof NavigationEnd && !this.isProjectURL(event.url))),\n    ).subscribe(_ => {\n      this.state.project = null;\n      this.state$.next(this.state);\n    });\n  }\n\n  /**\n   * Caution:\n   * If you change the routing you might have to change this function too.\n   * That is if it has the form 'projects/:id' + further stuff.\n   * @param url\n   * @returns true iff url is a route pertaining to a project\n   */\n  private isProjectURL(url: string): boolean {\n    const tree = this.router.parseUrl(url);\n    const primary = tree.root.children[PRIMARY_OUTLET];\n    if (primary) {\n      const primarySegments = primary.segments;\n      return (primarySegments[0].path === 'projects' && primary.segments.length >= 2);\n    }\n    return false;\n  }\n}\n\nexport interface AppState {\n  project?: GetBasicProjectQuery;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextDisplayComponent.html":{"url":"components/TextDisplayComponent.html","title":"component - TextDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/text-display/text-display.component.ts\n\n\n\n    \n        Description\n    \n    \n        The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\ntext\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-text-display\n            \n\n            \n                styleUrls\n                ./text-display.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editText\n                            \n                            \n                                showPlaceholder\n                            \n                            \n                                    Private\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishEditing\n                            \n                            \n                                startEditing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                labelText\n                            \n                            \n                                onEditFinished\n                            \n                            \n                                placeholder\n                            \n                            \n                                readonly\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:23\n                            \n                        \n                \n                    \n                        The title text.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onEditFinished\n                    \n                \n                \n                    \n                        Type :         TextDisplayEditCallbackFn\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:21\n                            \n                        \n                \n                    \n                        A callback function.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:37\n                            \n                        \n                \n                    \n                        The placeholder will be shown if the content is empty\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readonly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:35\n                            \n                        \n                \n                    \n                        If true, the edit button is not shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                            \n                        \n                \n                    \n                        Sets the content of the text display, and shows the placeholder if the text is empty\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        finishEditing\n                        \n                    \n                \n            \n            \n                \nfinishEditing(saved: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saved\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startEditing\n                        \n                    \n                \n            \n            \n                \nstartEditing()\n                \n            \n\n\n            \n                \n                    Defined in src/app/text-display/text-display.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPlaceholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        value\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/text-display/text-display.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:30\n                                \n                            \n\n                \n                    \n                        settext(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/text-display/text-display.component.ts:25\n                                \n                            \n                    \n                        \n                                Sets the content of the text display, and shows the placeholder if the text is empty\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * A callback function that is called once the user finishes editing the text.\n * @param saved true if the user clicked save, false if the user cancelled the editing\n */\nexport type TextDisplayEditCallbackFn = (saved: boolean) => void;\n\n\n/**\n * The text display component shows text in a labeled box, and if desired, allows the user to edit and save the\n * text\n */\n@Component({\n  selector: 'app-text-display',\n  templateUrl: './text-display.component.html',\n  styleUrls: ['./text-display.component.scss']\n})\nexport class TextDisplayComponent {\n  /** A callback function. */\n  @Input() onEditFinished: TextDisplayEditCallbackFn;\n  /** The title text. */\n  @Input() labelText: string;\n  /** Sets the content of the text display, and shows the placeholder if the text is empty */\n  @Input() set text(value: string) {\n    this.value = value;\n    this.showPlaceholder = !value || value.length === 0;\n  }\n\n  get text() {\n    return this.value;\n  }\n\n  /** If true, the edit button is not shown */\n  @Input() readonly: boolean;\n  /** The placeholder will be shown if the content is empty */\n  @Input() placeholder = '';\n\n  private value;\n  editMode = false;\n  editText = '';\n  showPlaceholder = false;\n\n  finishEditing(saved: boolean): void {\n    this.editMode = false;\n    if (saved) {\n      this.text = this.editText;\n    }\n\n    if (this.onEditFinished) {\n      this.onEditFinished(saved);\n    }\n  }\n\n  startEditing() {\n    this.editText = this.text;\n    this.editMode = true;\n  }\n}\n\n    \n\n    \n        \n    \n        {{labelText}}\n        \n        \n            \n                save\n            \n            \n                cancel\n            \n        \n    \n\n\n\n    \n        \n            {{labelText}}\n        \n        \n            edit\n        \n        \n            \n                {{line.replace('\\n', '')}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./text-display.component.scss\n                \n                @import \"src/styles/variables\";\n\n.text-display-label-container {\n  position: relative;\n  width: fit-content;\n  height: .8em;\n  line-height: .8em;\n  padding: 0 2px 0 2px;\n  top: -.5em;\n  left: -1px;\n  background-color: #fafafa; // FIXME: Hardcoded background color\n  color: rgba(0, 0, 0, .6);\n  text-align: center;\n}\n\n.text-display-label {\n  display: inline-block;\n  vertical-align: middle;\n  font-size: .8em;\n}\n\n.text-display-container {\n  margin-top: 10px;\n  padding: 0 8px 16px 8px;\n  width: 100%;\n  height: 100%;\n  border: 1px rgba(0, 0, 0, .2) solid;\n  border-radius: 4px;\n  word-break: break-all;\n  min-height: 60px;\n}\n\n.text-content-container {\n  padding-top: 8px;\n}\n\n.text-content-container-placeholder {\n  padding-top: 8px;\n  color: gray;\n  font-style: italic;\n}\n\n.text-edit-container{\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{labelText}}                                            save                                        cancel                                                {{labelText}}                            edit                                            {{line.replace(\\'\\n\\', \\'\\')}}                        '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextFragment.html":{"url":"interfaces/TextFragment.html","title":"interface - TextFragment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextFragment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/label-search/label-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { concat, of, Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { catchError, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\nimport { FilterLabel, isFilterLabel, LabelStoreService } from '../../data/label/label-store.service';\nimport { StateService } from '../../state.service';\n\n/**\n * This component is responsible for the display of the search bar above the graph.\n * It allows for filtering issues by multiple labels and text fragments.\n */\n@Component({\n  selector: 'app-label-search',\n  templateUrl: './label-search.component.html',\n  styleUrls: ['./label-search.component.scss']\n})\nexport class LabelSearchComponent implements OnInit {\n  public filterSelection$ = new BehaviorSubject({labels: [], texts: []});\n\n  labels$: Observable;\n  labelsLoading = false;\n  labelsInput$ = new Subject();\n  selectedLabels: FilterElement[] = [];\n\n  constructor(private labelStore: LabelStoreService, private ss: StateService) {\n  }\n\n  ngOnInit() {\n      this.loadLabels();\n  }\n\n  trackByFn(item: FilterLabel) {\n      return item.id;\n  }\n\n  /**\n   * Emit value representing label and text fragments in the search bar via this.filterSelection$\n   */\n  emitSelectedLabels() {\n    const selection: FilterSelection = {texts: [], labels: []};\n    // find out which elements in search bar correspond to an existing label on the backend and which to a text fragment\n    selection.texts = this.selectedLabels.filter(item => !isFilterLabel(item)).map(item => item.name);\n    selection.labels = this.selectedLabels.filter(label => isFilterLabel(label)) as FilterLabel[];\n    this.filterSelection$.next(selection);\n  }\n\n  /**\n   * Load all labels from backend that match the currently typed in ng-select element\n   */\n  private loadLabels() {\n      this.labels$ = concat(\n          of([]), // default items\n          this.labelsInput$.pipe(\n              distinctUntilChanged(),\n              tap(() => this.labelsLoading = true),\n              switchMap(term => this.labelStore.getMatchingLabels(this.ss.state.project.node.id, term).pipe(\n                  catchError(() => of([])), // empty list on error\n                  tap(() => this.labelsLoading = false)\n              ))\n          )\n      );\n  }\n\n}\n\n\n/**\n * The bar can contain elements standing for labels and elements for text fragments.\n */\ntype FilterElement = TextFragment | FilterLabel;\n\ninterface TextFragment {\n  name: string;\n}\n\nexport interface FilterSelection {\n  texts: string[];\n  labels: FilterLabel[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeFormatter.html":{"url":"classes/TimeFormatter.html","title":"class - TimeFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/time-formatter.ts\n        \n\n\n            \n                Description\n            \n            \n                This class contains functionality for time formatting which is needed for correct time representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                formatTimeDifference\n                            \n                            \n                                pluralize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(time: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:11\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-10-01T19:44:04.813Z) to\n(Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimeDifference\n                        \n                    \n                \n            \n            \n                \nformatTimeDifference(dateString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:19\n                \n            \n\n\n            \n                \n                    E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        any string that can be parsed by Date\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluralize\n                        \n                    \n                \n            \n            \n                \npluralize(n: number, singular: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/issue-detail/time-formatter.ts:48\n                \n            \n\n\n            \n                \n                    Change singular form of a word into pluralized form if necessary.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of entities\n\n                                    \n                                \n                                \n                                    singular\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        singular form of the word\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class TimeFormatter {\n\n  /**\n   * E.g. converts (2021-10-01T19:44:04.813Z) to\n   * (Fri Oct 01 2021 21:44:04 GMT+0200 (Mitteleuropäische Sommerzeit))\n   * @param time any string that can be parsed by `Date`\n   */\n  formatTime(time: string): string {\n    return new Date(time).toString();\n  }\n\n  /**\n   * E.g. converts (2021-11-02T12:27:58.192Z) to (8 days ago)\n   * @param dateString any string that can be parsed by `Date`\n   */\n  formatTimeDifference(dateString: string): string {\n    const now = new Date();\n    const pastTime = new Date(dateString);\n\n    const months = (now.getMonth() - pastTime.getMonth()) + (now.getFullYear() - pastTime.getFullYear()) * 12;\n    const minutes = Math.round((+now - +pastTime) / 1000 / 60);\n    const hours = Math.round(minutes / 60);\n    const days = Math.round(hours / 24);\n\n    if (months >= 12) {\n      return this.pluralize(months / 12, 'year') + ' ago';\n    } else if (days >= 31) {\n      return this.pluralize(months, 'month') + ' ago';\n    } else if (hours >= 24) {\n      return this.pluralize(days, 'day') + ' ago';\n    } else if (minutes >= 60) {\n      return this.pluralize(hours, 'hour') + ' ago';\n    } else if (minutes >= 1) {\n      return this.pluralize(minutes, 'minute') + ' ago';\n    }\n\n    return 'just now';\n  }\n\n  /**\n   * Change singular form of a word into pluralized form if necessary.\n   * @param n number of entities\n   * @param singular singular form of the word\n   */\n  pluralize(n: number, singular: string): string {\n    return (n === 1 ? n + ' ' + singular : n + ' ' + singular + 's');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineCoalescedItemsDirective.html":{"url":"directives/TimelineCoalescedItemsDirective.html","title":"directive - TimelineCoalescedItemsDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineCoalescedItemsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appCoalescedTimelineItems]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimelineItemComponent.html":{"url":"components/TimelineItemComponent.html","title":"component - TimelineItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TimelineItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component provides an easy method to switch between the different possible content types of a timeline item,\nsuch as single, coalesced or deleted.\nAdditionally, the formatted time is shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timeline-item\n            \n\n            \n                styleUrls\n                ../timeline.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timeline-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeItemContent\n                            \n                            \n                                timeFormatter\n                            \n                            \n                                timelineItemContent\n                            \n                            \n                                timelineItemDeletedContent\n                            \n                            \n                                timelineItemsContent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showDeleted\n                            \n                            \n                                timelineItem\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showDeleted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:56\n                            \n                        \n                \n                    \n                        If this option is set to true, the template with the appTimelineItemDeleted directive is shown\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        timelineItem\n                    \n                \n                \n                    \n                        Type :         CoalescedTimelineItem\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:54\n                            \n                        \n                \n                    \n                        The timeline item to show\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeFormatter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeFormatter\n\n                    \n                \n                \n                    \n                        Default value : new TimeFormatter()\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineSingleItemDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineSingleItemDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:59\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was not coalesced\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemDeletedContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineItemDeletedDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineItemDeletedDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:63\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item contains deleted data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timelineItemsContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimelineCoalescedItemsDirective\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TimelineCoalescedItemsDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:61\n                        \n                    \n\n            \n                \n                    The content to be shown if the timeline item was coalesced\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}\n    \n  \n\n\n    \n\n    \n                \n                    ../timeline.component.scss\n                \n                .timeline {\n  list-style: none;\n  margin: 0;\n  padding: 20px 0 20px;\n  position: relative;\n\n  &::before {\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    content: \" \";\n    width: 2px;\n    background: rgba(0, 0, 0, 0.12);\n    left: 35px;\n  }\n\n  & > li {\n    margin-bottom: 20px;\n    position: relative;\n    display: flex;\n    align-items: flex-start;\n\n    & > .timeline-badge {\n      color: #fff;\n      $size: 50px;\n      width: $size;\n      height: $size;\n      line-height: 50px;\n      font-size: 2.5em;\n      text-align: center;\n      position: relative;\n      top: 16px;\n      margin-left: calc(36px - (#{$size} / 2));\n      margin-right: 12px;\n      background-color: #999999;\n      z-index: 100;\n      border-radius: 50%;\n    }\n\n    & > .timeline-panel {\n      flex: 1;\n      border: 1px solid #d4d4d4;\n      border-radius: 2px;\n      padding: 20px;\n      position: relative;\n      -webkit-box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.175);\n\n      &::before {\n        position: absolute;\n        top: 26px;\n        display: inline-block;\n        border-top: 15px solid transparent;\n        border-left: 15px solid #ccc;\n        border-right: 0 solid #ccc;\n        border-bottom: 15px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 15px;\n        left: -15px;\n        right: auto;\n      }\n\n      &::after {\n        position: absolute;\n        top: 27px;\n        display: inline-block;\n        border-top: 14px solid transparent;\n        border-left: 14px solid #fafafa;\n        border-right: 0 solid #fafafa;\n        border-bottom: 14px solid transparent;\n        content: \" \";\n        border-left-width: 0;\n        border-right-width: 14px;\n        left: -14px;\n        right: auto;\n      }\n    }\n\n    & > .commentContainer {\n      flex: 1;\n      left: -36px;\n      z-index: 100;\n\n      ::ng-deep .timeline-item::before {\n        display: none; // hide duplicate line\n      }\n    }\n  }\n}\n.timeline-badge.warning {\n  background-color: #f0ad4e !important;\n}\n\n.timeline-badge.closed {\n  background-color: #ff0036 !important;\n}\n\n.timeline-badge.reopened {\n  background-color: #00ba39 !important;\n}\n\n.timeline-title {\n  margin-top: 0;\n  color: inherit;\n}\n\n.timeline-body > p,\n.timeline-body > ul {\n  margin-bottom: 0;\n}\n\n.timeline-body > p + p {\n  margin-top: 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{this.timeFormatter.formatTimeDifference(timelineItem.time)}}      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimelineItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineItemDeletedDirective.html":{"url":"directives/TimelineItemDeletedDirective.html","title":"directive - TimelineItemDeletedDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineItemDeletedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if the attribute showDeleted of the\nTimelineItemComponent is set to true.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTimelineItemDeleted]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TimelineSingleItemDirective.html":{"url":"directives/TimelineSingleItemDirective.html","title":"directive - TimelineSingleItemDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  TimelineSingleItemDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This directive is used in conjunction with an ng-template.\nThe content of the ng-template specifies the content of a timeline item, if it was not coalesced\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appSingleTimelineItem]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef<>)\n                    \n                \n                        \n                            \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef<>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/issue-detail/timeline/coalesced/timeline-item.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, ContentChild, Directive, Input, TemplateRef} from '@angular/core';\nimport {CoalescedTimelineItem} from '@app/issue-detail/timeline/timeline.component';\nimport {TimeFormatter} from '@app/issue-detail/time-formatter';\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was *not* coalesced\n */\n@Directive({\n  selector: '[appSingleTimelineItem]'\n})\nexport class TimelineSingleItemDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if it was coalesced\n */\n@Directive({\n  selector: '[appCoalescedTimelineItems]'\n})\nexport class TimelineCoalescedItemsDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This directive is used in conjunction with an `ng-template`.\n * The content of the `ng-template` specifies the content of a timeline item, if the attribute `showDeleted` of the\n * {@link TimelineItemComponent} is set to `true`.\n */\n@Directive({\n  selector: '[appTimelineItemDeleted]'\n})\nexport class TimelineItemDeletedDirective {\n  constructor(public template: TemplateRef) {\n  }\n}\n\n/**\n * This component provides an easy method to switch between the different possible content types of a timeline item,\n * such as single, coalesced or deleted.\n * Additionally, the formatted time is shown.\n */\n@Component({\n  selector: 'app-timeline-item',\n  templateUrl: './timeline-item.component.html',\n  styleUrls: ['../timeline.component.scss']\n})\nexport class TimelineItemComponent implements AfterViewInit {\n  /** The timeline item to show */\n  @Input() timelineItem: CoalescedTimelineItem;\n  /** If this option is set to true, the template with the `appTimelineItemDeleted` directive is shown */\n  @Input() showDeleted = false;\n\n  /** The content to be shown if the timeline item was not coalesced */\n  @ContentChild(TimelineSingleItemDirective) timelineItemContent: TimelineSingleItemDirective;\n  /** The content to be shown if the timeline item was coalesced */\n  @ContentChild(TimelineCoalescedItemsDirective) timelineItemsContent: TimelineCoalescedItemsDirective;\n  /** The content to be shown if the timeline item contains deleted data */\n  @ContentChild(TimelineItemDeletedDirective) timelineItemDeletedContent: TimelineItemDeletedDirective;\n\n  timeFormatter: TimeFormatter = new TimeFormatter();\n  activeItemContent: TemplateRef = null;\n\n  constructor(private changeDetector: ChangeDetectorRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.showDeleted) {\n      this.activeItemContent = this.timelineItemDeletedContent.template;\n    } else if (this.timelineItem.isCoalesced && this.timelineItemsContent) {\n      this.activeItemContent = this.timelineItemsContent.template;\n    } else if (!this.timelineItem.isCoalesced) {\n      this.activeItemContent = this.timelineItemContent.template;\n    }\n\n    this.changeDetector.detectChanges();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopToolbarComponent.html":{"url":"components/TopToolbarComponent.html","title":"component - TopToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/top-toolbar/top-toolbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component is responsible for showing the top bar containing the home icon\non the left-hand side and the mock settings and user icon as well as the functional\nlog out button on the right-hand side. It does NOT determine whether to show the sandwich\nmenu icon itself, but gets this information passed from FrameComponent.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-toolbar\n            \n\n            \n                styleUrls\n                ./top-toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./top-toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                isHandset$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleClick\n                            \n                            \n                                    Public\n                                openSettingsDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showMenuButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, authService: AuthenticationService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showMenuButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        menuClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/top-toolbar/top-toolbar.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openSettingsDialog\n                        \n                    \n                \n            \n            \n                \n                    \n                    openSettingsDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/top-toolbar/top-toolbar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/top-toolbar/top-toolbar.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/auth/authentication.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SettingsDialogComponent } from '@app/dialogs/settings-dialog/settings-dialog.component';\n\n/**\n * This component is responsible for showing the top bar containing the home icon\n * on the left-hand side and the mock settings and user icon as well as the functional\n * log out button on the right-hand side. It does NOT determine whether to show the sandwich\n * menu icon itself, but gets this information passed from FrameComponent.\n */\n@Component({\n  selector: 'app-top-toolbar',\n  templateUrl: './top-toolbar.component.html',\n  styleUrls: ['./top-toolbar.component.scss']\n})\nexport class TopToolbarComponent {\n  @Input()\n  showMenuButton = false;\n\n  @Output()\n  public menuClick = new EventEmitter();\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthenticationService, private dialog: MatDialog) { }\n  \n  public handleClick() {\n    this.menuClick.emit();\n  }\n\n  public openSettingsDialog() {\n    this.dialog.open(SettingsDialogComponent);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    menu\n  \n  \n    home\n  \n  \n  \n  \n    \n      settings\n    \n    \n      account_circle\n    \n    \n      logout\n    \n  \n\n\n    \n\n    \n                \n                    ./top-toolbar.component.scss\n                \n                mat-toolbar {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n.mat-toolbar {\n  justify-content: space-between;\n}\n\n.toolbar-spacer {\n  flex: 1 1 auto;\n}\n\n#current-project {\n  font-size: 12px;\n  border: 3px solid white;\n  border-radius: 0.5em;\n  padding: 0 4px 0 4px;\n  margin: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        menu        home                  settings              account_circle              logout      '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'TopToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authentication.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {environment} from '@environments/environment';\nimport {Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n/**\n * Responsible for saving user name, id and jwt token in localstorage\n * and exposing the name and id through currentUserSubject\n */\n@Injectable({providedIn: 'root'})\nexport class AuthenticationService {\n\n  readonly userStorageKey = 'currentUser';\n  private currentUserSubject: BehaviorSubject;\n  public currentUser: Observable;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.currentUserSubject = new BehaviorSubject(this.fetchUserFromStorage());\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  fetchUserFromStorage(): User {\n    return JSON.parse(localStorage.getItem(this.userStorageKey));\n  }\n\n  saveUserToStorage(user: User): void {\n    localStorage.setItem(this.userStorageKey, JSON.stringify(user));\n  }\n\n  /**\n   * If login is sucessfull save the user name, id and jwt token to local storage and expose the name and id\n   * through currentUserSubject. If the login fails the returned observable errors.\n   * @param username provided by user to LoginComponent\n   * @param password provided by user to LoginComponent\n   * @returns the logged in user, errors if login is not successful\n   */\n  login(username: string, password: string): Observable {\n    return this.http.post(environment.loginUrl, {username, password})\n      .pipe(map(response => {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('token', response.token);\n        const tokenPayload = JSON.parse(atob(response.token.split('.')[1]));\n        const user = {name: tokenPayload.name, id: tokenPayload.sub};\n        this.saveUserToStorage(user);\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  /**\n   * remove user from local storage and set subject holding the current user to null\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n    this.currentUserSubject.next(null);\n  }\n}\n\ninterface User {\n  name: string;\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserItemComponent.html":{"url":"components/UserItemComponent.html","title":"component - UserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-item/user-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a user.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-item\n            \n\n            \n                styleUrls\n                ./user-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                noDisplay\n                            \n                            \n                                short\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        noDisplay\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:16\n                            \n                        \n                \n                    \n                        Hides the display name.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        short\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:14\n                            \n                        \n                \n                    \n                        Will show only the display name or username.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/user-item/user-item.component.ts:12\n                            \n                        \n                \n                    \n                        The user data.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { User } from 'src/generated/graphql-dgql';\n\n/** This component displays a user. */\n@Component({\n  selector: 'app-user-item',\n  templateUrl: './user-item.component.html',\n  styleUrls: ['./user-item.component.scss']\n})\nexport class UserItemComponent {\n  /** The user data. */\n  @Input() user: User;\n  /** Will show only the display name or username. */\n  @Input() short = false;\n  /** Hides the display name. */\n  @Input() noDisplay = false;\n}\n\n    \n\n    \n        \n  \n    {{user.displayName}}\n  \n    \n    {{user.username}}\n  \n\n\n    \n\n    \n                \n                    ./user-item.component.scss\n                \n                .display-name {\n  font-weight: 500;\n}\n.username {\n  &.has-display-name {\n    opacity: 0.7;\n  }\n  &:not(.has-display-name) {\n    font-weight: 500;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{user.displayName}}          {{user.username}}  '\n    var COMPONENTS = [{'name': 'AccessTokenDialogComponent', 'selector': 'app-access-token-dialog'},{'name': 'AddProjectMemberDialogComponent', 'selector': 'app-add-project-member-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CacheNodeComponent', 'selector': '[cache-node]'},{'name': 'CommentComponent', 'selector': 'app-comment'},{'name': 'ComponentContextMenuComponent', 'selector': ''},{'name': 'CreateComponentDialogComponent', 'selector': 'app-create-component-dialog'},{'name': 'CreateEditLabelDialogComponent', 'selector': 'app-create-edit-label-dialog-component'},{'name': 'CreateInterfaceDialogComponent', 'selector': 'app-create-interface-dialog'},{'name': 'CreateIssueDialogComponent', 'selector': 'app-create-issue-dialog'},{'name': 'CreateProjectDialogComponent', 'selector': 'app-create-project-dialog'},{'name': 'CursorPaginatorComponent', 'selector': 'app-cursor-paginator'},{'name': 'FrameComponent', 'selector': 'app-frame'},{'name': 'IssueCategoryComponent', 'selector': 'app-issue-category'},{'name': 'IssueContentsComponent', 'selector': 'app-issue-contents'},{'name': 'IssueDetailComponent', 'selector': 'app-issue-detail'},{'name': 'IssueFilterComponent', 'selector': 'app-issue-filter'},{'name': 'IssueGraphComponent', 'selector': 'app-issue-graph'},{'name': 'IssueGraphControlsComponent', 'selector': 'app-issue-graph-controls'},{'name': 'IssueIconComponent', 'selector': 'app-issue-icon'},{'name': 'IssueItemComponent', 'selector': 'app-issue-item'},{'name': 'IssueLabelComponent', 'selector': 'app-issue-label'},{'name': 'IssueListComponent', 'selector': 'app-issue-list'},{'name': 'IssueLocationComponent', 'selector': 'app-issue-location'},{'name': 'IssueSidebarComponent', 'selector': 'app-issue-sidebar'},{'name': 'LabelSearchComponent', 'selector': 'app-label-search'},{'name': 'LinkedIssueItemComponent', 'selector': 'app-issue-detail-linked-issue-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MarkdownEditorComponent', 'selector': 'app-markdown-editor'},{'name': 'MarkdownPreviewComponent', 'selector': 'app-markdown-preview'},{'name': 'NodeDetailsComponent', 'selector': 'app-node-details'},{'name': 'NodeDetailsPageComponent', 'selector': ''},{'name': 'ProfileSettingsDialogComponent', 'selector': 'app-profile-settings-dialog'},{'name': 'ProjectHeaderComponent', 'selector': 'app-project-header'},{'name': 'ProjectIssueListComponent', 'selector': 'app-project-issue-list'},{'name': 'ProjectListComponent', 'selector': 'app-project-list'},{'name': 'ProjectMembersComponent', 'selector': 'app-project-members'},{'name': 'ProjectOverviewComponent', 'selector': 'app-project-overview'},{'name': 'QueryComponent', 'selector': 'app-query-component'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RemoveDialogComponent', 'selector': 'app-remove-dialog'},{'name': 'RemoveProjectMemberComponentComponent', 'selector': 'app-remove-project-member-component'},{'name': 'SetEditorComponent', 'selector': 'app-set-editor'},{'name': 'SetEditorDialogComponent', 'selector': 'app-set-editor-dialog'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'SideNavComponent', 'selector': 'app-side-nav'},{'name': 'TextDisplayComponent', 'selector': 'app-text-display'},{'name': 'TimelineComponent', 'selector': 'app-timeline'},{'name': 'TimelineItemComponent', 'selector': 'app-timeline-item'},{'name': 'TopToolbarComponent', 'selector': 'app-top-toolbar'},{'name': 'UserItemComponent', 'selector': 'app-user-item'}];\n    var DIRECTIVES = [{'name': 'ItemDirective', 'selector': '[appItem]'},{'name': 'QueryBodyDirective', 'selector': '[appQueryBody]'},{'name': 'QueryButtonDirective', 'selector': '[appQueryButton]'},{'name': 'TimelineCoalescedItemsDirective', 'selector': '[appCoalescedTimelineItems]'},{'name': 'TimelineItemDeletedDirective', 'selector': '[appTimelineItemDeleted]'},{'name': 'TimelineSingleItemDirective', 'selector': '[appSingleTimelineItem]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserNotifyService.html":{"url":"injectables/UserNotifyService.html","title":"injectable - UserNotifyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserNotifyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-notify/user-notify.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service provides functions for user notification\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                notifyError\n                            \n                            \n                                notifyInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-notify/user-notify.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        notifyError\n                        \n                    \n                \n            \n            \n                \nnotifyError(message: string, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:33\n                \n            \n\n\n            \n                \n                    Notify the user that an error occurred\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Optionally, the error. This will be logged in the console, if defined.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifyInfo\n                        \n                    \n                \n            \n            \n                \nnotifyInfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-notify/user-notify.service.ts:45\n                \n            \n\n\n            \n                \n                    Notify the user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message to be shown\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IndividualConfig, ToastrService} from 'ngx-toastr';\n\n/**\n * This service provides functions for user notification\n */\n@Injectable({providedIn: 'root'})\nexport class UserNotifyService {\n  /** @ignore */\n  private errorConfig: Partial = {\n    timeOut: 10000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  /** @ignore */\n  private infoConfig: Partial = {\n    timeOut: 4000,\n    closeButton: true,\n    positionClass: 'toast-top-center',\n    enableHtml: true\n  };\n\n  constructor(private toastr: ToastrService) {\n  }\n\n  /**\n   * Notify the user that an error occurred\n   * @param message The message to be shown\n   * @param error Optionally, the error. This will be logged in the console, if defined.\n   */\n  notifyError(message: string, error?: Error) {\n    if (error !== undefined) {\n      console.log('Error:', error);\n    }\n\n    this.toastr.error(message, 'Error!', this.errorConfig);\n  }\n\n  /**\n   * Notify the user\n   * @param message The message to be shown\n   */\n  notifyInfo(message: string) {\n    this.toastr.info(message, 'Info', this.infoConfig);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data-dgql/queries/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(qSearchUsers: SearchUsersGQL, qCurrentUser: CurrentUserGQL)\n                    \n                \n                        \n                            \n                                Defined in src/app/data-dgql/queries/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        qSearchUsers\n                                                  \n                                                        \n                                                                        SearchUsersGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qCurrentUser\n                                                  \n                                                        \n                                                                        CurrentUserGQL\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n            \n                \ncurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(filter: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/data-dgql/queries/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  CurrentUserGQL,\n  SearchUsersGQL\n} from 'src/generated/graphql-dgql';\nimport { promisifyApolloFetch } from '@app/data-dgql/queries/util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  constructor(\n    private qSearchUsers: SearchUsersGQL,\n    private qCurrentUser: CurrentUserGQL,\n  ) {}\n\n  searchUsers(filter: { username: string }) {\n    let query = '';\n    // The searchUser query is special in that it does not use a filter object.\n    // However, this is not compatible with the rest of our API, which uses UserFilter\n    // (e.g. issue assignees).\n    // Hence, this function uses the username search field, even though this is technically\n    // incorrect (searchUsers will also search by display name).\n    if (filter) {\n      query = filter.username;\n    }\n\n    if (!query) {\n      // searchUser does not work without a search string\n      return Promise.resolve([]);\n    }\n\n    return promisifyApolloFetch(this.qSearchUsers.fetch({ query })).then(data => data.searchUser);\n  }\n\n  currentUser() {\n    return promisifyApolloFetch(this.qCurrentUser.fetch());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vector.html":{"url":"classes/Vector.html","title":"class - Vector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphs/automatic-layout.ts\n        \n\n\n            \n                Description\n            \n            \n                A simple 2D vector class.\nThe value of this vector is essentially immutable, every operation returns a new vector!\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addSelf\n                            \n                            \n                                    Public\n                                distanceToLine\n                            \n                            \n                                    Public\n                                dot\n                            \n                            \n                                    Static\n                                isBehind\n                            \n                            \n                                    Public\n                                isZero\n                            \n                            \n                                    Public\n                                length\n                            \n                            \n                                    Public\n                                normalize\n                            \n                            \n                                    Public\n                                perpendicularClockwise\n                            \n                            \n                                    Public\n                                perpendicularCounterClockwise\n                            \n                            \n                                    Public\n                                scale\n                            \n                            \n                                    Public\n                                subtract\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                            \n                        \n\n                \n                    \n                            Vector constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                X component, 0 by default\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Y component, 0 by default\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/graphs/automatic-layout.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:64\n                \n            \n\n\n            \n                \n                    Add this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the sum of this vector and the other vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSelf(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:73\n                \n            \n\n\n            \n                \n                    Add another vector on this vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        This vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        distanceToLine\n                        \n                    \n                \n            \n            \n                \n                    \n                    distanceToLine(sourcePoint: Vector, targetPoint: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:123\n                \n            \n\n\n            \n                \n                    Calculate the distance of a point, as represented by this vector, to a line, as defined by two other points.\nNote that the length of the line is infinite, and that this function calculates the distance to this infinitely\nlong line.\nIf this is not desired, the #isBehind function can be used to determine if a point is outside the defined\nline segment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourcePoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point of the line\n\n                                    \n                                \n                                \n                                    targetPoint\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point of the line\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The distance to the infinitely long line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dot\n                        \n                    \n                \n            \n            \n                \n                    \n                    dot(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:109\n                \n            \n\n\n            \n                \n                    Calculate the dot product\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        dot(this, other)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isBehind\n                        \n                    \n                \n            \n            \n                \n                    \n                    isBehind(source: Vector, target: Vector, point: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:29\n                \n            \n\n\n            \n                \n                    Check if the vector pointing from source to point is pointing away more than 90 degrees to the vector pointing\nfrom the source to the target.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source point, as a vector\n\n                                    \n                                \n                                \n                                    target\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The target point, as a vector\n\n                                    \n                                \n                                \n                                    point\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The point to check, as a vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        dot(target - source, point - source) \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isZero\n                        \n                    \n                \n            \n            \n                \n                    \n                    isZero()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:133\n                \n            \n\n\n            \n                \n                    Check if both components of this vector are zero\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if it is zero\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        length\n                        \n                    \n                \n            \n            \n                \n                    \n                    length()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:47\n                \n            \n\n\n            \n                \n                    Length of the vector\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        normalize\n                        \n                    \n                \n            \n            \n                \n                    \n                    normalize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:55\n                \n            \n\n\n            \n                \n                    Normalize the vector\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, normalized vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:92\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        perpendicularCounterClockwise\n                        \n                    \n                \n            \n            \n                \n                    \n                    perpendicularCounterClockwise()\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:100\n                \n            \n\n\n            \n                \n                    Rotate this vector by 90 degrees in the counter-clockwise direction\n\n\n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, rotated vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        scale\n                        \n                    \n                \n            \n            \n                \n                    \n                    scale(factor: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:40\n                \n            \n\n\n            \n                \n                    Scale the vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    factor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scalar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new, scaled vector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        subtract\n                        \n                    \n                \n            \n            \n                \n                    \n                    subtract(other: Vector)\n                \n            \n\n\n            \n                \n                    Defined in src/app/graphs/automatic-layout.ts:84\n                \n            \n\n\n            \n                \n                    Subtract this vector and another vector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    other\n                                    \n                                                Vector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The other vector\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Vector\n\n                    \n                    \n                        A new vector, the difference of this vector and the other vector\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {NodeType} from '@app/graphs/issue-graph/issue-graph-nodes';\n\n/**\n * A simple 2D vector class.\n * The value of this vector is essentially immutable, every operation returns a new vector!\n */\nclass Vector {\n  public x: number;\n  public y: number;\n\n  /**\n   * Vector constructor\n   * @param x X component, 0 by default\n   * @param y Y component, 0 by default\n   */\n  constructor(x: number = 0, y: number = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  /**\n   * Check if the vector pointing from `source` to `point` is pointing away more than 90 degrees to the vector pointing\n   * from the `source` to the `target`.\n   * @param source The source point, as a vector\n   * @param target The target point, as a vector\n   * @param point The point to check, as a vector\n   * @return dot(target - source, point - source)  = new Set();\n\n  /** Padding to be added to this node */\n  readonly padding: number;\n\n  constructor(id: string | number, positionX: number, positionY: number, nodeType: NodeType) {\n    this.id = id;\n    this.padding = nodeType === NodeType.Component ? LayoutNode.PADDING_COMPONENT : LayoutNode.PADDING_INTERFACE;\n    this.position = new Vector(positionX, positionY);\n  }\n\n  /**\n   * Create an edge between this node and another node.\n   * Does **not** create a connection from the other node to this node!\n   * @param other The other node\n   */\n  public connectTo(other: LayoutNode): void {\n    this.connectedTo.add(other);\n  }\n\n  /**\n   * Calculate the movement direction that this node should move in, based on all other nodes around it\n   * @param allNodes All nodes, can include this node as well\n   * @returns The direction in which this node wants to travel\n   */\n  public calculateMovement(allNodes: Array): Vector {\n    if (this.fixed) {\n      return new Vector();\n    }\n\n    // Total force acting on this node\n    const result = new Vector();\n\n    // Keeps track of edges already visited\n    const otherNodesVisited = new Set();\n\n    for (const otherNode of allNodes) {\n      // Iterate over all other nodes\n      if (otherNode.id === this.id) {\n        continue;\n      }\n\n      // If both nodes are at an identical position, add a small randomized offset to this nodes position\n      let towardsOther = otherNode.position.subtract(this.position);\n      if (towardsOther.isZero()) {\n        this.position.x += Math.random() - .5;\n        this.position.y += Math.random() - .5;\n        towardsOther = otherNode.position.subtract(this.position);\n      }\n\n      const pad = this.padding + otherNode.padding;\n      const distance = Math.max(1, towardsOther.length() - pad);\n      towardsOther = towardsOther.scale(1 / distance);\n\n      // Move this node towards connected nodes, and away from non-connected nodes.\n      // Also make sure that a minimum spacing between nodes exists, regardless of connection.\n      let scale = 0;\n      if (this.connectedTo.has(otherNode)) {\n        if (distance ): void {\n  if (nodes.length === 0) {\n    return;\n  }\n\n  const directions = new Array(nodes.length);\n  // Fix an arbitrary node in place to prevent the graph from flying away\n  const firstNode = nodes[0];\n  firstNode.fixed = true;\n\n  // FIXME: This loop should stop early if no more (significant) changes happen\n  for (let v = 0; v \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            antDesignIcons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            icons\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            toasterConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/auth/authentication.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/cache-node.component.ts\n            \n            component\n            CacheNodeComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/cursor-paginator/cursor-paginator.component.ts\n            \n            component\n            CursorPaginatorComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-category/issue-category.component.ts\n            \n            component\n            IssueCategoryComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/issue-icon/issue-icon.component.ts\n            \n            component\n            IssueIconComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/issue-item/issue-item.component.ts\n            \n            component\n            IssueItemComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            component\n            IssueLabelComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            function\n            readCssColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            variable\n            colorTestCanvas\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/issue-label/issue-label.component.ts\n            \n            variable\n            colorTestCtx\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/issue-location/issue-location.component.ts\n            \n            component\n            IssueLocationComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/item.directive.ts\n            \n            directive\n            ItemDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            component\n            SetEditorDialogComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            class\n            MultiSourceList\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetEditorDialogData\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor-dialog.component.ts\n            \n            interface\n            SetMultiSource\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/set-editor/set-editor.component.ts\n            \n            component\n            SetEditorComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/user-item/user-item.component.ts\n            \n            component\n            UserItemComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            ListParams\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            interface\n            NodeId\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            decodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeListId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            encodeNodeId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            function\n            nodeTypeFromTypename\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            CURRENT_USER_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/id.ts\n            \n            variable\n            ROOT_NODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/index.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            function\n            listParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            listQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            nodeQueries\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/load.ts\n            \n            variable\n            queryNode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/mutate.ts\n            \n            class\n            Mutations\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/components.service.ts\n            \n            injectable\n            ComponentsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/issues.service.ts\n            \n            injectable\n            IssuesService\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/queries.service.ts\n            \n            injectable\n            QueriesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            interface\n            QueryListParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/queries/util.ts\n            \n            function\n            promisifyApolloFetch\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataList\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataNode\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            DataQuery\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            class\n            NodeCache\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_FAST_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data-dgql/query.ts\n            \n            variable\n            CACHE_STALE_TIME_MS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/component/component-store.service.ts\n            \n            injectable\n            ComponentStoreService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/data/interface/interface-store.service.ts\n            \n            injectable\n            InterfaceStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphDataFactory\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            class\n            GraphIssue\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            interface\n            GraphData\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            computeRelatedFolders\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            issueCounts\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/graph-data.ts\n            \n            function\n            removeOfferingComponents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-api.service.ts\n            \n            injectable\n            IssueGraphApiService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/data/issue-graph/issue-graph-state.service.ts\n            \n            injectable\n            IssueGraphStateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/data/issue/issue-store.service.ts\n            \n            injectable\n            IssueStoreService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            injectable\n            LabelStoreService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/data/label/label-store.service.ts\n            \n            function\n            isFilterLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/data/project/project-store.service.ts\n            \n            injectable\n            ProjectStoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/access-token-dialog/access-token-dialog.component.ts\n            \n            component\n            AccessTokenDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/dialogs/add-project-member-dialog/add-project-member-dialog.component.ts\n            \n            component\n            AddProjectMemberDialogComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            component\n            CreateComponentDialogComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-component-dialog/create-component-dialog.component.ts\n            \n            interface\n            CreateComponentData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            component\n            CreateInterfaceDialogComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-interface-dialog/create-interface-dialog.component.ts\n            \n            interface\n            CreateInterfaceData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            component\n            CreateIssueDialogComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-issue-dialog/create-issue-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            component\n            CreateEditLabelDialogComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-label-dialog/create-edit-label-dialog.component.ts\n            \n            interface\n            CreateEditLabelDialogData\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/dialogs/create-project-dialog/create-project-dialog.component.ts\n            \n            component\n            CreateProjectDialogComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/dialogs/profile-settings-dialog/profile-settings-dialog.component.ts\n            \n            component\n            ProfileSettingsDialogComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            component\n            RemoveDialogComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-dialog/remove-dialog.component.ts\n            \n            interface\n            DialogData\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/dialogs/remove-project-member-component/remove-project-member-component.component.ts\n            \n            component\n            RemoveProjectMemberComponentComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/dialogs/settings-dialog/settings-dialog.component.ts\n            \n            component\n            SettingsDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/frame/frame.component.ts\n            \n            component\n            FrameComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            createErrorLink\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            provideDefaultApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            function\n            providePublicApollo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            basic\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            defaultOptions\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphql.module.ts\n            \n            variable\n            networkErrorToast\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            LayoutNode\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            class\n            Vector\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/graphs/automatic-layout.ts\n            \n            function\n            doGraphLayout\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            component\n            ComponentContextMenuComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            injectable\n            ComponentContextMenuService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            interface\n            ComponentContextMenuData\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/graphs/component-context-menu/component-context-menu.component.ts\n            \n            variable\n            COMPONENT_CONTEXT_MENU_DATA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph-controls/issue-graph-controls.component.ts\n            \n            component\n            IssueGraphControlsComponent\n            \n                23 %\n                (4/17)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/class-setters/issue-graph-class-setters.service.ts\n            \n            injectable\n            IssueGraphClassSettersService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/dynamic-template-registry/issue-graph-dynamic-template-registry.service.ts\n            \n            injectable\n            IssueGraphDynamicTemplateRegistryService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerBehaviour\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            class\n            IssueGroupContainerParentBehaviour\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/group-behaviours.ts\n            \n            function\n            distance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            ComponentNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            InterfaceNode\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueFolderNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueGroupContainerNode\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            IssueNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            Position\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            interface\n            RelationEdge\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createComponentNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createConsumptionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createInterfaceProvisionEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueFolderNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createIssueGroupContainerNode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            createRelationEdge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            function\n            getIssueFolderId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph-nodes.ts\n            \n            variable\n            zeroPosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            component\n            IssueGraphComponent\n            \n                62 %\n                (37/59)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/issue-graph.component.ts\n            \n            interface\n            Positions\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/graphs/issue-graph/link-handles/issue-graph-link-handles.service.ts\n            \n            injectable\n            IssueGraphLinkHandlesService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            component\n            LabelSearchComponent\n            \n                30 %\n                (3/10)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            FilterSelection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/graphs/label-search/label-search.component.ts\n            \n            interface\n            TextFragment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/graphs/shared.ts\n            \n            interface\n            FilterState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/comment/comment.component.ts\n            \n            component\n            CommentComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-contents.component.ts\n            \n            component\n            IssueContentsComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-detail.component.ts\n            \n            component\n            IssueDetailComponent\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/issue-sidebar.component.ts\n            \n            component\n            IssueSidebarComponent\n            \n                2 %\n                (1/39)\n            \n        \n        \n            \n                \n                src/app/issue-detail/linked-issue-item.component.ts\n            \n            component\n            LinkedIssueItemComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/issue-detail/time-formatter.ts\n            \n            class\n            TimeFormatter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            component\n            TimelineItemComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineCoalescedItemsDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineItemDeletedDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/coalesced/timeline-item.component.ts\n            \n            directive\n            TimelineSingleItemDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            component\n            TimelineComponent\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/issue-detail/timeline/timeline.component.ts\n            \n            interface\n            CoalescedTimelineItem\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            component\n            IssueFilterComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            convertValueForFilter\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            function\n            getDefaultForType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            listAllIssues\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-filter.component.ts\n            \n            variable\n            PREDICATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/issue-list/issue-list.component.ts\n            \n            component\n            IssueListComponent\n            \n                29 %\n                (8/27)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-editor/markdown-editor.component.ts\n            \n            component\n            MarkdownEditorComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/markdown/markdown-preview/markdown-preview.component.ts\n            \n            component\n            MarkdownPreviewComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/node-details-page/node-details-page.component.ts\n            \n            component\n            NodeDetailsPageComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/node-details/node-details.component.ts\n            \n            component\n            NodeDetailsComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                src/app/project-header/project-header.component.ts\n            \n            component\n            ProjectHeaderComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/project-issue-list/project-issue-list.component.ts\n            \n            component\n            ProjectIssueListComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/project-list-component/project-list.component.ts\n            \n            component\n            ProjectListComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            component\n            ProjectMembersComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/project-members/project-members.component.ts\n            \n            interface\n            userMock\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/project-overview/project-overview.component.ts\n            \n            component\n            ProjectOverviewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            function\n            slideTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/route-animations.ts\n            \n            variable\n            slider\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/side-nav/side-nav.component.ts\n            \n            component\n            SideNavComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            injectable\n            StateService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/state.service.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/text-display/text-display.component.ts\n            \n            component\n            TextDisplayComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/top-toolbar/top-toolbar.component.ts\n            \n            component\n            TopToolbarComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/user-notify/user-notify.service.ts\n            \n            injectable\n            UserNotifyService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            component\n            QueryComponent\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryBodyDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/query-component/query.component.ts\n            \n            directive\n            QueryButtonDirective\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/utils/validators.ts\n            \n            class\n            CCIMSValidators\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            host\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.13\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.13\n        \n            @angular/compiler : ^9.1.13\n        \n            @angular/core : ^9.1.13\n        \n            @angular/forms : ^9.1.13\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.13\n        \n            @angular/platform-browser-dynamic : ^9.1.13\n        \n            @angular/router : ^9.1.13\n        \n            @apollo/client : ^3.5.5\n        \n            @apollo/link-context : ^2.0.0-beta.3\n        \n            @clr/ui : ^4.0.16\n        \n            @github/time-elements : ^3.1.2\n        \n            @ng-select/ng-option-highlight : 0.0.5\n        \n            @ng-select/ng-select : ^4.0.4\n        \n            @primer/css : ^15.2.0\n        \n            @ustutt/grapheditor-webcomponent : ^0.6.2\n        \n            apollo-angular : ^2.6.0\n        \n            graphql : ^15.7.2\n        \n            monaco-editor : ^0.27.0\n        \n            ng-zorro-antd : ^9.3.0\n        \n            ngx-color-picker : ^10.1.0\n        \n            ngx-markdown : ^8.2.2\n        \n            ngx-monaco-editor : ^9.0.0\n        \n            ngx-toastr : ^13.2.1\n        \n            quick-score : ^0.0.12\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.14.1\n        \n            typescript-collections : ^1.3.3\n        \n            zone.js : ~0.10.2\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            folderEdgeTypes   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            ListType   (src/.../id.ts)\n                        \n                        \n                            NodeDetailsType   (src/.../node-details.component.ts)\n                        \n                        \n                            NodeType   (src/.../id.ts)\n                        \n                        \n                            NodeType   (src/.../issue-graph-nodes.ts)\n                        \n                        \n                            QueryComponentState   (src/.../query.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n            \n                \n                    \n                        \n                        folderEdgeTypes\n                    \n                \n                        \n                            \n                                 RelatedTo\n                            \n                        \n                        \n                            \n                                Value : relatedTo\n                            \n                        \n                        \n                            \n                                 Depends\n                            \n                        \n                        \n                            \n                                Value : dependency\n                            \n                        \n                        \n                            \n                                 Duplicates\n                            \n                        \n                        \n                            \n                                Value : duplicate\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                Value : component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n                        \n                            \n                                Value : interface\n                            \n                        \n                        \n                            \n                                 InterfaceConsumer\n                            \n                        \n                        \n                            \n                                Value : interface-connect\n                            \n                        \n                        \n                            \n                                 IssueGroupContainer\n                            \n                        \n                        \n                            \n                                Value : issue-group-container\n                            \n                        \n            \n        \n\n    src/app/data-dgql/id.ts\n    \n        \n            \n                \n                    \n                        \n                        ListType\n                    \n                \n                    \n                        \n                            All list types represent their respective list queries in the backend API.\n\n                        \n                    \n                        \n                            \n                                 Projects\n                            \n                        \n                        \n                            \n                                 Components\n                            \n                        \n                        \n                            \n                                 ComponentInterfaces\n                            \n                        \n                        \n                            \n                                 Issues\n                            \n                        \n                        \n                            \n                                 IssuesOnLocation\n                            \n                        \n                        \n                            \n                                 IssueLocations\n                            \n                        \n                        \n                            \n                                 TimelineItems\n                            \n                        \n                        \n                            \n                                 Labels\n                            \n                        \n                        \n                            \n                                 Artifacts\n                            \n                        \n                        \n                            \n                                 Participants\n                            \n                        \n                        \n                            \n                                 Assignees\n                            \n                        \n                        \n                            \n                                 SearchUsers\n                            \n                        \n                        \n                            \n                                 LinkedIssues\n                            \n                        \n                        \n                            \n                                 LinkedByIssues\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        NodeType\n                    \n                \n                    \n                        \n                            Backend API node types.\nThe names should match the respective value of __typename in the GraphQL data for any given node.\n\n                        \n                    \n                        \n                            \n                                 Root\n                            \n                        \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 ComponentInterface\n                            \n                        \n                        \n                            \n                                 Issue\n                            \n                        \n                        \n                            \n                                 IssueTimelineItem\n                            \n                        \n                        \n                            \n                                 Label\n                            \n                        \n                        \n                            \n                                 Project\n                            \n                        \n                        \n                            \n                                 Artifact\n                            \n                        \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                 IssueComment\n                            \n                        \n            \n        \n\n    src/app/node-details/node-details.component.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeDetailsType\n                    \n                \n                    \n                        \n                            A node shown in the details component can either be a component or an interface\n\n                        \n                    \n                        \n                            \n                                 Component\n                            \n                        \n                        \n                            \n                                 Interface\n                            \n                        \n            \n        \n\n    src/app/utils/query-component/query.component.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryComponentState\n                    \n                \n                    \n                        \n                            The current state of the query\n\n                        \n                    \n                        \n                            \n                                 Ready\n                            \n                        \n                        \n                            \n                                 Loading\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend for the Gropius system\nAbout the documentation\n\nDevelopment server:run npm start and navigate to http://localhost:4200/.\n\n\nCode generation from .graphql files:run npm run generate.\n\n\nDocumentation:can be found on http://ccims.github.io/ccims-frontend.\n\n\nDocumentation generation:run npm run compodoc.p.s. If folder Additional documentation is not visible below Getting started, run compodoc -p tsconfig.doc.json --includes additional and then npm run compodoc.\n\n\nGropius features:  \n\ncan be found on Using Gropius.p.s. If running the documentation locally, then click here.\n\n\nProject structure, used technologies, mocked members page and more:  \n\ncan be found on Managing Gropius.p.s. If running the documentation locally, then click here.\n\n\nBackend:can be found on https://github.com/ccims/ccims-backend-gql.\n\n\nContributors:  \n\ncan be found on Contributors.p.s. If running the documentation locally, then click here.\n\n\nIntroduction to Gropius\nSoftware systems are usually built as component-based architectures. The whole idea behind this type of architecture is to decompose functionality into autonomous services. This results into components that are (almost) entirely self-contained and reusable, thus making the whole software developing process much easier.\nEven though component-based architectures have many benefits like ease of deployment, reusability and independence, there are also challenges that need to be resolved. One of the most critical occurs when different components are managed in different issue management systems (IMS). This can lead to issues (in one group of components) not having a direct link to the root issues (in another group of components) that caused them in the first place. Dependencies between components can thus cause bugs to propagate through the components along the call chain.\nGropius is a cross component issue management system (CCIMS) that solves the described problem by enabling direct dependency links over issues which are managed in different issue management systems.\nThe frontend\n\nAs already mentioned, the idea behind Gropius is to manage cross-component issues for component-based architectures. The system graphically models cross-component problems along with the system architecture. The graphical representation is similar to that of an UML component diagram.\nThe system consists of two different parts: 1. the frontend and 2. the backend.\nThe frontend is responsible for visualizing the part of the system the user can interact with aka. the graphical representation of components and issues and also different methods of managing them. Said methods include 1. creating components, interfaces and issues, 2. editing them, 3. analysing the current status of given issues and their propagation, etc. More about this can be found in the next point of this file.\nCredits\nFurther information regarding the members who have worked on the frontend of the system can be found on page Contributors located in the documentation.\nLicense\nThis part still needs to be specified.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GraphsModule\n\n\n\ncluster_GraphsModule_declarations\n\n\n\ncluster_GraphsModule_exports\n\n\n\n\nAccessTokenDialogComponent\n\nAccessTokenDialogComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccessTokenDialogComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCommentComponent\n\nCommentComponent\n\nAppModule -->\n\nCommentComponent->AppModule\n\n\n\n\n\nComponentContextMenuComponent\n\nComponentContextMenuComponent\n\nAppModule -->\n\nComponentContextMenuComponent->AppModule\n\n\n\n\n\nCreateComponentDialogComponent\n\nCreateComponentDialogComponent\n\nAppModule -->\n\nCreateComponentDialogComponent->AppModule\n\n\n\n\n\nCreateEditLabelDialogComponent\n\nCreateEditLabelDialogComponent\n\nAppModule -->\n\nCreateEditLabelDialogComponent->AppModule\n\n\n\n\n\nCreateInterfaceDialogComponent\n\nCreateInterfaceDialogComponent\n\nAppModule -->\n\nCreateInterfaceDialogComponent->AppModule\n\n\n\n\n\nCreateIssueDialogComponent\n\nCreateIssueDialogComponent\n\nAppModule -->\n\nCreateIssueDialogComponent->AppModule\n\n\n\n\n\nCreateProjectDialogComponent\n\nCreateProjectDialogComponent\n\nAppModule -->\n\nCreateProjectDialogComponent->AppModule\n\n\n\n\n\nFrameComponent\n\nFrameComponent\n\nAppModule -->\n\nFrameComponent->AppModule\n\n\n\n\n\nIssueContentsComponent\n\nIssueContentsComponent\n\nAppModule -->\n\nIssueContentsComponent->AppModule\n\n\n\n\n\nIssueDetailComponent\n\nIssueDetailComponent\n\nAppModule -->\n\nIssueDetailComponent->AppModule\n\n\n\n\n\nLinkedIssueItemComponent\n\nLinkedIssueItemComponent\n\nAppModule -->\n\nLinkedIssueItemComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMarkdownEditorComponent\n\nMarkdownEditorComponent\n\nAppModule -->\n\nMarkdownEditorComponent->AppModule\n\n\n\n\n\nMarkdownPreviewComponent\n\nMarkdownPreviewComponent\n\nAppModule -->\n\nMarkdownPreviewComponent->AppModule\n\n\n\n\n\nNodeDetailsComponent\n\nNodeDetailsComponent\n\nAppModule -->\n\nNodeDetailsComponent->AppModule\n\n\n\n\n\nNodeDetailsPageComponent\n\nNodeDetailsPageComponent\n\nAppModule -->\n\nNodeDetailsPageComponent->AppModule\n\n\n\n\n\nProfileSettingsDialogComponent\n\nProfileSettingsDialogComponent\n\nAppModule -->\n\nProfileSettingsDialogComponent->AppModule\n\n\n\n\n\nProjectListComponent\n\nProjectListComponent\n\nAppModule -->\n\nProjectListComponent->AppModule\n\n\n\n\n\nProjectOverviewComponent\n\nProjectOverviewComponent\n\nAppModule -->\n\nProjectOverviewComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nRemoveDialogComponent\n\nRemoveDialogComponent\n\nAppModule -->\n\nRemoveDialogComponent->AppModule\n\n\n\n\n\nRemoveProjectMemberComponentComponent\n\nRemoveProjectMemberComponentComponent\n\nAppModule -->\n\nRemoveProjectMemberComponentComponent->AppModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nAppModule -->\n\nSettingsDialogComponent->AppModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nAppModule -->\n\nSideNavComponent->AppModule\n\n\n\n\n\nTextDisplayComponent\n\nTextDisplayComponent\n\nAppModule -->\n\nTextDisplayComponent->AppModule\n\n\n\n\n\nTimelineCoalescedItemsDirective\n\nTimelineCoalescedItemsDirective\n\nAppModule -->\n\nTimelineCoalescedItemsDirective->AppModule\n\n\n\n\n\nTimelineComponent\n\nTimelineComponent\n\nAppModule -->\n\nTimelineComponent->AppModule\n\n\n\n\n\nTimelineItemComponent\n\nTimelineItemComponent\n\nAppModule -->\n\nTimelineItemComponent->AppModule\n\n\n\n\n\nTimelineItemDeletedDirective\n\nTimelineItemDeletedDirective\n\nAppModule -->\n\nTimelineItemDeletedDirective->AppModule\n\n\n\n\n\nTimelineSingleItemDirective\n\nTimelineSingleItemDirective\n\nAppModule -->\n\nTimelineSingleItemDirective->AppModule\n\n\n\n\n\nTopToolbarComponent\n\nTopToolbarComponent\n\nAppModule -->\n\nTopToolbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nGraphsModule\n\nGraphsModule\n\nAppModule -->\n\nGraphsModule->AppModule\n\n\n\n\n\nCursorPaginatorComponent \n\nCursorPaginatorComponent \n\nCursorPaginatorComponent  -->\n\nGraphsModule->CursorPaginatorComponent \n\n\n\n\n\nIssueCategoryComponent \n\nIssueCategoryComponent \n\nIssueCategoryComponent  -->\n\nGraphsModule->IssueCategoryComponent \n\n\n\n\n\nIssueGraphComponent \n\nIssueGraphComponent \n\nIssueGraphComponent  -->\n\nGraphsModule->IssueGraphComponent \n\n\n\n\n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent \n\nIssueGraphControlsComponent  -->\n\nGraphsModule->IssueGraphControlsComponent \n\n\n\n\n\nIssueIconComponent \n\nIssueIconComponent \n\nIssueIconComponent  -->\n\nGraphsModule->IssueIconComponent \n\n\n\n\n\nIssueItemComponent \n\nIssueItemComponent \n\nIssueItemComponent  -->\n\nGraphsModule->IssueItemComponent \n\n\n\n\n\nIssueLabelComponent \n\nIssueLabelComponent \n\nIssueLabelComponent  -->\n\nGraphsModule->IssueLabelComponent \n\n\n\n\n\nIssueListComponent \n\nIssueListComponent \n\nIssueListComponent  -->\n\nGraphsModule->IssueListComponent \n\n\n\n\n\nIssueLocationComponent \n\nIssueLocationComponent \n\nIssueLocationComponent  -->\n\nGraphsModule->IssueLocationComponent \n\n\n\n\n\nIssueSidebarComponent \n\nIssueSidebarComponent \n\nIssueSidebarComponent  -->\n\nGraphsModule->IssueSidebarComponent \n\n\n\n\n\nItemDirective \n\nItemDirective \n\nItemDirective  -->\n\nGraphsModule->ItemDirective \n\n\n\n\n\nProjectHeaderComponent \n\nProjectHeaderComponent \n\nProjectHeaderComponent  -->\n\nGraphsModule->ProjectHeaderComponent \n\n\n\n\n\nQueryBodyDirective \n\nQueryBodyDirective \n\nQueryBodyDirective  -->\n\nGraphsModule->QueryBodyDirective \n\n\n\n\n\nQueryButtonDirective \n\nQueryButtonDirective \n\nQueryButtonDirective  -->\n\nGraphsModule->QueryButtonDirective \n\n\n\n\n\nQueryComponent \n\nQueryComponent \n\nQueryComponent  -->\n\nGraphsModule->QueryComponent \n\n\n\n\n\nSetEditorComponent \n\nSetEditorComponent \n\nSetEditorComponent  -->\n\nGraphsModule->SetEditorComponent \n\n\n\n\n\nUserItemComponent \n\nUserItemComponent \n\nUserItemComponent  -->\n\nGraphsModule->UserItemComponent \n\n\n\n\n\nAddProjectMemberDialogComponent\n\nAddProjectMemberDialogComponent\n\nGraphsModule -->\n\nAddProjectMemberDialogComponent->GraphsModule\n\n\n\n\n\nCacheNodeComponent\n\nCacheNodeComponent\n\nGraphsModule -->\n\nCacheNodeComponent->GraphsModule\n\n\n\n\n\nCursorPaginatorComponent\n\nCursorPaginatorComponent\n\nGraphsModule -->\n\nCursorPaginatorComponent->GraphsModule\n\n\n\n\n\nIssueCategoryComponent\n\nIssueCategoryComponent\n\nGraphsModule -->\n\nIssueCategoryComponent->GraphsModule\n\n\n\n\n\nIssueFilterComponent\n\nIssueFilterComponent\n\nGraphsModule -->\n\nIssueFilterComponent->GraphsModule\n\n\n\n\n\nIssueGraphComponent\n\nIssueGraphComponent\n\nGraphsModule -->\n\nIssueGraphComponent->GraphsModule\n\n\n\n\n\nIssueGraphControlsComponent\n\nIssueGraphControlsComponent\n\nGraphsModule -->\n\nIssueGraphControlsComponent->GraphsModule\n\n\n\n\n\nIssueIconComponent\n\nIssueIconComponent\n\nGraphsModule -->\n\nIssueIconComponent->GraphsModule\n\n\n\n\n\nIssueItemComponent\n\nIssueItemComponent\n\nGraphsModule -->\n\nIssueItemComponent->GraphsModule\n\n\n\n\n\nIssueLabelComponent\n\nIssueLabelComponent\n\nGraphsModule -->\n\nIssueLabelComponent->GraphsModule\n\n\n\n\n\nIssueListComponent\n\nIssueListComponent\n\nGraphsModule -->\n\nIssueListComponent->GraphsModule\n\n\n\n\n\nIssueLocationComponent\n\nIssueLocationComponent\n\nGraphsModule -->\n\nIssueLocationComponent->GraphsModule\n\n\n\n\n\nIssueSidebarComponent\n\nIssueSidebarComponent\n\nGraphsModule -->\n\nIssueSidebarComponent->GraphsModule\n\n\n\n\n\nItemDirective\n\nItemDirective\n\nGraphsModule -->\n\nItemDirective->GraphsModule\n\n\n\n\n\nLabelSearchComponent\n\nLabelSearchComponent\n\nGraphsModule -->\n\nLabelSearchComponent->GraphsModule\n\n\n\n\n\nProjectHeaderComponent\n\nProjectHeaderComponent\n\nGraphsModule -->\n\nProjectHeaderComponent->GraphsModule\n\n\n\n\n\nProjectIssueListComponent\n\nProjectIssueListComponent\n\nGraphsModule -->\n\nProjectIssueListComponent->GraphsModule\n\n\n\n\n\nProjectMembersComponent\n\nProjectMembersComponent\n\nGraphsModule -->\n\nProjectMembersComponent->GraphsModule\n\n\n\n\n\nQueryBodyDirective\n\nQueryBodyDirective\n\nGraphsModule -->\n\nQueryBodyDirective->GraphsModule\n\n\n\n\n\nQueryButtonDirective\n\nQueryButtonDirective\n\nGraphsModule -->\n\nQueryButtonDirective->GraphsModule\n\n\n\n\n\nQueryComponent\n\nQueryComponent\n\nGraphsModule -->\n\nQueryComponent->GraphsModule\n\n\n\n\n\nSetEditorComponent\n\nSetEditorComponent\n\nGraphsModule -->\n\nSetEditorComponent->GraphsModule\n\n\n\n\n\nSetEditorDialogComponent\n\nSetEditorDialogComponent\n\nGraphsModule -->\n\nSetEditorDialogComponent->GraphsModule\n\n\n\n\n\nUserItemComponent\n\nUserItemComponent\n\nGraphsModule -->\n\nUserItemComponent->GraphsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    28 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        21 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnumDictionary   (src/.../shared.ts)\n                        \n                        \n                            FilterElement   (src/.../label-search.component.ts)\n                        \n                        \n                            FilterLabel   (src/.../label-store.service.ts)\n                        \n                        \n                            GQLGraphComponent   (src/.../graph-data.ts)\n                        \n                        \n                            GQLInterface   (src/.../graph-data.ts)\n                        \n                        \n                            GQLIssue   (src/.../graph-data.ts)\n                        \n                        \n                            GraphFolder   (src/.../graph-data.ts)\n                        \n                        \n                            GraphLocation   (src/.../graph-data.ts)\n                        \n                        \n                            HydrateList   (src/.../query.ts)\n                        \n                        \n                            IssueListParams   (src/.../issues.service.ts)\n                        \n                        \n                            ItemFilterFunction   (src/.../timeline.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor-dialog.component.ts)\n                        \n                        \n                            ItemOps   (src/.../set-editor.component.ts)\n                        \n                        \n                            ListIdEnc   (src/.../id.ts)\n                        \n                        \n                            ListQueries   (src/.../load.ts)\n                        \n                        \n                            ListQueryInput   (src/.../load.ts)\n                        \n                        \n                            ListResult   (src/.../load.ts)\n                        \n                        \n                            LocalIssueData   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            LocationId   (src/.../graph-data.ts)\n                        \n                        \n                            MaybeLocalList   (src/.../issue-sidebar.component.ts)\n                        \n                        \n                            NodeIdEnc   (src/.../id.ts)\n                        \n                        \n                            NodeQueries   (src/.../load.ts)\n                        \n                        \n                            NodeQueryInput   (src/.../load.ts)\n                        \n                        \n                            NodeUpdatedCallbackFn   (src/.../node-details.component.ts)\n                        \n                        \n                            SelectedCategories   (src/.../shared.ts)\n                        \n                        \n                            TextDisplayEditCallbackFn   (src/.../text-display.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/graphs/shared.ts\n    \n    \n        \n            \n                \n                    \n                    EnumDictionary\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectedCategories\n                \n            \n            \n                \n                            EnumDictionary\n\n                \n            \n        \n    \n    src/app/graphs/label-search/label-search.component.ts\n    \n    \n        \n            \n                \n                    \n                    FilterElement\n                \n            \n            \n                \n                    The bar can contain elements standing for labels and elements for text fragments.\n\n                \n            \n            \n                \n                            TextFragment | FilterLabel\n\n                \n            \n        \n    \n    src/app/data/label/label-store.service.ts\n    \n    \n        \n            \n                \n                    \n                    FilterLabel\n                \n            \n            \n                \n                        Pick\n\n                \n            \n        \n    \n    src/app/data/issue-graph/graph-data.ts\n    \n    \n        \n            \n                \n                    \n                    GQLGraphComponent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLInterface\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GQLIssue\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphFolder\n                \n            \n            \n                \n                            [LocationId, IssueCategory]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GraphLocation\n                \n            \n            \n                \n                        GraphInterface | GraphComponent\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocationId\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/data-dgql/query.ts\n    \n    \n        \n            \n                \n                    \n                    HydrateList\n                \n            \n            \n                \n                    List hydration object (constructing this manually shouldn't be necessary as it mirrors the structure of GQL objects)\n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/data-dgql/queries/issues.service.ts\n    \n    \n        \n            \n                \n                    \n                    IssueListParams\n                \n            \n            \n                \n                        QueryListParams\n\n                \n            \n        \n    \n    src/app/issue-detail/timeline/timeline.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemFilterFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor-dialog.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                    Types of item operations that may be made available.\n\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/components/set-editor/set-editor.component.ts\n    \n    \n        \n            \n                \n                    \n                    ItemOps\n                \n            \n            \n                \n                        \"none\" | \"edit\" | \"create-edit\" | \"create-edit-delete\"\n\n                \n            \n        \n    \n    src/app/data-dgql/id.ts\n    \n    \n        \n            \n                \n                    \n                    ListIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeIdEnc\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    src/app/data-dgql/load.ts\n    \n    \n        \n            \n                \n                    \n                    ListQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ListResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueries\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NodeQueryInput\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/issue-detail/issue-sidebar.component.ts\n    \n    \n        \n            \n                \n                    \n                    LocalIssueData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MaybeLocalList\n                \n            \n            \n                \n                            ListId | T[]\n\n                \n            \n        \n    \n    src/app/node-details/node-details.component.ts\n    \n    \n        \n            \n                \n                    \n                    NodeUpdatedCallbackFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/text-display/text-display.component.ts\n    \n    \n        \n            \n                \n                    \n                    TextDisplayEditCallbackFn\n                \n            \n            \n                \n                    A callback function that is called once the user finishes editing the text.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userMock.html":{"url":"interfaces/userMock.html","title":"interface - userMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/project-members/project-members.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ProjectStoreService} from '@app/data/project/project-store.service';\nimport {GetFullProjectQuery} from 'src/generated/graphql';\nimport {Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort, MatSortable} from '@angular/material/sort';\nimport {MatPaginator, MatPaginatorModule, PageEvent} from '@angular/material/paginator';\nimport {AddProjectMemberDialogComponent} from '@app/dialogs/add-project-member-dialog/add-project-member-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {RemoveProjectMemberComponentComponent} from '@app/dialogs/remove-project-member-component/remove-project-member-component.component';\n\n/**\n * This component is an example for the manage members view\n * All users are displayed in a paginated list. The list can be filtered.\n * The members are hardcoded\n * If the backend offers an interface to get all users the mockUsers list schould be replaced\n */\n@Component({\n  selector: 'app-project-members',\n  templateUrl: './project-members.component.html',\n  styleUrls: ['./project-members.component.scss']\n})\nexport class ProjectMembersComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginatorModule) paginatorModule: MatPaginatorModule;\n  @ViewChild(MatSort) sort: MatSort;\n  public projectId: string;\n  public project$: Observable;\n  public project: GetFullProjectQuery;\n  validationFilter = new FormControl('');\n\n  columnsToDisplay = ['Name', 'Role', 'email'];\n  dataSource: MatTableDataSource;\n\n  //users\n  mockUsers: Array = [{id: '1', displayName: 'User1', email: 'User1.de'},\n    {id: '2', displayName: 'User2', email: 'User2.de'},\n    {id: '3', displayName: 'User3', email: 'User3.de'},\n    {id: '4', displayName: 'User4', email: 'User4.de'},\n    {id: '5', displayName: 'User5', email: 'User5.de'},\n    {id: '6', displayName: 'User6', email: 'User6.de'}];\n\n  // list of users who can be added to the project\n  //hardcoded\n  addableUsers: Array = [\n    {id: '7', displayName: 'AddedUser1', email: 'AddedUser1.de'},\n    {id: '8', displayName: 'AddedUser2', email: 'AddedUser2.de'},\n    {id: '9', displayName: 'AddedUser3', email: 'AddedUser3.de'},\n  ];\n\n\n  constructor(private dialog: MatDialog, private projectStore: ProjectStoreService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.projectId = this.route.snapshot.paramMap.get('id');\n    this.project$ = this.projectStore.getFullProject(this.projectId);\n    this.project$.subscribe(project => {\n      this.project = project;\n      // MOCK DATA for table\n      // FIXME Api change\n      // project.node.users.nodes.forEach(u => this.mockUsers.push(u));\n      this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      // sort data in table\n      this.sort.sort(({id: 'Name', start: 'asc'}) as MatSortable);\n      this.dataSource.sort = this.sort;\n\n      //paginator\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  // This method adds a user to the project members list without processing a task in the back-end\n  onAddClick() {\n    const addMemberDialogRef = this.dialog.open(AddProjectMemberDialogComponent,\n      {data: {addableMembers: this.addableUsers, projectId: this.projectId}});\n    addMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToAdd) {\n          this.addableUsers.forEach(addableUser => {\n            if (addableUser.id == user) {\n              this.mockUsers.push(addableUser);\n            }\n          });\n        }\n        this.dataSource = new MatTableDataSource(this.mockUsers);\n\n      }\n    });\n\n  }\n\n  // This method deletes a user to the project members list without processing a task in the back-end\n  onDeleteClick() {\n    const deleteMemberDialogRef = this.dialog.open(RemoveProjectMemberComponentComponent,\n      {data: {mockMembers: this.mockUsers, projectId: this.projectId}});\n    deleteMemberDialogRef.afterClosed().subscribe(data => {\n      if (data) {\n        for (const user of data.usersToDelete) {\n          for (var i = 0; i (this.mockUsers);\n      }\n    });\n  }\n\n  //change pages\n  onPageChange(event: PageEvent) {\n  }\n\n  // on every key pressed in the filter-field this method is triggered and reduces the shown users in the list (table)\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  clickedOnRow(rowData) {\n    // there schould be the code when a user is selected\n    // TODO jump to the user information page\n  }\n\n}\n\n// defines the structure of a user\nexport interface userMock {\n  id: string;\n  displayName?: string;\n  username?: string;\n  email?: string;\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            antDesignIcons   (src/.../app.module.ts)\n                        \n                        \n                            basic   (src/.../graphql.module.ts)\n                        \n                        \n                            CACHE_FAST_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_INTERACTIVE_DEBOUNCE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            CACHE_STALE_TIME_MS   (src/.../query.ts)\n                        \n                        \n                            colorTestCanvas   (src/.../issue-label.component.ts)\n                        \n                        \n                            colorTestCtx   (src/.../issue-label.component.ts)\n                        \n                        \n                            COMPONENT_CONTEXT_MENU_DATA   (src/.../component-context-menu.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            CURRENT_USER_NODE   (src/.../id.ts)\n                        \n                        \n                            defaultOptions   (src/.../graphql.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            host   (src/.../environment.prod.ts)\n                        \n                        \n                            host   (src/.../environment.ts)\n                        \n                        \n                            icons   (src/.../app.module.ts)\n                        \n                        \n                            listAllIssues   (src/.../issue-filter.component.ts)\n                        \n                        \n                            listQueries   (src/.../load.ts)\n                        \n                        \n                            networkErrorToast   (src/.../graphql.module.ts)\n                        \n                        \n                            nodeQueries   (src/.../load.ts)\n                        \n                        \n                            PREDICATES   (src/.../issue-filter.component.ts)\n                        \n                        \n                            queryList   (src/.../load.ts)\n                        \n                        \n                            queryNode   (src/.../load.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROOT_NODE   (src/.../id.ts)\n                        \n                        \n                            slider   (src/.../route-animations.ts)\n                        \n                        \n                            toasterConfig   (src/.../app.module.ts)\n                        \n                        \n                            zeroPosition   (src/.../issue-graph-nodes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        antDesignIcons\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AllIcons as {\n  [key: string]: IconDefinition;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        icons\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(antDesignIcons).map(key => antDesignIcons[key])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toasterConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  maxOpened: 4,\n  autoDismiss: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/graphql.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        basic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : setContext((operation, context) => ({\n  headers: {\n    Accept: 'charset=utf-8'\n  }\n}))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  }\n}\n                    \n                \n\n            \n                \n                    This modules purpose is to provide define functions returning configurations\nfor the automatic creation of ApolloClients for graphql communication with the backend.\nThe key functions are providePublicApollo and provideDefaultApollo. The apollo instance\nconstructed from providePublicApollo is only used for registering.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        networkErrorToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  timeOut: 5000,\n  closeButton: true,\n  positionClass: 'toast-top-center',\n  enableHtml: true\n}\n                    \n                \n\n            \n                \n                    Congiuration for network error toast on register page.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_FAST_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests until actually sending a request, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_INTERACTIVE_DEBOUNCE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n\n            \n                \n                    How long DataQuery will wait to debounce requests, if the undefined flag is set, in milliseconds.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_STALE_TIME_MS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n\n            \n                \n                    Number of milliseconds beyond which cached data will be considered stale, and will be reloaded if a new subscriber is added.\n\n                \n            \n\n        \n    \n\n    src/app/components/issue-label/issue-label.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        colorTestCanvas\n                        \n                    \n                \n            \n                \n                    \n                        Default value : document.createElement('canvas')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        colorTestCtx\n                        \n                    \n                \n            \n                \n                    \n                        Default value : colorTestCanvas.getContext('2d')\n                    \n                \n\n\n        \n    \n\n    src/app/graphs/component-context-menu/component-context-menu.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMPONENT_CONTEXT_MENU_DATA\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('COMPONENT_CONTEXT_MENU_DATA')\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/app/data-dgql/id.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CURRENT_USER_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.User, id: 'self' }\n                    \n                \n\n            \n                \n                    The special ID of the current user node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROOT_NODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     miscellaneous\n\n                    \n                \n                \n                    \n                        Default value : { type: NodeType.Root, id: '' }\n                    \n                \n\n            \n                \n                    The ID of the root node.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: `${host}/api`,\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: `${host}/api`,\n  // url for public api endpoint offering signup\n  signUpUrl: `${host}/api/public`,\n  loginUrl: `${host}/login`,\n  publicClientName: 'publicClient'\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8080'\n                    \n                \n\n\n        \n    \n\n    src/app/issue-list/issue-filter.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listAllIssues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (self: IssueFilterComponent) => ({\n  node: { type: NodeType.Project, id: self.projectId },\n  type: ListType.Issues\n})\n                    \n                \n\n            \n                \n                    Returns the ListId for listing all project issues.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PREDICATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  isOpen: { type: 'bool', label: 'Is open' },\n  isDuplicate: { type: 'bool', label: 'Is duplicate' },\n  category: {\n    type: 'enum',\n    label: 'Category',\n    options: [\n      [IssueCategory.Unclassified, 'Unclassified'],\n      [IssueCategory.Bug, 'Bug'],\n      [IssueCategory.FeatureRequest, 'Feature Request']\n    ]\n  },\n  labels: {\n    type: 'ids',\n    label: 'Labels',\n    dataType: 'label',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => self.allLabelsList,\n    makeFilter: (query: string) => ({ name: query }),\n    ifEmpty: 'No labels selected',\n  },\n  linksIssues: { type: 'bool', label: 'Has linked issues' },\n  linkedIssues: {\n    type: 'ids',\n    label: 'Linked issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  isLinkedByIssues: { type: 'bool', label: 'Is linked by issues' },\n  linkedByIssues: {\n    type: 'ids',\n    label: 'Linked by issues',\n    dataType: 'issue',\n    scoreKeys: ['title'],\n    listAll: listAllIssues,\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No issues selected',\n  },\n  participants: {\n    type: 'ids',\n    label: 'Participants',\n    dataType: 'user',\n    scoreKeys: ['username', 'displayName'],\n    listAll: () => ({ node: ROOT_NODE, type: ListType.SearchUsers }),\n    makeFilter: (query: string) => ({ username: query }),\n    ifEmpty: 'No users selected',\n  },\n  locations: {\n    type: 'ids',\n    label: 'Locations',\n    dataType: 'location',\n    scoreKeys: ['name'],\n    listAll: (self: IssueFilterComponent) => ({\n      staticSources: [\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.Components },\n        { node: { type: NodeType.Project, id: self.projectId }, type: ListType.ComponentInterfaces },\n      ]\n    }),\n    makeFilter: (query: string) => ({ title: query }),\n    ifEmpty: 'No locations selected',\n  },\n}\n                    \n                \n\n            \n                \n                    List of all possible issue filter predicates.\nKeyed by their name, each predicate has a type, label,\nand possibly additional options depending on their type.\n\n                \n            \n\n        \n    \n\n    src/app/data-dgql/load.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        listQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ListType.Projects]: {\n    [NodeType.Root]: (i, list, params) => i.q.projects.listProjects(listParams(params)).then(data => ({\n      totalCount: data.projects.totalCount,\n      pageInfo: data.projects.pageInfo,\n      items: i.c.insertNodes(data.projects.nodes),\n    })),\n  },\n  [ListType.Components]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    })),\n    [NodeType.Label]: (i, list, params) => i.q.issues.listLabelComponents(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.components.totalCount,\n      pageInfo: data.node.components.pageInfo,\n      items: i.c.insertNodes(data.node.components.nodes),\n    }))\n  },\n  [ListType.ComponentInterfaces]: {\n    [NodeType.Project]: (i, list, params) => i.q.components.listProjectInterfaces(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.interfaces.totalCount,\n      pageInfo: data.node.interfaces.pageInfo,\n      items: i.c.insertNodes(data.node.interfaces.nodes),\n    })),\n  },\n  [ListType.Issues]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssues(list.node.id, listParams(params)).then(data => ({\n      totalCount: data.node.issues.totalCount,\n      pageInfo: data.node.issues.pageInfo,\n      items: i.c.insertNodes(data.node.issues.nodes),\n    })),\n  },\n  [ListType.IssuesOnLocation]: {\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n    [NodeType.ComponentInterface]: (i, list, params) => i.q.issues.listComponentInterfaceIssuesOnLocation(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.issuesOnLocation.totalCount,\n        pageInfo: data.node.issuesOnLocation.pageInfo,\n        items: i.c.insertNodes(data.node.issuesOnLocation.nodes),\n      })),\n  },\n  [ListType.TimelineItems]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueTimelineItems(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.timeline.totalCount,\n        pageInfo: data.node.timeline.pageInfo,\n        items: i.c.insertNodes(data.node.timeline.nodes),\n      })),\n  },\n  [ListType.IssueLocations]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLocations(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.locations.totalCount,\n        pageInfo: data.node.locations.pageInfo,\n        items: i.c.insertNodes(data.node.locations.nodes),\n      }))\n  },\n  [ListType.Labels]: {\n    [NodeType.Project]: (i, list, params) => i.q.issues.listProjectLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Component]: (i, list, params) => i.q.issues.listComponentLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      })),\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLabels(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.labels.totalCount,\n        pageInfo: data.node.labels.pageInfo,\n        items: i.c.insertNodes(data.node.labels.nodes)\n      }))\n  },\n  [ListType.Assignees]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueAssignees(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.assignees.totalCount,\n        pageInfo: data.node.assignees.pageInfo,\n        items: i.c.insertNodes(data.node.assignees.nodes)\n      }))\n  },\n  [ListType.LinkedIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinksToIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linksToIssues.totalCount,\n        pageInfo: data.node.linksToIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linksToIssues.nodes)\n      }))\n  },\n  [ListType.LinkedByIssues]: {\n    [NodeType.Issue]: (i, list, params) => i.q.issues.listIssueLinkedByIssues(list.node.id, listParams(params))\n      .then(data => ({\n        totalCount: data.node.linkedByIssues.totalCount,\n        pageInfo: data.node.linkedByIssues.pageInfo,\n        items: i.c.insertNodes(data.node.linkedByIssues.nodes)\n      }))\n  },\n  [ListType.SearchUsers]: {\n    [NodeType.Root]: (i, list, params) => i.q.users.searchUsers(params.filter as ({ username: string }))\n      .then(data => ({\n        totalCount: data.length,\n        pageInfo: {\n          startCursor: data[0]?.id || null,\n          endCursor: data[data.length - 1]?.id || null,\n          hasNextPage: false,\n          hasPreviousPage: false,\n        },\n        items: i.c.insertNodes(data)\n      }))\n  }\n}\n                    \n                \n\n            \n                \n                    Available list queries.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nodeQueries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NodeQueries\n\n                    \n                \n                \n                    \n                        Default value : {\n  [NodeType.Project]: (i, id) => i.q.projects.getProject(id).then(data => data.node),\n  [NodeType.Component]: (i, id) => i.q.components.getComponent(id).then(data => data.node),\n  [NodeType.ComponentInterface]: (i, id) => i.q.components.getInterface(id).then(data => data.node),\n  [NodeType.Issue]: (i, id) => i.q.issues.getIssueHeader(id).then(data => data.node),\n  [NodeType.User]: (i, id) => id === CURRENT_USER_NODE.id\n    ? i.q.users.currentUser().then(data => data.currentUser)\n    : Promise.reject(new Error('not implemented')),\n  [NodeType.Label]: (i, id) => i.q.issues.getLabel(id).then(data => data.node)\n}\n                    \n                \n\n            \n                \n                    Types of nodes that can be loaded directly.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService, c: NodeCache) => async (\n  listId: ListId,\n  params: ListParams\n): Promise> => {\n  const { node, type } = listId;\n\n  if (!listQueries[type] || !listQueries[type][node.type]) {\n    throw new Error(`${NodeType[node.type]} has no list ${ListType[type]}`);\n  }\n\n  const i = { q, c };\n  return (await listQueries[type][node.type](i, { node, type }, params)) as ListResult;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryNode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (q: QueriesService) => async (nodeId: NodeId): Promise => {\n  const { type, id } = nodeId;\n\n  if (!nodeQueries[type]) {\n    throw new Error(`${NodeType[type]} cannot be loaded directly`);\n  }\n\n  const i = { q };\n  return (await nodeQueries[type](i, id)) as T;\n}\n                    \n                \n\n            \n                \n                    Loads a node.\n\n                \n            \n\n        \n    \n\n    src/app/route-animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('routeAnimations', [\n    transition('* => isRight', slideTo('right')),\n  ])\n                    \n                \n\n            \n                \n                    Describes an animation of sliding to to the right, used for the entry of the ComponentDetails component\n\n                \n            \n\n        \n    \n\n    src/app/graphs/issue-graph/issue-graph-nodes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        zeroPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {x: 0, y: 0}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-gropius.html":{"url":"additional-documentation/using-gropius.html","title":"additional-page - Using Gropius","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the Project\nThis page lists all the features of the Gropius system and provides a description of how they can be used. In addition, the use of the features is visualized with pictures.\nCreating, Filtering and Deleting Projects\nThe main page contains a list of projects. To create a new project, click the \"Create Project\" button and enter a name and description (optional) for the project. \nThe search field above the project list allows to search for projects and filter the list. \nOnce a project is selected, the project overview is opened. After clicking on \"Delete project\" a confirmation is expected. \nA direct link to the project's component diagram is provided on the right side of each project item in the project list.\n\n\n\n\nProject Overview\nThe \"Project Overview\" view contains the name and ID of the current project, the description that can be edited as well as the \"Delete Project\" button.\n\n\n\n\nGraph and Components\nThe graph of the project represents all components, issues (bugs, feature requests and unclassified issues), interfaces and relations between entities. \nIn the upper left corner there are filters that allow the user to hide different types of issues (bugs, feature requests and unclassified issues) or issue connections to get a better visualization of the components and interfaces. \nIn the upper right corner there is a button to create new components. The user is required to provide a name, repository URL, provider type (IMS), IMS-URL, and description (optional) for the component to be created.   \n\n\n\n\nA new interface is created by connecting two components. The user is expected to provide a name, a type, and optionally a description of the interface.\n \nClicking on a component displays a popup window with a list of issues and details associated with the current component. There, new issues can be created for this component (\"Create issue\" button), issues can be filtered, the details can be edited and the component can be deleted. \nClicking on an interface displays a pop-up window with the interface details and the issues associated with that interface. The \"Create Issue\" button can be used to create new issues associated with this interface.  \n\n\n\n\nIssues (Component Issues and Inteface Issues)\nAn issue can be a bug, a feature request, and an unclassified issue. Issues can be created for interfaces and for components in the component / interface pop-up. The user is expected to specify the issue title, type (bug, feature request, or unclassified), associated components, issue location, labels, assignees (not yet functional), and linked issues. Each of these fields is optional, except for the issue title. New labels for the issues can also be created.\n\n\n\n\n\nThe issues are also displayed as a list in a separate view. Said view is either displayed as a component / interface pop-up, or it is shown in page \"Issues\". Each issue has a title, author, assignees, labels and a category. The list of issues can be filtered so that specific ones will be targeted. After selecting an issue, its details are displayed on its own issue details page. There the issue can be edited, commented and closed. What's more, the details page for each issue includes a timeline, more about which can be found in section Timeline. \n\n\n\n\n\nTimeline\nAfter an issue is selected in page \"Issues\", the issue details page for the corresponding issue opens. There the issue can be managed. All changes made to the issue are reflected on its own timeline. In a way, the timeline visualizes the whole lifecycle of an issue, including: a) when it has been created, b) who and how has edited it, c) who has commented it, d) what labels have been assigned to it, e) which user has been assigned to it, f) to which other issue / component / interface it has been linked and finally g) who has closed it.\n\n\n\n\n\nAuthentication\nTo use the app, the user must first sign up (if no account has been created yet) and then log in to the corresponding account. The sign up form requires a username, email and password. More details about the user's account can be managed in the settings menu once the user has logged in.  \n\n\n\n\nMocked Members Page\nEvery project offers a mocked \"Members\" page. It shows a list of users in the project and\noffers a dialog to add users. However, this area is purely a mock, changes are not persistent\nand there are no other users who have access to the currently handled project.\n\n\n\n\nMocked Settings Menu\nThe application contains a mocked settings menu. The menu includes profile settings to update the display name, username, email and password. What's more, there is an option to create an access token and a \"Dark Mode\" option. However, the menu is purely a mock and changes are not persistent, nor are the latter two features functioning.\n \n \n\n\n \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/managing-gropius.html":{"url":"additional-documentation/managing-gropius.html","title":"additional-page - Managing Gropius","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManaging the Project\nDevelopment server\nThis project was generated with Angular CLI version 9.1.12.\nRun npm start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nProject structure\nHave a look at the routing module to get a nice overview\nof the primary components of the app.\n\n\n\nAspect\nCode\n\n\n\n\nApp Layout\nFrameComponent\n\n\nGraph\nGraphsModule, look at the declarations\n\n\nProject Context\nStateService\n\n\nAccount Management and Auth with Backend\nLoginComponent, RegisterComponent, AuthenticationService, AuthGuard\n\n\nApollo GraphQL Client Setup\nGraphQLModule\n\n\nType Definitions for Data from Backend  Helper Objects for Queries & Mutations  All of this is output of code generator\ngenerated\n\n\n\nDocumentation generation\nThe documentation is generated with Compodoc. Run npm run compodocfor a documentation server. Navigate to http://localhost:6060/. The documentation will automatically reload if you change any of the source files. The configuration for the documentation is managed in tsconfig.doc.json.\nBindings to the Backend API\nThe app uses GraphQL to communicate with the backend.\nThe following documentation will assume you are familiar with the CCIMS backend API.\nThere are currently two different APIs for communicating with the backend:\ndata API\nThe data API provides simple wrappers around the inner GraphQL queries\n(e.g. ComponentStoreService) that can be included into any Angular class using dependency\ninjection.\nGraphql source files are located in the data directory, subdivided by the entities\nthey pertain to (components, issues, etc.)\nRefer to the code documentation for the handler of each entity type for more information.\nIt is not recommended that you use the data API for new code, as it has several drawbacks:\n\nQueries do not have any granularity: a lot of list queries will fetch all items in that list at\nonce, without any pagination. A lot of node queries will fetch the node and all of its child nodes\nused in the GUI, often every time the GUI control accessing the data is created.\nUpdates to data in one area (e.g. changing the name of a component) are not propagated to other\nareas. This is, however, sort of canceled out by the fact that data is reloaded every time.\n\ndata-dgql API\nThe declarative data API attempts to improve upon the data API by introducing following new\nconcepts:\n\nDataNode: a shared, cached view into a node, agnostic of where the data was loaded from.\nData may be loaded by lists, parent nodes, or queries about the node itself.\nAll subscribers to the node (such as GUI components) can see the data and any updates\nsimultaneously.\nViewers will cause data to be loaded by default, but can be configured to prefer cached data\n(with subscribeLazy - useful when data has already been loaded by a DataList).\nDataList: a view into a list that makes use of pagination and provides an interface for\nserver-side filtering.\nLists will automatically load data into the corresponding DataNode of each item.\nDataQuery: a superclass of both DataNode and DataList that contains common methods.\nDataService: a single injectable that provides access to all data.\nData is accessed using NodeIds and ListIds.\nNodeId: DataNodes are identified by a Node ID, which is a backend ID with a type tag.\nListId: The specific list a DataList will provide a view into is identified by a List ID.\nList IDs are a NodeId with a list type tag\n(e.g. \"the list of issues (type) in component abcdef (node)\").\n\nAlso see the code documentation for more information.\nCode generation from .graphql files\nWe use a code generator (https://graphql-code-generator.com/) to create typescript classes from\n.graphql files containing queries and mutations. The code generator generates one Angular service\nclass per query/mutation. These can then be included using dependency injection. These objects make\nit easy to parameterize the mutations and queries and invoke them in typescript code.\nYou should, however, never need to use the GraphQL queries directly, as abstractions are provided in\ndata and data-dgql.\nWhen you change .graphql files you have to rerun the code generator.\nIt will update the files in src/generated to match the changes in the .graphql files.\n:warning: The backend has to be running with debugNoLogin set to true to make the backend schema\ndefinition accessible to the generator via the urls defined in the codegen configuration file.Run npm run generate to execute the code generator when this condition is met.\nMocked Members Page\nEvery project offers a mocked 'Members' page. It shows a list of users in the project and\noffers a dialog to add users. However this area is purely a mock, changes are not persisted\nand there are no other users who really have access to your project.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/contributors.html":{"url":"additional-documentation/contributors.html","title":"additional-page - Contributors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContributors\nFrontend Team\n\nFabian Danner\n\nJimmy Wagner\n\nKliment Klimentov\n\nKristina Pencheva\n\nMoritz Pfeffer\n\nTill Mayer\n\nVincent Brandt\n\n\nOthers\n...\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
